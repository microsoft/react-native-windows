#
parameters:
  - name: template
    type: string
  - name: platform
    type: string
    values:
      - x86
      - x64
      - ARM64
  - name: configuration
    type: string
    values:
      - Debug
      - Release
  - name: additionalRunArguments
    type: string
    default: ''
  - name: additionalInitArguments
    type: string
    default: ''
  - name: useChakra
    type: boolean
    default: false
  - name: useNuGet
    type: boolean
    default: false
  - name: runWack
    type: boolean
    default: false
  - name: buildEnvironment
    type: string
    default: PullRequest
    values: 
     - PullRequest
     - SecurePullRequest
     - Continuous

steps:
  # Start npm test server
  - template: verdaccio-start.yml

  - template: set-version-vars.yml
    parameters:
      buildEnvironment: ${{ parameters.buildEnvironment }}

  - ${{ if eq(parameters.useNuGet, true) }}:
    - template: prep-and-pack-nuget.yml
      parameters:
        artifactName: ReactWindowsFabric
        npmVersion: $(npmVersion)-Fabric
        packMicrosoftReactNative: true
        packMicrosoftReactNativeCxx: true
        slices:
          - platform: ${{ parameters.platform }}
            configuration: Release

  - ${{ if endsWith(parameters.template, '-app') }}:
    - script: |
        npx --yes @react-native-community/cli@latest init testcli --version $(reactNativeDevDependency) --verbose --skip-install --install-pods false --skip-git-init true
      displayName: Init new app project with @react-native-community/cli init
      workingDirectory: $(Agent.BuildDirectory)

  - ${{ if and(endsWith(parameters.template, '-lib'), not(startsWith(parameters.template, 'old'))) }}:
    - script: |
        npx --yes create-react-native-library@latest --slug testcli --description testcli --author-name "React-Native-Windows Bot" --author-email 53619745+rnbot@users.noreply.github.com --author-url http://example.com --repo-url http://example.com --languages kotlin-objc --type module-new --react-native-version $(reactNativeDevDependency) --example vanilla testcli
      displayName: Init new lib project with create-react-native-library
      workingDirectory: $(Agent.BuildDirectory)

  - ${{ elseif and(endsWith(parameters.template, '-lib'), startsWith(parameters.template, 'old')) }}:
    - script: |
        npx --yes create-react-native-module@0.20.2 --package-name "testcli" testcli
      displayName: Init new lib project with create-react-native-module
      workingDirectory: $(Agent.BuildDirectory)

    - script: |
        rmdir /s /q android
      displayName: Remove broken android folder # See issue https://github.com/microsoft/react-native-windows/issues/12209
      workingDirectory: $(Agent.BuildDirectory)\testcli
    
    - script: |
        call yarn install
        call yarn upgrade react@$(reactDevDependency) --dev
        call yarn upgrade react-native@$(reactNativeDevDependency) --dev
      displayName: Update lib project react and react-native dev versions
      workingDirectory: $(Agent.BuildDirectory)\testcli

  - script: |
      call yarn install
    displayName: pre-windows yarn install
    workingDirectory: $(Agent.BuildDirectory)\testcli
    env:
      YARN_ENABLE_IMMUTABLE_INSTALLS: false

  - script: |
      call yarn config set npmRegistryServer http://localhost:4873
      call yarn config set unsafeHttpWhitelist --json "[\"localhost\"]"
    displayName: yarn config verdaccio
    workingDirectory: $(Agent.BuildDirectory)\testcli
    env:
      YARN_ENABLE_IMMUTABLE_INSTALLS: false

  - ${{ if endsWith(parameters.template, '-app') }}:
    - script: |
        call yarn add react-native-windows@$(npmVersion)
      displayName: yarn add react-native-windows
      workingDirectory: $(Agent.BuildDirectory)\testcli
      env:
        YARN_ENABLE_IMMUTABLE_INSTALLS: false

  - ${{ if endsWith(parameters.template, '-lib') }}:
    - script: |
        call yarn add react-native-windows@$(npmVersion) --dev
      displayName: yarn add react-native-windows dev/peer
      workingDirectory: $(Agent.BuildDirectory)\testcli
      env:
        YARN_ENABLE_IMMUTABLE_INSTALLS: false

  - script: |
      call npx @react-native-community/cli init-windows --template ${{ parameters.template }} --overwrite --logging ${{ parameters.additionalInitArguments }}
    displayName: Call @react-native-community/cli init-windows
    workingDirectory: $(Agent.BuildDirectory)\testcli
    env:
      YARN_ENABLE_IMMUTABLE_INSTALLS: false
  
  - script: |
      call yarn install
    displayName: post-windows yarn install
    workingDirectory: $(Agent.BuildDirectory)\testcli
    env:
      YARN_ENABLE_IMMUTABLE_INSTALLS: false

  - ${{ if eq(parameters.UseChakra, true) }}:
    - template:  set-experimental-feature.yml
      parameters:
        package: ..\testcli
        feature: UseHermes
        value: ${{ not(parameters.UseChakra) }}

  - ${{ if or(endsWith(parameters.template, '-app'), and(endsWith(parameters.template, '-lib'), not(startsWith(parameters.template, 'old')))) }}:
    - powershell: |
        $path = (Get-ChildItem -Filter "Package.appxmanifest" -File -Recurse).FullName;
        [xml] $manifest = Get-Content $path
        $manifest.Package.Identity.Name = 'ReactNative.InitTest'
        $manifest.Save("$path")
      displayName: Set AppX package name to "ReactNative.InitTest"
      ${{ if and(endsWith(parameters.template, '-lib'), not(startsWith(parameters.template, 'old'))) }}:
        workingDirectory: $(Agent.BuildDirectory)\testcli\example\windows
      ${{ else }}:
        workingDirectory: $(Agent.BuildDirectory)\testcli\windows

  # End npm test server
  - template: verdaccio-stop.yml

  - task: PowerShell@2
    displayName: Start tracing
    inputs:
      targetType: filePath # filePath | inline
      filePath: $(Build.SourcesDirectory)\vnext\Scripts\Tracing\Start-Tracing.ps1

  - template: react-native-debug-info.yml
    parameters:
      ${{ if and(endsWith(parameters.template, '-lib'), not(startsWith(parameters.template, 'old'))) }}:
        workingDirectory: $(Agent.BuildDirectory)\testcli\example
      ${{ else }}:
        workingDirectory: $(Agent.BuildDirectory)\testcli

  - ${{ if eq(parameters.useNuGet, true) }}:
    - powershell: |
        nuget.exe sources add -name TestFeed -source $(System.DefaultWorkingDirectory)\NugetTestFeed
        nuget.exe sources remove -name react-native
        nuget.exe sources remove -name Nuget.org
        nuget.exe sources add -name Nuget.org -source https://api.nuget.org/v3/index.json
      displayName: Add local NuGet test feed
      workingDirectory: $(Agent.BuildDirectory)\testcli

  - template: ../templates/run-windows-with-certificates.yml
    parameters:
      buildEnvironment: ${{ parameters.BuildEnvironment }}
      buildConfiguration: ${{ parameters.configuration }}
      buildPlatform: ${{ parameters.platform }}
      deployOption: ${{ parameters.additionalRunArguments }}
      buildLogDirectory: $(Build.BinariesDirectory)\${{ parameters.platform }}\${{ parameters.configuration }}\BuildLogs
      ${{ if and(endsWith(parameters.template, '-lib'), not(startsWith(parameters.template, 'old'))) }}:
        workingDirectory: $(Agent.BuildDirectory)\testcli\example
      ${{ else }}:
        workingDirectory: $(Agent.BuildDirectory)\testcli
      restoreLockedMode: false # Allow new lockfile to be created

  - template: upload-build-logs.yml
    parameters:
      buildLogDirectory: '$(Build.BinariesDirectory)\${{ parameters.platform }}\${{ parameters.configuration }}\BuildLogs'

  # #13705 - Temporarily disable test:windows call until we get upstream fix
  # Only run the following on fabric apps
  # - ${{ if and(endsWith(parameters.template, '-app'), not(startsWith(parameters.template, 'old'))) }}:
  #   - script: call yarn test:windows
  #     displayName: Run jest tests with react-test-renderer
  #     workingDirectory: $(Agent.BuildDirectory)\testcli

  # Only test bundling in debug since we already bundle as part of release builds
  - ${{ if and(endsWith(parameters.template, '-app'), eq(parameters.configuration, 'Debug')) }}:
    - script: npx @react-native-community/cli bundle --entry-file index.js --platform windows --bundle-output test.bundle
      displayName: Create bundle testcli
      workingDirectory: $(Agent.BuildDirectory)\testcli

  # Temporarily disabling due to spurious failures in CI, see https://github.com/microsoft/react-native-windows/issues/13578
  - ${{ if and(false, eq(parameters.runWack, true)) }}:
    - template: ../templates/run-wack.yml
      parameters:
        packageName: ReactNative.InitTest
        reportArtifact: 'Template App WACK Report ${{ parameters.platform }} ${{ parameters.configuration }} ($(System.JobAttempt))'

  - task: PowerShell@2
    displayName: Stop tracing
    inputs:
      targetType: filePath # filePath | inline
      filePath: $(Build.SourcesDirectory)\vnext\Scripts\Tracing\Stop-Tracing.ps1
      arguments: -NoAnalysis -outputFolder $(Build.StagingDirectory)/Tracing
    condition: succeededOrFailed()

  - task: PublishBuildArtifacts@1
    displayName: Upload traces
    inputs:
      pathtoPublish: '$(Build.StagingDirectory)/Tracing'
      artifactName: 'Traces - $(Agent.JobName)-$(System.JobAttempt)'
    condition: succeededOrFailed()
