#
parameters:
  - name: template
    type: string
  - name: platform
    type: string
    values:
      - x86
      - x64
      - ARM64
  - name: configuration
    type: string
    values:
      - Debug
      - Release
  - name: additionalRunArguments
    type: string
    default: ''
  - name: additionalInitArguments
    type: string
    default: ''
  - name: useChakra
    type: boolean
    default: false
  - name: useNuGet
    type: boolean
    default: false
  - name: useExperimentalWinUI3
    type: boolean
    default: false
  - name: publishNuGet
    type: boolean
    default: false    
  - name: runWack
    type: boolean
    default: false
  - name: buildEnvironment
    type: string
    default: PullRequest
    values: 
     - PullRequest
     - SecurePullRequest
     - Continuous

steps:
  # Start npm test server
  - template: verdaccio-start.yml

  - template: set-version-vars.yml
    parameters:
      buildEnvironment: ${{ parameters.buildEnvironment }}

  - ${{ if eq(parameters.useNuGet, true) }}:
    - template: prep-and-pack-nuget.yml
      parameters:
        artifactName: ReactWindows
        artifactName2: ReactWindowsFabric
        npmVersion: $(npmVersion)
        packMicrosoftReactNative: true
        packMicrosoftReactNativeCxx: true
        slices:
          - platform: ${{ parameters.platform }}
            configuration: Release

    - ${{ if eq(parameters.publishNuGet, true) }}:
      - task: PublishPipelineArtifact@1
        displayName: "Publish Artifact: CliInitNuGet.${{parameters.platform}}.${{parameters.configuration}}"
        # Do nothing if the artifact was already published. E.g. after rerunning a past successful job attempt
        continueOnError: true
        inputs:
          artifactName: CliInitNuGet.${{parameters.platform}}.${{parameters.configuration}}
          targetPath: $(System.DefaultWorkingDirectory)/NugetRootFinal

  - ${{ if endsWith(parameters.template, '-app') }}:
    - script: |
        $(Build.SourcesDirectory)\vnext\Scripts\creaternwapp.cmd /rn $(reactNativeDevDependency) /rnw $(npmVersion) /t ${{ parameters.template }} /verdaccio testcli
      displayName: Init new app project with creaternwapp.cmd
      workingDirectory: $(Agent.BuildDirectory)
      env:
        YARN_ENABLE_IMMUTABLE_INSTALLS: false

  - ${{ if endsWith(parameters.template, '-lib') }}:
    - script: |
        $(Build.SourcesDirectory)\vnext\Scripts\creaternwlib.cmd /rn $(reactNativeDevDependency) /rnw $(npmVersion) /t ${{ parameters.template }} /verdaccio testcli
      displayName: Init new lib project with creaternwlib.cmd
      workingDirectory: $(Agent.BuildDirectory)
      env:
        YARN_ENABLE_IMMUTABLE_INSTALLS: false

  - ${{ if eq(parameters.UseChakra, true) }}:
    - template: set-experimental-feature.yml
      parameters:
        ${{ if endsWith(parameters.template, '-lib') }}:
          workingDir: $(Agent.BuildDirectory)\testcli\example\windows
        ${{ else }}:
          workingDir: $(Agent.BuildDirectory)\testcli\windows
        feature: UseHermes
        value: false

  - ${{ if eq(parameters.useExperimentalWinUI3, true) }}:
    - template: ../templates/enable-experimental-winui3.yml
      parameters:
        ${{ if endsWith(parameters.template, '-lib') }}:
          workingDir: $(Agent.BuildDirectory)\testcli\example\windows
        ${{ else }}:
          workingDir: $(Agent.BuildDirectory)\testcli\windows

  - powershell: |
      $path = (Get-ChildItem -Filter "Package.appxmanifest" -File -Recurse).FullName;
      [xml] $manifest = Get-Content $path
      $manifest.Package.Identity.Name = 'ReactNative.InitTest'
      $manifest.Save("$path")
    displayName: Set AppX package name to "ReactNative.InitTest"
    ${{ if endsWith(parameters.template, '-lib') }}:
      workingDirectory: $(Agent.BuildDirectory)\testcli\example\windows
    ${{ else }}:
      workingDirectory: $(Agent.BuildDirectory)\testcli\windows

  # End npm test server
  - template: verdaccio-stop.yml

  - task: PowerShell@2
    displayName: Start tracing
    inputs:
      targetType: filePath # filePath | inline
      filePath: $(Build.SourcesDirectory)\vnext\Scripts\Tracing\Start-Tracing.ps1

  - template: react-native-debug-info.yml
    parameters:
      ${{ if endsWith(parameters.template, '-lib') }}:
        workingDirectory: $(Agent.BuildDirectory)\testcli\example
      ${{ else }}:
        workingDirectory: $(Agent.BuildDirectory)\testcli

  - ${{ if eq(parameters.useNuGet, true) }}:
    - powershell: |
        nuget.exe sources add -name TestFeed -source $(System.DefaultWorkingDirectory)\NugetTestFeed
        nuget.exe sources remove -name react-native
        nuget.exe sources remove -name Nuget.org
        nuget.exe sources add -name Nuget.org -source https://api.nuget.org/v3/index.json
      displayName: Add local NuGet test feed
      workingDirectory: $(Agent.BuildDirectory)\testcli

  - template: ../templates/run-windows-with-certificates.yml
    parameters:
      buildEnvironment: ${{ parameters.BuildEnvironment }}
      buildConfiguration: ${{ parameters.configuration }}
      buildPlatform: ${{ parameters.platform }}
      moreRunWindowsArgs: ${{ parameters.additionalRunArguments }}
      buildLogDirectory: $(Build.BinariesDirectory)\${{ parameters.platform }}\${{ parameters.configuration }}\BuildLogs
      ${{ if endsWith(parameters.template, '-lib') }}:
        workingDirectory: $(Agent.BuildDirectory)\testcli\example
      ${{ else }}:
        workingDirectory: $(Agent.BuildDirectory)\testcli
      restoreLockedMode: false # Allow new lockfile to be created
      moreMSBuildProps: ',BundleCommandTimeoutMs=120000' # Reduce bundle timeout to 2m

  - template: upload-build-logs.yml
    parameters:
      buildLogDirectory: '$(Build.BinariesDirectory)\${{ parameters.platform }}\${{ parameters.configuration }}\BuildLogs'

  # #13705 - Temporarily disable test:windows call until we get upstream fix
  # Only run the following on fabric apps
  # - ${{ if and(endsWith(parameters.template, '-app')) }}:
  #   - script: call yarn test:windows
  #     displayName: Run jest tests with react-test-renderer
  #     workingDirectory: $(Agent.BuildDirectory)\testcli

  # Only test bundling in debug since we already bundle as part of release builds
  - ${{ if and(endsWith(parameters.template, '-app'), eq(parameters.configuration, 'Debug')) }}:
    - script: npx @react-native-community/cli bundle --entry-file index.js --platform windows --bundle-output test.bundle
      displayName: Create bundle testcli
      workingDirectory: $(Agent.BuildDirectory)\testcli

  # Temporarily disabling due to spurious failures in CI, see https://github.com/microsoft/react-native-windows/issues/13578
  - ${{ if and(false, eq(parameters.runWack, true)) }}:
    - template: ../templates/run-wack.yml
      parameters:
        packageName: ReactNative.InitTest
        reportArtifact: 'Template App WACK Report ${{ parameters.platform }} ${{ parameters.configuration }} ($(System.JobAttempt))'

  - task: PowerShell@2
    displayName: Stop tracing
    inputs:
      targetType: filePath # filePath | inline
      filePath: $(Build.SourcesDirectory)\vnext\Scripts\Tracing\Stop-Tracing.ps1
      arguments: -NoAnalysis -outputFolder $(Build.StagingDirectory)/Tracing
    condition: succeededOrFailed()

  - task: PublishBuildArtifacts@1
    displayName: Upload traces
    inputs:
      pathtoPublish: '$(Build.StagingDirectory)/Tracing'
      artifactName: 'Traces - $(Agent.JobName)-$(System.JobAttempt)'
    condition: succeededOrFailed()
