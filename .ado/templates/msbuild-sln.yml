# Steps template for building any React Native Windows variant.

parameters:
  debug: false

  # NuGet & MSBuild
  solutionDir:
  solutionName:
  msbuildVersion: 17.0
  msBuildArchitecture: x64
  preferredToolArchitecture: x64
  platformToolset: v143
  buildPlatform: x64
  buildConfiguration: Debug
  msbuildArguments: ''
  warnAsError: true

steps:
  - powershell: |
      Write-Host "##vso[task.setvariable variable=BuildLogDirectory]$(Build.BinariesDirectory)\${{ parameters.buildPlatform }}\${{ parameters.buildConfiguration }}\BuildLogs"
      Write-Host "##vso[task.setvariable variable=MsBuildWarnAsErrorArgument]/warnaserror"
    displayName: Set Log directory and warn as error

  - powershell: |
      Write-Host "##vso[task.setvariable variable=MsBuildWarnAsErrorArgument]"
    condition: not(eq('${{parameters.warnAsError}}', 'true'))
    displayName: Disable WarnAsError

  - task: VSBuild@1
    displayName: NuGet Restore ${{parameters.solutionName}}
    inputs:
      solution: ${{parameters.solutionDir}}/${{parameters.solutionName}}
      msbuildArgs:
        /t:Restore
        /p:RestoreLockedMode=true
        /p:RestoreForceEvaluate=true
        /bl:$(BuildLogDirectory)\NuGetRestore.binlog
        /flp1:errorsonly;logfile=$(BuildLogDirectory)\NuGetRestore.err.log

  # - powershell: |
  #     $changed = git status --porcelain=v1 */packages.lock.json
  #     if ($changed -ne $null) {
  #       Write-Host "##[warning] Detected packages.lock.json changes. See full log for details."
  #       Write-Host "Files changed:\n$changed"
  #     }

  #     if (Test-Path "$(BuildLogDirectory)\NuGetRestore.err.log") {
  #       $errorLines = Get-ChildItem -Path "$(BuildLogDirectory)\NuGetRestore.err.log"
  #       $errorLines | Foreach {
  #         if ($_ -like "Failed to download package '(.*)' from 'https://pkgs.dev.azure.com/ms/") {
  #           $pkg = $_ -replace "package '(.*)' from", "$1"
  #           Write-Host "Potential resolution, add $pkg to ADO feed."
  #         }
  #       }
  #     }
  #   displayName: Process NuGet Restore Result
  #   condition: succeededOrFailed()

  - task: VSBuild@1
    displayName: VSBuild ${{parameters.solutionName}}
    inputs:
      solution: ${{parameters.solutionDir}}/${{parameters.solutionName}}
      vsVersion: ${{parameters.msbuildVersion}}
      msbuildArchitecture: ${{parameters.msBuildArchitecture}}
      platform: ${{ parameters.buildPlatform }}
      configuration: ${{ parameters.buildConfiguration }}
      clean: false # Optional
      maximumCpuCount: true
      restoreNugetPackages: false # Optional
      createLogFile: true
      logFileVerbosity: detailed
      msbuildArgs:
        /p:PreferredToolArchitecture=${{parameters.preferredToolArchitecture}}
        /p:PlatformToolset=${{parameters.platformToolset}}
        /p:PublishToolDuringBuild=true
        /p:EnableSourceLink=true
        /p:RestoreLockedMode=true
        /bl:$(BuildLogDirectory)\MsBuild.binlog
        /flp1:errorsonly;logfile=$(BuildLogDirectory)\MsBuild.err.log
        /flp2:warningsonly;logfile=$(BuildLogDirectory)\MsBuild.wrn.log
        /flp3:verbosity=diagnostic;logfile=$(BuildLogDirectory)\MsBuild.log
        $(MsBuildWarnAsErrorArgument)
        ${{parameters.msbuildArguments}}

  - template: upload-build-logs.yml
    parameters:
      buildLogDirectory: $(BuildLogDirectory)
