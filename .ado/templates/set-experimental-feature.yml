parameters:
- name: workingDir
  type: string
- name: feature
  type: string
- name: value
  type: string

steps:
  - powershell: |
      [xml] $experimentalFeatures = Get-Content .\ExperimentalFeatures.props
      $nsm = New-Object Xml.XmlNamespaceManager($experimentalFeatures.NameTable)
      $nsm.AddNamespace('ns', $experimentalFeatures.DocumentElement.NamespaceURI)

      $xmlNode = $experimentalFeatures.SelectSingleNode('//ns:PropertyGroup/ns:${{ parameters.feature }}', $nsm);
      if ($xmlNode -ne $null) {
        # Item is present, set the value
        $xmlNode.InnerText = '${{ parameters.value }}'  
      } else {
        # Item is not present, add a new property group with it
        $xmlNode = $experimentalFeatures.CreateElement("PropertyGroup");
        $xmlNode.InnerXml = "<${{ parameters.feature }}>${{ parameters.value }}</${{ parameters.feature }}>"
        $experimentalFeatures.DocumentElement.AppendChild($xmlNode);
      }

      $experimentalFeatures.Save("$pwd\ExperimentalFeatures.props")
    displayName: Set "${{ parameters.feature }}" to "${{ parameters.value }}"
    workingDirectory: ${{ parameters.workingDir }}
