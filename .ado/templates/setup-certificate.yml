parameters:
  - name: buildEnvironment
    type: string
    default: PullRequest
    values: 
     - PullRequest 
     - Continuous
  - name: encodedKey
    type: string

steps:
  - powershell: Write-Host "##vso[task.setvariable variable=EncodedKey]$(sampleAppCPPEncodedKey)"
    displayName: Specify Certificate
    condition: and(eq('${{ parameters.buildEnvironment }}', 'Continuous'), eq('${{ parameters.encodedKey}}' , 'sampleAppCPPEncodedKey'))
  
  - powershell: Write-Host "##vso[task.setvariable variable=EncodedKey]$(reactUWPTestAppEncodedKey)"
    displayName: Specify Certificate
    condition: and(eq('${{ parameters.buildEnvironment }}', 'Continuous'), eq('${{ parameters.encodedKey}}' , 'reactUWPTestAppEncodedKey'))

  - powershell: Write-Host "##vso[task.setvariable variable=EncodedKey]$(playgroundEncodedKey)"
    displayName: Specify Certificate
    condition: and(eq('${{ parameters.buildEnvironment }}', 'Continuous'), eq('${{ parameters.encodedKey}}' , 'playgroundEncodedKey'))

  - task: PowerShell@2
    displayName: Set Up Certificate
    inputs:
      targetType: 'inline'
      script: |
        $PfxBytes = [System.Convert]::FromBase64String("$(EncodedKey)")
        $PfxPath = [System.IO.Path]::GetFullPath( (Join-Path -Path $(Build.SourcesDirectory) -ChildPath EncodedKey.pfx) )
        [System.IO.File]::WriteAllBytes("$PfxPath", $PfxBytes)
    condition: eq('${{ parameters.buildEnvironment }}', 'Continuous')