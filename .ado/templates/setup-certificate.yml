parameters:
  - name: encodedKey
    type: string

steps:
  - ${{ if eq('${{ parameters.encodedKey }}', 'sampleAppCPPEncodedKey') }}:
    - powershell: Write-Host "##vso[task.setvariable variable=EncodedKey]$(sampleAppCPPEncodedKey)"
      displayName: Specify Certificate

  - ${{ if eq('${{ parameters.encodedKey }}', 'reactUWPTestAppEncodedKey') }}:
    - powershell: Write-Host "##vso[task.setvariable variable=EncodedKey]$(reactUWPTestAppEncodedKey)"
      displayName: Specify Certificate

  - ${{ if eq('${{ parameters.encodedKey }}', 'playgroundEncodedKey') }}:
    - powershell: Write-Host "##vso[task.setvariable variable=EncodedKey]$(playgroundEncodedKey)"
      displayName: Specify Certificate

  - task: PowerShell@2
    displayName: Set Up Certificate
    inputs:
      targetType: 'inline'
      script: |
        $PfxBytes = [System.Convert]::FromBase64String("$(EncodedKey)")
        $PfxPath = [System.IO.Path]::GetFullPath( (Join-Path -Path $(Build.SourcesDirectory) -ChildPath EncodedKey.pfx) )
        [System.IO.File]::WriteAllBytes("$PfxPath", $PfxBytes)
