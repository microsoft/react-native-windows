  parameters:
    - name: buildEnvironment
      type: string
      default : PullRequest
      values: 
      - PullRequest 
      - Continuous 
    - name: buildMatrix
      type: object
      default:
        - BuildEnvironment: PullRequest
          Matrix:
            - Name: X64ReleaseFast
              BuildConfiguration: Release
              BuildPlatform: x64
              FastBuild: true
            - Name: X86DebugFast
              BuildConfiguration: Debug
              BuildPlatform: x86
              LayoutHeaders: true
              FastBuild: true
        - BuildEnvironment: Continuous
          Matrix:
            - Name: Arm64Debug
              BuildConfiguration: Debug
              BuildPlatform: ARM64
              FastBuild: false
            - Name: Arm64Release
              BuildConfiguration: Release
              BuildPlatform: ARM64
              FastBuild: false
            - Name: X64Debug
              BuildConfiguration: Debug
              BuildPlatform: x64
              FastBuild: false
            - Name: X64Release
              BuildConfiguration: Release
              BuildPlatform: x64
              FastBuild: false
            - Name: X86Debug
              BuildConfiguration: Debug
              BuildPlatform: x86
              LayoutHeaders: true
              FastBuild: false
            - Name: X86Release
              BuildConfiguration: Release
              BuildPlatform: x86
              FastBuild: false
            - Name: X64ReleaseFast
              BuildConfiguration: Release
              BuildPlatform: x64
              FastBuild: true
            - Name: X86DebugFast
              BuildConfiguration: Debug
              BuildPlatform: x86
              LayoutHeaders: true
              FastBuild: true

  jobs:
    - ${{ each config in parameters.buildMatrix }}:
      - ${{ if eq(config.BuildEnvironment, parameters.buildEnvironment) }}:
        - ${{ each matrix in config.Matrix }}:
            - job: UniversalBuild${{ matrix.Name }}
              variables:
                - template: ../variables/vs2019.yml
              displayName: Universal Build ${{ matrix.Name }}
              pool: $(AgentPool.Large)
              timeoutInMinutes: 60
              cancelTimeoutInMinutes: 5

              steps:
                - checkout: self
                  clean: false
                  submodules: false

                - template: ../templates/apply-published-version-vars.yml

                - template: ../templates/build-rnw.yml
                  parameters:
                    project: vnext/Microsoft.ReactNative.sln
                    buildPlatform: ${{ matrix.BuildPlatform }}
                    buildConfiguration: ${{ matrix.BuildConfiguration }}
                    multicoreBuild: true
                    msbuildArguments: /p:RNW_FASTBUILD=${{ matrix.FastBuild }}

                - task: PublishPipelineArtifact@1
                  displayName: "Publish binaries for testing"
                  inputs:
                    targetPath: $(Build.SourcesDirectory)/vnext/target/${{ matrix.BuildPlatform }}/${{ matrix.BuildConfiguration }}
                    artifactName: "Universal-${{ matrix.BuildPlatform }}-${{ matrix.BuildConfiguration }}-fast_${{ matrix.FastBuild }}"

                - template: ../templates/publish-build-artifacts-for-nuget.yml
                  parameters:
                    artifactName: ReactWindows
                    buildPlatform: ${{ matrix.BuildPlatform }}
                    buildConfiguration: ${{ matrix.BuildConfiguration }}
                    layoutHeaders: ${{ matrix.LayoutHeaders }}
                    contents: |
                      Microsoft.ReactNative\**
                      Microsoft.ReactNative.Managed\**
                      Microsoft.ReactNative.Managed.CodeGen\**
                
                - template: ../templates/component-governance.yml

            - job: UniversalTest${{ matrix.Name }}
              variables:
                - template: ../variables/vs2019.yml
              displayName: Universal Test ${{ matrix.Name }}
              dependsOn:
                - UniversalBuild${{ matrix.Name }}
              
              pool: $(AgentPool.Medium)
              timeoutInMinutes: 60
              cancelTimeoutInMinutes: 5

              steps:
                - checkout: self
                  clean: false
                  submodules: false

                - task: PowerShell@2
                  displayName: "Check if this environment meets the development dependencies"
                  inputs:
                    targetType: filePath
                    filePath: $(Build.SourcesDirectory)\vnext\Scripts\rnw-dependencies.ps1
                    arguments: -NoPrompt -Tags buildLab
                    
                - template: ../templates/prepare-env.yml

                - task: NuGetCommand@2
                  displayName: NuGet restore
                  inputs:
                    command: restore
                    restoreSolution: vnext/Microsoft.ReactNative.sln
                    feedsToUse: config
                    nugetConfigPath: $(Build.SourcesDirectory)/vnext/NuGet.config
                    restoreDirectory: packages/
                    verbosityRestore: Detailed # Options: quiet, normal, detailed
                    
                - task: DownloadPipelineArtifact@1
                  displayName: "Download binaries for testing"
                  inputs:
                    targetPath: $(Build.SourcesDirectory)/vnext/target/${{ matrix.BuildPlatform }}/${{ matrix.BuildConfiguration }}
                    artifactName: "Universal-${{ matrix.BuildPlatform }}-${{ matrix.BuildConfiguration }}-fast_${{ matrix.FastBuild }}"

                - template: ../templates/discover-google-test-adapter.yml

                - task: VSTest@2
                  displayName: Run Universal Unit Tests (Native)
                  timeoutInMinutes: 5 # Set smaller timeout , due to hangs
                  inputs:
                    testSelector: testAssemblies
                    testAssemblyVer2: |
                      Microsoft.ReactNative.Cxx.UnitTests/Microsoft.ReactNative.Cxx.UnitTests.exe
                      Microsoft.ReactNative.IntegrationTests/Microsoft.ReactNative.IntegrationTests.exe
                      Mso.UnitTests/Mso.UnitTests.exe
                    pathtoCustomTestAdapters: $(GoogleTestAdapterPath)
                    searchFolder: $(Build.SourcesDirectory)/vnext/target/${{ matrix.BuildPlatform }}/${{ matrix.BuildConfiguration }}
                    runTestsInIsolation: true
                    platform: ${{ matrix.BuildPlatform }}
                    configuration: ${{ matrix.BuildConfiguration }}
                    publishRunAttachments: true
                    collectDumpOn: onAbortOnly
                    vsTestVersion: latest
                    failOnMinTestsNotRun: true
                  # Issue #8003 Tracks restoring this test whose condition should be resotred disabled as it times out on releasex64...
                  # condition: and(succeeded(), not(eq('${{ matrix.BuildPlatform }}', 'ARM64')))
                  condition: and(succeeded(), eq('${{ matrix.BuildPlatform }}', 'x86'))

                - task: VSTest@2
                  displayName: Run Universal Unit Tests (UWP)
                  timeoutInMinutes: 5 # Set smaller timeout , due to hangs
                  inputs:
                    testSelector: testAssemblies
                    testAssemblyVer2: |
                      Microsoft.ReactNative.Managed.UnitTests/Microsoft.ReactNative.Managed.UnitTests.build.appxrecipe
                    searchFolder: $(Build.SourcesDirectory)/vnext/target/${{ matrix.BuildPlatform }}/${{ matrix.BuildConfiguration }}
                    runTestsInIsolation: true
                    platform: ${{ matrix.BuildPlatform }}
                    configuration: ${{ matrix.BuildConfiguration }}
                    publishRunAttachments: true
                    codeCoverageEnabled: true
                    collectDumpOn: onAbortOnly
                    vsTestVersion: latest
                    failOnMinTestsNotRun: true
                  condition: and(succeeded(), not(eq('${{ matrix.BuildPlatform }}', 'ARM64')))

                - task: VSTest@2
                  displayName: Run Universal Unit Tests (NetCore)
                  timeoutInMinutes: 5 # Set smaller timeout , due to hangs
                  inputs:
                    testSelector: testAssemblies
                    testAssemblyVer2: |
                      Microsoft.ReactNative.Managed.CodeGen.UnitTests/Microsoft.ReactNative.Managed.CodeGen.UnitTests.dll
                    searchFolder: $(Build.SourcesDirectory)/vnext/target/${{ matrix.BuildPlatform }}/${{ matrix.BuildConfiguration }}
                    runTestsInIsolation: true
                    platform: ${{ matrix.BuildPlatform }}
                    configuration: ${{ matrix.BuildConfiguration }}
                    publishRunAttachments: true
                    codeCoverageEnabled: true
                    collectDumpOn: onAbortOnly
                    vsTestVersion: latest
                    failOnMinTestsNotRun: true
                  condition: and(succeeded(), eq('${{ matrix.BuildPlatform }}', 'x64'))

    # This job is the one that accumulates the spread out build tasks into one dependency
    - job: UniversalBuild
      displayName: Universal Build üèó
      variables:
        - template: ../variables/vs2019.yml
      dependsOn: 
        - ${{ each config in parameters.buildMatrix }}:
          - ${{ if eq(config.BuildEnvironment, parameters.buildEnvironment) }}:
            - ${{ each matrix in config.Matrix }}:
              - UniversalBuild${{ matrix.Name }}
      pool:
        vmImage: $(VmImage)
      timeoutInMinutes: 60
      cancelTimeoutInMinutes: 5

      steps:
        - checkout: none
          clean: false
        - powershell: |
            Write-Host "Waited for all Universal Build steps"
          displayName: Waiting for all Universal Build steps
