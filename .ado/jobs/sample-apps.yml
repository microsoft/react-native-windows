parameters:
  - name: buildEnvironment
    type: string
    default : PullRequest
    values:
      - PullRequest
      - Continuous
  - name: buildMatrix
    type: object
    default:
      - BuildEnvironment: PullRequest
        Matrix:
          - Name: X64Release
            BuildConfiguration: Release
            BuildPlatform: x64
            DeployOption:
          - Name: X86Debug
            BuildConfiguration: Debug
            BuildPlatform: x86
            DeployOption:
      - BuildEnvironment: Continuous
        Matrix:
          - Name: X64Release
            BuildConfiguration: Release
            BuildPlatform: x64
            DeployOption:
          - Name: X86Debug
            BuildConfiguration: Debug
            BuildPlatform: x86
            DeployOption:
          - Name: Arm64Debug
            BuildConfiguration: Debug
            BuildPlatform: ARM64
            DeployOption: --no-deploy # We don't have Arm agents
          - Name: Arm64Release
            BuildConfiguration: Release
            BuildPlatform: ARM64
            DeployOption: --no-deploy # We don't have Arm agents
          - Name: X64Debug
            BuildConfiguration: Debug
            BuildPlatform: x64
            DeployOption:
          - Name: X86Release
            BuildConfiguration: Release
            BuildPlatform: x86
            DeployOption:

jobs:
  - ${{ each config in parameters.buildMatrix }}:
    - ${{ if eq(config.BuildEnvironment, parameters.buildEnvironment) }}:
      - ${{ each matrix in config.Matrix }}:
        - job: SampleApps${{ matrix.Name }}
          displayName: Sample Apps ${{ matrix.Name }}

          variables:
            - template: ../variables/vs2019.yml
            - name: BuildLogDirectory
              value: $(Build.BinariesDirectory)\${{ matrix.BuildPlatform }}\${{ matrix.BuildConfiguration }}\BuildLogs
          
          timeoutInMinutes: 60
          cancelTimeoutInMinutes: 5
          pool: $(AgentPool.Medium)

          steps:
            - checkout: self
              clean: false
              submodules: false

            - template: ../templates/prepare-env.yml

            - task: NuGetCommand@2
              displayName: NuGet restore - SampleApps
              inputs:
                command: restore
                restoreSolution: packages/sample-apps/windows/SampleApps.sln
                verbosityRestore: Detailed # Options: quiet, normal, detailed

            - template: ../templates/run-windows-with-certificates.yml
              parameters:
                buildEnvironment: ${{ parameters.BuildEnvironment }}
                certificateName: sampleAppCPPEncodedKey
                buildConfiguration: ${{ matrix.BuildConfiguration }}
                buildPlatform: ${{ matrix.BuildPlatform }}
                deployOption:  ${{ matrix.DeployOption }}
                buildLogDirectory: ${{ variables.BuildLogDirectory }}
                workingDirectory: packages/sample-apps

            - script: yarn bundle-cpp --verbose
              displayName: Create SampleApp bundle
              workingDirectory: packages\sample-apps

            - template: ../templates/upload-build-logs.yml
              parameters:
                buildLogDirectory: ${{ variables.BuildLogDirectory }}
