parameters:
  - name: buildEnvironment
    type: string
    default : PullRequest
    values: 
     - PullRequest 
     - Continuous 
  
jobs:
  - job: SampleApps
    variables:
      - template: ../variables/vs2019.yml
      - name: BuildLogDirectory
        value: $(Build.BinariesDirectory)\$(BuildPlatform)\$(BuildConfiguration)\BuildLogs
    displayName: Sample Apps
    strategy:
      matrix: # Why we only build some flavors: https://github.com/microsoft/react-native-windows/issues/4308
        # Start Continuous only
        ${{ if eq(parameters.buildEnvironment, 'Continuous') }}:
          Arm64Debug:
            BuildConfiguration: Debug
            BuildPlatform: ARM64
            DeployOption: --no-deploy # We don't have Arm agents
          Arm64Release:
            BuildConfiguration: Release
            BuildPlatform: ARM64
            DeployOption: --no-deploy # We don't have Arm agents
          X64Debug:
            BuildConfiguration: Debug
            BuildPlatform: x64
            DeployOption:
        # End Continuous only
        X64Release:
          BuildConfiguration: Release
          BuildPlatform: x64
          DeployOption: --deploy-from-layout
        X86Debug:
          BuildConfiguration: Debug
          BuildPlatform: x86
          DeployOption:
        # Start Continuous only
        ${{ if eq(parameters.buildEnvironment, 'Continuous') }}:
          X86Release:
            BuildConfiguration: Release
            BuildPlatform: x86
            DeployOption:
        # End Continuous only
    timeoutInMinutes: 60
    cancelTimeoutInMinutes: 5
    pool: $(AgentPool.Medium)

    steps:
      - checkout: self
        clean: false
        submodules: false

      - template: ../templates/prepare-env.yml

      - task: NuGetCommand@2
        displayName: NuGet restore - SampleApps
        inputs:
          command: restore
          restoreSolution: packages/sample-apps/windows/SampleApps.sln
          verbosityRestore: Detailed # Options: quiet, normal, detailed
        condition: succeeded()

      - template: ../templates/run-windows-with-certificates.yml
        parameters:
          buildEnvironment: ${{ parameters.BuildEnvironment }}
          encodedKey: sampleAppCPPEncodedKey
          ${{ if eq(variables.BuildConfiguration, 'Release') }}:
            buildConfiguration: Release
          buildPlatform: $(BuildPlatform)
          deployOption: $(DeployOption)
          buildLogDirectory: $(BuildLogDirectory)
          workingDirectory: packages/sample-apps

      - task: CmdLine@2
        displayName: Create SampleApp bundle
        inputs:
          script: yarn bundle-cpp --verbose
          workingDirectory: packages\sample-apps
        condition: succeeded()

      - template: ../templates/upload-build-logs.yml
        parameters:
          buildLogDirectory: '$(BuildLogDirectory)'
