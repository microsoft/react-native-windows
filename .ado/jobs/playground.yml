parameters:
  - name: buildEnvironment
    type: string
    default : PullRequest
    values:
      - PullRequest
      - Continuous
  - name: buildMatrix
    type: object
    default:
      - BuildEnvironment: PullRequest
        Matrix:
          - Name: X86DebugUniversal
            BuildConfiguration: Debug
            BuildPlatform: x86
            SolutionFile: Playground.sln
          - Name: X64ReleaseUniversal
            BuildConfiguration: Release
            BuildPlatform: x64
            SolutionFile: Playground.sln
          - Name: X86DebugWin32
            BuildConfiguration: Debug
            BuildPlatform: x86
            SolutionFile: Playground-Win32.sln
          - Name: X64ReleaseWin32
            BuildConfiguration: Release
            BuildPlatform: x64
            SolutionFile: Playground-Win32.sln
          - Name: X86DebugWinUI3
            BuildConfiguration: Debug
            BuildPlatform: x86
            SolutionFile: Playground.sln
            BuildWinUI3: true
      - BuildEnvironment: Continuous
        Matrix:
          - Name: X86DebugUniversal
            BuildConfiguration: Debug
            BuildPlatform: x86
            SolutionFile: Playground.sln
            UploadAppx: true
          - Name: X64ReleaseUniversal
            BuildConfiguration: Release
            BuildPlatform: x64
            SolutionFile: Playground.sln
            RunWack: true
            UploadAppx: true
          - Name: X86DebugWin32
            BuildConfiguration: Debug
            BuildPlatform: x86
            SolutionFile: Playground-Win32.sln
          - Name: X64ReleaseWin32
            BuildConfiguration: Release
            BuildPlatform: x64
            SolutionFile: Playground-Win32.sln
          - Name: X86DebugWinUI3
            BuildConfiguration: Debug
            BuildPlatform: x86
            SolutionFile: Playground.sln
            BuildWinUI3: true
            UploadAppx: true

jobs:
  - ${{ each config in parameters.buildMatrix }}:
    - ${{ if eq(config.BuildEnvironment, parameters.buildEnvironment) }}:
      - ${{ each matrix in config.Matrix }}:
        - job: Playground${{ matrix.Name }}
          displayName: Playground ${{ matrix.Name }}

          variables:
            - template: ../variables/vs2019.yml
          pool: $(AgentPool.Medium)
          timeoutInMinutes: 60
          cancelTimeoutInMinutes: 5

          steps:
            - checkout: self
              clean: false
              submodules: false

            - template: ../templates/prepare-env.yml

            - ${{ if eq(matrix.BuildWinUI3, true) }}:
              - template: ../templates/set-experimental-feature.yml
                parameters:
                  package: packages/playground
                  feature: UseWinUI3
                  value: true

            - task: NuGetCommand@2
              displayName: NuGet restore - Playground
              inputs:
                command: restore
                restoreSolution: packages/playground/windows/${{ matrix.SolutionFile }}
                verbosityRestore: Detailed # Options: quiet, normal, detailed


            - ${{if eq(config.BuildEnvironment, 'PullRequest')}}:
              - task: VSBuild@1
                displayName: VSBuild - Playground PR
                inputs:
                  solution: packages/playground/windows/${{ matrix.SolutionFile }}
                  vsVersion: $(MSBuildVersion) # Optional. Options: latest, 16.0, 15.0, 14.0, 12.0, 4.0
                  msbuildArchitecture: $(MSBuildArchitecture) # Optional. Options: x86, x64
                  platform: ${{ matrix.BuildPlatform}} # Optional
                  configuration: ${{ matrix.BuildConfiguration}} # Optional
                  clean: true # Optional
                  maximumCpuCount: false # Optional
                  restoreNugetPackages: false # Optional
                  msbuildArgs:
                    /p:PreferredToolArchitecture=$(MSBuildPreferredToolArchitecture)
                    /p:PlatformToolset=$(MSBuildPlatformToolset)
                    /p:AppxPackageSigningEnabled=false
                    
            - ${{if eq(config.BuildEnvironment, 'Continuous')}}:
              - template: ../templates/write-certificate.yml
                parameters:
                  certificateName: playgroundEncodedKey

              - task: VSBuild@1
                displayName: VSBuild - Playground CI
                inputs:
                  solution: packages/playground/windows/${{ matrix.SolutionFile }}
                  vsVersion: $(MSBuildVersion) # Optional. Options: latest, 16.0, 15.0, 14.0, 12.0, 4.0
                  msbuildArchitecture: $(MSBuildArchitecture) # Optional. Options: x86, x64
                  platform: ${{ matrix.BuildPlatform}} # Optional
                  configuration: ${{ matrix.BuildConfiguration}} # Optional
                  clean: true # Optional
                  maximumCpuCount: false # Optional
                  restoreNugetPackages: false # Optional
                  msbuildArgs:
                    /p:PreferredToolArchitecture=$(MSBuildPreferredToolArchitecture)
                    /p:PlatformToolset=$(MSBuildPlatformToolset)
                    /p:PackageCertificateKeyFile=$(Build.SourcesDirectory)\EncodedKey.pfx

              - template: ../templates/cleanup-certificate.yml

            - ${{ if eq(matrix.UploadAppx, true) }}:
              - task: PublishBuildArtifacts@1
                displayName: Upload App Package
                inputs:
                  pathtoPublish: 'packages/playground/windows/AppPackages/playground'
                  artifactName: 'Playground ${matrix.Name} AppX Package (Attempt $(System.JobAttempt))'

            - task: PublishBuildArtifacts@1
              displayName: Upload crash dumps
              inputs:
                pathtoPublish: '$(Build.StagingDirectory)/CrashDumps/'
                artifactName: 'Playground ${matrix.Name} Crash Dumps (Attempt $(System.JobAttempt))'
