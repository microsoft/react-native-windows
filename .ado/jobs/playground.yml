parameters:
  - name: buildEnvironment
    type: string
    default : PullRequest
    values:
      - PullRequest
      - SecurePullRequest
      - Continuous
  - name: AgentPool
    type: object
  - name: buildMatrix
    type: object
    default:
      - BuildEnvironment: PullRequest
        Matrix:
          - Name: X86DebugUniversal
            BuildConfiguration: Debug
            BuildPlatform: x86
            SolutionFile: Playground.sln
          - Name: X64ReleaseUniversal
            BuildConfiguration: Release
            BuildPlatform: x64
            SolutionFile: Playground.sln
          - Name: X64DebugUniversal
            BuildConfiguration: Debug
            BuildPlatform: x64
            SolutionFile: Playground.sln
            RunWack: true
            UploadAppx: true
          - Name: X86DebugComposition
            BuildConfiguration: Debug
            BuildPlatform: x86
            SolutionFile: Playground-Composition.sln
          - Name: X64DebugComposition
            BuildConfiguration: Debug
            BuildPlatform: x64
            SolutionFile: Playground-Composition.sln
          - Name: X64ReleaseComposition
            BuildConfiguration: Release
            BuildPlatform: x64
            SolutionFile: Playground-Composition.sln
          - Name: X86DebugWin32
            BuildConfiguration: Debug
            BuildPlatform: x86
            SolutionFile: Playground-Win32.sln
          - Name: X64ReleaseWin32
            BuildConfiguration: Release
            BuildPlatform: x64
            SolutionFile: Playground-Win32.sln
      - BuildEnvironment: SecurePullRequest
        Matrix:
          - Name: X86DebugCompositionExperimentalWinUI3
            BuildConfiguration: Debug
            BuildPlatform: x86
            SolutionFile: Playground-Composition.sln
            UseExperimentalWinUI3: true
          - Name: X64DebugCompositionExperimentalWinUI3
            BuildConfiguration: Debug
            BuildPlatform: x64
            SolutionFile: Playground-Composition.sln
            UseExperimentalWinUI3: true
          - Name: X64ReleaseCompositionExperimentalWinUI3
            BuildConfiguration: Release
            BuildPlatform: x64
            SolutionFile: Playground-Composition.sln
            UseExperimentalWinUI3: true
      - BuildEnvironment: Continuous
        Matrix:
          - Name: X86DebugUniversal
            BuildConfiguration: Debug
            BuildPlatform: x86
            SolutionFile: Playground.sln
            UploadAppx: true
          - Name: X64ReleaseUniversal
            BuildConfiguration: Release
            BuildPlatform: x64
            SolutionFile: Playground.sln
            RunWack: true
            UploadAppx: true
          - Name: X64DebugUniversal
            BuildConfiguration: Debug
            BuildPlatform: x64
            SolutionFile: Playground.sln
            RunWack: true
            UploadAppx: true
          - Name: X86DebugComposition
            BuildConfiguration: Debug
            BuildPlatform: x86
            SolutionFile: Playground-Composition.sln
          - Name: X64ReleaseComposition
            BuildConfiguration: Release
            BuildPlatform: x64
            SolutionFile: Playground-Composition.sln
          - Name: X86DebugCompositionExperimentalWinUI3
            BuildConfiguration: Debug
            BuildPlatform: x86
            SolutionFile: Playground-Composition.sln
            UseExperimentalWinUI3: true
          - Name: X64ReleaseCompositionExperimentalWinUI3
            BuildConfiguration: Release
            BuildPlatform: x64
            SolutionFile: Playground-Composition.sln
            UseExperimentalWinUI3: true
          - Name: X86DebugWin32
            BuildConfiguration: Debug
            BuildPlatform: x86
            SolutionFile: Playground-Win32.sln
          - Name: X64ReleaseWin32
            BuildConfiguration: Release
            BuildPlatform: x64
            SolutionFile: Playground-Win32.sln

jobs:
  - ${{ each config in parameters.buildMatrix }}:
    - ${{ if eq(config.BuildEnvironment, parameters.buildEnvironment) }}:
      - ${{ each matrix in config.Matrix }}:
        - job: Playground${{ matrix.Name }}
          displayName: Playground ${{ matrix.Name }}

          variables: [template: ../variables/windows.yml]
          pool: ${{ parameters.AgentPool.Medium }}
          timeoutInMinutes: 60
          cancelTimeoutInMinutes: 5

          steps:
            - template: ../templates/checkout-shallow.yml

            - template: ../templates/prepare-js-env.yml

            - template: ../templates/prepare-build-env.yml
              parameters:
                platform: ${{ matrix.BuildPlatform }}
                configuration: ${{ matrix.BuildConfiguration }}
                buildEnvironment: ${{ config.BuildEnvironment }}

            - ${{if eq(config.BuildEnvironment, 'Continuous')}}:
              - template: ../templates/write-certificate.yml
                parameters:
                  certificateName: playgroundEncodedKey

            - ${{ if eq(matrix.UseExperimentalWinUI3, true) }}:
              - template:  ../templates/set-experimental-feature.yml
                parameters:
                  package: packages\playground
                  feature: UseExperimentalWinUI3
                  value: true

              - task: PowerShell@2
                displayName: Enable the internal WinAppSDK Feed
                inputs:
                  targetType: filePath # filePath | inline
                  filePath: $(Build.SourcesDirectory)\vnext\Scripts\EnableInternalWinAppSDKFeed.ps1

              - task: NuGetAuthenticate@1
                displayName: 'NuGet Authenticate Internal WinAppSDK Feed'
                inputs:
                  nuGetServiceConnections: 'WinAppSDK Experimental NuGet for RNW'

            # NuGet ignores packages.config if it detects <PackageReference>.
            # Use restore packages.config directly to keep compabitility with ReactNativePicker.
            - pwsh: |
                Get-ChildItem -Recurse -Path packages.config |`
                  Foreach-Object {`
                    NuGet.exe Restore -PackagesDirectory packages $_`
                  }
              workingDirectory: packages/playground/windows
              displayName: Restore packages.config items

            - template: ../templates/msbuild-sln.yml
              parameters:
                solutionDir: packages/playground/windows
                solutionName: ${{ matrix.SolutionFile }}
                buildPlatform: ${{ matrix.BuildPlatform}}
                buildConfiguration: ${{ matrix.BuildConfiguration}}
                warnAsError: false
                ${{if eq(config.BuildEnvironment, 'Continuous')}}:
                  msbuildArgs:
                    /p:PackageCertificateKeyFile=$(Build.SourcesDirectory)\EncodedKey.pfx

            - ${{if and(endsWith(matrix.Name, 'Universal'), eq(matrix.BuildConfiguration, 'Debug')) }}:
              # Execute debug feature tests (skip this step for the Win32 Playground app and for release builds)
              
              # Need to re-setup ProcDump a 2nd time for this to work correctly
              - powershell: |
                    Write-Host "##vso[task.setvariable variable=CrashDumpRootPath]$(Build.StagingDirectory)\DebugTestCrashDumps"
                    New-Item -Path '$(Build.StagingDirectory)\DebugTestCrashDumps' -ItemType Directory
                displayName: Set CrashDumpRootPath

              - task: PowerShell@2
                displayName: Setup ProcDump as AeDebug
                inputs:
                  targetType: filePath # filePath | inline
                  filePath: $(Build.SourcesDirectory)\.ado\scripts\RunProcDump.ps1
                  arguments: "-ProcDumpArgs @('-mm', '-i', '$(CrashDumpRootPath)') -ProcDumpInstallPath '$(ProcDumpPath)' -Verbose"

              # This step loose-file-deploys the UWP Playground app and uses it as an RNW host for a series
              # of debug feature tests. In the future, these tests should be performed against a host app
              # better suited for automated tests (probably the E2E test app).
              - powershell: |
                  $appRecipeToolPath = Join-Path (& "C:\Program Files (x86)\Microsoft Visual Studio\Installer\vswhere.exe" -latest -property installationPath) "Common7\IDE\DeployAppRecipe.exe"
                  if (!(Test-Path $appRecipeToolPath)) { throw "can't find '$appRecipeToolPath'" }
                  $platDirs = @{ "x64" = "x64\"; "x86" = ""} # map from ADO BuildPlatform arg to VS build output dir part 
                  $appRecipePath = "$(Build.SourcesDirectory)\packages\playground\windows\$($platDirs['${{ matrix.BuildPlatform }}'])${{ matrix.BuildConfiguration }}\playground\playground.build.appxrecipe"
                  if (!(Test-Path $appRecipePath)) { throw "can't find '$appRecipePath'" }
                  &$appRecipeToolPath $appRecipePath
                  if (!(Get-AppxPackage 'RNPlayground')) {throw "RNPlayground app does not appear to be installed"}
                  Set-Location "$(Build.SourcesDirectory)\packages\debug-test"
                  $env:DEBUGTEST_LOGFOLDER = "$(Build.StagingDirectory)\DebugTestLogs"
                  yarn debugtest
                displayName: Run Debug Feature Tests
                timeoutInMinutes: 5

              - powershell: |
                  foreach ($logFile in (ls "$(Build.StagingDirectory)\DebugTestLogs\*.log")) {
                    Write-Host "logFile: '$logFile'"
                    Get-Content $logFile | ForEach-Object {Write-Host "##[debug]$_"}
                  }
                displayName: Incorporate Log File Content into ADO Log Stream
                condition: failed()

              - template: ../templates/upload-build-logs.yml
                parameters:
                  artifactName: 'DebugTest $(Agent.JobName)-$(System.JobAttempt)'
                  buildLogDirectory: '$(Build.StagingDirectory)\DebugTestLogs'

            - ${{if eq(config.BuildEnvironment, 'Continuous')}}:
              - template: ../templates/cleanup-certificate.yml

            - ${{ if eq(matrix.UploadAppx, true) }}:
              - task: PublishBuildArtifacts@1
                displayName: Upload App Package
                inputs:
                  pathtoPublish: 'packages/playground/windows/AppPackages/playground'
                  artifactName: 'Playground-${{ matrix.Name }}-$(System.JobAttempt)'
                condition: succeededOrFailed()
