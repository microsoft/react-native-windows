parameters:
  - name: buildEnvironment
    type: string
    default : PullRequest
    values:
      - PullRequest
      - Continuous
  - name: AgentPool
    type: object
  - name: buildMatrix
    type: object
    default:
      - BuildEnvironment: PullRequest
        Matrix:
          - Name: X86DebugUniversal
            BuildConfiguration: Debug
            BuildPlatform: x86
            SolutionFile: Playground.sln
          - Name: X64ReleaseUniversal
            BuildConfiguration: Release
            BuildPlatform: x64
            SolutionFile: Playground.sln
          - Name: X86DebugWin32
            BuildConfiguration: Debug
            BuildPlatform: x86
            SolutionFile: Playground-Win32.sln
          - Name: X64ReleaseWin32
            BuildConfiguration: Release
            BuildPlatform: x64
            SolutionFile: Playground-Win32.sln
          - Name: X86DebugWinUI3
            BuildConfiguration: Debug
            BuildPlatform: x86
            SolutionFile: Playground.sln
            BuildWinUI3: true
      - BuildEnvironment: Continuous
        Matrix:
          - Name: X86DebugUniversal
            BuildConfiguration: Debug
            BuildPlatform: x86
            SolutionFile: Playground.sln
            UploadAppx: true
          - Name: X64ReleaseUniversal
            BuildConfiguration: Release
            BuildPlatform: x64
            SolutionFile: Playground.sln
            RunWack: true
            UploadAppx: true
          - Name: X86DebugWin32
            BuildConfiguration: Debug
            BuildPlatform: x86
            SolutionFile: Playground-Win32.sln
          - Name: X64ReleaseWin32
            BuildConfiguration: Release
            BuildPlatform: x64
            SolutionFile: Playground-Win32.sln
          - Name: X86DebugWinUI3
            BuildConfiguration: Debug
            BuildPlatform: x86
            SolutionFile: Playground.sln
            BuildWinUI3: true
            UploadAppx: true

jobs:
  - ${{ each config in parameters.buildMatrix }}:
    - ${{ if eq(config.BuildEnvironment, parameters.buildEnvironment) }}:
      - ${{ each matrix in config.Matrix }}:
        - job: Playground${{ matrix.Name }}
          displayName: Playground ${{ matrix.Name }}

          variables: [template: ../variables/windows.yml]
          pool: ${{ parameters.AgentPool.Medium }}
          timeoutInMinutes: 60
          cancelTimeoutInMinutes: 5

          steps:
            - template: ../templates/checkout-shallow.yml

            - template: ../templates/prepare-js-env.yml

            - template: ../templates/prepare-build-env.yml
              parameters:
                platform: ${{ matrix.BuildPlatform }}
                configuration: ${{ matrix.BuildConfiguration }}
                buildEnvironment: ${{ config.BuildEnvironment }}

            - ${{ if eq(matrix.BuildWinUI3, true) }}:
              - template: ../templates/set-experimental-feature.yml
                parameters:
                  package: packages/playground
                  feature: UseWinUI3
                  value: true

            - ${{if eq(config.BuildEnvironment, 'Continuous')}}:
              - template: ../templates/write-certificate.yml
                parameters:
                  certificateName: playgroundEncodedKey

            # NuGet ignores packages.config if it detects <PackageReference>.
            # Use restore packages.config directly to keep compabitility with ReactNativePicker.
            - pwsh: |
                Get-ChildItem -Recurse -Path packages.config |`
                  Foreach-Object {`
                    NuGet.exe Restore -PackagesDirectory packages $_`
                  }
              workingDirectory: packages/playground/windows
              displayName: Restore packages.config items

            - template: ../templates/msbuild-sln.yml
              parameters:
                solutionDir: packages/playground/windows
                solutionName: ${{ matrix.SolutionFile }}
                buildPlatform: ${{ matrix.BuildPlatform}}
                buildConfiguration: ${{ matrix.BuildConfiguration}}
                warnAsError: false
                ${{if eq(config.BuildEnvironment, 'Continuous')}}:
                  msbuildArgs:
                    /p:PackageCertificateKeyFile=$(Build.SourcesDirectory)\EncodedKey.pfx

            - ${{if eq(config.BuildEnvironment, 'Continuous')}}:
              - template: ../templates/cleanup-certificate.yml

            - ${{ if eq(matrix.UploadAppx, true) }}:
              - task: PublishBuildArtifacts@1
                displayName: Upload App Package
                inputs:
                  pathtoPublish: 'packages/playground/windows/AppPackages/playground'
                  artifactName: 'Playground ${matrix.Name} AppX Package (Attempt $(System.JobAttempt))'

            - task: PublishBuildArtifacts@1
              displayName: Upload crash dumps
              inputs:
                pathtoPublish: '$(Build.StagingDirectory)/CrashDumps/'
                artifactName: 'Playground ${matrix.Name} Crash Dumps (Attempt $(System.JobAttempt))'
