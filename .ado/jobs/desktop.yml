parameters:
  - name: buildEnvironment
    type: string
    default : PullRequest
    values:
     - PullRequest
     - Continuous

jobs:
  - job: Desktop
    displayName: Desktop
    variables:
      - template: ../variables/vs2019.yml

      # Enable if any issues RNTesterIntegrationTests::* become unstable.
      - name: Desktop.IntegrationTests.SkipRNTester
        value: false

      #5059 - Disable failing or intermittent tests (IntegrationTestHarness,AsyncStorage,WebSocket,Logging).
      #5265 - WebSocketModuleIntegrationTest::WebSocketModule_Ping fails for Release
      - name: Desktop.IntegrationTests.Filter
        value: >
          (FullyQualifiedName!=RNTesterIntegrationTests::AsyncStorage)&
          (FullyQualifiedName!=RNTesterIntegrationTests::IntegrationTestHarness)&
          (FullyQualifiedName!=RNTesterIntegrationTests::WebSocket)&
          (FullyQualifiedName!=WebSocketResourcePerformanceTest::ProcessThreadsPerResource)

      #6799 -
      #       HostFunctionTest              - Crashes under JSI/V8
      #       HostObjectProtoTest           - Crashes under JSI/V8
      #       PreparedJavaScriptSourceTest  - Asserts/Fails under JSI/ChakraCore
      - name: Desktop.UnitTests.Filter
        value: >
          (FullyQualifiedName!~HostFunctionTest)&
          (FullyQualifiedName!~HostObjectProtoTest)&
          (FullyQualifiedName!~PreparedJavaScriptSourceTest)

    strategy:
      matrix:
        ${{ if eq(parameters.buildEnvironment, 'Continuous') }}:
          Arm64Debug:
            BuildConfiguration: Debug
            BuildPlatform: ARM64
          Arm64Release:
            BuildConfiguration: Release
            BuildPlatform: ARM64
        # End Continuous only
        X64Debug:
          BuildConfiguration: Debug
          BuildPlatform: x64
        X64Release:
          BuildConfiguration: Release
          BuildPlatform: x64
        X86Debug:
          BuildConfiguration: Debug
          BuildPlatform: x86
        # Start Continuous only
        ${{ if eq(parameters.buildEnvironment, 'Continuous') }}:
          X86Release:
            BuildConfiguration: Release
            BuildPlatform: x86
        # End Continuous only
    pool: $(AgentPool.Medium)
    timeoutInMinutes: 60 # how long to run the job before automatically cancelling
    cancelTimeoutInMinutes: 5 # how much time to give 'run always even if cancelled tasks' before killing them

    steps:
      - checkout: self
        clean: false
        submodules: false

      - template: ../templates/apply-published-version-vars.yml

      - powershell: |
          $newValue = '(FullyQualifiedName!~RNTesterIntegrationTests::)&' + "$(Desktop.IntegrationTests.Filter)"
          Write-Host "##vso[task.setvariable variable=Desktop.IntegrationTests.Filter]$newValue"
        displayName: Update Desktop.IntegrationTests.Filter to exclude RNTester integration tests
        condition: and(succeeded(), eq(variables['Desktop.IntegrationTests.SkipRNTester'], 'true'))

      - template: ../templates/build-rnw.yml
        parameters:
          project: vnext/ReactWindows-Desktop.sln
          buildPlatform: $(BuildPlatform)
          buildConfiguration: $(BuildConfiguration)

      - task: CmdLine@2
        displayName: Build react-native-win32 RNTester bundle
        inputs:
          script: yarn bundle
          workingDirectory: packages/@office-iss/react-native-win32
        condition: and(succeeded(), eq(variables['BuildConfiguration'], 'Debug'), eq(variables['BuildPlatform'], 'x64'))

      - template: ../templates/discover-google-test-adapter.yml

      - task: VSTest@2
        displayName: Run Desktop Unit Tests
        timeoutInMinutes: 5 # Set smaller timeout , due to hangs
        inputs:
          testSelector: testAssemblies
          testAssemblyVer2: |
            React.Windows.Desktop.UnitTests/React.Windows.Desktop.UnitTests.dll
          # Bug #8000: Tracks fixing the tests
          # ReactCommon.UnitTests/ReactCommon.UnitTests.exe
          pathtoCustomTestAdapters: $(GoogleTestAdapterPath)
          searchFolder: $(Build.SourcesDirectory)/vnext/target/$(BuildPlatform)/$(BuildConfiguration)
          testFiltercriteria: $(Desktop.UnitTests.Filter)
          runTestsInIsolation: true
          platform: $(BuildPlatform)
          configuration: $(BuildConfiguration)
          publishRunAttachments: true
          collectDumpOn: onAbortOnly
          vsTestVersion: latest
          failOnMinTestsNotRun: true
        condition: and(succeeded(), not(eq(variables['BuildPlatform'], 'ARM64')))

      - task: PowerShell@2
        displayName: Set up test servers
        inputs:
          targetType: filePath # filePath | inline
          filePath: $(Build.SourcesDirectory)\vnext\Scripts\Tfs\Start-TestServers.ps1
          arguments: -SourcesDirectory $(Build.SourcesDirectory)\vnext -Preload -SleepSeconds 120
        condition: and(succeeded(), ne(variables['Desktop.IntegrationTests.SkipRNTester'], 'true'), ne(variables['BuildConfiguration'], 'Debug'))

      - task: PowerShell@2
        displayName: Check the metro bundle server
        inputs:
          targetType: 'inline'
          script: Invoke-WebRequest -UseBasicParsing -Uri "http://localhost:8081/IntegrationTests/IntegrationTestsApp.bundle?platform=windows&dev=true"
        condition: and(succeeded(), ne(variables['Desktop.IntegrationTests.SkipRNTester'], 'true'), ne(variables['BuildConfiguration'], 'Debug'))

      - task: VSTest@2
        displayName: Run Desktop Integration Tests
        inputs:
          testSelector: testAssemblies
          testAssemblyVer2: React.Windows.Desktop.IntegrationTests\React.Windows.Desktop.IntegrationTests.dll
          searchFolder: $(Build.SourcesDirectory)\vnext\target\$(BuildPlatform)\$(BuildConfiguration)
          testFiltercriteria: $(Desktop.IntegrationTests.Filter)
          runTestsInIsolation: true
          platform: $(BuildPlatform)
          configuration: $(BuildConfiguration)
          publishRunAttachments: true
          collectDumpOn: onAbortOnly
          vsTestVersion: latest
          failOnMinTestsNotRun: true
          otherConsoleOptions: '/blame -- RunConfiguration.TestSessionTimeout=300000'
        # Suspected debug assert in TestRunner hanging tests randomly. Run only on Release for now.
        condition: and(succeeded(), ne(variables['BuildConfiguration'], 'Debug'), not(eq(variables['BuildPlatform'], 'ARM64')))

      - template: ../templates/stop-packagers.yml

      - template: ../templates/publish-build-artifacts-for-nuget.yml
        parameters:
          artifactName: ReactWindows
          buildPlatform: $(BuildPlatform)
          buildConfiguration: $(BuildConfiguration)
          contents: |
            React.Windows.Desktop\**
            React.Windows.Desktop.DLL\**
            React.Windows.Desktop.Test.DLL\**

      - template: ../templates/component-governance.yml
