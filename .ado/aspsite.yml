#TODO: Delete before merging
trigger:
- test-net-asp

pool:
  name: GreenRNW

variables:
  - name: system.debug
    value: true
  - name: Desktop.IntegrationTests.Filter
    value: >
      (FullyQualifiedName!~RNTesterIntegrationTests::)&
      (FullyQualifiedName!=WebSocketResourcePerformanceTest::ProcessThreadsPerResource)&
      (FullyQualifiedName!=WebSocketIntegrationTest::SendReceiveSsl)&
      (FullyQualifiedName!=Microsoft::React::Test::HttpOriginPolicyIntegrationTest)


steps:
- pwsh: |
    Write-Warning 'Printing PATH'
    $env:PATH -split ';'
  displayName: Get ENV info

- checkout: self
  clean: false
  fetchDepth: 1
  continueOnError: false

- pwsh: |
    Write-Host "[$(Get-Command -ShowCommandInfo -Name git.exe)]"
    Write-Warning 'Printing PATH'

    Write-Host "Downloading from [${env:DOWNLOAD_SITE}]"
  displayName: Print relevant info

- task: DotNetCoreCLI@2
  displayName: Restore Packages for Test Website
  inputs:
    command: restore
    projects: vnext/TestWebsite/Microsoft.ReactNative.Test.Website.csproj

- task: DotNetCoreCLI@2
  displayName: Build Test Website
  inputs:
    command: build
    projects: vnext/TestWebsite/Microsoft.ReactNative.Test.Website.csproj

- task: DotNetCoreCLI@2
  displayName: Publish Test Website
  inputs:
    command: publish
    publishWebProjects: false
    zipAfterPublish: false
    projects: vnext/TestWebsite/Microsoft.ReactNative.Test.Website.csproj

- pwsh: |
    Install-WindowsFeature -Name Web-Server
    Install-WindowsFeature -Name Web-Scripting-Tools
  displayName: Install IIS
  enabled: false

- pwsh: |
    Invoke-WebRequest `
      -Uri 'https://download.visualstudio.microsoft.com/download/pr/116578f1-3fd4-4847-8bcb-023aeca2c8b2/bfbd897456eaaf8a56f1e838b35d2717/dotnet-sdk-7.0.406-win-x64.exe' `
      -OutFile dotnet-sdk-7.0.406-win-x64.exe

    Write-Host 'Installing .NET 7'
    #.\dotnet-sdk-7.0.406-win-x64.exe /install /quiet /norestart
    Start-Process -Wait -FilePath .\dotnet-sdk-7.0.406-win-x64.exe -ArgumentList '/INSTALL', '/QUIET', '/NORESTART'
    Write-Host 'Installed .NET 7'

    Invoke-WebRequest `
      -Uri 'https://download.visualstudio.microsoft.com/download/pr/98ff0a08-a283-428f-8e54-19841d97154c/8c7d5f9600eadf264f04c82c813b7aab/dotnet-hosting-8.0.2-win.exe' `
      -OutFile dotnet-hosting-8.0.2-win.exe

    Write-Host 'Installing .NET hosting bundle'
    #.\dotnet-hosting-8.0.2-win.exe /install /quiet /norestart
    Start-Process -Wait -FilePath .\dotnet-hosting-8.0.2-win.exe -ArgumentList '/INSTALL', '/QUIET', '/NORESTART'
    Write-Host 'Installed .NET hosting bundle'
  displayName: Install the .NET Core Hosting Bundle

- pwsh: |
    $certPath = "${env:BUILD_SOURCESDIRECTORY}/vnext/TestWebSite/localhost.p12"
    $certPass = ConvertTo-SecureString -AsPlainText -String $(TestWebsiteCertPassword)
    $certHash = (Get-PfxCertificate -FilePath $certPath -Password $certPass).Thumbprint
    Write-Host "##vso[task.setvariable variable=TestWebsiteCertificateThumbprint]$certHash"

    # Make available to IIS
    Import-PfxCertificate `
      -Exportable `
      -Password $certPass `
      -FilePath $certPath `
      -CertStoreLocation Cert:\LocalMachine\My\

    # Trust globally
    Import-PfxCertificate `
      -Exportable `
      -Password $certPass `
      -FilePath $certPath `
      -CertStoreLocation Cert:\LocalMachine\Root\

    # Remove-Item -Path Cert:\LocalMachine\My\$certHash -ErrorAction Ignore
    # Remove-Item -Path Cert:\LocalMachine\Root\$certHash -ErrorAction Ignore
  displayName: Install TLS Certificate

- task: IISWebAppManagementOnMachineGroup@0
  enabled: true
  displayName: Create website
  inputs:
    EnableIIS: false # Installs too many unneeded components: Web-Http-Redirect,Web-DAV-Publishing,Web-Custom-Logging,Web-Log-Libraries,Web-ODBC-Logging,Web-Request-Monitor,Web-Http-Tracing,Web-Dyn-Compression,Web-Basic-Auth,Web-CertProvider,Web-Client-Auth,Web-Digest-Auth,Web-Cert-Auth,Web-IP-Security,Web-Url-Auth,Web-Windows-Auth,Web-App-Dev,Web-Net-Ext,NET-Framework-Core,NET-Framework-Features,NET-Framework-45-ASPNET,Web-Net-Ext45,Web-AppInit,Web-ASP,Web-ISAPI-Ext,Web-Asp-Net,Web-ISAPI-Filter,Web-Asp-Net45,Web-CGI,Web-Includes,Web-WebSockets,Web-Ftp-Server,Web-Ftp-Service,Web-Ftp-Ext,Web-Mgmt-Console,Web-Mgmt-Compat,Web-Metabase,Web-Lgcy-Scripting,Web-WMI,Web-Mgmt-Service
    IISDeploymentType: IISWebsite
    ActionIISWebsite: 'CreateOrUpdateWebsite'
    #ActionIISApplicationPool: 'CreateOrUpdateAppPool' # 'CreateOrUpdateAppPool' | 'StartAppPool' | 'StopAppPool' | 'RecycleAppPool'. Required when IISDeploymentType = IISApplicationPool. Action. Default: CreateOrUpdateAppPool.
    #StartStopWebsiteName: # string. Required when ActionIISWebsite = StartWebsite || ActionIISWebsite = StopWebsite. Website name.
    #Protocol: 'http' # 'https' | 'http'. Required when IISDeploymentType = randomDeployment. Protocol. Default: http.
    #IPAddress: 'All Unassigned' # string. Required when IISDeploymentType = randomDeployment. IP address. Default: All Unassigned.
    #Port: 5555 # string. Required when IISDeploymentType = randomDeployment. Port. Default: 80.
    #ServerNameIndication: false # boolean. Optional. Use when IISDeploymentType = randomDeployment. Server Name Indication required. Default: false.
    #HostNameWithOutSNI: # string. Optional. Use when IISDeploymentType = randomDeployment. Host name.
    #HostNameWithHttp: # string. Optional. Use when IISDeploymentType = randomDeployment. Host name.
    #HostNameWithSNI: # string. Required when IISDeploymentType = randomDeployment. Host name.
    SSLCertThumbPrint: $(TestWebsiteCertificateThumbprint)
    #StartStopRecycleAppPoolName: # string. Required when ActionIISApplicationPool = StartAppPool || ActionIISApplicationPool = StopAppPool || ActionIISApplicationPool = RecycleAppPool. Application pool name.
  # IIS Website
    WebsiteName: RNW Test Website # string. Required when ActionIISWebsite = CreateOrUpdateWebsite. Website name.
    WebsitePhysicalPath: $(Build.SourcesDirectory)\vnext\target\x64\Debug\Microsoft.ReactNative.Test.Website\Publish # string. Required when ActionIISWebsite = CreateOrUpdateWebsite. Physical path. Default: %SystemDrive%\inetpub\wwwroot.
    WebsitePhysicalPathAuth: WebsiteUserPassThrough # 'WebsiteUserPassThrough' | 'WebsiteWindowsAuth'. Required when ActionIISWebsite = CreateOrUpdateWebsite. Physical path authentication. Default: WebsiteUserPassThrough.
    #WebsiteAuthUserName: # string. Required when WebsitePhysicalPathAuth = WebsiteWindowsAuth && ActionIISWebsite = CreateOrUpdateWebsite. Username.
    #WebsiteAuthUserPassword: # string. Optional. Use when WebsitePhysicalPathAuth = WebsiteWindowsAuth && ActionIISWebsite = CreateOrUpdateWebsite. Password.
    #AddBinding: false # boolean. Optional. Use when ActionIISWebsite = CreateOrUpdateWebsite. Add binding. Default: false.
    CreateOrUpdateAppPoolForWebsite: false # boolean. Optional. Use when ActionIISWebsite = CreateOrUpdateWebsite. Create or update app pool. Default: false.
    ConfigureAuthenticationForWebsite: false # boolean. Optional. Use when ActionIISWebsite = CreateOrUpdateWebsite. Configure authentication. Default: false.
  # IIS Bindings
    # See https://stackoverflow.com/questions/60089756
    AddBinding: true
    Bindings: |
      {
        bindings: [
          {
            "protocol": "http",
            "ipAddress": "*",
            "port": "5555",
            "sslThumbprint": "",
            "sniFlag": false
          },
          {
            "protocol": "https",
            "ipAddress": "*",
            "port": "5543",
            "sslThumbprint": "$(TestWebsiteCertificateThumbprint)",
            "sniFlag": false
          }
        ]
      }
    #Bindings: # string. Required when IISDeploymentType = IISWebsite && ActionIISWebsite = CreateOrUpdateWebsite && AddBinding = true. Add bindings.
  # IIS Application pool
    AppPoolNameForWebsite: DefaultAppPool #. Required when IISDeploymentType = IISWebsite && ActionIISWebsite = CreateOrUpdateWebsite && CreateOrUpdateAppPoolForWebsite = true. Name.
    #DotNetVersionForWebsite: 'v4.0' # 'v4.0' | 'v2.0' | 'No Managed Code'. Required when IISDeploymentType = IISWebsite && ActionIISWebsite = CreateOrUpdateWebsite && CreateOrUpdateAppPoolForWebsite = true. .NET version. Default: v4.0.
    #PipeLineModeForWebsite: 'Integrated' # 'Integrated' | 'Classic'. Required when IISDeploymentType = IISWebsite && ActionIISWebsite = CreateOrUpdateWebsite && CreateOrUpdateAppPoolForWebsite = true. Managed pipeline mode. Default: Integrated.
    #AppPoolIdentityForWebsite: 'ApplicationPoolIdentity' # 'ApplicationPoolIdentity' | 'LocalService' | 'LocalSystem' | 'NetworkService' | 'SpecificUser'. Required when IISDeploymentType = IISWebsite && ActionIISWebsite = CreateOrUpdateWebsite && CreateOrUpdateAppPoolForWebsite = true. Identity. Default: ApplicationPoolIdentity.
    #AppPoolUsernameForWebsite: # string. Required when AppPoolIdentityForWebsite = SpecificUser && IISDeploymentType = IISWebsite && ActionIISWebsite = CreateOrUpdateWebsite && CreateOrUpdateAppPoolForWebsite = true. Username.
    #AppPoolPasswordForWebsite: # string. Optional. Use when AppPoolIdentityForWebsite = SpecificUser && IISDeploymentType = IISWebsite && ActionIISWebsite = CreateOrUpdateWebsite && CreateOrUpdateAppPoolForWebsite = true. Password.
  # IIS Authentication
    #AnonymousAuthenticationForWebsite: false # boolean. Optional. Use when IISDeploymentType = IISWebsite && ActionIISWebsite = CreateOrUpdateWebsite && ConfigureAuthenticationForWebsite = true. Anonymous authentication. Default: false.
    #BasicAuthenticationForWebsite: false # boolean. Optional. Use when IISDeploymentType = IISWebsite && ActionIISWebsite = CreateOrUpdateWebsite && ConfigureAuthenticationForWebsite = true. Basic authentication. Default: false.
    #WindowsAuthenticationForWebsite: true # boolean. Optional. Use when IISDeploymentType = IISWebsite && ActionIISWebsite = CreateOrUpdateWebsite && ConfigureAuthenticationForWebsite = true. Windows authentication. Default: true.
  # IIS Virtual directory
    #ParentWebsiteNameForVD: # string. Required when IISDeploymentType = IISVirtualDirectory. Parent website name.
    #VirtualPathForVD: # string. Required when IISDeploymentType = IISVirtualDirectory. Virtual path.
    #PhysicalPathForVD: '%SystemDrive%\inetpub\wwwroot' # string. Required when IISDeploymentType = IISVirtualDirectory. Physical path. Default: %SystemDrive%\inetpub\wwwroot.
    #VDPhysicalPathAuth: 'VDUserPassThrough' # 'VDUserPassThrough' | 'VDWindowsAuth'. Optional. Use when IISDeploymentType = IISVirtualDirectory. Physical path authentication. Default: VDUserPassThrough.
    #VDAuthUserName: # string. Required when VDPhysicalPathAuth = VDWindowsAuth && IISDeploymentType = IISVirtualDirectory. Username.
    #VDAuthUserPassword: # string. Optional. Use when VDPhysicalPathAuth = VDWindowsAuth && IISDeploymentType = IISVirtualDirectory. Password.
  # IIS Application
    #ParentWebsiteNameForApplication: # string. Required when IISDeploymentType = IISWebApplication. Parent website name.
    #VirtualPathForApplication: # string. Required when IISDeploymentType = IISWebApplication. Virtual path.
    #PhysicalPathForApplication: '%SystemDrive%\inetpub\wwwroot' # string. Required when IISDeploymentType = IISWebApplication. Physical path. Default: %SystemDrive%\inetpub\wwwroot.
    #ApplicationPhysicalPathAuth: 'ApplicationUserPassThrough' # 'ApplicationUserPassThrough' | 'ApplicationWindowsAuth'. Optional. Use when IISDeploymentType = IISWebApplication. Physical path authentication. Default: ApplicationUserPassThrough.
    #ApplicationAuthUserName: # string. Required when ApplicationPhysicalPathAuth = ApplicationWindowsAuth && IISDeploymentType = IISWebApplication. Username.
    #ApplicationAuthUserPassword: # string. Optional. Use when ApplicationPhysicalPathAuth = ApplicationWindowsAuth && IISDeploymentType = IISWebApplication. Password.
    #CreateOrUpdateAppPoolForApplication: false # boolean. Optional. Use when IISDeploymentType = IISWebApplication. Create or update app pool. Default: false.
  # IIS Application pool
    #AppPoolNameForApplication: # string. Required when IISDeploymentType = IISWebApplication && CreateOrUpdateAppPoolForApplication = true. Name.
    #DotNetVersionForApplication: 'v4.0' # 'v4.0' | 'v2.0' | 'No Managed Code'. Required when IISDeploymentType = IISWebApplication && CreateOrUpdateAppPoolForApplication = true. .NET version. Default: v4.0.
    #PipeLineModeForApplication: 'Integrated' # 'Integrated' | 'Classic'. Required when IISDeploymentType = IISWebApplication && CreateOrUpdateAppPoolForApplication = true. Managed pipeline mode. Default: Integrated.
    #AppPoolIdentityForApplication: 'ApplicationPoolIdentity' # 'ApplicationPoolIdentity' | 'LocalService' | 'LocalSystem' | 'NetworkService' | 'SpecificUser'. Required when IISDeploymentType = IISWebApplication && CreateOrUpdateAppPoolForApplication = true. Identity. Default: ApplicationPoolIdentity.
    #AppPoolUsernameForApplication: # string. Required when AppPoolIdentityForApplication = SpecificUser && IISDeploymentType = IISWebApplication && CreateOrUpdateAppPoolForApplication = true. Username.
    #AppPoolPasswordForApplication: # string. Optional. Use when AppPoolIdentityForApplication = SpecificUser && IISDeploymentType = IISWebApplication && CreateOrUpdateAppPoolForApplication = true. Password.
  # IIS Application pool
    #AppPoolName: # string. Required when ActionIISApplicationPool = CreateOrUpdateAppPool. Name.
    #DotNetVersion: 'v4.0' # 'v4.0' | 'v2.0' | 'No Managed Code'. Required when ActionIISApplicationPool = CreateOrUpdateAppPool. .NET version. Default: v4.0.
    #PipeLineMode: 'Integrated' # 'Integrated' | 'Classic'. Required when ActionIISApplicationPool = CreateOrUpdateAppPool. Managed pipeline mode. Default: Integrated.
    #AppPoolIdentity: 'ApplicationPoolIdentity' # 'ApplicationPoolIdentity' | 'LocalService' | 'LocalSystem' | 'NetworkService' | 'SpecificUser'. Required when ActionIISApplicationPool = CreateOrUpdateAppPool. Identity. Default: ApplicationPoolIdentity.
    #AppPoolUsername: # string. Required when AppPoolIdentity = SpecificUser && ActionIISApplicationPool = CreateOrUpdateAppPool. Username.
    #AppPoolPassword: # string. Optional. Use when AppPoolIdentity = SpecificUser && ActionIISApplicationPool = CreateOrUpdateAppPool. Password.
  # Advanced
    #AppCmdCommands: # string. Additional appcmd.exe commands.

- pwsh: |
    iisreset.exe /RESTART

    Import-Module IISAdministration
    Get-IISSite
  displayName: Print IIS Site Info

- pwsh: |
    # Test HTTP
    Invoke-WebRequest http://localhost:5555

    # Test HTTPS
    Invoke-WebRequest https://localhost:5543
  displayName: Test HTTP

- pwsh: |
    Invoke-WebRequest -UseBasicParsing -Uri https://jurocha-green:666/rnwit.zip -OutFile rnwit.zip
    Expand-Archive -DestinationPath ${env:BUILD_SOURCESDIRECTORY}\rnwit rnwit.zip
  displayName: Extract RNW Test Binaries
  enabled: false

# Visual Studio Test v3
# Run unit and functional tests (Selenium, Appium, Coded UI test, etc.) using the Visual Studio Test (VsTest) runner. Test frameworks that have a Visual Studio test adapter such as MsTest, xUnit, NUnit, Chutzpah (for JavaScript tests using QUnit, Mocha and Jasmine), etc. can be run. Tests can be distributed on multiple agents using this task (version 2).
- task: VSTest@2
  enabled: false
  displayName: Run Integration Tests
  inputs:
  # Test selection
    testSelector: testAssemblies
    testAssemblyVer2: $(Build.SourcesDirectory)\rnwit\React.Windows.Desktop.IntegrationTests.dll
    #testPlan: # string. Required when testSelector = testPlan. Test plan.
    #testSuite: # string. Required when testSelector = testPlan. Test suite.
    #testConfiguration: # string. Required when testSelector = testPlan. Test configuration.
    #tcmTestRun: '$(test.RunId)' # string. Optional. Use when testSelector = testRun. Test Run. Default: $(test.RunId).
    searchFolder: $(Build.SourcesDirectory)\rnwit
    #resultsFolder: '$(Agent.TempDirectory)\TestResults' # string. Test results folder. Default: $(Agent.TempDirectory)\TestResults.
    testFiltercriteria: $(Desktop.IntegrationTests.Filter)
    #runOnlyImpactedTests: False # boolean. Optional. Use when testSelector = testAssemblies. Run only impacted tests. Default: False.
    #runAllTestsAfterXBuilds: '50' # string. Optional. Use when testSelector = testAssemblies && runOnlyImpactedTests = true. Number of builds after which all tests should be run. Default: 50.
    #uiTests: false # boolean. Test mix contains UI tests. Default: false.
  # Execution options
    #vstestLocationMethod: 'version' # 'version' | 'location'. Select test platform using. Default: version.
    vsTestVersion: latest
    #vstestLocation: # string. Optional. Use when vstestLocationMethod = location. Path to vstest.console.exe.
    #runSettingsFile: # string. Settings file.
    #overrideTestrunParameters: # string. Override test run parameters.
    #pathtoCustomTestAdapters: # string. Path to custom test adapters.
    #runInParallel: False # boolean. Run tests in parallel on multi-core machines. Default: False.
    runTestsInIsolation: true
    #codeCoverageEnabled: False # boolean. Code coverage enabled. Default: False.
    #otherConsoleOptions: # string. Other console options.
    #diagnosticsEnabled: false # boolean. Collect advanced diagnostics in case of catastrophic failures. Default: false.
    collectDumpOn: onAbortOnly
    #rerunFailedTests: False # boolean. Rerun failed tests. Default: False.
    #rerunType: 'basedOnTestFailurePercentage' # 'basedOnTestFailurePercentage' | 'basedOnTestFailureCount'. Optional. Use when rerunFailedTests = true. Do not rerun if test failures exceed specified threshold. Default: basedOnTestFailurePercentage.
    #rerunFailedThreshold: '30' # string. Optional. Use when rerunFailedTests = true && rerunType = basedOnTestFailurePercentage. % failure. Default: 30.
    #rerunFailedTestCasesMaxLimit: '5' # string. Optional. Use when rerunFailedTests = true && rerunType = basedOnTestFailureCount. # of failed tests. Default: 5.
    #rerunMaxAttempts: '3' # string. Optional. Use when rerunFailedTests = true. Maximum # of attempts. Default: 3.
  # Advanced execution options
    #distributionBatchType: 'basedOnTestCases' # 'basedOnTestCases' | 'basedOnExecutionTime' | 'basedOnAssembly'. Batch tests. Default: basedOnTestCases.
    #batchingBasedOnAgentsOption: 'autoBatchSize' # 'autoBatchSize' | 'customBatchSize'. Optional. Use when distributionBatchType = basedOnTestCases. Batch options. Default: autoBatchSize.
    #customBatchSizeValue: '10' # string. Required when distributionBatchType = basedOnTestCases && batchingBasedOnAgentsOption = customBatchSize. Number of tests per batch. Default: 10.
    #batchingBasedOnExecutionTimeOption: 'autoBatchSize' # 'autoBatchSize' | 'customTimeBatchSize'. Optional. Use when distributionBatchType = basedOnExecutionTime. Batch options. Default: autoBatchSize.
    #customRunTimePerBatchValue: '60' # string. Required when distributionBatchType = basedOnExecutionTime && batchingBasedOnExecutionTimeOption = customTimeBatchSize. Running time (sec) per batch. Default: 60.
    #dontDistribute: False # boolean. Replicate tests instead of distributing when multiple agents are used in the job. Default: False.
  # Reporting options
    #testRunTitle: # string. Test run title.
    platform: x64
    configuration: Configuration
    publishRunAttachments: true
    failOnMinTestsNotRun: False
    #minimumExpectedTests: '1' # string. Optional. Use when failOnMinTestsNotRun = true. Minimum # of tests. Default: 1.
