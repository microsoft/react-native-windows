name: 0.0.$(Date:yyMM.d)$(Rev:rrr)

parameters:
- name: skipNpmPublish
  displayName: Skip Npm Publish
  type: boolean
  default: false
- name: skipGitPush
  displayName: Skip Git Push
  type: boolean
  default: false
- name: stopOnNoCI
  displayName: Stop if latest commit is ***NO_CI***
  type: boolean
  default: true
- name: AgentPool
  type: object
  default:
    Medium:
      name: rnw-pool-4-microsoft
      demands: ImageOverride -equals rnw-img-vs2022
    Large:
      name: rnw-pool-8-microsoft
      demands: ImageOverride -equals rnw-img-vs2022

- name: desktopBuildMatrix
  type: object
  default:
    - Name: X64Debug
      BuildConfiguration: Debug
      BuildPlatform: x64
      UseFabric: false
    - Name: X64Release
      BuildConfiguration: Release
      BuildPlatform: x64
      UseFabric: false
    - Name: X86Debug
      BuildConfiguration: Debug
      BuildPlatform: x86
      UseFabric: false
    - Name: X86Release
      BuildConfiguration: Release
      BuildPlatform: x86
      UseFabric: false
    - Name: ARM64Debug
      BuildConfiguration: Debug
      BuildPlatform: ARM64
      UseFabric: false
    - Name: ARM64Release
      BuildConfiguration: Release
      BuildPlatform: ARM64
      UseFabric: false
    - Name: X64DebugFabric
      BuildConfiguration: Debug
      BuildPlatform: x64
      UseFabric: true
    - Name: X64ReleaseFabric
      BuildConfiguration: Release
      BuildPlatform: x64
      UseFabric: true
    - Name: X86DebugFabric
      BuildConfiguration: Debug
      BuildPlatform: x86
      UseFabric: true
    - Name: X86ReleaseFabric
      BuildConfiguration: Release
      BuildPlatform: x86
      UseFabric: true


variables:
  - template: variables/windows.yml
  - group: RNW Secrets
  - name: SkipNpmPublishArgs
    value: ''
  - name: SkipGitPushPublishArgs
    value: ''
  - name: FailCGOnAlert
    value: false
  - name: EnableCodesign
    value: false
  - name: ArtifactServices.Symbol.AccountName
    value: microsoft
  - name: ArtifactServices.Symbol.PAT
    value: $(pat-symbols-publish-microsoft)

trigger: none
pr: none

jobs:
  - job: RnwNpmPublish
    displayName: React-Native-Windows Npm Build Rev Publish
    pool: ${{ parameters.AgentPool.Medium }}
    timeoutInMinutes: 120
    cancelTimeoutInMinutes: 5
    steps:
      - powershell: |
          Write-Host "Stopping because commit message contains ***NO_CI***."
          $uri = "https://dev.azure.com/microsoft/ReactNative/_apis/build/builds/$(Build.BuildId)?api-version=5.1"
          $json = @{status="Cancelling"} | ConvertTo-Json -Compress
          $build = Invoke-RestMethod -Uri $uri -Method Patch -Headers @{Authorization = "Bearer $(System.AccessToken)"} -ContentType "application/json" -Body $json
          Write-Host $build
          Write-Host "Waiting 60 seconds for build cancellation..."
          Start-Sleep -Seconds 60
        displayName: Stop pipeline if latest commit message contains ***NO_CI***
        condition: and(${{ parameters.stopOnNoCI }}, contains(variables['Build.SourceVersionMessage'], '***NO_CI***'))

      - template: templates/checkout-full.yml
        parameters:
          persistCredentials: false # We're going to use rnbot's git creds to publish

      - powershell: gci env:/BUILD_*
        displayName: Show build information  

      - template: templates/prepare-js-env.yml

      - template: templates/run-compliance-prebuild.yml

      - template: templates/configure-git.yml

      - script: |
          echo ##vso[task.setvariable variable=SkipNpmPublishArgs]--no-publish
        displayName: Enable No-Publish
        condition: ${{ parameters.skipNpmPublish }}

      - script: |
          echo ##vso[task.setvariable variable=SkipGitPushPublishArgs]--no-push
        displayName: Enable No-Publish
        condition: ${{ parameters.skipGitPush }}

      - script: npx beachball publish $(SkipNpmPublishArgs) $(SkipGitPushPublishArgs) --branch origin/$(Build.SourceBranchName) -n $(npmAuthToken) -yes --bump-deps --verbose --access public --message "applying package updates ***NO_CI***"
        displayName: Beachball Publish

      # Beachball reverts to local state after publish, but we want the updates it added
      - script: git pull origin ${{ variables['Build.SourceBranchName'] }}
        displayName: git pull

      - script: npx @rnw-scripts/create-github-releases --yes --authToken $(githubAuthToken)
        displayName: Create GitHub Releases (New Canary Version)
        condition: and(succeeded(), ${{ not(parameters.skipGitPush) }}, ${{ eq(variables['Build.SourceBranchName'], 'main') }} )

      - script: npx --yes @rnw-scripts/create-github-releases@latest --yes --authToken $(githubAuthToken)
        displayName: Create GitHub Releases (New Stable Version)
        condition: and(succeeded(), ${{ not(parameters.skipGitPush) }}, ${{ ne(variables['Build.SourceBranchName'], 'main') }} )

      - template: templates/set-version-vars.yml
        parameters:
          buildEnvironment: Continuous

      - task: AzureArtifacts.manifest-generator-task.manifest-generator-task.ManifestGeneratorTask@0
        displayName: ðŸ“’ Generate Manifest Npm
        inputs:
          BuildDropPath: $(System.DefaultWorkingDirectory)
    
      - task: PublishPipelineArtifact@1
        displayName: ðŸ“’ Publish Manifest Npm
        inputs:
          artifactName: SBom-$(System.JobAttempt)
          targetPath: $(System.DefaultWorkingDirectory)/_manifest
    
      - template: templates/publish-version-vars.yml

  - ${{ each matrix in parameters.desktopBuildMatrix }}:
    - job: RnwNativeBuildDesktop${{ matrix.Name }}
      displayName: Build Desktop ${{ matrix.Name }}
      dependsOn: RnwNpmPublish
      pool: ${{ parameters.AgentPool.Large }}

      steps:
        - template: templates/prepare-js-env.yml

        - template: templates/prepare-build-env.yml
          parameters:
            platform: ${{ matrix.BuildPlatform }}
            configuration: ${{ matrix.BuildConfiguration }}
            buildEnvironment: Publish

        - template: templates/apply-published-version-vars.yml

        - ${{ if eq(matrix.UseFabric, true) }}:
          - template: templates/enable-fabric-experimental-feature.yml

        - template: templates/msbuild-sln.yml
          parameters:
            solutionDir: vnext
            solutionName: ReactWindows-Desktop.sln
            buildPlatform: ${{ matrix.BuildPlatform }}
            buildConfiguration: ${{ matrix.BuildConfiguration }}

        - template: templates/publish-build-artifacts.yml
          parameters:
            ${{ if eq(matrix.UseFabric, true) }}:
              artifactName: DesktopFabric
            ${{ if eq(matrix.UseFabric, false) }}:
              artifactName: Desktop
            buildPlatform: ${{ matrix.BuildPlatform }}
            buildConfiguration: ${{ matrix.BuildConfiguration }}
            contents: |
              React.Windows.Desktop\**
              React.Windows.Desktop.DLL\**
              React.Windows.Desktop.Test.DLL\**

        - template: templates/component-governance.yml

  - job: RnwNativeBuildUniversal
    displayName: Build Universal
    dependsOn: RnwNpmPublish
    strategy:
      matrix:
        X64Release:
          BuildConfiguration: Release
          BuildPlatform: x64
        X86Release:
          BuildConfiguration: Release
          BuildPlatform: x86
        Arm64Release:
          BuildConfiguration: Release
          BuildPlatform: ARM64
        X64Debug:
          BuildConfiguration: Debug
          BuildPlatform: x64
        X86Debug:
          BuildConfiguration: Debug
          BuildPlatform: x86
        Arm64Debug:
          BuildConfiguration: Debug
          BuildPlatform: ARM64          
    pool: ${{ parameters.AgentPool.Large }}

    steps:
      - template: templates/prepare-js-env.yml

      - template: templates/prepare-build-env.yml
        parameters:
          platform: $(BuildPlatform)
          configuration: $(BuildConfiguration)
          buildEnvironment: Publish

      - template: templates/apply-published-version-vars.yml

      - template: templates/msbuild-sln.yml
        parameters:
          solutionDir: vnext
          solutionName: Microsoft.ReactNative.sln
          buildPlatform: $(BuildPlatform)
          buildConfiguration: $(BuildConfiguration)

      - task: PowerShell@2
        displayName: Make AnyCPU Reference Assemblies
        inputs:
          filePath: vnext/Scripts/Tfs/Make-AnyCPU-RefAssemblies.ps1
          arguments: -TargetRoot $(Build.SourcesDirectory)\vnext\target -BuildRoot $(Build.SourcesDirectory)\vnext\target

      - template: templates/publish-build-artifacts.yml
        parameters:
          artifactName: ReactWindows
          buildPlatform: $(BuildPlatform)
          buildConfiguration: $(BuildConfiguration)
          contents: |
            Microsoft.ReactNative\**
            Microsoft.ReactNative.Managed\**
            Microsoft.ReactNative.Managed.CodeGen\**

      - template: templates/component-governance.yml

      # Make symbols available through http://symweb.
      - task: PublishSymbols@2
        displayName: Publish symbols
        inputs:
          SearchPattern: vnext/target/**/*.pdb
          SymbolServerType: TeamServices

  - job: RnwNativeBuildWinAppSDK
    displayName: Build WinAppSDK
    dependsOn: RnwNpmPublish
    strategy:
      matrix:
        X64Release:
          BuildConfiguration: Release
          BuildPlatform: x64       
    pool: ${{ parameters.AgentPool.Large }}

    steps:
      - template: templates/prepare-js-env.yml

      - template: templates/prepare-build-env.yml
        parameters:
          platform: $(BuildPlatform)
          configuration: $(BuildConfiguration)
          buildEnvironment: Publish

      - template: templates/apply-published-version-vars.yml

      - template: templates/msbuild-sln.yml
        parameters:
          solutionDir: vnext
          solutionName: Microsoft.ReactNative.WindowsAppSDK.sln
          buildPlatform: $(BuildPlatform)
          buildConfiguration: $(BuildConfiguration)
          msbuildArguments:
            /p:UseWinUI3=true
          warnAsError: false # Disable warn as error until we fix #8312

      - template: templates/publish-build-artifacts.yml
        parameters:
          artifactName: WindowsAppSDK
          buildPlatform: $(BuildPlatform)
          buildConfiguration: $(BuildConfiguration)
          contents: |
            Microsoft.ReactNative\**
            Microsoft.ReactNative.WindowsAppSDK\**

      - template: templates/component-governance.yml

      # Make symbols available through http://symweb.
      - task: PublishSymbols@2
        displayName: Publish symbols
        inputs:
          SearchPattern: vnext/target/**/*.pdb
          SymbolServerType: TeamServices

  - job: RNWNuget
    dependsOn:
      - RnwNpmPublish
      - ${{ each matrix in parameters.desktopBuildMatrix }}:
        - RnwNativeBuildDesktop${{ matrix.Name }}
      - RnwNativeBuildUniversal
      - RnwNativeBuildWinAppSDK
    displayName: Sign Binaries and Publish NuGet
    pool: ${{ parameters.AgentPool.Medium }}
    timeoutInMinutes: 120 # Protect against the long CodeSign task

    steps:
      - template: templates/checkout-shallow.yml

      - template: templates/prepare-js-env.yml

      - template: templates/apply-published-version-vars.yml

      # The commit tag in the nuspec requires that we use at least nuget 5.8 (because things break with nuget versions before and Vs 16.8 or later)
      - task: NuGetToolInstaller@1
        inputs:
          versionSpec: ">=5.8.0"

      - template: templates/prep-and-pack-nuget.yml
        parameters:
          artifactName: ReactWindows
          publishCommitId: $(publishCommitId)
          npmVersion: $(npmVersion)
          nugetroot: $(System.DefaultWorkingDirectory)\ReactWindows
          packMicrosoftReactNative: true
          packMicrosoftReactNativeCxx: true
          packMicrosoftReactNativeManaged: true
          packMicrosoftReactNativeManagedCodeGen: true
          ${{ if or(eq(variables['EnableCodesign'], 'true'), endsWith(variables['Build.SourceBranchName'], '-stable')) }}: # Sign if EnableCodeSign or on *-stable release builds
            signMicrosoft: true
          slices:
            - platform: x64
              configuration: Release
            - platform: x86
              configuration: Release
            - platform: ARM64
              configuration: Release  
            - platform: x64
              configuration: Debug
            - platform: x86
              configuration: Debug
            - platform: ARM64
              configuration: Debug

      - template: templates/prep-and-pack-nuget.yml
        parameters:
          artifactName: Desktop
          publishCommitId: $(publishCommitId)
          npmVersion: $(npmVersion)
          nugetroot: $(System.DefaultWorkingDirectory)\Desktop
          packDesktop: true
          ${{ if or(eq(variables['EnableCodesign'], 'true'), endsWith(variables['Build.SourceBranchName'], '-stable')) }}: # Sign if EnableCodeSign or on *-stable release builds
            signMicrosoft: true
          slices:
            - platform: x64
              configuration: Release
            - platform: x86
              configuration: Release
            - platform: ARM64
              configuration: Release
            - platform: x64
              configuration: Debug
            - platform: x86
              configuration: Debug
            - platform: ARM64
              configuration: Debug

      - template: templates/prep-and-pack-nuget.yml
        parameters:
          artifactName: DesktopFabric
          publishCommitId: $(publishCommitId)
          npmVersion: $(npmVersion)-Fabric
          nugetroot: $(System.DefaultWorkingDirectory)\Desktop
          packDesktop: true
          ${{ if or(eq(variables['EnableCodesign'], 'true'), endsWith(variables['Build.SourceBranchName'], '-stable')) }}: # Sign if EnableCodeSign or on *-stable release builds
            signMicrosoft: true
          slices:
            - platform: x64
              configuration: Release
            - platform: x86
              configuration: Release
            # - platform: ARM64
            #   configuration: Release
            - platform: x64
              configuration: Debug
            - platform: x86
              configuration: Debug
            # - platform: ARM64
            #   configuration: Debug              

      - template: templates/prep-and-pack-nuget.yml
        parameters:
          artifactName: WindowsAppSDK
          publishCommitId: $(publishCommitId)
          npmVersion: $(npmVersion)
          nugetroot: $(System.DefaultWorkingDirectory)\WindowsAppSDK
          packMicrosoftReactNativeWindowsAppSDK: true
          ${{ if or(eq(variables['EnableCodesign'], 'true'), endsWith(variables['Build.SourceBranchName'], '-stable')) }}: # Sign if EnableCodeSign or on *-stable release builds
            signMicrosoft: true
          slices:
            - platform: x64
              configuration: Release

      - task: AzureArtifacts.manifest-generator-task.manifest-generator-task.ManifestGeneratorTask@0
        displayName: ðŸ“’ Generate Manifest Nuget
        inputs:
          BuildDropPath: $(System.DefaultWorkingDirectory)

      - task: PublishPipelineArtifact@1
        displayName: "Publish final nuget artifacts"
        inputs:
          targetPath: $(System.DefaultWorkingDirectory)\NugetRootFinal
          artifactName: "ReactWindows-final-nuget"
