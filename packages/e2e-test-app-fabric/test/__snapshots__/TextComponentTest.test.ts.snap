// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Text Tests Padding can be added to Text 1`] = `
{
  "Automation Tree": {
    "AutomationId": "text-padding",
    "ControlType": 50020,
    "LocalizedControlType": "text",
    "Name": "This text is indented by 10px padding on all sides.",
  },
  "Component Tree": {
    "Type": "Microsoft.ReactNative.Composition.ParagraphComponentView",
    "_Props": {
      "TestId": "text-padding",
    },
  },
  "Visual Tree": {
    "Comment": "text-padding",
    "Offset": "0, 0, 0",
    "Size": "916, 39",
    "Visual Type": "SpriteVisual",
  },
}
`;

exports[`Text Tests Text can be restricted to one line 1`] = `
{
  "Automation Tree": {
    "AutomationId": "text-one-line",
    "ControlType": 50020,
    "LocalizedControlType": "text",
    "Name": "Maximum of one line no matter now much I write here. If I keep writing it'll just truncate after one line",
  },
  "Component Tree": {
    "Type": "Microsoft.ReactNative.Composition.ParagraphComponentView",
    "_Props": {
      "TestId": "text-one-line",
    },
  },
  "Visual Tree": {
    "Comment": "text-one-line",
    "Offset": "0, 0, 0",
    "Size": "300, 19",
    "Visual Type": "SpriteVisual",
  },
}
`;

exports[`Text Tests Text can be selectable 1`] = `
{
  "Automation Tree": {
    "AutomationId": "text-selectable",
    "ControlType": 50020,
    "LocalizedControlType": "text",
    "Name": "This text is selectable if you click-and-hold, and will offer the native Android selection menus.",
  },
  "Component Tree": {
    "Type": "Microsoft.ReactNative.Composition.ParagraphComponentView",
    "_Props": {
      "TestId": "text-selectable",
    },
  },
  "Visual Tree": {
    "Comment": "text-selectable",
    "Offset": "0, 0, 0",
    "Size": "916, 20",
    "Visual Type": "SpriteVisual",
  },
}
`;

exports[`Text Tests Text can have a color 1`] = `
{
  "Automation Tree": {
    "AutomationId": "text-color",
    "ControlType": 50020,
    "LocalizedControlType": "text",
    "Name": "Red color",
  },
  "Component Tree": {
    "Type": "Microsoft.ReactNative.Composition.ParagraphComponentView",
    "_Props": {
      "TestId": "text-color",
    },
  },
  "Visual Tree": {
    "Comment": "text-color",
    "Offset": "0, 0, 0",
    "Size": "916, 20",
    "Visual Type": "SpriteVisual",
  },
}
`;

exports[`Text Tests Text can have a customized selection color 1`] = `
{
  "Automation Tree": {
    "AutomationId": "text-selection-color",
    "ControlType": 50020,
    "LocalizedControlType": "text",
    "Name": "This text will have a orange highlight on selection.",
  },
  "Component Tree": {
    "Type": "Microsoft.ReactNative.Composition.ParagraphComponentView",
    "_Props": {
      "TestId": "text-selection-color",
    },
  },
  "Visual Tree": {
    "Comment": "text-selection-color",
    "Offset": "0, 0, 0",
    "Size": "916, 20",
    "Visual Type": "SpriteVisual",
  },
}
`;

exports[`Text Tests Text can have a size 1`] = `
{
  "Automation Tree": {
    "AutomationId": "text-size",
    "ControlType": 50020,
    "LocalizedControlType": "text",
    "Name": "Size 23",
  },
  "Component Tree": {
    "Type": "Microsoft.ReactNative.Composition.ParagraphComponentView",
    "_Props": {
      "TestId": "text-size",
    },
  },
  "Visual Tree": {
    "Comment": "text-size",
    "Offset": "0, 0, 0",
    "Size": "916, 31",
    "Visual Type": "SpriteVisual",
  },
}
`;

exports[`Text Tests Text can have advanced borders 1`] = `
{
  "Automation Tree": {
    "AutomationId": "advanced-borders",
    "ControlType": 50026,
    "LocalizedControlType": "group",
    "Name": "Advanced Border Example",
    "__Children": [
      {
        "AutomationId": "",
        "ControlType": 50020,
        "LocalizedControlType": "text",
        "Name": "This text has customized borders.",
      },
      {
        "AutomationId": "",
        "ControlType": 50020,
        "LocalizedControlType": "text",
        "Name": "This text has customized borders.",
      },
      {
        "AutomationId": "",
        "ControlType": 50020,
        "LocalizedControlType": "text",
        "Name": "This text has customized borders.",
      },
    ],
  },
  "Component Tree": {
    "Type": "Microsoft.ReactNative.Composition.ViewComponentView",
    "_Props": {
      "AccessibilityLabel": "Advanced Border Example",
      "TestId": "advanced-borders",
    },
    "__Children": [
      {
        "Type": "Microsoft.ReactNative.Composition.ParagraphComponentView",
        "_Props": {},
      },
      {
        "Type": "Microsoft.ReactNative.Composition.ParagraphComponentView",
        "_Props": {},
      },
      {
        "Type": "Microsoft.ReactNative.Composition.ParagraphComponentView",
        "_Props": {},
      },
    ],
  },
  "Visual Tree": {
    "Comment": "advanced-borders",
    "Offset": "0, 0, 0",
    "Size": "916, 98",
    "Visual Type": "SpriteVisual",
    "__Children": [
      {
        "Offset": "0, 0, 0",
        "Size": "916, 40",
        "Visual Type": "SpriteVisual",
        "__Children": [
          {
            "Offset": "0, 0, 0",
            "Size": "916, 40",
            "Visual Type": "SpriteVisual",
            "__Children": [
              {
                "Brush": {
                  "Brush Type": "ColorBrush",
                  "Color": "rgba(255, 0, 0, 255)",
                },
                "Offset": "0, 0, 0",
                "Size": "27, 22",
                "Visual Type": "SpriteVisual",
              },
              {
                "Brush": {
                  "Brush Type": "ColorBrush",
                  "Color": "rgba(255, 0, 0, 255)",
                },
                "Offset": "27, 0, 0",
                "Size": "874, 15",
                "Visual Type": "SpriteVisual",
              },
              {
                "Brush": {
                  "Brush Type": "ColorBrush",
                  "Color": "rgba(255, 0, 0, 255)",
                },
                "Offset": "-15, 0, 0",
                "Size": "15, 20",
                "Visual Type": "SpriteVisual",
              },
              {
                "Brush": {
                  "Brush Type": "ColorBrush",
                  "Color": "rgba(255, 0, 0, 255)",
                },
                "Offset": "-10, 20, 0",
                "Size": "10, 14",
                "Visual Type": "SpriteVisual",
              },
              {
                "Brush": {
                  "Brush Type": "ColorBrush",
                  "Color": "rgba(255, 0, 0, 255)",
                },
                "Offset": "-11, -6, 0",
                "Size": "11, 6",
                "Visual Type": "SpriteVisual",
              },
              {
                "Brush": {
                  "Brush Type": "ColorBrush",
                  "Color": "rgba(255, 0, 0, 255)",
                },
                "Offset": "23, -5, 0",
                "Size": "882, 5",
                "Visual Type": "SpriteVisual",
              },
              {
                "Brush": {
                  "Brush Type": "ColorBrush",
                  "Color": "rgba(255, 0, 0, 255)",
                },
                "Offset": "0, -8, 0",
                "Size": "23, 8",
                "Visual Type": "SpriteVisual",
              },
              {
                "Brush": {
                  "Brush Type": "ColorBrush",
                  "Color": "rgba(255, 0, 0, 255)",
                },
                "Offset": "0, 22, 0",
                "Size": "20, 10",
                "Visual Type": "SpriteVisual",
              },
            ],
          },
          {
            "Offset": "0, 0, 0",
            "Size": "0, 0",
            "Visual Type": "SpriteVisual",
          },
        ],
      },
      {
        "Offset": "0, 38, 0",
        "Size": "916, 39",
        "Visual Type": "SpriteVisual",
        "__Children": [
          {
            "Offset": "0, 0, 0",
            "Size": "916, 39",
            "Visual Type": "SpriteVisual",
            "__Children": [
              {
                "Brush": {
                  "Brush Type": "ColorBrush",
                  "Color": "rgba(0, 0, 255, 255)",
                },
                "Offset": "0, 0, 0",
                "Size": "27, 22",
                "Visual Type": "SpriteVisual",
              },
              {
                "Brush": {
                  "Brush Type": "ColorBrush",
                  "Color": "rgba(0, 0, 255, 255)",
                },
                "Offset": "27, 0, 0",
                "Size": "874, 15",
                "Visual Type": "SpriteVisual",
              },
              {
                "Brush": {
                  "Brush Type": "ColorBrush",
                  "Color": "rgba(0, 0, 255, 255)",
                },
                "Offset": "-15, 0, 0",
                "Size": "15, 20",
                "Visual Type": "SpriteVisual",
              },
              {
                "Brush": {
                  "Brush Type": "ColorBrush",
                  "Color": "rgba(0, 0, 255, 255)",
                },
                "Offset": "-10, 20, 0",
                "Size": "10, 13",
                "Visual Type": "SpriteVisual",
              },
              {
                "Brush": {
                  "Brush Type": "ColorBrush",
                  "Color": "rgba(0, 0, 255, 255)",
                },
                "Offset": "-11, -6, 0",
                "Size": "11, 6",
                "Visual Type": "SpriteVisual",
              },
              {
                "Brush": {
                  "Brush Type": "ColorBrush",
                  "Color": "rgba(0, 0, 255, 255)",
                },
                "Offset": "23, -5, 0",
                "Size": "882, 5",
                "Visual Type": "SpriteVisual",
              },
              {
                "Brush": {
                  "Brush Type": "ColorBrush",
                  "Color": "rgba(0, 0, 255, 255)",
                },
                "Offset": "0, -8, 0",
                "Size": "23, 8",
                "Visual Type": "SpriteVisual",
              },
              {
                "Brush": {
                  "Brush Type": "ColorBrush",
                  "Color": "rgba(0, 0, 255, 255)",
                },
                "Offset": "0, 22, 0",
                "Size": "20, 9",
                "Visual Type": "SpriteVisual",
              },
            ],
          },
          {
            "Offset": "0, 0, 0",
            "Size": "0, 0",
            "Visual Type": "SpriteVisual",
          },
        ],
      },
      {
        "Offset": "0, 77, 0",
        "Size": "916, 22",
        "Visual Type": "SpriteVisual",
        "__Children": [
          {
            "Offset": "0, 0, 0",
            "Size": "916, 22",
            "Visual Type": "SpriteVisual",
            "__Children": [
              {
                "Brush": {
                  "Brush Type": "ColorBrush",
                  "Color": "rgba(0, 128, 0, 255)",
                },
                "Offset": "0, 0, 0",
                "Size": "4, 4",
                "Visual Type": "SpriteVisual",
              },
              {
                "Brush": {
                  "Brush Type": "ColorBrush",
                  "Color": "rgba(0, 128, 0, 255)",
                },
                "Offset": "4, 0, 0",
                "Size": "908, 1",
                "Visual Type": "SpriteVisual",
              },
              {
                "Brush": {
                  "Brush Type": "ColorBrush",
                  "Color": "rgba(0, 128, 0, 255)",
                },
                "Offset": "-4, 0, 0",
                "Size": "4, 4",
                "Visual Type": "SpriteVisual",
              },
              {
                "Brush": {
                  "Brush Type": "ColorBrush",
                  "Color": "rgba(0, 128, 0, 255)",
                },
                "Offset": "-1, 4, 0",
                "Size": "1, 14",
                "Visual Type": "SpriteVisual",
              },
              {
                "Brush": {
                  "Brush Type": "ColorBrush",
                  "Color": "rgba(0, 128, 0, 255)",
                },
                "Offset": "-4, -4, 0",
                "Size": "4, 4",
                "Visual Type": "SpriteVisual",
              },
              {
                "Brush": {
                  "Brush Type": "ColorBrush",
                  "Color": "rgba(0, 128, 0, 255)",
                },
                "Offset": "4, -1, 0",
                "Size": "908, 1",
                "Visual Type": "SpriteVisual",
              },
              {
                "Brush": {
                  "Brush Type": "ColorBrush",
                  "Color": "rgba(0, 128, 0, 255)",
                },
                "Offset": "0, -4, 0",
                "Size": "4, 4",
                "Visual Type": "SpriteVisual",
              },
              {
                "Brush": {
                  "Brush Type": "ColorBrush",
                  "Color": "rgba(0, 128, 0, 255)",
                },
                "Offset": "0, 4, 0",
                "Size": "1, 14",
                "Visual Type": "SpriteVisual",
              },
            ],
          },
          {
            "Offset": "0, 0, 0",
            "Size": "0, 0",
            "Visual Type": "SpriteVisual",
          },
        ],
      },
    ],
  },
}
`;

exports[`Text Tests Text can have an outer color 1`] = `
{
  "Automation Tree": {
    "AutomationId": "text-outer-color",
    "ControlType": 50020,
    "LocalizedControlType": "text",
    "Name": "(Normal text,(R)red(G)green(B)blue(C)cyan(M)magenta(Y)yellow(K)black(and bold(and tiny bold italic blue(and tiny normal blue))))",
  },
  "Component Tree": {
    "Type": "Microsoft.ReactNative.Composition.ParagraphComponentView",
    "_Props": {
      "TestId": "text-outer-color",
    },
  },
  "Visual Tree": {
    "Comment": "text-outer-color",
    "Offset": "0, 0, 0",
    "Size": "916, 20",
    "Visual Type": "SpriteVisual",
  },
}
`;

exports[`Text Tests Text can have borders 1`] = `
{
  "Automation Tree": {
    "AutomationId": "text-border",
    "ControlType": 50026,
    "LocalizedControlType": "group",
    "Name": "Border Example",
    "__Children": [
      {
        "AutomationId": "",
        "ControlType": 50020,
        "LocalizedControlType": "text",
        "Name": "Sample bordered text with default styling.",
      },
      {
        "AutomationId": "",
        "ControlType": 50020,
        "LocalizedControlType": "text",
        "Name": "Some more bordered text + a tad of CSS.
1st nested - border specifcied but ignored.
2nd Inside text!",
      },
      {
        "AutomationId": "",
        "ControlType": 50020,
        "LocalizedControlType": "text",
        "Name": "This text is outlined and laid out within the normal text run, so will wrap etc as normal text.",
      },
    ],
  },
  "Component Tree": {
    "Type": "Microsoft.ReactNative.Composition.ViewComponentView",
    "_Props": {
      "AccessibilityLabel": "Border Example",
      "TestId": "text-border",
    },
    "__Children": [
      {
        "Type": "Microsoft.ReactNative.Composition.ParagraphComponentView",
        "_Props": {},
      },
      {
        "Type": "Microsoft.ReactNative.Composition.ParagraphComponentView",
        "_Props": {},
      },
      {
        "Type": "Microsoft.ReactNative.Composition.ParagraphComponentView",
        "_Props": {},
      },
    ],
  },
  "Visual Tree": {
    "Comment": "text-border",
    "Offset": "0, 0, 0",
    "Size": "916, 385",
    "Visual Type": "SpriteVisual",
    "__Children": [
      {
        "Offset": "0, 0, 0",
        "Size": "400, 29",
        "Visual Type": "SpriteVisual",
        "__Children": [
          {
            "Offset": "0, 0, 0",
            "Size": "400, 29",
            "Visual Type": "SpriteVisual",
            "__Children": [
              {
                "Offset": "0, 0, 0",
                "Size": "2, 2",
                "Visual Type": "SpriteVisual",
              },
              {
                "Offset": "2, 0, 0",
                "Size": "-4, 2",
                "Visual Type": "SpriteVisual",
              },
              {
                "Offset": "-2, 0, 0",
                "Size": "2, 2",
                "Visual Type": "SpriteVisual",
              },
              {
                "Offset": "-2, 2, 0",
                "Size": "2, -4",
                "Visual Type": "SpriteVisual",
              },
              {
                "Offset": "-2, -2, 0",
                "Size": "2, 2",
                "Visual Type": "SpriteVisual",
              },
              {
                "Offset": "2, -2, 0",
                "Size": "-4, 2",
                "Visual Type": "SpriteVisual",
              },
              {
                "Offset": "0, -2, 0",
                "Size": "2, 2",
                "Visual Type": "SpriteVisual",
              },
              {
                "Offset": "0, 2, 0",
                "Size": "2, -4",
                "Visual Type": "SpriteVisual",
              },
            ],
          },
          {
            "Offset": "0, 0, 0",
            "Size": "0, 0",
            "Visual Type": "SpriteVisual",
          },
        ],
      },
      {
        "Offset": "100, 127, 0",
        "Size": "716, 139",
        "Visual Type": "SpriteVisual",
        "__Children": [
          {
            "Offset": "0, 0, 0",
            "Size": "716, 139",
            "Visual Type": "SpriteVisual",
            "__Children": [
              {
                "Offset": "0, 0, 0",
                "Size": "3, 3",
                "Visual Type": "SpriteVisual",
              },
              {
                "Offset": "3, 0, 0",
                "Size": "-6, 3",
                "Visual Type": "SpriteVisual",
              },
              {
                "Offset": "-3, 0, 0",
                "Size": "3, 3",
                "Visual Type": "SpriteVisual",
              },
              {
                "Offset": "-3, 3, 0",
                "Size": "3, -6",
                "Visual Type": "SpriteVisual",
              },
              {
                "Offset": "-3, -3, 0",
                "Size": "3, 3",
                "Visual Type": "SpriteVisual",
              },
              {
                "Offset": "3, -3, 0",
                "Size": "-6, 3",
                "Visual Type": "SpriteVisual",
              },
              {
                "Offset": "0, -3, 0",
                "Size": "3, 3",
                "Visual Type": "SpriteVisual",
              },
              {
                "Offset": "0, 3, 0",
                "Size": "3, -6",
                "Visual Type": "SpriteVisual",
              },
            ],
          },
          {
            "Offset": "0, 0, 0",
            "Size": "0, 0",
            "Visual Type": "SpriteVisual",
          },
        ],
      },
      {
        "Offset": "0, 365, 0",
        "Size": "916, 19",
        "Visual Type": "SpriteVisual",
        "__Children": [
          {
            "Offset": "0, 0, 0",
            "Size": "916, 19",
            "Visual Type": "SpriteVisual",
          },
          {
            "Offset": "0, 0, 0",
            "Size": "0, 0",
            "Visual Type": "SpriteVisual",
          },
        ],
      },
    ],
  },
}
`;

exports[`Text Tests Text can have decoration lines: Solid Line Through 1`] = `
{
  "Automation Tree": {
    "AutomationId": "text-decoration-solid-linethru",
    "ControlType": 50020,
    "LocalizedControlType": "text",
    "Name": "Solid line-through",
  },
  "Component Tree": {
    "Type": "Microsoft.ReactNative.Composition.ParagraphComponentView",
    "_Props": {
      "TestId": "text-decoration-solid-linethru",
    },
  },
  "Visual Tree": {
    "Comment": "text-decoration-solid-linethru",
    "Offset": "0, 0, 0",
    "Size": "916, 19",
    "Visual Type": "SpriteVisual",
  },
}
`;

exports[`Text Tests Text can have decoration lines: Underline 1`] = `
{
  "Automation Tree": {
    "AutomationId": "text-decoration-underline",
    "ControlType": 50020,
    "LocalizedControlType": "text",
    "Name": "Solid underline",
  },
  "Component Tree": {
    "Type": "Microsoft.ReactNative.Composition.ParagraphComponentView",
    "_Props": {
      "TestId": "text-decoration-underline",
    },
  },
  "Visual Tree": {
    "Comment": "text-decoration-underline",
    "Offset": "0, 0, 0",
    "Size": "916, 20",
    "Visual Type": "SpriteVisual",
  },
}
`;

exports[`Text Tests Text can have shadows 1`] = `
{
  "Automation Tree": {
    "AutomationId": "text-shadow",
    "ControlType": 50020,
    "LocalizedControlType": "text",
    "Name": "Demo text shadow",
  },
  "Component Tree": {
    "Type": "Microsoft.ReactNative.Composition.ParagraphComponentView",
    "_Props": {
      "TestId": "text-shadow",
    },
  },
  "Visual Tree": {
    "Comment": "text-shadow",
    "Offset": "0, 0, 0",
    "Size": "916, 27",
    "Visual Type": "SpriteVisual",
  },
}
`;

exports[`Text Tests Text can wrap 1`] = `
{
  "Automation Tree": {
    "AutomationId": "text-wrap",
    "ControlType": 50020,
    "LocalizedControlType": "text",
    "Name": "The text should wrap if it goes on multiple lines. See, this is going to the next line.",
  },
  "Component Tree": {
    "Type": "Microsoft.ReactNative.Composition.ParagraphComponentView",
    "_Props": {
      "TestId": "text-wrap",
    },
  },
  "Visual Tree": {
    "Comment": "text-wrap",
    "Offset": "0, 0, 0",
    "Size": "300, 38",
    "Visual Type": "SpriteVisual",
  },
}
`;
