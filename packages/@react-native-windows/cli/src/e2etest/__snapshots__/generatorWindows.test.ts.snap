// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`C#  Application: App.xaml 1`] = `
"﻿<react:ReactApplication
    x:Class=\\"SnapshotApp.App\\"
    xmlns=\\"http://schemas.microsoft.com/winfx/2006/xaml/presentation\\"
    xmlns:x=\\"http://schemas.microsoft.com/winfx/2006/xaml\\"
    xmlns:local=\\"using:SnapshotApp\\"
    xmlns:react=\\"using:Microsoft.ReactNative\\">
    <Application.Resources>
        <XamlControlsResources xmlns=\\"using:Microsoft.UI.Xaml.Controls\\" />
    </Application.Resources>
</react:ReactApplication>
"
`;

exports[`C#  Application: App.xaml.cs 1`] = `
"using Microsoft.ReactNative;
#if USE_WINUI3
using Microsoft.UI.Xaml;
using Microsoft.UI.Xaml.Controls;
#else
using Windows.ApplicationModel.Activation;
using Windows.UI.Xaml;
using Windows.UI.Xaml.Controls;
#endif

namespace SnapshotApp
{
    sealed partial class App : ReactApplication
    {
        public App()
        {
#if BUNDLE
            JavaScriptBundleFile = \\"index.windows\\";
            InstanceSettings.UseWebDebugger = false;
            InstanceSettings.UseFastRefresh = false;
#else
            JavaScriptBundleFile = \\"index\\";
            InstanceSettings.UseWebDebugger = true;
            InstanceSettings.UseFastRefresh = true;
#endif

#if DEBUG
            InstanceSettings.UseDeveloperSupport = true;
#else
            InstanceSettings.UseDeveloperSupport = false;
#endif

            Microsoft.ReactNative.Managed.AutolinkedNativeModules.RegisterAutolinkedNativeModulePackages(PackageProviders); // Includes any autolinked modules

            PackageProviders.Add(new ReactPackageProvider());

            InitializeComponent();
        }

        /// <summary>
        /// Invoked when the application is launched normally by the end user.  Other entry points
        /// will be used such as when the application is launched to open a specific file.
        /// </summary>
        /// <param name=\\"e\\">Details about the launch request and process.</param>
        protected override void OnLaunched(LaunchActivatedEventArgs e)
        {
            base.OnLaunched(e);
            var frame = (Frame)Window.Current.Content;
            frame.Navigate(typeof(MainPage), e.Arguments);
        }

        /// <summary>
        /// Invoked when the application is activated by some means other than normal launching.
        /// </summary>
        protected override void OnActivated(Windows.ApplicationModel.Activation.IActivatedEventArgs e)
        {
            var preActivationContent = Window.Current.Content;
            base.OnActivated(e);
            if (preActivationContent == null && Window.Current != null)
            {
                // Display the initial content
                var frame = (Frame)Window.Current.Content;
                frame.Navigate(typeof(MainPage), null);
            }
        }
    }
}
"
`;

exports[`C#  Application: AssemblyInfo.cs 1`] = `
"﻿using System.Reflection;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;

// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
[assembly: AssemblyTitle(\\"SnapshotApp\\")]
[assembly: AssemblyDescription(\\"\\")]
[assembly: AssemblyConfiguration(\\"\\")]
[assembly: AssemblyCompany(\\"\\")]
[assembly: AssemblyProduct(\\"SnapshotApp\\")]
[assembly: AssemblyCopyright(\\"Copyright ©  2019\\")]
[assembly: AssemblyTrademark(\\"\\")]
[assembly: AssemblyCulture(\\"\\")]

// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Build and Revision Numbers 
// by using the '*' as shown below:
// [assembly: AssemblyVersion(\\"1.0.*\\")]
[assembly: AssemblyVersion(\\"1.0.0.0\\")]
[assembly: AssemblyFileVersion(\\"1.0.0.0\\")]
[assembly: ComVisible(false)]"
`;

exports[`C#  Application: AutolinkedNativeModules.g.cs 1`] = `
"﻿// AutolinkedNativeModules.g.cs contents generated by \\"react-native autolink-windows\\"

using System.Collections.Generic;

namespace Microsoft.ReactNative.Managed
{
    internal static class AutolinkedNativeModules
    {
        internal static void RegisterAutolinkedNativeModulePackages(IList<IReactPackageProvider> packageProviders)
        { 
        }
    }
}
"
`;

exports[`C#  Application: AutolinkedNativeModules.g.props 1`] = `
"<?xml version=\\"1.0\\" encoding=\\"utf-8\\"?>
<Project xmlns=\\"http://schemas.microsoft.com/developer/msbuild/2003\\">
  <!-- AutolinkedNativeModules.g.props contents generated by \\"react-native autolink-windows\\" -->
  <PropertyGroup>
  </PropertyGroup>
</Project>
"
`;

exports[`C#  Application: AutolinkedNativeModules.g.targets 1`] = `
"<?xml version=\\"1.0\\" encoding=\\"utf-8\\"?>
<Project xmlns=\\"http://schemas.microsoft.com/developer/msbuild/2003\\">
  <!-- AutolinkedNativeModules.g.targets contents generated by \\"react-native autolink-windows\\" -->
  <ItemGroup>
  </ItemGroup>
</Project>
"
`;

exports[`C#  Application: Default.rd.xml 1`] = `
"<!--
    This file contains Runtime Directives used by .NET Native. The defaults here are suitable for most
    developers. However, you can modify these parameters to modify the behavior of the .NET Native
    optimizer.

    Runtime Directives are documented at https://go.microsoft.com/fwlink/?LinkID=391919

    To fully enable reflection for App1.MyClass and all of its public/private members
    <Type Name=\\"App1.MyClass\\" Dynamic=\\"Required All\\"/>

    To enable dynamic creation of the specific instantiation of AppClass<T> over System.Int32
    <TypeInstantiation Name=\\"App1.AppClass\\" Arguments=\\"System.Int32\\" Activate=\\"Required Public\\" />

    Using the Namespace directive to apply reflection policy to all the types in a particular namespace
    <Namespace Name=\\"DataClasses.ViewModels\\" Serialize=\\"All\\" />
-->

<Directives xmlns=\\"http://schemas.microsoft.com/netfx/2013/01/metadata\\">
  <Application>
    <!--
      An Assembly element with Name=\\"*Application*\\" applies to all assemblies in
      the application package. The asterisks are not wildcards.
    -->
    <Assembly Name=\\"*Application*\\" Dynamic=\\"Required All\\" />
    
    
    <!-- Add your application specific runtime directives here. -->
    <Namespace Name=\\"Microsoft.ReactNative\\" Dynamic=\\"Required All\\" MarshalObject=\\"Required All\\" />
    <Namespace Name=\\"Microsoft.ReactNative.Managed\\" Dynamic=\\"Required All\\" MarshalObject=\\"Required All\\" />

  </Application>
</Directives>"
`;

exports[`C#  Application: ExperimentalFeatures.props 1`] = `
"<?xml version=\\"1.0\\" encoding=\\"utf-8\\"?>
<Project xmlns=\\"http://schemas.microsoft.com/developer/msbuild/2003\\">

  <!--
    This file contains some important settings that will apply globally for
    your app and *all* native modules your app consumes. These values were
    set when you created the app project, and in some cases cannot be
    simply changed here without recreating a new project.
  -->

  <PropertyGroup Label=\\"Microsoft.ReactNative Experimental Features\\">
    <!--
      Enables default usage of Hermes.
      
      See https://microsoft.github.io/react-native-windows/docs/hermes
    -->
    <UseHermes>false</UseHermes>

    <!--
      Changes compilation to assume use of WinUI 3 instead of System XAML.
      Requires creation of new project.

      See https://microsoft.github.io/react-native-windows/docs/winui3
    -->
    <UseWinUI3>false</UseWinUI3>

    <!--
      Changes compilation to assume use of Microsoft.ReactNative NuGet packages
      instead of building the framework from source.
      Requires creation of new project.

      See https://microsoft.github.io/react-native-windows/docs/nuget
    -->
    <UseExperimentalNuget>false</UseExperimentalNuget>
  
  </PropertyGroup>

</Project>
"
`;

exports[`C#  Application: MainPage.xaml 1`] = `
"<Page
    x:Class=\\"SnapshotApp.MainPage\\"
    xmlns=\\"http://schemas.microsoft.com/winfx/2006/xaml/presentation\\"
    xmlns:x=\\"http://schemas.microsoft.com/winfx/2006/xaml\\"
    xmlns:local=\\"using:SnapshotApp\\"
    xmlns:react=\\"using:Microsoft.ReactNative\\"
    xmlns:d=\\"http://schemas.microsoft.com/expression/blend/2008\\"
    xmlns:mc=\\"http://schemas.openxmlformats.org/markup-compatibility/2006\\"
    mc:Ignorable=\\"d\\"
    Background=\\"{ThemeResource ApplicationPageBackgroundThemeBrush}\\">
    <react:ReactRootView 
        x:Name=\\"reactRootView\\"
        ComponentName=\\"SnapshotApp\\"
        Background=\\"{ThemeResource ApplicationPageBackgroundThemeBrush}\\"
        MinHeight=\\"400\\"/>
</Page>
"
`;

exports[`C#  Application: MainPage.xaml.cs 1`] = `
"using Microsoft.ReactNative;
using System;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System.Runtime.InteropServices.WindowsRuntime;
using Windows.Foundation;
using Windows.Foundation.Collections;
#if !USE_WINUI3
using Windows.UI.Xaml;
using Windows.UI.Xaml.Controls;
using Windows.UI.Xaml.Controls.Primitives;
using Windows.UI.Xaml.Data;
using Windows.UI.Xaml.Input;
using Windows.UI.Xaml.Media;
using Windows.UI.Xaml.Navigation;
#else
using Microsoft.UI.Xaml;
using Microsoft.UI.Xaml.Controls;
using Microsoft.UI.Xaml.Controls.Primitives;
using Microsoft.UI.Xaml.Data;
using Microsoft.UI.Xaml.Input;
using Microsoft.UI.Xaml.Media;
using Microsoft.UI.Xaml.Navigation;
#endif

// The Blank Page item template is documented at https://go.microsoft.com/fwlink/?LinkId=234238

namespace SnapshotApp
{
    /// <summary>
    /// An empty page that can be used on its own or navigated to within a Frame.
    /// </summary>
    public sealed partial class MainPage : Page
    {
        public MainPage()
        {
            this.InitializeComponent();
            var app = Application.Current as App;
            reactRootView.ReactNativeHost = app.Host;
        }
    }
}
"
`;

exports[`C#  Application: NuGet.Config 1`] = `
"<?xml version=\\"1.0\\" encoding=\\"utf-8\\"?>
<configuration>
  <config>
    <add key=\\"repositoryPath\\" value=\\"packages\\" />
  </config>
  <packageSources>
    <clear />
    <add key=\\"react-native\\" value=\\"https://pkgs.dev.azure.com/ms/react-native/_packaging/react-native-public/nuget/v3/index.json\\" />
    <add key=\\"Nuget.org\\" value=\\"https://api.nuget.org/v3/index.json\\" />
  </packageSources>
  <disabledPackageSources>
    <clear />
  </disabledPackageSources>  
</configuration>
"
`;

exports[`C#  Application: Package.appxmanifest 1`] = `
"﻿<?xml version=\\"1.0\\" encoding=\\"utf-8\\"?>

<Package
  xmlns=\\"http://schemas.microsoft.com/appx/manifest/foundation/windows10\\"
  xmlns:mp=\\"http://schemas.microsoft.com/appx/2014/phone/manifest\\"
  xmlns:uap=\\"http://schemas.microsoft.com/appx/manifest/uap/windows10\\"
  IgnorableNamespaces=\\"uap mp\\">

  <Identity
    Name=\\"05fb4e67-6621-4a00-932c-011eaf0d6eb3\\"
    Publisher=\\"CN=nickg\\"
    Version=\\"1.0.0.0\\" />

  <mp:PhoneIdentity PhoneProductId=\\"05fb4e67-6621-4a00-932c-011eaf0d6eb3\\" PhonePublisherId=\\"00000000-0000-0000-0000-000000000000\\"/>

  <Properties>
    <DisplayName>SnapshotApp</DisplayName>
    <PublisherDisplayName>nickg</PublisherDisplayName>
    <Logo>Assets\\\\StoreLogo.png</Logo>
  </Properties>

  <Dependencies>
    <TargetDeviceFamily Name=\\"Windows.Universal\\" MinVersion=\\"10.0.0.0\\" MaxVersionTested=\\"10.0.0.0\\" />
  </Dependencies>

  <Resources>
    <Resource Language=\\"x-generate\\"/>
  </Resources>

  <Applications>
    <Application
      Id=\\"App\\"
      Executable=\\"$targetnametoken$.exe\\"
      EntryPoint=\\"SnapshotApp.App\\">
      <uap:VisualElements
        DisplayName=\\"SnapshotApp\\"
        Square150x150Logo=\\"Assets\\\\Square150x150Logo.png\\"
        Square44x44Logo=\\"Assets\\\\Square44x44Logo.png\\"
        Description=\\"SnapshotApp\\"
        BackgroundColor=\\"transparent\\">
        <uap:DefaultTile Wide310x150Logo=\\"Assets\\\\Wide310x150Logo.png\\"/>
        <uap:SplashScreen Image=\\"Assets\\\\SplashScreen.png\\" />
      </uap:VisualElements>
    </Application>
  </Applications>

  <Capabilities>
    <Capability Name=\\"internetClient\\" />
  </Capabilities>
</Package>"
`;

exports[`C#  Application: ReactPackageProvider.cs 1`] = `
"using Microsoft.ReactNative;

namespace SnapshotApp
{
    public partial class ReactPackageProvider : IReactPackageProvider
    {
        public void CreatePackage(IReactPackageBuilder packageBuilder)
        {
            CreatePackageImplementation(packageBuilder);
        }

        /// <summary>
        /// This method is implemented by the C# code generator
        /// </summary>
        partial void CreatePackageImplementation(IReactPackageBuilder packageBuilder);
    }
}
"
`;

exports[`C#  Application: SnapshotApp.csproj 1`] = `
"﻿<?xml version=\\"1.0\\" encoding=\\"utf-8\\"?>
<Project ToolsVersion=\\"Current\\" DefaultTargets=\\"Build\\" xmlns=\\"http://schemas.microsoft.com/developer/msbuild/2003\\">
  <Import Project=\\"$(MSBuildExtensionsPath)\\\\$(MSBuildToolsVersion)\\\\Microsoft.Common.props\\" Condition=\\"Exists('$(MSBuildExtensionsPath)\\\\$(MSBuildToolsVersion)\\\\Microsoft.Common.props')\\" />
  <Import Project=\\"$(SolutionDir)\\\\ExperimentalFeatures.props\\" Condition=\\"Exists('$(SolutionDir)\\\\ExperimentalFeatures.props')\\" />
  <PropertyGroup Label=\\"ReactNativeWindowsProps\\">
    <ReactNativeWindowsDir Condition=\\"'$(ReactNativeWindowsDir)' == ''\\">$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), 'node_modules\\\\react-native-windows\\\\package.json'))\\\\node_modules\\\\react-native-windows\\\\</ReactNativeWindowsDir>
  </PropertyGroup>
  <PropertyGroup>
    <Configuration Condition=\\" '$(Configuration)' == '' \\">Debug</Configuration>
    <Platform Condition=\\" '$(Platform)' == '' \\">x86</Platform>
    <ProjectGuid>{B6C13706-9153-438B-8DF0-31B094189DF8}</ProjectGuid>
    <OutputType>AppContainerExe</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>SnapshotApp</RootNamespace>
    <AssemblyName>SnapshotApp</AssemblyName>
    <DefaultLanguage>en-US</DefaultLanguage>
    <TargetPlatformIdentifier>UAP</TargetPlatformIdentifier>
    <TargetPlatformVersion Condition=\\" '$(TargetPlatformVersion)' == '' \\">10.0.19041.0</TargetPlatformVersion>
    <TargetPlatformMinVersion>10.0.16299.0</TargetPlatformMinVersion>
    <MinimumVisualStudioVersion>16.0</MinimumVisualStudioVersion>
    <FileAlignment>512</FileAlignment>
    <ProjectTypeGuids>{A5A43C5B-DE2A-4C0C-9213-0A381AF9435A};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <WindowsXamlEnableOverview>true</WindowsXamlEnableOverview>
    <AppxGeneratePrisForPortableLibrariesEnabled>false</AppxGeneratePrisForPortableLibrariesEnabled>
    <LangVersion>7.3</LangVersion>
  </PropertyGroup>
  <PropertyGroup Condition=\\"'$(Configuration)|$(Platform)' == 'Debug|x86'\\">
    <DebugSymbols>true</DebugSymbols>
    <OutputPath>bin\\\\x86\\\\Debug\\\\</OutputPath>
    <DefineConstants>DEBUG;TRACE;NETFX_CORE;WINDOWS_UWP</DefineConstants>
    <NoWarn>;2008</NoWarn>
    <DebugType>full</DebugType>
    <PlatformTarget>x86</PlatformTarget>
    <UseVSHostingProcess>false</UseVSHostingProcess>
    <ErrorReport>prompt</ErrorReport>
    <Prefer32Bit>true</Prefer32Bit>
  </PropertyGroup>
  <PropertyGroup Condition=\\"'$(Configuration)|$(Platform)' == 'Release|x86'\\">
    <OutputPath>bin\\\\x86\\\\Release\\\\</OutputPath>
    <DefineConstants>TRACE;NETFX_CORE;WINDOWS_UWP</DefineConstants>
    <Optimize>true</Optimize>
    <NoWarn>;2008</NoWarn>
    <DebugType>pdbonly</DebugType>
    <PlatformTarget>x86</PlatformTarget>
    <UseVSHostingProcess>false</UseVSHostingProcess>
    <ErrorReport>prompt</ErrorReport>
    <Prefer32Bit>true</Prefer32Bit>
    <UseDotNetNativeToolchain>true</UseDotNetNativeToolchain>
  </PropertyGroup>
  <PropertyGroup Condition=\\"'$(Configuration)|$(Platform)' == 'Debug|ARM64'\\">
    <DebugSymbols>true</DebugSymbols>
    <OutputPath>bin\\\\ARM64\\\\Debug\\\\</OutputPath>
    <DefineConstants>DEBUG;TRACE;NETFX_CORE;WINDOWS_UWP</DefineConstants>
    <NoWarn>;2008</NoWarn>
    <DebugType>full</DebugType>
    <PlatformTarget>ARM64</PlatformTarget>
    <UseVSHostingProcess>false</UseVSHostingProcess>
    <ErrorReport>prompt</ErrorReport>
    <Prefer32Bit>true</Prefer32Bit>
  </PropertyGroup>
  <PropertyGroup Condition=\\"'$(Configuration)|$(Platform)' == 'Release|ARM64'\\">
    <OutputPath>bin\\\\ARM64\\\\Release\\\\</OutputPath>
    <DefineConstants>TRACE;NETFX_CORE;WINDOWS_UWP</DefineConstants>
    <Optimize>true</Optimize>
    <NoWarn>;2008</NoWarn>
    <DebugType>pdbonly</DebugType>
    <PlatformTarget>ARM64</PlatformTarget>
    <UseVSHostingProcess>false</UseVSHostingProcess>
    <ErrorReport>prompt</ErrorReport>
    <Prefer32Bit>true</Prefer32Bit>
    <UseDotNetNativeToolchain>true</UseDotNetNativeToolchain>
  </PropertyGroup>
  <PropertyGroup Condition=\\"'$(Configuration)|$(Platform)' == 'Debug|x64'\\">
    <DebugSymbols>true</DebugSymbols>
    <OutputPath>bin\\\\x64\\\\Debug\\\\</OutputPath>
    <DefineConstants>DEBUG;TRACE;NETFX_CORE;WINDOWS_UWP</DefineConstants>
    <NoWarn>;2008</NoWarn>
    <DebugType>full</DebugType>
    <PlatformTarget>x64</PlatformTarget>
    <UseVSHostingProcess>false</UseVSHostingProcess>
    <ErrorReport>prompt</ErrorReport>
    <Prefer32Bit>true</Prefer32Bit>
  </PropertyGroup>
  <PropertyGroup Condition=\\"'$(Configuration)|$(Platform)' == 'Release|x64'\\">
    <OutputPath>bin\\\\x64\\\\Release\\\\</OutputPath>
    <DefineConstants>TRACE;NETFX_CORE;WINDOWS_UWP</DefineConstants>
    <Optimize>true</Optimize>
    <NoWarn>;2008</NoWarn>
    <DebugType>pdbonly</DebugType>
    <PlatformTarget>x64</PlatformTarget>
    <UseVSHostingProcess>false</UseVSHostingProcess>
    <ErrorReport>prompt</ErrorReport>
    <Prefer32Bit>true</Prefer32Bit>
    <UseDotNetNativeToolchain>true</UseDotNetNativeToolchain>
  </PropertyGroup>
  <PropertyGroup>
    <RestoreProjectStyle>PackageReference</RestoreProjectStyle>
  </PropertyGroup>
  <ItemGroup>
    <Compile Include=\\"App.xaml.cs\\">
      <DependentUpon>App.xaml</DependentUpon>
    </Compile>
    <Compile Include=\\"MainPage.xaml.cs\\">
      <DependentUpon>MainPage.xaml</DependentUpon>
    </Compile>
    <Compile Include=\\"Properties\\\\AssemblyInfo.cs\\" />
    <Compile Include=\\"AutolinkedNativeModules.g.cs\\" />
    <Compile Include=\\"ReactPackageProvider.cs\\" />
  </ItemGroup>
  <ItemGroup>
    <AppxManifest Include=\\"Package.appxmanifest\\">
      <SubType>Designer</SubType>
    </AppxManifest>
  </ItemGroup>
  <ItemGroup>
    <Content Include=\\"Properties\\\\Default.rd.xml\\" />
    <Content Include=\\"Assets\\\\LockScreenLogo.scale-200.png\\" />
    <Content Include=\\"Assets\\\\SplashScreen.scale-200.png\\" />
    <Content Include=\\"Assets\\\\Square150x150Logo.scale-200.png\\" />
    <Content Include=\\"Assets\\\\Square44x44Logo.scale-200.png\\" />
    <Content Include=\\"Assets\\\\Square44x44Logo.targetsize-24_altform-unplated.png\\" />
    <Content Include=\\"Assets\\\\StoreLogo.png\\" />
    <Content Include=\\"Assets\\\\Wide310x150Logo.scale-200.png\\" />
  </ItemGroup>
  <ItemGroup>
    <ApplicationDefinition Include=\\"App.xaml\\">
      <Generator>MSBuild:Compile</Generator>
      <SubType>Designer</SubType>
    </ApplicationDefinition>
    <Page Include=\\"MainPage.xaml\\">
      <Generator>MSBuild:Compile</Generator>
      <SubType>Designer</SubType>
    </Page>
  </ItemGroup>
  <PropertyGroup Condition=\\" '$(VisualStudioVersion)' == '' or '$(VisualStudioVersion)' &lt; '16.0' \\">
    <VisualStudioVersion>16.0</VisualStudioVersion>
  </PropertyGroup>
  <Import Project=\\"$(MSBuildExtensionsPath)\\\\Microsoft\\\\WindowsXaml\\\\v$(VisualStudioVersion)\\\\Microsoft.Windows.UI.Xaml.CSharp.targets\\" />
  <ImportGroup Label=\\"ReactNativeWindowsPropertySheets\\">
    <Import Project=\\"$(ReactNativeWindowsDir)\\\\PropertySheets\\\\External\\\\Microsoft.ReactNative.Uwp.CSharpApp.props\\" Condition=\\"Exists('$(ReactNativeWindowsDir)\\\\PropertySheets\\\\External\\\\Microsoft.ReactNative.Uwp.CSharpApp.props')\\" />
  </ImportGroup>
  <Choose>
    <When Condition=\\"'$(UseWinUI3)'!='true'\\">
      <ItemGroup>
        <PackageReference Include=\\"Microsoft.UI.Xaml\\" >
          <Version>$(WinUI2xVersion)</Version>
        </PackageReference>
      </ItemGroup>
    </When>
    <Otherwise>
      <ItemGroup>
        <PackageReference Include=\\"Microsoft.WinUI\\">
          <Version>$(WinUI3Version)</Version>
        </PackageReference>
      </ItemGroup>
    </Otherwise>
  </Choose>
  <ItemGroup>
    <PackageReference Include=\\"Microsoft.NETCore.UniversalWindowsPlatform\\">
      <Version>6.2.9</Version>
    </PackageReference>
    <PackageReference Include=\\"ReactNative.Hermes.Windows\\">
      <Version>0.9.0-ms.6</Version>
    </PackageReference>
  </ItemGroup>
  <ImportGroup Label=\\"ReactNativeWindowsTargets\\">
    <Import Project=\\"$(ReactNativeWindowsDir)\\\\PropertySheets\\\\External\\\\Microsoft.ReactNative.Uwp.CSharpApp.targets\\" Condition=\\"Exists('$(ReactNativeWindowsDir)\\\\PropertySheets\\\\External\\\\Microsoft.ReactNative.Uwp.CSharpApp.targets')\\" />
  </ImportGroup>
  <Target Name=\\"EnsureReactNativeWindowsTargets\\" BeforeTargets=\\"PrepareForBuild\\">
    <PropertyGroup>
      <ErrorText>This project references targets in your node_modules\\\\react-native-windows folder that are missing. The missing file is {0}.</ErrorText>
    </PropertyGroup>
    <Error Condition=\\"!Exists('$(ReactNativeWindowsDir)\\\\PropertySheets\\\\External\\\\Microsoft.ReactNative.Uwp.CSharpApp.props')\\" Text=\\"$([System.String]::Format('$(ErrorText)', '$(ReactNativeWindowsDir)\\\\PropertySheets\\\\External\\\\Microsoft.ReactNative.Uwp.CSharpApp.props'))\\" />
    <Error Condition=\\"!Exists('$(ReactNativeWindowsDir)\\\\PropertySheets\\\\External\\\\Microsoft.ReactNative.Uwp.CSharpApp.targets')\\" Text=\\"$([System.String]::Format('$(ErrorText)', '$(ReactNativeWindowsDir)\\\\PropertySheets\\\\External\\\\Microsoft.ReactNative.Uwp.CSharpApp.targets'))\\" />
  </Target>
</Project>
"
`;

exports[`C#  Application: SnapshotApp.sln 1`] = `
"﻿
Microsoft Visual Studio Solution File, Format Version 12.00
# Visual Studio Version 16
VisualStudioVersion = 16.0.29215.179
MinimumVisualStudioVersion = 10.0.40219.1
Project(\\"{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}\\") = \\"SnapshotApp\\", \\"SnapshotApp\\\\SnapshotApp.csproj\\", \\"{B6C13706-9153-438B-8DF0-31B094189DF8}\\"
EndProject
Project(\\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\\") = \\"Folly\\", \\"..\\\\node_modules\\\\react-native-windows\\\\Folly\\\\Folly.vcxproj\\", \\"{A990658C-CE31-4BCC-976F-0FC6B1AF693D}\\"
EndProject
Project(\\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\\") = \\"fmt\\", \\"..\\\\node_modules\\\\react-native-windows\\\\fmt\\\\fmt.vcxproj\\", \\"{14B93DC8-FD93-4A6D-81CB-8BC96644501C}\\"
EndProject
Project(\\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\\") = \\"ReactCommon\\", \\"..\\\\node_modules\\\\react-native-windows\\\\ReactCommon\\\\ReactCommon.vcxproj\\", \\"{A9D95A91-4DB7-4F72-BEB6-FE8A5C89BFBD}\\"
	ProjectSection(ProjectDependencies) = postProject
		{A990658C-CE31-4BCC-976F-0FC6B1AF693D} = {A990658C-CE31-4BCC-976F-0FC6B1AF693D}
	EndProjectSection
EndProject
Project(\\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\\") = \\"Chakra\\", \\"..\\\\node_modules\\\\react-native-windows\\\\Chakra\\\\Chakra.vcxitems\\", \\"{C38970C0-5FBF-4D69-90D8-CBAC225AE895}\\"
EndProject
Project(\\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\\") = \\"Microsoft.ReactNative\\", \\"..\\\\node_modules\\\\react-native-windows\\\\Microsoft.ReactNative\\\\Microsoft.ReactNative.vcxproj\\", \\"{F7D32BD0-2749-483E-9A0D-1635EF7E3136}\\"
EndProject
Project(\\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\\") = \\"Microsoft.ReactNative.Cxx\\", \\"..\\\\node_modules\\\\react-native-windows\\\\Microsoft.ReactNative.Cxx\\\\Microsoft.ReactNative.Cxx.vcxitems\\", \\"{DA8B35B3-DA00-4B02-BDE6-6A397B3FD46B}\\"
EndProject
Project(\\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\\") = \\"Common\\", \\"..\\\\node_modules\\\\react-native-windows\\\\Common\\\\Common.vcxproj\\", \\"{FCA38F3C-7C73-4C47-BE4E-32F77FA8538D}\\"
EndProject
Project(\\"{2150E333-8FDC-42A3-9474-1A3956D46DE8}\\") = \\"ReactNative\\", \\"ReactNative\\", \\"{5EA20F54-880A-49F3-99FA-4B3FE54E8AB1}\\"
EndProject
Project(\\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\\") = \\"Microsoft.ReactNative.Shared\\", \\"..\\\\node_modules\\\\react-native-windows\\\\Shared\\\\Shared.vcxitems\\", \\"{2049DBE9-8D13-42C9-AE4B-413AE38FFFD0}\\"
EndProject
Project(\\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\\") = \\"Mso\\", \\"..\\\\node_modules\\\\react-native-windows\\\\Mso\\\\Mso.vcxitems\\", \\"{84E05BFA-CBAF-4F0D-BFB6-4CE85742A57E}\\"
EndProject
Project(\\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\\") = \\"Include\\", \\"..\\\\node_modules\\\\react-native-windows\\\\include\\\\Include.vcxitems\\", \\"{EF074BA1-2D54-4D49-A28E-5E040B47CD2E}\\"
EndProject
Project(\\"{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}\\") = \\"Microsoft.ReactNative.Managed\\", \\"..\\\\node_modules\\\\react-native-windows\\\\Microsoft.ReactNative.Managed\\\\Microsoft.ReactNative.Managed.csproj\\", \\"{F2824844-CE15-4242-9420-308923CD76C3}\\"
EndProject
Project(\\"{9A19103F-16F7-4668-BE54-9A1E7A4F7556}\\") = \\"Microsoft.ReactNative.Managed.CodeGen\\", \\"..\\\\node_modules\\\\react-native-windows\\\\Microsoft.ReactNative.Managed.CodeGen\\\\Microsoft.ReactNative.Managed.CodeGen.csproj\\", \\"{ADED4FBE-887D-4271-AF24-F0823BCE7961}\\"
EndProject
Global
	GlobalSection(SharedMSBuildProjectFiles) = preSolution
		..\\\\node_modules\\\\react-native-windows\\\\Shared\\\\Shared.vcxitems*{2049dbe9-8d13-42c9-ae4b-413ae38fffd0}*SharedItemsImports = 9
		..\\\\node_modules\\\\react-native-windows\\\\Mso\\\\Mso.vcxitems*{84e05bfa-cbaf-4f0d-bfb6-4ce85742a57e}*SharedItemsImports = 9
		..\\\\node_modules\\\\react-native-windows\\\\Chakra\\\\Chakra.vcxitems*{c38970c0-5fbf-4d69-90d8-cbac225ae895}*SharedItemsImports = 9
		..\\\\node_modules\\\\react-native-windows\\\\Microsoft.ReactNative.Cxx\\\\Microsoft.ReactNative.Cxx.vcxitems*{da8b35b3-da00-4b02-bde6-6a397b3fd46b}*SharedItemsImports = 9
		..\\\\node_modules\\\\react-native-windows\\\\include\\\\Include.vcxitems*{ef074ba1-2d54-4d49-a28e-5e040b47cd2e}*SharedItemsImports = 9
		..\\\\node_modules\\\\react-native-windows\\\\Chakra\\\\Chakra.vcxitems*{f7d32bd0-2749-483e-9a0d-1635ef7e3136}*SharedItemsImports = 4
		..\\\\node_modules\\\\react-native-windows\\\\Microsoft.ReactNative.Cxx\\\\Microsoft.ReactNative.Cxx.vcxitems*{f7d32bd0-2749-483e-9a0d-1635ef7e3136}*SharedItemsImports = 4
		..\\\\node_modules\\\\react-native-windows\\\\Mso\\\\Mso.vcxitems*{f7d32bd0-2749-483e-9a0d-1635ef7e3136}*SharedItemsImports = 4
		..\\\\node_modules\\\\react-native-windows\\\\Shared\\\\Shared.vcxitems*{f7d32bd0-2749-483e-9a0d-1635ef7e3136}*SharedItemsImports = 4
	EndGlobalSection
	GlobalSection(SolutionConfigurationPlatforms) = preSolution
		Debug|ARM64 = Debug|ARM64
		Debug|x64 = Debug|x64
		Debug|x86 = Debug|x86
		Release|ARM64 = Release|ARM64
		Release|x64 = Release|x64
		Release|x86 = Release|x86
	EndGlobalSection
	GlobalSection(ProjectConfigurationPlatforms) = postSolution
		{B6C13706-9153-438B-8DF0-31B094189DF8}.Debug|ARM64.ActiveCfg = Debug|ARM64
		{B6C13706-9153-438B-8DF0-31B094189DF8}.Debug|ARM64.Build.0 = Debug|ARM64
		{B6C13706-9153-438B-8DF0-31B094189DF8}.Debug|ARM64.Deploy.0 = Debug|ARM64
		{B6C13706-9153-438B-8DF0-31B094189DF8}.Debug|x64.ActiveCfg = Debug|x64
		{B6C13706-9153-438B-8DF0-31B094189DF8}.Debug|x64.Build.0 = Debug|x64
		{B6C13706-9153-438B-8DF0-31B094189DF8}.Debug|x64.Deploy.0 = Debug|x64
		{B6C13706-9153-438B-8DF0-31B094189DF8}.Debug|x86.ActiveCfg = Debug|x86
		{B6C13706-9153-438B-8DF0-31B094189DF8}.Debug|x86.Build.0 = Debug|x86
		{B6C13706-9153-438B-8DF0-31B094189DF8}.Debug|x86.Deploy.0 = Debug|x86
		{B6C13706-9153-438B-8DF0-31B094189DF8}.Release|ARM64.ActiveCfg = Release|ARM64
		{B6C13706-9153-438B-8DF0-31B094189DF8}.Release|ARM64.Build.0 = Release|ARM64
		{B6C13706-9153-438B-8DF0-31B094189DF8}.Release|ARM64.Deploy.0 = Release|ARM64
		{B6C13706-9153-438B-8DF0-31B094189DF8}.Release|x64.ActiveCfg = Release|x64
		{B6C13706-9153-438B-8DF0-31B094189DF8}.Release|x64.Build.0 = Release|x64
		{B6C13706-9153-438B-8DF0-31B094189DF8}.Release|x64.Deploy.0 = Release|x64
		{B6C13706-9153-438B-8DF0-31B094189DF8}.Release|x86.ActiveCfg = Release|x86
		{B6C13706-9153-438B-8DF0-31B094189DF8}.Release|x86.Build.0 = Release|x86
		{B6C13706-9153-438B-8DF0-31B094189DF8}.Release|x86.Deploy.0 = Release|x86
		{A990658C-CE31-4BCC-976F-0FC6B1AF693D}.Debug|ARM64.ActiveCfg = Debug|ARM64
		{A990658C-CE31-4BCC-976F-0FC6B1AF693D}.Debug|ARM64.Build.0 = Debug|ARM64
		{A990658C-CE31-4BCC-976F-0FC6B1AF693D}.Debug|x64.ActiveCfg = Debug|x64
		{A990658C-CE31-4BCC-976F-0FC6B1AF693D}.Debug|x64.Build.0 = Debug|x64
		{A990658C-CE31-4BCC-976F-0FC6B1AF693D}.Debug|x86.ActiveCfg = Debug|Win32
		{A990658C-CE31-4BCC-976F-0FC6B1AF693D}.Debug|x86.Build.0 = Debug|Win32
		{A990658C-CE31-4BCC-976F-0FC6B1AF693D}.Release|ARM64.ActiveCfg = Release|ARM64
		{A990658C-CE31-4BCC-976F-0FC6B1AF693D}.Release|ARM64.Build.0 = Release|ARM64
		{A990658C-CE31-4BCC-976F-0FC6B1AF693D}.Release|x64.ActiveCfg = Release|x64
		{A990658C-CE31-4BCC-976F-0FC6B1AF693D}.Release|x64.Build.0 = Release|x64
		{A990658C-CE31-4BCC-976F-0FC6B1AF693D}.Release|x86.ActiveCfg = Release|Win32
		{A990658C-CE31-4BCC-976F-0FC6B1AF693D}.Release|x86.Build.0 = Release|Win32
		{A9D95A91-4DB7-4F72-BEB6-FE8A5C89BFBD}.Debug|ARM64.ActiveCfg = Debug|ARM64
		{A9D95A91-4DB7-4F72-BEB6-FE8A5C89BFBD}.Debug|ARM64.Build.0 = Debug|ARM64
		{A9D95A91-4DB7-4F72-BEB6-FE8A5C89BFBD}.Debug|x64.ActiveCfg = Debug|x64
		{A9D95A91-4DB7-4F72-BEB6-FE8A5C89BFBD}.Debug|x64.Build.0 = Debug|x64
		{A9D95A91-4DB7-4F72-BEB6-FE8A5C89BFBD}.Debug|x86.ActiveCfg = Debug|Win32
		{A9D95A91-4DB7-4F72-BEB6-FE8A5C89BFBD}.Debug|x86.Build.0 = Debug|Win32
		{A9D95A91-4DB7-4F72-BEB6-FE8A5C89BFBD}.Release|ARM64.ActiveCfg = Release|ARM64
		{A9D95A91-4DB7-4F72-BEB6-FE8A5C89BFBD}.Release|ARM64.Build.0 = Release|ARM64
		{A9D95A91-4DB7-4F72-BEB6-FE8A5C89BFBD}.Release|x64.ActiveCfg = Release|x64
		{A9D95A91-4DB7-4F72-BEB6-FE8A5C89BFBD}.Release|x64.Build.0 = Release|x64
		{A9D95A91-4DB7-4F72-BEB6-FE8A5C89BFBD}.Release|x86.ActiveCfg = Release|Win32
		{A9D95A91-4DB7-4F72-BEB6-FE8A5C89BFBD}.Release|x86.Build.0 = Release|Win32
		{F7D32BD0-2749-483E-9A0D-1635EF7E3136}.Debug|ARM64.ActiveCfg = Debug|ARM64
		{F7D32BD0-2749-483E-9A0D-1635EF7E3136}.Debug|ARM64.Build.0 = Debug|ARM64
		{F7D32BD0-2749-483E-9A0D-1635EF7E3136}.Debug|x64.ActiveCfg = Debug|x64
		{F7D32BD0-2749-483E-9A0D-1635EF7E3136}.Debug|x64.Build.0 = Debug|x64
		{F7D32BD0-2749-483E-9A0D-1635EF7E3136}.Debug|x86.ActiveCfg = Debug|Win32
		{F7D32BD0-2749-483E-9A0D-1635EF7E3136}.Debug|x86.Build.0 = Debug|Win32
		{F7D32BD0-2749-483E-9A0D-1635EF7E3136}.Release|ARM64.ActiveCfg = Release|ARM64
		{F7D32BD0-2749-483E-9A0D-1635EF7E3136}.Release|ARM64.Build.0 = Release|ARM64
		{F7D32BD0-2749-483E-9A0D-1635EF7E3136}.Release|x64.ActiveCfg = Release|x64
		{F7D32BD0-2749-483E-9A0D-1635EF7E3136}.Release|x64.Build.0 = Release|x64
		{F7D32BD0-2749-483E-9A0D-1635EF7E3136}.Release|x86.ActiveCfg = Release|Win32
		{F7D32BD0-2749-483E-9A0D-1635EF7E3136}.Release|x86.Build.0 = Release|Win32
		{FCA38F3C-7C73-4C47-BE4E-32F77FA8538D}.Debug|ARM64.ActiveCfg = Debug|ARM64
		{FCA38F3C-7C73-4C47-BE4E-32F77FA8538D}.Debug|ARM64.Build.0 = Debug|ARM64
		{FCA38F3C-7C73-4C47-BE4E-32F77FA8538D}.Debug|x64.ActiveCfg = Debug|x64
		{FCA38F3C-7C73-4C47-BE4E-32F77FA8538D}.Debug|x64.Build.0 = Debug|x64
		{FCA38F3C-7C73-4C47-BE4E-32F77FA8538D}.Debug|x86.ActiveCfg = Debug|Win32
		{FCA38F3C-7C73-4C47-BE4E-32F77FA8538D}.Debug|x86.Build.0 = Debug|Win32
		{FCA38F3C-7C73-4C47-BE4E-32F77FA8538D}.Release|ARM64.ActiveCfg = Release|ARM64
		{FCA38F3C-7C73-4C47-BE4E-32F77FA8538D}.Release|ARM64.Build.0 = Release|ARM64
		{FCA38F3C-7C73-4C47-BE4E-32F77FA8538D}.Release|x64.ActiveCfg = Release|x64
		{FCA38F3C-7C73-4C47-BE4E-32F77FA8538D}.Release|x64.Build.0 = Release|x64
		{FCA38F3C-7C73-4C47-BE4E-32F77FA8538D}.Release|x86.ActiveCfg = Release|Win32
		{FCA38F3C-7C73-4C47-BE4E-32F77FA8538D}.Release|x86.Build.0 = Release|Win32
		{F2824844-CE15-4242-9420-308923CD76C3}.Debug|ARM64.ActiveCfg = Debug|ARM64
		{F2824844-CE15-4242-9420-308923CD76C3}.Debug|ARM64.Build.0 = Debug|ARM64
		{F2824844-CE15-4242-9420-308923CD76C3}.Debug|x64.ActiveCfg = Debug|x64
		{F2824844-CE15-4242-9420-308923CD76C3}.Debug|x64.Build.0 = Debug|x64
		{F2824844-CE15-4242-9420-308923CD76C3}.Debug|x86.ActiveCfg = Debug|x86
		{F2824844-CE15-4242-9420-308923CD76C3}.Debug|x86.Build.0 = Debug|x86
		{F2824844-CE15-4242-9420-308923CD76C3}.Release|ARM64.ActiveCfg = Release|ARM64
		{F2824844-CE15-4242-9420-308923CD76C3}.Release|ARM64.Build.0 = Release|ARM64
		{F2824844-CE15-4242-9420-308923CD76C3}.Release|x64.ActiveCfg = Release|x64
		{F2824844-CE15-4242-9420-308923CD76C3}.Release|x64.Build.0 = Release|x64
		{F2824844-CE15-4242-9420-308923CD76C3}.Release|x86.ActiveCfg = Release|x86
		{F2824844-CE15-4242-9420-308923CD76C3}.Release|x86.Build.0 = Release|x86
		{ADED4FBE-887D-4271-AF24-F0823BCE7961}.Debug|ARM64.ActiveCfg = Debug|ARM64
		{ADED4FBE-887D-4271-AF24-F0823BCE7961}.Debug|ARM64.Build.0 = Debug|ARM64
		{ADED4FBE-887D-4271-AF24-F0823BCE7961}.Debug|x64.ActiveCfg = Debug|x64
		{ADED4FBE-887D-4271-AF24-F0823BCE7961}.Debug|x64.Build.0 = Debug|x64
		{ADED4FBE-887D-4271-AF24-F0823BCE7961}.Debug|x86.ActiveCfg = Debug|x86
		{ADED4FBE-887D-4271-AF24-F0823BCE7961}.Debug|x86.Build.0 = Debug|x86
		{ADED4FBE-887D-4271-AF24-F0823BCE7961}.Release|ARM64.ActiveCfg = Release|ARM64
		{ADED4FBE-887D-4271-AF24-F0823BCE7961}.Release|ARM64.Build.0 = Release|ARM64
		{ADED4FBE-887D-4271-AF24-F0823BCE7961}.Release|x64.ActiveCfg = Release|x64
		{ADED4FBE-887D-4271-AF24-F0823BCE7961}.Release|x64.Build.0 = Release|x64
		{ADED4FBE-887D-4271-AF24-F0823BCE7961}.Release|x86.ActiveCfg = Release|x86
		{ADED4FBE-887D-4271-AF24-F0823BCE7961}.Release|x86.Build.0 = Release|x86
		{14B93DC8-FD93-4A6D-81CB-8BC96644501C}.Debug|ARM64.ActiveCfg = Debug|ARM64
		{14B93DC8-FD93-4A6D-81CB-8BC96644501C}.Debug|ARM64.Build.0 = Debug|ARM64
		{14B93DC8-FD93-4A6D-81CB-8BC96644501C}.Debug|x64.ActiveCfg = Debug|x64
		{14B93DC8-FD93-4A6D-81CB-8BC96644501C}.Debug|x64.Build.0 = Debug|x64
		{14B93DC8-FD93-4A6D-81CB-8BC96644501C}.Debug|x86.ActiveCfg = Debug|Win32
		{14B93DC8-FD93-4A6D-81CB-8BC96644501C}.Debug|x86.Build.0 = Debug|Win32
		{14B93DC8-FD93-4A6D-81CB-8BC96644501C}.Debug|x86.Deploy.0 = Debug|Win32
		{14B93DC8-FD93-4A6D-81CB-8BC96644501C}.Release|ARM64.ActiveCfg = Release|ARM64
		{14B93DC8-FD93-4A6D-81CB-8BC96644501C}.Release|ARM64.Build.0 = Release|ARM64
		{14B93DC8-FD93-4A6D-81CB-8BC96644501C}.Release|x64.ActiveCfg = Release|x64
		{14B93DC8-FD93-4A6D-81CB-8BC96644501C}.Release|x64.Build.0 = Release|x64
		{14B93DC8-FD93-4A6D-81CB-8BC96644501C}.Release|x86.ActiveCfg = Release|Win32
		{14B93DC8-FD93-4A6D-81CB-8BC96644501C}.Release|x86.Build.0 = Release|Win32
		{14B93DC8-FD93-4A6D-81CB-8BC96644501C}.Release|x86.Deploy.0 = Release|Win32
	EndGlobalSection
	GlobalSection(SolutionProperties) = preSolution
		HideSolutionNode = FALSE
	EndGlobalSection
	GlobalSection(NestedProjects) = preSolution
		{A990658C-CE31-4BCC-976F-0FC6B1AF693D} = {5EA20F54-880A-49F3-99FA-4B3FE54E8AB1}
		{A9D95A91-4DB7-4F72-BEB6-FE8A5C89BFBD} = {5EA20F54-880A-49F3-99FA-4B3FE54E8AB1}
		{C38970C0-5FBF-4D69-90D8-CBAC225AE895} = {5EA20F54-880A-49F3-99FA-4B3FE54E8AB1}
		{F7D32BD0-2749-483E-9A0D-1635EF7E3136} = {5EA20F54-880A-49F3-99FA-4B3FE54E8AB1}
		{DA8B35B3-DA00-4B02-BDE6-6A397B3FD46B} = {5EA20F54-880A-49F3-99FA-4B3FE54E8AB1}
		{FCA38F3C-7C73-4C47-BE4E-32F77FA8538D} = {5EA20F54-880A-49F3-99FA-4B3FE54E8AB1}
		{2049DBE9-8D13-42C9-AE4B-413AE38FFFD0} = {5EA20F54-880A-49F3-99FA-4B3FE54E8AB1}
		{84E05BFA-CBAF-4F0D-BFB6-4CE85742A57E} = {5EA20F54-880A-49F3-99FA-4B3FE54E8AB1}
		{EF074BA1-2D54-4D49-A28E-5E040B47CD2E} = {5EA20F54-880A-49F3-99FA-4B3FE54E8AB1}
		{F2824844-CE15-4242-9420-308923CD76C3} = {5EA20F54-880A-49F3-99FA-4B3FE54E8AB1}
		{ADED4FBE-887D-4271-AF24-F0823BCE7961} = {5EA20F54-880A-49F3-99FA-4B3FE54E8AB1}
		{14B93DC8-FD93-4A6D-81CB-8BC96644501C} = {5EA20F54-880A-49F3-99FA-4B3FE54E8AB1}
	EndGlobalSection
	GlobalSection(ExtensibilityGlobals) = postSolution
		SolutionGuid = {D43FAD39-F619-437D-BB40-04A3982ACB6A}
	EndGlobalSection
EndGlobal
"
`;

exports[`C#  Application: index.windows.bundle 1`] = `
"/**
 * 
 * Be sure to generate this file using the CLI:
 *
 * npx react-native bundle --platform windows --entry-file index.js 
 *   --bundle-output windows\\\\SnapshotApp\\\\Bundle\\\\index.windows.bundle
 *   --assets-dest windows\\\\SnapshotApp\\\\Bundle
 *
 */"
`;

exports[`C#  Application: metro.config.js 1`] = `
"/**
 * Metro configuration for React Native
 * https://github.com/facebook/react-native
 *
 * @format
 */
const fs = require('fs');
const path = require('path');
const exclusionList = require('metro-config/src/defaults/exclusionList');

const rnwPath = fs.realpathSync(
  path.resolve(require.resolve('react-native-windows/package.json'), '..'),
);

module.exports = {
  resolver: {
    blockList: exclusionList([
      // This stops \\"react-native run-windows\\" from causing the metro server to crash if its already running
      new RegExp(
        \`\${path.resolve(__dirname, 'windows').replace(/[/\\\\\\\\]/g, '/')}.*\`,
      ),
      // This prevents \\"react-native run-windows\\" from hitting: EBUSY: resource busy or locked, open msbuild.ProjectImports.zip or other files produced by msbuild
      new RegExp(\`\${rnwPath}/build/.*\`),
      new RegExp(\`\${rnwPath}/target/.*\`),
      /.*\\\\.ProjectImports\\\\.zip/,
    ]),
  },
  transformer: {
    getTransformOptions: async () => ({
      transform: {
        experimentalImportSupport: false,
        inlineRequires: true,
      },
    }),
  },
};
"
`;

exports[`C#  Library: AssemblyInfo.cs 1`] = `
"﻿using System.Reflection;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;

// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
[assembly: AssemblyTitle(\\"SnapshotApp\\")]
[assembly: AssemblyDescription(\\"\\")]
[assembly: AssemblyConfiguration(\\"\\")]
[assembly: AssemblyCompany(\\"\\")]
[assembly: AssemblyProduct(\\"SnapshotApp\\")]
[assembly: AssemblyCopyright(\\"Copyright ©  2019\\")]
[assembly: AssemblyTrademark(\\"\\")]
[assembly: AssemblyCulture(\\"\\")]

// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Build and Revision Numbers 
// by using the '*' as shown below:
// [assembly: AssemblyVersion(\\"1.0.*\\")]
[assembly: AssemblyVersion(\\"1.0.0.0\\")]
[assembly: AssemblyFileVersion(\\"1.0.0.0\\")]
[assembly: ComVisible(false)]"
`;

exports[`C#  Library: Default.rd.xml 1`] = `
"<!--
    This file contains Runtime Directives used by .NET Native. The defaults here are suitable for most
    developers. However, you can modify these parameters to modify the behavior of the .NET Native
    optimizer.

    Runtime Directives are documented at https://go.microsoft.com/fwlink/?LinkID=391919

    To fully enable reflection for App1.MyClass and all of its public/private members
    <Type Name=\\"App1.MyClass\\" Dynamic=\\"Required All\\"/>

    To enable dynamic creation of the specific instantiation of AppClass<T> over System.Int32
    <TypeInstantiation Name=\\"App1.AppClass\\" Arguments=\\"System.Int32\\" Activate=\\"Required Public\\" />

    Using the Namespace directive to apply reflection policy to all the types in a particular namespace
    <Namespace Name=\\"DataClasses.ViewModels\\" Serialize=\\"All\\" />
-->

<Directives xmlns=\\"http://schemas.microsoft.com/netfx/2013/01/metadata\\">
  <Application>
    <!--
      An Assembly element with Name=\\"*Application*\\" applies to all assemblies in
      the application package. The asterisks are not wildcards.
    -->
    <Assembly Name=\\"*Application*\\" Dynamic=\\"Required All\\" />
    
    
    <!-- Add your application specific runtime directives here. -->
    <Namespace Name=\\"Microsoft.ReactNative\\" Dynamic=\\"Required All\\" MarshalObject=\\"Required All\\" />
    <Namespace Name=\\"Microsoft.ReactNative.Managed\\" Dynamic=\\"Required All\\" MarshalObject=\\"Required All\\" />

  </Application>
</Directives>"
`;

exports[`C#  Library: ExperimentalFeatures.props 1`] = `
"<?xml version=\\"1.0\\" encoding=\\"utf-8\\"?>
<Project xmlns=\\"http://schemas.microsoft.com/developer/msbuild/2003\\">

  <!--
    Application projects contain a file with this name to specify some important settings
    that will apply globally for the app and *all* native modules the app consumes. These
    values are set by the app developer.
  -->

</Project>
"
`;

exports[`C#  Library: NuGet.Config 1`] = `
"<?xml version=\\"1.0\\" encoding=\\"utf-8\\"?>
<configuration>
  <config>
    <add key=\\"repositoryPath\\" value=\\"packages\\" />
  </config>
  <packageSources>
    <clear />
    <add key=\\"react-native\\" value=\\"https://pkgs.dev.azure.com/ms/react-native/_packaging/react-native-public/nuget/v3/index.json\\" />
    <add key=\\"Nuget.org\\" value=\\"https://api.nuget.org/v3/index.json\\" />
  </packageSources>
  <disabledPackageSources>
    <clear />
  </disabledPackageSources>  
</configuration>
"
`;

exports[`C#  Library: ReactNativeModule.cs 1`] = `
"﻿using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

using Microsoft.ReactNative;
using Microsoft.ReactNative.Managed;

namespace SnapshotApp
{
    [ReactModule(\\"SnapshotApp\\")]
    internal sealed class ReactNativeModule
    {
        // See https://microsoft.github.io/react-native-windows/docs/native-modules for details on writing native modules

        private ReactContext _reactContext;

        [ReactInitializer]
        public void Initialize(ReactContext reactContext)
        {
            _reactContext = reactContext;
        }

        [ReactMethod]
        public void sampleMethod(string stringArgument, int numberArgument, Action<string> callback)
        {
            // TODO: Implement some actually useful functionality
            callback(\\"Received numberArgument: \\" + numberArgument + \\" stringArgument: \\" + stringArgument);
        }
    }
}
"
`;

exports[`C#  Library: ReactPackageProvider.cs 1`] = `
"using Microsoft.ReactNative;

namespace SnapshotApp
{
    public partial class ReactPackageProvider : IReactPackageProvider
    {
        public void CreatePackage(IReactPackageBuilder packageBuilder)
        {
            CreatePackageImplementation(packageBuilder);
        }

        /// <summary>
        /// This method is implemented by the C# code generator
        /// </summary>
        partial void CreatePackageImplementation(IReactPackageBuilder packageBuilder);
    }
}
"
`;

exports[`C#  Library: SnapshotApp.csproj 1`] = `
"﻿<?xml version=\\"1.0\\" encoding=\\"utf-8\\"?>
<Project ToolsVersion=\\"Current\\" DefaultTargets=\\"Build\\" xmlns=\\"http://schemas.microsoft.com/developer/msbuild/2003\\">
  <Import Project=\\"$(MSBuildExtensionsPath)\\\\$(MSBuildToolsVersion)\\\\Microsoft.Common.props\\" Condition=\\"Exists('$(MSBuildExtensionsPath)\\\\$(MSBuildToolsVersion)\\\\Microsoft.Common.props')\\" />
  <Import Project=\\"$(SolutionDir)\\\\ExperimentalFeatures.props\\" Condition=\\"Exists('$(SolutionDir)\\\\ExperimentalFeatures.props')\\" />
  <PropertyGroup Label=\\"ReactNativeWindowsProps\\">
    <ReactNativeWindowsDir Condition=\\"'$(ReactNativeWindowsDir)' == ''\\">$([MSBuild]::GetDirectoryNameOfFileAbove($(SolutionDir), 'node_modules\\\\react-native-windows\\\\package.json'))\\\\node_modules\\\\react-native-windows\\\\</ReactNativeWindowsDir>
  </PropertyGroup>
  <PropertyGroup>
    <Configuration Condition=\\" '$(Configuration)' == '' \\">Debug</Configuration>
    <Platform Condition=\\" '$(Platform)' == '' \\">x86</Platform>
    <ProjectGuid>{5ACDAFDE-2465-4D44-A30A-8F3402364565}</ProjectGuid>
    <OutputType>winmdobj</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>SnapshotApp</RootNamespace>
    <AssemblyName>SnapshotApp</AssemblyName>
    <DefaultLanguage>en-US</DefaultLanguage>
    <TargetPlatformIdentifier>UAP</TargetPlatformIdentifier>
    <TargetPlatformVersion Condition=\\" '$(TargetPlatformVersion)' == '' \\">10.0.19041.0</TargetPlatformVersion>
    <TargetPlatformMinVersion>10.0.16299.0</TargetPlatformMinVersion>
    <MinimumVisualStudioVersion>16.0</MinimumVisualStudioVersion>
    <FileAlignment>512</FileAlignment>
    <ProjectTypeGuids>{A5A43C5B-DE2A-4C0C-9213-0A381AF9435A};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <WindowsXamlEnableOverview>true</WindowsXamlEnableOverview>
    <LangVersion>7.3</LangVersion>
  </PropertyGroup>
  <PropertyGroup Condition=\\"'$(Configuration)|$(Platform)' == 'Debug|x86'\\">
    <DebugSymbols>true</DebugSymbols>
    <OutputPath>bin\\\\x86\\\\Debug\\\\</OutputPath>
    <DefineConstants>DEBUG;TRACE;NETFX_CORE;WINDOWS_UWP</DefineConstants>
    <NoWarn>;2008</NoWarn>
    <DebugType>full</DebugType>
    <PlatformTarget>x86</PlatformTarget>
    <UseVSHostingProcess>false</UseVSHostingProcess>
    <ErrorReport>prompt</ErrorReport>
    <Prefer32Bit>true</Prefer32Bit>
  </PropertyGroup>
  <PropertyGroup Condition=\\"'$(Configuration)|$(Platform)' == 'Release|x86'\\">
    <OutputPath>bin\\\\x86\\\\Release\\\\</OutputPath>
    <DefineConstants>TRACE;NETFX_CORE;WINDOWS_UWP</DefineConstants>
    <Optimize>true</Optimize>
    <NoWarn>;2008</NoWarn>
    <DebugType>pdbonly</DebugType>
    <PlatformTarget>x86</PlatformTarget>
    <UseVSHostingProcess>false</UseVSHostingProcess>
    <ErrorReport>prompt</ErrorReport>
    <Prefer32Bit>true</Prefer32Bit>
    <UseDotNetNativeToolchain>true</UseDotNetNativeToolchain>
  </PropertyGroup>
  <PropertyGroup Condition=\\"'$(Configuration)|$(Platform)' == 'Debug|ARM64'\\">
    <DebugSymbols>true</DebugSymbols>
    <OutputPath>bin\\\\ARM64\\\\Debug\\\\</OutputPath>
    <DefineConstants>DEBUG;TRACE;NETFX_CORE;WINDOWS_UWP</DefineConstants>
    <NoWarn>;2008</NoWarn>
    <DebugType>full</DebugType>
    <PlatformTarget>ARM64</PlatformTarget>
    <UseVSHostingProcess>false</UseVSHostingProcess>
    <ErrorReport>prompt</ErrorReport>
    <Prefer32Bit>true</Prefer32Bit>
  </PropertyGroup>
  <PropertyGroup Condition=\\"'$(Configuration)|$(Platform)' == 'Release|ARM64'\\">
    <OutputPath>bin\\\\ARM64\\\\Release\\\\</OutputPath>
    <DefineConstants>TRACE;NETFX_CORE;WINDOWS_UWP</DefineConstants>
    <Optimize>true</Optimize>
    <NoWarn>;2008</NoWarn>
    <DebugType>pdbonly</DebugType>
    <PlatformTarget>ARM64</PlatformTarget>
    <UseVSHostingProcess>false</UseVSHostingProcess>
    <ErrorReport>prompt</ErrorReport>
    <Prefer32Bit>true</Prefer32Bit>
    <UseDotNetNativeToolchain>true</UseDotNetNativeToolchain>
  </PropertyGroup>
  <PropertyGroup Condition=\\"'$(Configuration)|$(Platform)' == 'Debug|x64'\\">
    <DebugSymbols>true</DebugSymbols>
    <OutputPath>bin\\\\x64\\\\Debug\\\\</OutputPath>
    <DefineConstants>DEBUG;TRACE;NETFX_CORE;WINDOWS_UWP</DefineConstants>
    <NoWarn>;2008</NoWarn>
    <DebugType>full</DebugType>
    <PlatformTarget>x64</PlatformTarget>
    <UseVSHostingProcess>false</UseVSHostingProcess>
    <ErrorReport>prompt</ErrorReport>
    <Prefer32Bit>true</Prefer32Bit>
  </PropertyGroup>
  <PropertyGroup Condition=\\"'$(Configuration)|$(Platform)' == 'Release|x64'\\">
    <OutputPath>bin\\\\x64\\\\Release\\\\</OutputPath>
    <DefineConstants>TRACE;NETFX_CORE;WINDOWS_UWP</DefineConstants>
    <Optimize>true</Optimize>
    <NoWarn>;2008</NoWarn>
    <DebugType>pdbonly</DebugType>
    <PlatformTarget>x64</PlatformTarget>
    <UseVSHostingProcess>false</UseVSHostingProcess>
    <ErrorReport>prompt</ErrorReport>
    <Prefer32Bit>true</Prefer32Bit>
    <UseDotNetNativeToolchain>true</UseDotNetNativeToolchain>
  </PropertyGroup>
  <PropertyGroup>
    <RestoreProjectStyle>PackageReference</RestoreProjectStyle>
  </PropertyGroup>
  <ItemGroup>
    <Compile Include=\\"Properties\\\\AssemblyInfo.cs\\" />
    <Compile Include=\\"ReactNativeModule.cs\\" />
    <Compile Include=\\"ReactPackageProvider.cs\\" />
  </ItemGroup>
  <ItemGroup>
    <PackageReference Include=\\"Microsoft.NETCore.UniversalWindowsPlatform\\">
      <Version>6.2.9</Version>
    </PackageReference>
    <PackageReference Include=\\"ReactNative.Hermes.Windows\\">
      <Version>0.9.0-ms.6</Version>
    </PackageReference>
  </ItemGroup>
  <PropertyGroup Condition=\\" '$(VisualStudioVersion)' == '' or '$(VisualStudioVersion)' &lt; '16.0' \\">
    <VisualStudioVersion>16.0</VisualStudioVersion>
  </PropertyGroup>
  <Import Project=\\"$(MSBuildExtensionsPath)\\\\Microsoft\\\\WindowsXaml\\\\v$(VisualStudioVersion)\\\\Microsoft.Windows.UI.Xaml.CSharp.targets\\" />
  <ImportGroup Label=\\"ReactNativeWindowsPropertySheets\\">
    <Import Project=\\"$(ReactNativeWindowsDir)\\\\PropertySheets\\\\External\\\\Microsoft.ReactNative.Uwp.CSharpLib.props\\" Condition=\\"Exists('$(ReactNativeWindowsDir)\\\\PropertySheets\\\\External\\\\Microsoft.ReactNative.Uwp.CSharpLib.props')\\" />
  </ImportGroup>
  <ImportGroup Label=\\"ReactNativeWindowsTargets\\">
    <Import Project=\\"$(ReactNativeWindowsDir)\\\\PropertySheets\\\\External\\\\Microsoft.ReactNative.Uwp.CSharpLib.targets\\" Condition=\\"Exists('$(ReactNativeWindowsDir)\\\\PropertySheets\\\\External\\\\Microsoft.ReactNative.Uwp.CSharpLib.targets')\\" />
  </ImportGroup>
  <Target Name=\\"EnsureReactNativeWindowsTargets\\" BeforeTargets=\\"PrepareForBuild\\">
    <PropertyGroup>
      <ErrorText>This project references targets in your node_modules\\\\react-native-windows folder that are missing. The missing file is {0}.</ErrorText>
    </PropertyGroup>
    <Error Condition=\\"!Exists('$(ReactNativeWindowsDir)\\\\PropertySheets\\\\External\\\\Microsoft.ReactNative.Uwp.CSharpLib.props')\\" Text=\\"$([System.String]::Format('$(ErrorText)', '$(ReactNativeWindowsDir)\\\\PropertySheets\\\\External\\\\Microsoft.ReactNative.Uwp.CSharpLib.props'))\\" />
    <Error Condition=\\"!Exists('$(ReactNativeWindowsDir)\\\\PropertySheets\\\\External\\\\Microsoft.ReactNative.Uwp.CSharpLib.targets')\\" Text=\\"$([System.String]::Format('$(ErrorText)', '$(ReactNativeWindowsDir)\\\\PropertySheets\\\\External\\\\Microsoft.ReactNative.Uwp.CSharpLib.targets'))\\" />
  </Target>
</Project>
"
`;

exports[`C#  Library: SnapshotApp.sln 1`] = `
"﻿
Microsoft Visual Studio Solution File, Format Version 12.00
# Visual Studio Version 16
VisualStudioVersion = 16.0.29215.179
MinimumVisualStudioVersion = 10.0.40219.1
Project(\\"{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}\\") = \\"SnapshotApp\\", \\"SnapshotApp\\\\SnapshotApp.csproj\\", \\"{5ACDAFDE-2465-4D44-A30A-8F3402364565}\\"
EndProject
Project(\\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\\") = \\"Folly\\", \\"..\\\\node_modules\\\\react-native-windows\\\\Folly\\\\Folly.vcxproj\\", \\"{A990658C-CE31-4BCC-976F-0FC6B1AF693D}\\"
EndProject
Project(\\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\\") = \\"fmt\\", \\"..\\\\node_modules\\\\react-native-windows\\\\fmt\\\\fmt.vcxproj\\", \\"{14B93DC8-FD93-4A6D-81CB-8BC96644501C}\\"
EndProject
Project(\\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\\") = \\"ReactCommon\\", \\"..\\\\node_modules\\\\react-native-windows\\\\ReactCommon\\\\ReactCommon.vcxproj\\", \\"{A9D95A91-4DB7-4F72-BEB6-FE8A5C89BFBD}\\"
	ProjectSection(ProjectDependencies) = postProject
		{A990658C-CE31-4BCC-976F-0FC6B1AF693D} = {A990658C-CE31-4BCC-976F-0FC6B1AF693D}
	EndProjectSection
EndProject
Project(\\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\\") = \\"Chakra\\", \\"..\\\\node_modules\\\\react-native-windows\\\\Chakra\\\\Chakra.vcxitems\\", \\"{C38970C0-5FBF-4D69-90D8-CBAC225AE895}\\"
EndProject
Project(\\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\\") = \\"Microsoft.ReactNative\\", \\"..\\\\node_modules\\\\react-native-windows\\\\Microsoft.ReactNative\\\\Microsoft.ReactNative.vcxproj\\", \\"{F7D32BD0-2749-483E-9A0D-1635EF7E3136}\\"
EndProject
Project(\\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\\") = \\"Microsoft.ReactNative.Cxx\\", \\"..\\\\node_modules\\\\react-native-windows\\\\Microsoft.ReactNative.Cxx\\\\Microsoft.ReactNative.Cxx.vcxitems\\", \\"{DA8B35B3-DA00-4B02-BDE6-6A397B3FD46B}\\"
EndProject
Project(\\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\\") = \\"Common\\", \\"..\\\\node_modules\\\\react-native-windows\\\\Common\\\\Common.vcxproj\\", \\"{FCA38F3C-7C73-4C47-BE4E-32F77FA8538D}\\"
EndProject
Project(\\"{2150E333-8FDC-42A3-9474-1A3956D46DE8}\\") = \\"ReactNative\\", \\"ReactNative\\", \\"{5EA20F54-880A-49F3-99FA-4B3FE54E8AB1}\\"
EndProject
Project(\\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\\") = \\"Microsoft.ReactNative.Shared\\", \\"..\\\\node_modules\\\\react-native-windows\\\\Shared\\\\Shared.vcxitems\\", \\"{2049DBE9-8D13-42C9-AE4B-413AE38FFFD0}\\"
EndProject
Project(\\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\\") = \\"Mso\\", \\"..\\\\node_modules\\\\react-native-windows\\\\Mso\\\\Mso.vcxitems\\", \\"{84E05BFA-CBAF-4F0D-BFB6-4CE85742A57E}\\"
EndProject
Project(\\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\\") = \\"Include\\", \\"..\\\\node_modules\\\\react-native-windows\\\\include\\\\Include.vcxitems\\", \\"{EF074BA1-2D54-4D49-A28E-5E040B47CD2E}\\"
EndProject
Project(\\"{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}\\") = \\"Microsoft.ReactNative.Managed\\", \\"..\\\\node_modules\\\\react-native-windows\\\\Microsoft.ReactNative.Managed\\\\Microsoft.ReactNative.Managed.csproj\\", \\"{F2824844-CE15-4242-9420-308923CD76C3}\\"
EndProject
Project(\\"{9A19103F-16F7-4668-BE54-9A1E7A4F7556}\\") = \\"Microsoft.ReactNative.Managed.CodeGen\\", \\"..\\\\node_modules\\\\react-native-windows\\\\Microsoft.ReactNative.Managed.CodeGen\\\\Microsoft.ReactNative.Managed.CodeGen.csproj\\", \\"{ADED4FBE-887D-4271-AF24-F0823BCE7961}\\"
EndProject
Global
	GlobalSection(SharedMSBuildProjectFiles) = preSolution
		..\\\\node_modules\\\\react-native-windows\\\\Shared\\\\Shared.vcxitems*{2049dbe9-8d13-42c9-ae4b-413ae38fffd0}*SharedItemsImports = 9
		..\\\\node_modules\\\\react-native-windows\\\\Mso\\\\Mso.vcxitems*{84e05bfa-cbaf-4f0d-bfb6-4ce85742a57e}*SharedItemsImports = 9
		..\\\\node_modules\\\\react-native-windows\\\\Chakra\\\\Chakra.vcxitems*{c38970c0-5fbf-4d69-90d8-cbac225ae895}*SharedItemsImports = 9
		..\\\\node_modules\\\\react-native-windows\\\\Microsoft.ReactNative.Cxx\\\\Microsoft.ReactNative.Cxx.vcxitems*{da8b35b3-da00-4b02-bde6-6a397b3fd46b}*SharedItemsImports = 9
		..\\\\node_modules\\\\react-native-windows\\\\include\\\\Include.vcxitems*{ef074ba1-2d54-4d49-a28e-5e040b47cd2e}*SharedItemsImports = 9
		..\\\\node_modules\\\\react-native-windows\\\\Chakra\\\\Chakra.vcxitems*{f7d32bd0-2749-483e-9a0d-1635ef7e3136}*SharedItemsImports = 4
		..\\\\node_modules\\\\react-native-windows\\\\Microsoft.ReactNative.Cxx\\\\Microsoft.ReactNative.Cxx.vcxitems*{f7d32bd0-2749-483e-9a0d-1635ef7e3136}*SharedItemsImports = 4
		..\\\\node_modules\\\\react-native-windows\\\\Mso\\\\Mso.vcxitems*{f7d32bd0-2749-483e-9a0d-1635ef7e3136}*SharedItemsImports = 4
		..\\\\node_modules\\\\react-native-windows\\\\Shared\\\\Shared.vcxitems*{f7d32bd0-2749-483e-9a0d-1635ef7e3136}*SharedItemsImports = 4
	EndGlobalSection
	GlobalSection(SolutionConfigurationPlatforms) = preSolution
		Debug|ARM64 = Debug|ARM64
		Debug|x64 = Debug|x64
		Debug|x86 = Debug|x86
		Release|ARM64 = Release|ARM64
		Release|x64 = Release|x64
		Release|x86 = Release|x86
	EndGlobalSection
	GlobalSection(ProjectConfigurationPlatforms) = postSolution
		{5ACDAFDE-2465-4D44-A30A-8F3402364565}.Debug|ARM64.ActiveCfg = Debug|ARM64
		{5ACDAFDE-2465-4D44-A30A-8F3402364565}.Debug|ARM64.Build.0 = Debug|ARM64
		{5ACDAFDE-2465-4D44-A30A-8F3402364565}.Debug|ARM64.Deploy.0 = Debug|ARM64
		{5ACDAFDE-2465-4D44-A30A-8F3402364565}.Debug|x64.ActiveCfg = Debug|x64
		{5ACDAFDE-2465-4D44-A30A-8F3402364565}.Debug|x64.Build.0 = Debug|x64
		{5ACDAFDE-2465-4D44-A30A-8F3402364565}.Debug|x64.Deploy.0 = Debug|x64
		{5ACDAFDE-2465-4D44-A30A-8F3402364565}.Debug|x86.ActiveCfg = Debug|x86
		{5ACDAFDE-2465-4D44-A30A-8F3402364565}.Debug|x86.Build.0 = Debug|x86
		{5ACDAFDE-2465-4D44-A30A-8F3402364565}.Debug|x86.Deploy.0 = Debug|x86
		{5ACDAFDE-2465-4D44-A30A-8F3402364565}.Release|ARM64.ActiveCfg = Release|ARM64
		{5ACDAFDE-2465-4D44-A30A-8F3402364565}.Release|ARM64.Build.0 = Release|ARM64
		{5ACDAFDE-2465-4D44-A30A-8F3402364565}.Release|ARM64.Deploy.0 = Release|ARM64
		{5ACDAFDE-2465-4D44-A30A-8F3402364565}.Release|x64.ActiveCfg = Release|x64
		{5ACDAFDE-2465-4D44-A30A-8F3402364565}.Release|x64.Build.0 = Release|x64
		{5ACDAFDE-2465-4D44-A30A-8F3402364565}.Release|x64.Deploy.0 = Release|x64
		{5ACDAFDE-2465-4D44-A30A-8F3402364565}.Release|x86.ActiveCfg = Release|x86
		{5ACDAFDE-2465-4D44-A30A-8F3402364565}.Release|x86.Build.0 = Release|x86
		{5ACDAFDE-2465-4D44-A30A-8F3402364565}.Release|x86.Deploy.0 = Release|x86
		{A990658C-CE31-4BCC-976F-0FC6B1AF693D}.Debug|ARM64.ActiveCfg = Debug|ARM64
		{A990658C-CE31-4BCC-976F-0FC6B1AF693D}.Debug|ARM64.Build.0 = Debug|ARM64
		{A990658C-CE31-4BCC-976F-0FC6B1AF693D}.Debug|x64.ActiveCfg = Debug|x64
		{A990658C-CE31-4BCC-976F-0FC6B1AF693D}.Debug|x64.Build.0 = Debug|x64
		{A990658C-CE31-4BCC-976F-0FC6B1AF693D}.Debug|x86.ActiveCfg = Debug|Win32
		{A990658C-CE31-4BCC-976F-0FC6B1AF693D}.Debug|x86.Build.0 = Debug|Win32
		{A990658C-CE31-4BCC-976F-0FC6B1AF693D}.Release|ARM64.ActiveCfg = Release|ARM64
		{A990658C-CE31-4BCC-976F-0FC6B1AF693D}.Release|ARM64.Build.0 = Release|ARM64
		{A990658C-CE31-4BCC-976F-0FC6B1AF693D}.Release|x64.ActiveCfg = Release|x64
		{A990658C-CE31-4BCC-976F-0FC6B1AF693D}.Release|x64.Build.0 = Release|x64
		{A990658C-CE31-4BCC-976F-0FC6B1AF693D}.Release|x86.ActiveCfg = Release|Win32
		{A990658C-CE31-4BCC-976F-0FC6B1AF693D}.Release|x86.Build.0 = Release|Win32
		{A9D95A91-4DB7-4F72-BEB6-FE8A5C89BFBD}.Debug|ARM64.ActiveCfg = Debug|ARM64
		{A9D95A91-4DB7-4F72-BEB6-FE8A5C89BFBD}.Debug|ARM64.Build.0 = Debug|ARM64
		{A9D95A91-4DB7-4F72-BEB6-FE8A5C89BFBD}.Debug|x64.ActiveCfg = Debug|x64
		{A9D95A91-4DB7-4F72-BEB6-FE8A5C89BFBD}.Debug|x64.Build.0 = Debug|x64
		{A9D95A91-4DB7-4F72-BEB6-FE8A5C89BFBD}.Debug|x86.ActiveCfg = Debug|Win32
		{A9D95A91-4DB7-4F72-BEB6-FE8A5C89BFBD}.Debug|x86.Build.0 = Debug|Win32
		{A9D95A91-4DB7-4F72-BEB6-FE8A5C89BFBD}.Release|ARM64.ActiveCfg = Release|ARM64
		{A9D95A91-4DB7-4F72-BEB6-FE8A5C89BFBD}.Release|ARM64.Build.0 = Release|ARM64
		{A9D95A91-4DB7-4F72-BEB6-FE8A5C89BFBD}.Release|x64.ActiveCfg = Release|x64
		{A9D95A91-4DB7-4F72-BEB6-FE8A5C89BFBD}.Release|x64.Build.0 = Release|x64
		{A9D95A91-4DB7-4F72-BEB6-FE8A5C89BFBD}.Release|x86.ActiveCfg = Release|Win32
		{A9D95A91-4DB7-4F72-BEB6-FE8A5C89BFBD}.Release|x86.Build.0 = Release|Win32
		{F7D32BD0-2749-483E-9A0D-1635EF7E3136}.Debug|ARM64.ActiveCfg = Debug|ARM64
		{F7D32BD0-2749-483E-9A0D-1635EF7E3136}.Debug|ARM64.Build.0 = Debug|ARM64
		{F7D32BD0-2749-483E-9A0D-1635EF7E3136}.Debug|x64.ActiveCfg = Debug|x64
		{F7D32BD0-2749-483E-9A0D-1635EF7E3136}.Debug|x64.Build.0 = Debug|x64
		{F7D32BD0-2749-483E-9A0D-1635EF7E3136}.Debug|x86.ActiveCfg = Debug|Win32
		{F7D32BD0-2749-483E-9A0D-1635EF7E3136}.Debug|x86.Build.0 = Debug|Win32
		{F7D32BD0-2749-483E-9A0D-1635EF7E3136}.Release|ARM64.ActiveCfg = Release|ARM64
		{F7D32BD0-2749-483E-9A0D-1635EF7E3136}.Release|ARM64.Build.0 = Release|ARM64
		{F7D32BD0-2749-483E-9A0D-1635EF7E3136}.Release|x64.ActiveCfg = Release|x64
		{F7D32BD0-2749-483E-9A0D-1635EF7E3136}.Release|x64.Build.0 = Release|x64
		{F7D32BD0-2749-483E-9A0D-1635EF7E3136}.Release|x86.ActiveCfg = Release|Win32
		{F7D32BD0-2749-483E-9A0D-1635EF7E3136}.Release|x86.Build.0 = Release|Win32
		{FCA38F3C-7C73-4C47-BE4E-32F77FA8538D}.Debug|ARM64.ActiveCfg = Debug|ARM64
		{FCA38F3C-7C73-4C47-BE4E-32F77FA8538D}.Debug|ARM64.Build.0 = Debug|ARM64
		{FCA38F3C-7C73-4C47-BE4E-32F77FA8538D}.Debug|x64.ActiveCfg = Debug|x64
		{FCA38F3C-7C73-4C47-BE4E-32F77FA8538D}.Debug|x64.Build.0 = Debug|x64
		{FCA38F3C-7C73-4C47-BE4E-32F77FA8538D}.Debug|x86.ActiveCfg = Debug|Win32
		{FCA38F3C-7C73-4C47-BE4E-32F77FA8538D}.Debug|x86.Build.0 = Debug|Win32
		{FCA38F3C-7C73-4C47-BE4E-32F77FA8538D}.Release|ARM64.ActiveCfg = Release|ARM64
		{FCA38F3C-7C73-4C47-BE4E-32F77FA8538D}.Release|ARM64.Build.0 = Release|ARM64
		{FCA38F3C-7C73-4C47-BE4E-32F77FA8538D}.Release|x64.ActiveCfg = Release|x64
		{FCA38F3C-7C73-4C47-BE4E-32F77FA8538D}.Release|x64.Build.0 = Release|x64
		{FCA38F3C-7C73-4C47-BE4E-32F77FA8538D}.Release|x86.ActiveCfg = Release|Win32
		{FCA38F3C-7C73-4C47-BE4E-32F77FA8538D}.Release|x86.Build.0 = Release|Win32
		{F2824844-CE15-4242-9420-308923CD76C3}.Debug|ARM64.ActiveCfg = Debug|ARM64
		{F2824844-CE15-4242-9420-308923CD76C3}.Debug|ARM64.Build.0 = Debug|ARM64
		{F2824844-CE15-4242-9420-308923CD76C3}.Debug|x64.ActiveCfg = Debug|x64
		{F2824844-CE15-4242-9420-308923CD76C3}.Debug|x64.Build.0 = Debug|x64
		{F2824844-CE15-4242-9420-308923CD76C3}.Debug|x86.ActiveCfg = Debug|x86
		{F2824844-CE15-4242-9420-308923CD76C3}.Debug|x86.Build.0 = Debug|x86
		{F2824844-CE15-4242-9420-308923CD76C3}.Release|ARM64.ActiveCfg = Release|ARM64
		{F2824844-CE15-4242-9420-308923CD76C3}.Release|ARM64.Build.0 = Release|ARM64
		{F2824844-CE15-4242-9420-308923CD76C3}.Release|x64.ActiveCfg = Release|x64
		{F2824844-CE15-4242-9420-308923CD76C3}.Release|x64.Build.0 = Release|x64
		{F2824844-CE15-4242-9420-308923CD76C3}.Release|x86.ActiveCfg = Release|x86
		{F2824844-CE15-4242-9420-308923CD76C3}.Release|x86.Build.0 = Release|x86
		{ADED4FBE-887D-4271-AF24-F0823BCE7961}.Debug|ARM64.ActiveCfg = Debug|ARM64
		{ADED4FBE-887D-4271-AF24-F0823BCE7961}.Debug|ARM64.Build.0 = Debug|ARM64
		{ADED4FBE-887D-4271-AF24-F0823BCE7961}.Debug|x64.ActiveCfg = Debug|x64
		{ADED4FBE-887D-4271-AF24-F0823BCE7961}.Debug|x64.Build.0 = Debug|x64
		{ADED4FBE-887D-4271-AF24-F0823BCE7961}.Debug|x86.ActiveCfg = Debug|x86
		{ADED4FBE-887D-4271-AF24-F0823BCE7961}.Debug|x86.Build.0 = Debug|x86
		{ADED4FBE-887D-4271-AF24-F0823BCE7961}.Release|ARM64.ActiveCfg = Release|ARM64
		{ADED4FBE-887D-4271-AF24-F0823BCE7961}.Release|ARM64.Build.0 = Release|ARM64
		{ADED4FBE-887D-4271-AF24-F0823BCE7961}.Release|x64.ActiveCfg = Release|x64
		{ADED4FBE-887D-4271-AF24-F0823BCE7961}.Release|x64.Build.0 = Release|x64
		{ADED4FBE-887D-4271-AF24-F0823BCE7961}.Release|x86.ActiveCfg = Release|x86
		{ADED4FBE-887D-4271-AF24-F0823BCE7961}.Release|x86.Build.0 = Release|x86
		{14B93DC8-FD93-4A6D-81CB-8BC96644501C}.Debug|ARM64.ActiveCfg = Debug|ARM64
		{14B93DC8-FD93-4A6D-81CB-8BC96644501C}.Debug|ARM64.Build.0 = Debug|ARM64
		{14B93DC8-FD93-4A6D-81CB-8BC96644501C}.Debug|x64.ActiveCfg = Debug|x64
		{14B93DC8-FD93-4A6D-81CB-8BC96644501C}.Debug|x64.Build.0 = Debug|x64
		{14B93DC8-FD93-4A6D-81CB-8BC96644501C}.Debug|x86.ActiveCfg = Debug|Win32
		{14B93DC8-FD93-4A6D-81CB-8BC96644501C}.Debug|x86.Build.0 = Debug|Win32
		{14B93DC8-FD93-4A6D-81CB-8BC96644501C}.Debug|x86.Deploy.0 = Debug|Win32
		{14B93DC8-FD93-4A6D-81CB-8BC96644501C}.Release|ARM64.ActiveCfg = Release|ARM64
		{14B93DC8-FD93-4A6D-81CB-8BC96644501C}.Release|ARM64.Build.0 = Release|ARM64
		{14B93DC8-FD93-4A6D-81CB-8BC96644501C}.Release|x64.ActiveCfg = Release|x64
		{14B93DC8-FD93-4A6D-81CB-8BC96644501C}.Release|x64.Build.0 = Release|x64
		{14B93DC8-FD93-4A6D-81CB-8BC96644501C}.Release|x86.ActiveCfg = Release|Win32
		{14B93DC8-FD93-4A6D-81CB-8BC96644501C}.Release|x86.Build.0 = Release|Win32
		{14B93DC8-FD93-4A6D-81CB-8BC96644501C}.Release|x86.Deploy.0 = Release|Win32
	EndGlobalSection
	GlobalSection(SolutionProperties) = preSolution
		HideSolutionNode = FALSE
	EndGlobalSection
	GlobalSection(NestedProjects) = preSolution
		{A990658C-CE31-4BCC-976F-0FC6B1AF693D} = {5EA20F54-880A-49F3-99FA-4B3FE54E8AB1}
		{A9D95A91-4DB7-4F72-BEB6-FE8A5C89BFBD} = {5EA20F54-880A-49F3-99FA-4B3FE54E8AB1}
		{C38970C0-5FBF-4D69-90D8-CBAC225AE895} = {5EA20F54-880A-49F3-99FA-4B3FE54E8AB1}
		{F7D32BD0-2749-483E-9A0D-1635EF7E3136} = {5EA20F54-880A-49F3-99FA-4B3FE54E8AB1}
		{DA8B35B3-DA00-4B02-BDE6-6A397B3FD46B} = {5EA20F54-880A-49F3-99FA-4B3FE54E8AB1}
		{FCA38F3C-7C73-4C47-BE4E-32F77FA8538D} = {5EA20F54-880A-49F3-99FA-4B3FE54E8AB1}
		{2049DBE9-8D13-42C9-AE4B-413AE38FFFD0} = {5EA20F54-880A-49F3-99FA-4B3FE54E8AB1}
		{84E05BFA-CBAF-4F0D-BFB6-4CE85742A57E} = {5EA20F54-880A-49F3-99FA-4B3FE54E8AB1}
		{EF074BA1-2D54-4D49-A28E-5E040B47CD2E} = {5EA20F54-880A-49F3-99FA-4B3FE54E8AB1}
		{F2824844-CE15-4242-9420-308923CD76C3} = {5EA20F54-880A-49F3-99FA-4B3FE54E8AB1}
		{ADED4FBE-887D-4271-AF24-F0823BCE7961} = {5EA20F54-880A-49F3-99FA-4B3FE54E8AB1}
		{14B93DC8-FD93-4A6D-81CB-8BC96644501C} = {5EA20F54-880A-49F3-99FA-4B3FE54E8AB1}
	EndGlobalSection
	GlobalSection(ExtensibilityGlobals) = postSolution
		SolutionGuid = {D43FAD39-F619-437D-BB40-04A3982ACB6A}
	EndGlobalSection
EndGlobal
"
`;

exports[`C# Hermes Application: App.xaml 1`] = `
"﻿<react:ReactApplication
    x:Class=\\"SnapshotApp.App\\"
    xmlns=\\"http://schemas.microsoft.com/winfx/2006/xaml/presentation\\"
    xmlns:x=\\"http://schemas.microsoft.com/winfx/2006/xaml\\"
    xmlns:local=\\"using:SnapshotApp\\"
    xmlns:react=\\"using:Microsoft.ReactNative\\">
    <Application.Resources>
        <XamlControlsResources xmlns=\\"using:Microsoft.UI.Xaml.Controls\\" />
    </Application.Resources>
</react:ReactApplication>
"
`;

exports[`C# Hermes Application: App.xaml.cs 1`] = `
"using Microsoft.ReactNative;
#if USE_WINUI3
using Microsoft.UI.Xaml;
using Microsoft.UI.Xaml.Controls;
#else
using Windows.ApplicationModel.Activation;
using Windows.UI.Xaml;
using Windows.UI.Xaml.Controls;
#endif

namespace SnapshotApp
{
    sealed partial class App : ReactApplication
    {
        public App()
        {
#if BUNDLE
            JavaScriptBundleFile = \\"index.windows\\";
            InstanceSettings.UseWebDebugger = false;
            InstanceSettings.UseFastRefresh = false;
#else
            JavaScriptBundleFile = \\"index\\";
            InstanceSettings.UseWebDebugger = true;
            InstanceSettings.UseFastRefresh = true;
#endif

#if DEBUG
            InstanceSettings.UseDeveloperSupport = true;
#else
            InstanceSettings.UseDeveloperSupport = false;
#endif

            Microsoft.ReactNative.Managed.AutolinkedNativeModules.RegisterAutolinkedNativeModulePackages(PackageProviders); // Includes any autolinked modules

            PackageProviders.Add(new ReactPackageProvider());

            InitializeComponent();
        }

        /// <summary>
        /// Invoked when the application is launched normally by the end user.  Other entry points
        /// will be used such as when the application is launched to open a specific file.
        /// </summary>
        /// <param name=\\"e\\">Details about the launch request and process.</param>
        protected override void OnLaunched(LaunchActivatedEventArgs e)
        {
            base.OnLaunched(e);
            var frame = (Frame)Window.Current.Content;
            frame.Navigate(typeof(MainPage), e.Arguments);
        }

        /// <summary>
        /// Invoked when the application is activated by some means other than normal launching.
        /// </summary>
        protected override void OnActivated(Windows.ApplicationModel.Activation.IActivatedEventArgs e)
        {
            var preActivationContent = Window.Current.Content;
            base.OnActivated(e);
            if (preActivationContent == null && Window.Current != null)
            {
                // Display the initial content
                var frame = (Frame)Window.Current.Content;
                frame.Navigate(typeof(MainPage), null);
            }
        }
    }
}
"
`;

exports[`C# Hermes Application: AssemblyInfo.cs 1`] = `
"﻿using System.Reflection;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;

// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
[assembly: AssemblyTitle(\\"SnapshotApp\\")]
[assembly: AssemblyDescription(\\"\\")]
[assembly: AssemblyConfiguration(\\"\\")]
[assembly: AssemblyCompany(\\"\\")]
[assembly: AssemblyProduct(\\"SnapshotApp\\")]
[assembly: AssemblyCopyright(\\"Copyright ©  2019\\")]
[assembly: AssemblyTrademark(\\"\\")]
[assembly: AssemblyCulture(\\"\\")]

// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Build and Revision Numbers 
// by using the '*' as shown below:
// [assembly: AssemblyVersion(\\"1.0.*\\")]
[assembly: AssemblyVersion(\\"1.0.0.0\\")]
[assembly: AssemblyFileVersion(\\"1.0.0.0\\")]
[assembly: ComVisible(false)]"
`;

exports[`C# Hermes Application: AutolinkedNativeModules.g.cs 1`] = `
"﻿// AutolinkedNativeModules.g.cs contents generated by \\"react-native autolink-windows\\"

using System.Collections.Generic;

namespace Microsoft.ReactNative.Managed
{
    internal static class AutolinkedNativeModules
    {
        internal static void RegisterAutolinkedNativeModulePackages(IList<IReactPackageProvider> packageProviders)
        { 
        }
    }
}
"
`;

exports[`C# Hermes Application: AutolinkedNativeModules.g.props 1`] = `
"<?xml version=\\"1.0\\" encoding=\\"utf-8\\"?>
<Project xmlns=\\"http://schemas.microsoft.com/developer/msbuild/2003\\">
  <!-- AutolinkedNativeModules.g.props contents generated by \\"react-native autolink-windows\\" -->
  <PropertyGroup>
  </PropertyGroup>
</Project>
"
`;

exports[`C# Hermes Application: AutolinkedNativeModules.g.targets 1`] = `
"<?xml version=\\"1.0\\" encoding=\\"utf-8\\"?>
<Project xmlns=\\"http://schemas.microsoft.com/developer/msbuild/2003\\">
  <!-- AutolinkedNativeModules.g.targets contents generated by \\"react-native autolink-windows\\" -->
  <ItemGroup>
  </ItemGroup>
</Project>
"
`;

exports[`C# Hermes Application: Default.rd.xml 1`] = `
"<!--
    This file contains Runtime Directives used by .NET Native. The defaults here are suitable for most
    developers. However, you can modify these parameters to modify the behavior of the .NET Native
    optimizer.

    Runtime Directives are documented at https://go.microsoft.com/fwlink/?LinkID=391919

    To fully enable reflection for App1.MyClass and all of its public/private members
    <Type Name=\\"App1.MyClass\\" Dynamic=\\"Required All\\"/>

    To enable dynamic creation of the specific instantiation of AppClass<T> over System.Int32
    <TypeInstantiation Name=\\"App1.AppClass\\" Arguments=\\"System.Int32\\" Activate=\\"Required Public\\" />

    Using the Namespace directive to apply reflection policy to all the types in a particular namespace
    <Namespace Name=\\"DataClasses.ViewModels\\" Serialize=\\"All\\" />
-->

<Directives xmlns=\\"http://schemas.microsoft.com/netfx/2013/01/metadata\\">
  <Application>
    <!--
      An Assembly element with Name=\\"*Application*\\" applies to all assemblies in
      the application package. The asterisks are not wildcards.
    -->
    <Assembly Name=\\"*Application*\\" Dynamic=\\"Required All\\" />
    
    
    <!-- Add your application specific runtime directives here. -->
    <Namespace Name=\\"Microsoft.ReactNative\\" Dynamic=\\"Required All\\" MarshalObject=\\"Required All\\" />
    <Namespace Name=\\"Microsoft.ReactNative.Managed\\" Dynamic=\\"Required All\\" MarshalObject=\\"Required All\\" />

  </Application>
</Directives>"
`;

exports[`C# Hermes Application: ExperimentalFeatures.props 1`] = `
"<?xml version=\\"1.0\\" encoding=\\"utf-8\\"?>
<Project xmlns=\\"http://schemas.microsoft.com/developer/msbuild/2003\\">

  <!--
    This file contains some important settings that will apply globally for
    your app and *all* native modules your app consumes. These values were
    set when you created the app project, and in some cases cannot be
    simply changed here without recreating a new project.
  -->

  <PropertyGroup Label=\\"Microsoft.ReactNative Experimental Features\\">
    <!--
      Enables default usage of Hermes.
      
      See https://microsoft.github.io/react-native-windows/docs/hermes
    -->
    <UseHermes>true</UseHermes>

    <!--
      Changes compilation to assume use of WinUI 3 instead of System XAML.
      Requires creation of new project.

      See https://microsoft.github.io/react-native-windows/docs/winui3
    -->
    <UseWinUI3>false</UseWinUI3>

    <!--
      Changes compilation to assume use of Microsoft.ReactNative NuGet packages
      instead of building the framework from source.
      Requires creation of new project.

      See https://microsoft.github.io/react-native-windows/docs/nuget
    -->
    <UseExperimentalNuget>false</UseExperimentalNuget>
  
  </PropertyGroup>

</Project>
"
`;

exports[`C# Hermes Application: MainPage.xaml 1`] = `
"<Page
    x:Class=\\"SnapshotApp.MainPage\\"
    xmlns=\\"http://schemas.microsoft.com/winfx/2006/xaml/presentation\\"
    xmlns:x=\\"http://schemas.microsoft.com/winfx/2006/xaml\\"
    xmlns:local=\\"using:SnapshotApp\\"
    xmlns:react=\\"using:Microsoft.ReactNative\\"
    xmlns:d=\\"http://schemas.microsoft.com/expression/blend/2008\\"
    xmlns:mc=\\"http://schemas.openxmlformats.org/markup-compatibility/2006\\"
    mc:Ignorable=\\"d\\"
    Background=\\"{ThemeResource ApplicationPageBackgroundThemeBrush}\\">
    <react:ReactRootView 
        x:Name=\\"reactRootView\\"
        ComponentName=\\"SnapshotApp\\"
        Background=\\"{ThemeResource ApplicationPageBackgroundThemeBrush}\\"
        MinHeight=\\"400\\"/>
</Page>
"
`;

exports[`C# Hermes Application: MainPage.xaml.cs 1`] = `
"using Microsoft.ReactNative;
using System;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System.Runtime.InteropServices.WindowsRuntime;
using Windows.Foundation;
using Windows.Foundation.Collections;
#if !USE_WINUI3
using Windows.UI.Xaml;
using Windows.UI.Xaml.Controls;
using Windows.UI.Xaml.Controls.Primitives;
using Windows.UI.Xaml.Data;
using Windows.UI.Xaml.Input;
using Windows.UI.Xaml.Media;
using Windows.UI.Xaml.Navigation;
#else
using Microsoft.UI.Xaml;
using Microsoft.UI.Xaml.Controls;
using Microsoft.UI.Xaml.Controls.Primitives;
using Microsoft.UI.Xaml.Data;
using Microsoft.UI.Xaml.Input;
using Microsoft.UI.Xaml.Media;
using Microsoft.UI.Xaml.Navigation;
#endif

// The Blank Page item template is documented at https://go.microsoft.com/fwlink/?LinkId=234238

namespace SnapshotApp
{
    /// <summary>
    /// An empty page that can be used on its own or navigated to within a Frame.
    /// </summary>
    public sealed partial class MainPage : Page
    {
        public MainPage()
        {
            this.InitializeComponent();
            var app = Application.Current as App;
            reactRootView.ReactNativeHost = app.Host;
        }
    }
}
"
`;

exports[`C# Hermes Application: NuGet.Config 1`] = `
"<?xml version=\\"1.0\\" encoding=\\"utf-8\\"?>
<configuration>
  <config>
    <add key=\\"repositoryPath\\" value=\\"packages\\" />
  </config>
  <packageSources>
    <clear />
    <add key=\\"react-native\\" value=\\"https://pkgs.dev.azure.com/ms/react-native/_packaging/react-native-public/nuget/v3/index.json\\" />
    <add key=\\"Nuget.org\\" value=\\"https://api.nuget.org/v3/index.json\\" />
  </packageSources>
  <disabledPackageSources>
    <clear />
  </disabledPackageSources>  
</configuration>
"
`;

exports[`C# Hermes Application: Package.appxmanifest 1`] = `
"﻿<?xml version=\\"1.0\\" encoding=\\"utf-8\\"?>

<Package
  xmlns=\\"http://schemas.microsoft.com/appx/manifest/foundation/windows10\\"
  xmlns:mp=\\"http://schemas.microsoft.com/appx/2014/phone/manifest\\"
  xmlns:uap=\\"http://schemas.microsoft.com/appx/manifest/uap/windows10\\"
  IgnorableNamespaces=\\"uap mp\\">

  <Identity
    Name=\\"6658caef-b57c-4e3e-a893-bca506bcee5b\\"
    Publisher=\\"CN=nickg\\"
    Version=\\"1.0.0.0\\" />

  <mp:PhoneIdentity PhoneProductId=\\"6658caef-b57c-4e3e-a893-bca506bcee5b\\" PhonePublisherId=\\"00000000-0000-0000-0000-000000000000\\"/>

  <Properties>
    <DisplayName>SnapshotApp</DisplayName>
    <PublisherDisplayName>nickg</PublisherDisplayName>
    <Logo>Assets\\\\StoreLogo.png</Logo>
  </Properties>

  <Dependencies>
    <TargetDeviceFamily Name=\\"Windows.Universal\\" MinVersion=\\"10.0.0.0\\" MaxVersionTested=\\"10.0.0.0\\" />
  </Dependencies>

  <Resources>
    <Resource Language=\\"x-generate\\"/>
  </Resources>

  <Applications>
    <Application
      Id=\\"App\\"
      Executable=\\"$targetnametoken$.exe\\"
      EntryPoint=\\"SnapshotApp.App\\">
      <uap:VisualElements
        DisplayName=\\"SnapshotApp\\"
        Square150x150Logo=\\"Assets\\\\Square150x150Logo.png\\"
        Square44x44Logo=\\"Assets\\\\Square44x44Logo.png\\"
        Description=\\"SnapshotApp\\"
        BackgroundColor=\\"transparent\\">
        <uap:DefaultTile Wide310x150Logo=\\"Assets\\\\Wide310x150Logo.png\\"/>
        <uap:SplashScreen Image=\\"Assets\\\\SplashScreen.png\\" />
      </uap:VisualElements>
    </Application>
  </Applications>

  <Capabilities>
    <Capability Name=\\"internetClient\\" />
  </Capabilities>
</Package>"
`;

exports[`C# Hermes Application: ReactPackageProvider.cs 1`] = `
"using Microsoft.ReactNative;

namespace SnapshotApp
{
    public partial class ReactPackageProvider : IReactPackageProvider
    {
        public void CreatePackage(IReactPackageBuilder packageBuilder)
        {
            CreatePackageImplementation(packageBuilder);
        }

        /// <summary>
        /// This method is implemented by the C# code generator
        /// </summary>
        partial void CreatePackageImplementation(IReactPackageBuilder packageBuilder);
    }
}
"
`;

exports[`C# Hermes Application: SnapshotApp.csproj 1`] = `
"﻿<?xml version=\\"1.0\\" encoding=\\"utf-8\\"?>
<Project ToolsVersion=\\"Current\\" DefaultTargets=\\"Build\\" xmlns=\\"http://schemas.microsoft.com/developer/msbuild/2003\\">
  <Import Project=\\"$(MSBuildExtensionsPath)\\\\$(MSBuildToolsVersion)\\\\Microsoft.Common.props\\" Condition=\\"Exists('$(MSBuildExtensionsPath)\\\\$(MSBuildToolsVersion)\\\\Microsoft.Common.props')\\" />
  <Import Project=\\"$(SolutionDir)\\\\ExperimentalFeatures.props\\" Condition=\\"Exists('$(SolutionDir)\\\\ExperimentalFeatures.props')\\" />
  <PropertyGroup Label=\\"ReactNativeWindowsProps\\">
    <ReactNativeWindowsDir Condition=\\"'$(ReactNativeWindowsDir)' == ''\\">$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), 'node_modules\\\\react-native-windows\\\\package.json'))\\\\node_modules\\\\react-native-windows\\\\</ReactNativeWindowsDir>
  </PropertyGroup>
  <PropertyGroup>
    <Configuration Condition=\\" '$(Configuration)' == '' \\">Debug</Configuration>
    <Platform Condition=\\" '$(Platform)' == '' \\">x86</Platform>
    <ProjectGuid>{49B07DD8-FB90-48C9-A8BA-D558D93F68FF}</ProjectGuid>
    <OutputType>AppContainerExe</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>SnapshotApp</RootNamespace>
    <AssemblyName>SnapshotApp</AssemblyName>
    <DefaultLanguage>en-US</DefaultLanguage>
    <TargetPlatformIdentifier>UAP</TargetPlatformIdentifier>
    <TargetPlatformVersion Condition=\\" '$(TargetPlatformVersion)' == '' \\">10.0.19041.0</TargetPlatformVersion>
    <TargetPlatformMinVersion>10.0.16299.0</TargetPlatformMinVersion>
    <MinimumVisualStudioVersion>16.0</MinimumVisualStudioVersion>
    <FileAlignment>512</FileAlignment>
    <ProjectTypeGuids>{A5A43C5B-DE2A-4C0C-9213-0A381AF9435A};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <WindowsXamlEnableOverview>true</WindowsXamlEnableOverview>
    <AppxGeneratePrisForPortableLibrariesEnabled>false</AppxGeneratePrisForPortableLibrariesEnabled>
    <LangVersion>7.3</LangVersion>
  </PropertyGroup>
  <PropertyGroup Condition=\\"'$(Configuration)|$(Platform)' == 'Debug|x86'\\">
    <DebugSymbols>true</DebugSymbols>
    <OutputPath>bin\\\\x86\\\\Debug\\\\</OutputPath>
    <DefineConstants>DEBUG;TRACE;NETFX_CORE;WINDOWS_UWP</DefineConstants>
    <NoWarn>;2008</NoWarn>
    <DebugType>full</DebugType>
    <PlatformTarget>x86</PlatformTarget>
    <UseVSHostingProcess>false</UseVSHostingProcess>
    <ErrorReport>prompt</ErrorReport>
    <Prefer32Bit>true</Prefer32Bit>
  </PropertyGroup>
  <PropertyGroup Condition=\\"'$(Configuration)|$(Platform)' == 'Release|x86'\\">
    <OutputPath>bin\\\\x86\\\\Release\\\\</OutputPath>
    <DefineConstants>TRACE;NETFX_CORE;WINDOWS_UWP</DefineConstants>
    <Optimize>true</Optimize>
    <NoWarn>;2008</NoWarn>
    <DebugType>pdbonly</DebugType>
    <PlatformTarget>x86</PlatformTarget>
    <UseVSHostingProcess>false</UseVSHostingProcess>
    <ErrorReport>prompt</ErrorReport>
    <Prefer32Bit>true</Prefer32Bit>
    <UseDotNetNativeToolchain>true</UseDotNetNativeToolchain>
  </PropertyGroup>
  <PropertyGroup Condition=\\"'$(Configuration)|$(Platform)' == 'Debug|ARM64'\\">
    <DebugSymbols>true</DebugSymbols>
    <OutputPath>bin\\\\ARM64\\\\Debug\\\\</OutputPath>
    <DefineConstants>DEBUG;TRACE;NETFX_CORE;WINDOWS_UWP</DefineConstants>
    <NoWarn>;2008</NoWarn>
    <DebugType>full</DebugType>
    <PlatformTarget>ARM64</PlatformTarget>
    <UseVSHostingProcess>false</UseVSHostingProcess>
    <ErrorReport>prompt</ErrorReport>
    <Prefer32Bit>true</Prefer32Bit>
  </PropertyGroup>
  <PropertyGroup Condition=\\"'$(Configuration)|$(Platform)' == 'Release|ARM64'\\">
    <OutputPath>bin\\\\ARM64\\\\Release\\\\</OutputPath>
    <DefineConstants>TRACE;NETFX_CORE;WINDOWS_UWP</DefineConstants>
    <Optimize>true</Optimize>
    <NoWarn>;2008</NoWarn>
    <DebugType>pdbonly</DebugType>
    <PlatformTarget>ARM64</PlatformTarget>
    <UseVSHostingProcess>false</UseVSHostingProcess>
    <ErrorReport>prompt</ErrorReport>
    <Prefer32Bit>true</Prefer32Bit>
    <UseDotNetNativeToolchain>true</UseDotNetNativeToolchain>
  </PropertyGroup>
  <PropertyGroup Condition=\\"'$(Configuration)|$(Platform)' == 'Debug|x64'\\">
    <DebugSymbols>true</DebugSymbols>
    <OutputPath>bin\\\\x64\\\\Debug\\\\</OutputPath>
    <DefineConstants>DEBUG;TRACE;NETFX_CORE;WINDOWS_UWP</DefineConstants>
    <NoWarn>;2008</NoWarn>
    <DebugType>full</DebugType>
    <PlatformTarget>x64</PlatformTarget>
    <UseVSHostingProcess>false</UseVSHostingProcess>
    <ErrorReport>prompt</ErrorReport>
    <Prefer32Bit>true</Prefer32Bit>
  </PropertyGroup>
  <PropertyGroup Condition=\\"'$(Configuration)|$(Platform)' == 'Release|x64'\\">
    <OutputPath>bin\\\\x64\\\\Release\\\\</OutputPath>
    <DefineConstants>TRACE;NETFX_CORE;WINDOWS_UWP</DefineConstants>
    <Optimize>true</Optimize>
    <NoWarn>;2008</NoWarn>
    <DebugType>pdbonly</DebugType>
    <PlatformTarget>x64</PlatformTarget>
    <UseVSHostingProcess>false</UseVSHostingProcess>
    <ErrorReport>prompt</ErrorReport>
    <Prefer32Bit>true</Prefer32Bit>
    <UseDotNetNativeToolchain>true</UseDotNetNativeToolchain>
  </PropertyGroup>
  <PropertyGroup>
    <RestoreProjectStyle>PackageReference</RestoreProjectStyle>
  </PropertyGroup>
  <ItemGroup>
    <Compile Include=\\"App.xaml.cs\\">
      <DependentUpon>App.xaml</DependentUpon>
    </Compile>
    <Compile Include=\\"MainPage.xaml.cs\\">
      <DependentUpon>MainPage.xaml</DependentUpon>
    </Compile>
    <Compile Include=\\"Properties\\\\AssemblyInfo.cs\\" />
    <Compile Include=\\"AutolinkedNativeModules.g.cs\\" />
    <Compile Include=\\"ReactPackageProvider.cs\\" />
  </ItemGroup>
  <ItemGroup>
    <AppxManifest Include=\\"Package.appxmanifest\\">
      <SubType>Designer</SubType>
    </AppxManifest>
  </ItemGroup>
  <ItemGroup>
    <Content Include=\\"Properties\\\\Default.rd.xml\\" />
    <Content Include=\\"Assets\\\\LockScreenLogo.scale-200.png\\" />
    <Content Include=\\"Assets\\\\SplashScreen.scale-200.png\\" />
    <Content Include=\\"Assets\\\\Square150x150Logo.scale-200.png\\" />
    <Content Include=\\"Assets\\\\Square44x44Logo.scale-200.png\\" />
    <Content Include=\\"Assets\\\\Square44x44Logo.targetsize-24_altform-unplated.png\\" />
    <Content Include=\\"Assets\\\\StoreLogo.png\\" />
    <Content Include=\\"Assets\\\\Wide310x150Logo.scale-200.png\\" />
  </ItemGroup>
  <ItemGroup>
    <ApplicationDefinition Include=\\"App.xaml\\">
      <Generator>MSBuild:Compile</Generator>
      <SubType>Designer</SubType>
    </ApplicationDefinition>
    <Page Include=\\"MainPage.xaml\\">
      <Generator>MSBuild:Compile</Generator>
      <SubType>Designer</SubType>
    </Page>
  </ItemGroup>
  <PropertyGroup Condition=\\" '$(VisualStudioVersion)' == '' or '$(VisualStudioVersion)' &lt; '16.0' \\">
    <VisualStudioVersion>16.0</VisualStudioVersion>
  </PropertyGroup>
  <Import Project=\\"$(MSBuildExtensionsPath)\\\\Microsoft\\\\WindowsXaml\\\\v$(VisualStudioVersion)\\\\Microsoft.Windows.UI.Xaml.CSharp.targets\\" />
  <ImportGroup Label=\\"ReactNativeWindowsPropertySheets\\">
    <Import Project=\\"$(ReactNativeWindowsDir)\\\\PropertySheets\\\\External\\\\Microsoft.ReactNative.Uwp.CSharpApp.props\\" Condition=\\"Exists('$(ReactNativeWindowsDir)\\\\PropertySheets\\\\External\\\\Microsoft.ReactNative.Uwp.CSharpApp.props')\\" />
  </ImportGroup>
  <Choose>
    <When Condition=\\"'$(UseWinUI3)'!='true'\\">
      <ItemGroup>
        <PackageReference Include=\\"Microsoft.UI.Xaml\\" >
          <Version>$(WinUI2xVersion)</Version>
        </PackageReference>
      </ItemGroup>
    </When>
    <Otherwise>
      <ItemGroup>
        <PackageReference Include=\\"Microsoft.WinUI\\">
          <Version>$(WinUI3Version)</Version>
        </PackageReference>
      </ItemGroup>
    </Otherwise>
  </Choose>
  <ItemGroup>
    <PackageReference Include=\\"Microsoft.NETCore.UniversalWindowsPlatform\\">
      <Version>6.2.9</Version>
    </PackageReference>
    <PackageReference Include=\\"ReactNative.Hermes.Windows\\">
      <Version>0.9.0-ms.6</Version>
    </PackageReference>
  </ItemGroup>
  <ImportGroup Label=\\"ReactNativeWindowsTargets\\">
    <Import Project=\\"$(ReactNativeWindowsDir)\\\\PropertySheets\\\\External\\\\Microsoft.ReactNative.Uwp.CSharpApp.targets\\" Condition=\\"Exists('$(ReactNativeWindowsDir)\\\\PropertySheets\\\\External\\\\Microsoft.ReactNative.Uwp.CSharpApp.targets')\\" />
  </ImportGroup>
  <Target Name=\\"EnsureReactNativeWindowsTargets\\" BeforeTargets=\\"PrepareForBuild\\">
    <PropertyGroup>
      <ErrorText>This project references targets in your node_modules\\\\react-native-windows folder that are missing. The missing file is {0}.</ErrorText>
    </PropertyGroup>
    <Error Condition=\\"!Exists('$(ReactNativeWindowsDir)\\\\PropertySheets\\\\External\\\\Microsoft.ReactNative.Uwp.CSharpApp.props')\\" Text=\\"$([System.String]::Format('$(ErrorText)', '$(ReactNativeWindowsDir)\\\\PropertySheets\\\\External\\\\Microsoft.ReactNative.Uwp.CSharpApp.props'))\\" />
    <Error Condition=\\"!Exists('$(ReactNativeWindowsDir)\\\\PropertySheets\\\\External\\\\Microsoft.ReactNative.Uwp.CSharpApp.targets')\\" Text=\\"$([System.String]::Format('$(ErrorText)', '$(ReactNativeWindowsDir)\\\\PropertySheets\\\\External\\\\Microsoft.ReactNative.Uwp.CSharpApp.targets'))\\" />
  </Target>
</Project>
"
`;

exports[`C# Hermes Application: SnapshotApp.sln 1`] = `
"﻿
Microsoft Visual Studio Solution File, Format Version 12.00
# Visual Studio Version 16
VisualStudioVersion = 16.0.29215.179
MinimumVisualStudioVersion = 10.0.40219.1
Project(\\"{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}\\") = \\"SnapshotApp\\", \\"SnapshotApp\\\\SnapshotApp.csproj\\", \\"{49B07DD8-FB90-48C9-A8BA-D558D93F68FF}\\"
EndProject
Project(\\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\\") = \\"Folly\\", \\"..\\\\node_modules\\\\react-native-windows\\\\Folly\\\\Folly.vcxproj\\", \\"{A990658C-CE31-4BCC-976F-0FC6B1AF693D}\\"
EndProject
Project(\\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\\") = \\"fmt\\", \\"..\\\\node_modules\\\\react-native-windows\\\\fmt\\\\fmt.vcxproj\\", \\"{14B93DC8-FD93-4A6D-81CB-8BC96644501C}\\"
EndProject
Project(\\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\\") = \\"ReactCommon\\", \\"..\\\\node_modules\\\\react-native-windows\\\\ReactCommon\\\\ReactCommon.vcxproj\\", \\"{A9D95A91-4DB7-4F72-BEB6-FE8A5C89BFBD}\\"
	ProjectSection(ProjectDependencies) = postProject
		{A990658C-CE31-4BCC-976F-0FC6B1AF693D} = {A990658C-CE31-4BCC-976F-0FC6B1AF693D}
	EndProjectSection
EndProject
Project(\\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\\") = \\"Chakra\\", \\"..\\\\node_modules\\\\react-native-windows\\\\Chakra\\\\Chakra.vcxitems\\", \\"{C38970C0-5FBF-4D69-90D8-CBAC225AE895}\\"
EndProject
Project(\\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\\") = \\"Microsoft.ReactNative\\", \\"..\\\\node_modules\\\\react-native-windows\\\\Microsoft.ReactNative\\\\Microsoft.ReactNative.vcxproj\\", \\"{F7D32BD0-2749-483E-9A0D-1635EF7E3136}\\"
EndProject
Project(\\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\\") = \\"Microsoft.ReactNative.Cxx\\", \\"..\\\\node_modules\\\\react-native-windows\\\\Microsoft.ReactNative.Cxx\\\\Microsoft.ReactNative.Cxx.vcxitems\\", \\"{DA8B35B3-DA00-4B02-BDE6-6A397B3FD46B}\\"
EndProject
Project(\\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\\") = \\"Common\\", \\"..\\\\node_modules\\\\react-native-windows\\\\Common\\\\Common.vcxproj\\", \\"{FCA38F3C-7C73-4C47-BE4E-32F77FA8538D}\\"
EndProject
Project(\\"{2150E333-8FDC-42A3-9474-1A3956D46DE8}\\") = \\"ReactNative\\", \\"ReactNative\\", \\"{5EA20F54-880A-49F3-99FA-4B3FE54E8AB1}\\"
EndProject
Project(\\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\\") = \\"Microsoft.ReactNative.Shared\\", \\"..\\\\node_modules\\\\react-native-windows\\\\Shared\\\\Shared.vcxitems\\", \\"{2049DBE9-8D13-42C9-AE4B-413AE38FFFD0}\\"
EndProject
Project(\\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\\") = \\"Mso\\", \\"..\\\\node_modules\\\\react-native-windows\\\\Mso\\\\Mso.vcxitems\\", \\"{84E05BFA-CBAF-4F0D-BFB6-4CE85742A57E}\\"
EndProject
Project(\\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\\") = \\"Include\\", \\"..\\\\node_modules\\\\react-native-windows\\\\include\\\\Include.vcxitems\\", \\"{EF074BA1-2D54-4D49-A28E-5E040B47CD2E}\\"
EndProject
Project(\\"{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}\\") = \\"Microsoft.ReactNative.Managed\\", \\"..\\\\node_modules\\\\react-native-windows\\\\Microsoft.ReactNative.Managed\\\\Microsoft.ReactNative.Managed.csproj\\", \\"{F2824844-CE15-4242-9420-308923CD76C3}\\"
EndProject
Project(\\"{9A19103F-16F7-4668-BE54-9A1E7A4F7556}\\") = \\"Microsoft.ReactNative.Managed.CodeGen\\", \\"..\\\\node_modules\\\\react-native-windows\\\\Microsoft.ReactNative.Managed.CodeGen\\\\Microsoft.ReactNative.Managed.CodeGen.csproj\\", \\"{ADED4FBE-887D-4271-AF24-F0823BCE7961}\\"
EndProject
Global
	GlobalSection(SharedMSBuildProjectFiles) = preSolution
		..\\\\node_modules\\\\react-native-windows\\\\Shared\\\\Shared.vcxitems*{2049dbe9-8d13-42c9-ae4b-413ae38fffd0}*SharedItemsImports = 9
		..\\\\node_modules\\\\react-native-windows\\\\Mso\\\\Mso.vcxitems*{84e05bfa-cbaf-4f0d-bfb6-4ce85742a57e}*SharedItemsImports = 9
		..\\\\node_modules\\\\react-native-windows\\\\Chakra\\\\Chakra.vcxitems*{c38970c0-5fbf-4d69-90d8-cbac225ae895}*SharedItemsImports = 9
		..\\\\node_modules\\\\react-native-windows\\\\Microsoft.ReactNative.Cxx\\\\Microsoft.ReactNative.Cxx.vcxitems*{da8b35b3-da00-4b02-bde6-6a397b3fd46b}*SharedItemsImports = 9
		..\\\\node_modules\\\\react-native-windows\\\\include\\\\Include.vcxitems*{ef074ba1-2d54-4d49-a28e-5e040b47cd2e}*SharedItemsImports = 9
		..\\\\node_modules\\\\react-native-windows\\\\Chakra\\\\Chakra.vcxitems*{f7d32bd0-2749-483e-9a0d-1635ef7e3136}*SharedItemsImports = 4
		..\\\\node_modules\\\\react-native-windows\\\\Microsoft.ReactNative.Cxx\\\\Microsoft.ReactNative.Cxx.vcxitems*{f7d32bd0-2749-483e-9a0d-1635ef7e3136}*SharedItemsImports = 4
		..\\\\node_modules\\\\react-native-windows\\\\Mso\\\\Mso.vcxitems*{f7d32bd0-2749-483e-9a0d-1635ef7e3136}*SharedItemsImports = 4
		..\\\\node_modules\\\\react-native-windows\\\\Shared\\\\Shared.vcxitems*{f7d32bd0-2749-483e-9a0d-1635ef7e3136}*SharedItemsImports = 4
	EndGlobalSection
	GlobalSection(SolutionConfigurationPlatforms) = preSolution
		Debug|ARM64 = Debug|ARM64
		Debug|x64 = Debug|x64
		Debug|x86 = Debug|x86
		Release|ARM64 = Release|ARM64
		Release|x64 = Release|x64
		Release|x86 = Release|x86
	EndGlobalSection
	GlobalSection(ProjectConfigurationPlatforms) = postSolution
		{49B07DD8-FB90-48C9-A8BA-D558D93F68FF}.Debug|ARM64.ActiveCfg = Debug|ARM64
		{49B07DD8-FB90-48C9-A8BA-D558D93F68FF}.Debug|ARM64.Build.0 = Debug|ARM64
		{49B07DD8-FB90-48C9-A8BA-D558D93F68FF}.Debug|ARM64.Deploy.0 = Debug|ARM64
		{49B07DD8-FB90-48C9-A8BA-D558D93F68FF}.Debug|x64.ActiveCfg = Debug|x64
		{49B07DD8-FB90-48C9-A8BA-D558D93F68FF}.Debug|x64.Build.0 = Debug|x64
		{49B07DD8-FB90-48C9-A8BA-D558D93F68FF}.Debug|x64.Deploy.0 = Debug|x64
		{49B07DD8-FB90-48C9-A8BA-D558D93F68FF}.Debug|x86.ActiveCfg = Debug|x86
		{49B07DD8-FB90-48C9-A8BA-D558D93F68FF}.Debug|x86.Build.0 = Debug|x86
		{49B07DD8-FB90-48C9-A8BA-D558D93F68FF}.Debug|x86.Deploy.0 = Debug|x86
		{49B07DD8-FB90-48C9-A8BA-D558D93F68FF}.Release|ARM64.ActiveCfg = Release|ARM64
		{49B07DD8-FB90-48C9-A8BA-D558D93F68FF}.Release|ARM64.Build.0 = Release|ARM64
		{49B07DD8-FB90-48C9-A8BA-D558D93F68FF}.Release|ARM64.Deploy.0 = Release|ARM64
		{49B07DD8-FB90-48C9-A8BA-D558D93F68FF}.Release|x64.ActiveCfg = Release|x64
		{49B07DD8-FB90-48C9-A8BA-D558D93F68FF}.Release|x64.Build.0 = Release|x64
		{49B07DD8-FB90-48C9-A8BA-D558D93F68FF}.Release|x64.Deploy.0 = Release|x64
		{49B07DD8-FB90-48C9-A8BA-D558D93F68FF}.Release|x86.ActiveCfg = Release|x86
		{49B07DD8-FB90-48C9-A8BA-D558D93F68FF}.Release|x86.Build.0 = Release|x86
		{49B07DD8-FB90-48C9-A8BA-D558D93F68FF}.Release|x86.Deploy.0 = Release|x86
		{A990658C-CE31-4BCC-976F-0FC6B1AF693D}.Debug|ARM64.ActiveCfg = Debug|ARM64
		{A990658C-CE31-4BCC-976F-0FC6B1AF693D}.Debug|ARM64.Build.0 = Debug|ARM64
		{A990658C-CE31-4BCC-976F-0FC6B1AF693D}.Debug|x64.ActiveCfg = Debug|x64
		{A990658C-CE31-4BCC-976F-0FC6B1AF693D}.Debug|x64.Build.0 = Debug|x64
		{A990658C-CE31-4BCC-976F-0FC6B1AF693D}.Debug|x86.ActiveCfg = Debug|Win32
		{A990658C-CE31-4BCC-976F-0FC6B1AF693D}.Debug|x86.Build.0 = Debug|Win32
		{A990658C-CE31-4BCC-976F-0FC6B1AF693D}.Release|ARM64.ActiveCfg = Release|ARM64
		{A990658C-CE31-4BCC-976F-0FC6B1AF693D}.Release|ARM64.Build.0 = Release|ARM64
		{A990658C-CE31-4BCC-976F-0FC6B1AF693D}.Release|x64.ActiveCfg = Release|x64
		{A990658C-CE31-4BCC-976F-0FC6B1AF693D}.Release|x64.Build.0 = Release|x64
		{A990658C-CE31-4BCC-976F-0FC6B1AF693D}.Release|x86.ActiveCfg = Release|Win32
		{A990658C-CE31-4BCC-976F-0FC6B1AF693D}.Release|x86.Build.0 = Release|Win32
		{A9D95A91-4DB7-4F72-BEB6-FE8A5C89BFBD}.Debug|ARM64.ActiveCfg = Debug|ARM64
		{A9D95A91-4DB7-4F72-BEB6-FE8A5C89BFBD}.Debug|ARM64.Build.0 = Debug|ARM64
		{A9D95A91-4DB7-4F72-BEB6-FE8A5C89BFBD}.Debug|x64.ActiveCfg = Debug|x64
		{A9D95A91-4DB7-4F72-BEB6-FE8A5C89BFBD}.Debug|x64.Build.0 = Debug|x64
		{A9D95A91-4DB7-4F72-BEB6-FE8A5C89BFBD}.Debug|x86.ActiveCfg = Debug|Win32
		{A9D95A91-4DB7-4F72-BEB6-FE8A5C89BFBD}.Debug|x86.Build.0 = Debug|Win32
		{A9D95A91-4DB7-4F72-BEB6-FE8A5C89BFBD}.Release|ARM64.ActiveCfg = Release|ARM64
		{A9D95A91-4DB7-4F72-BEB6-FE8A5C89BFBD}.Release|ARM64.Build.0 = Release|ARM64
		{A9D95A91-4DB7-4F72-BEB6-FE8A5C89BFBD}.Release|x64.ActiveCfg = Release|x64
		{A9D95A91-4DB7-4F72-BEB6-FE8A5C89BFBD}.Release|x64.Build.0 = Release|x64
		{A9D95A91-4DB7-4F72-BEB6-FE8A5C89BFBD}.Release|x86.ActiveCfg = Release|Win32
		{A9D95A91-4DB7-4F72-BEB6-FE8A5C89BFBD}.Release|x86.Build.0 = Release|Win32
		{F7D32BD0-2749-483E-9A0D-1635EF7E3136}.Debug|ARM64.ActiveCfg = Debug|ARM64
		{F7D32BD0-2749-483E-9A0D-1635EF7E3136}.Debug|ARM64.Build.0 = Debug|ARM64
		{F7D32BD0-2749-483E-9A0D-1635EF7E3136}.Debug|x64.ActiveCfg = Debug|x64
		{F7D32BD0-2749-483E-9A0D-1635EF7E3136}.Debug|x64.Build.0 = Debug|x64
		{F7D32BD0-2749-483E-9A0D-1635EF7E3136}.Debug|x86.ActiveCfg = Debug|Win32
		{F7D32BD0-2749-483E-9A0D-1635EF7E3136}.Debug|x86.Build.0 = Debug|Win32
		{F7D32BD0-2749-483E-9A0D-1635EF7E3136}.Release|ARM64.ActiveCfg = Release|ARM64
		{F7D32BD0-2749-483E-9A0D-1635EF7E3136}.Release|ARM64.Build.0 = Release|ARM64
		{F7D32BD0-2749-483E-9A0D-1635EF7E3136}.Release|x64.ActiveCfg = Release|x64
		{F7D32BD0-2749-483E-9A0D-1635EF7E3136}.Release|x64.Build.0 = Release|x64
		{F7D32BD0-2749-483E-9A0D-1635EF7E3136}.Release|x86.ActiveCfg = Release|Win32
		{F7D32BD0-2749-483E-9A0D-1635EF7E3136}.Release|x86.Build.0 = Release|Win32
		{FCA38F3C-7C73-4C47-BE4E-32F77FA8538D}.Debug|ARM64.ActiveCfg = Debug|ARM64
		{FCA38F3C-7C73-4C47-BE4E-32F77FA8538D}.Debug|ARM64.Build.0 = Debug|ARM64
		{FCA38F3C-7C73-4C47-BE4E-32F77FA8538D}.Debug|x64.ActiveCfg = Debug|x64
		{FCA38F3C-7C73-4C47-BE4E-32F77FA8538D}.Debug|x64.Build.0 = Debug|x64
		{FCA38F3C-7C73-4C47-BE4E-32F77FA8538D}.Debug|x86.ActiveCfg = Debug|Win32
		{FCA38F3C-7C73-4C47-BE4E-32F77FA8538D}.Debug|x86.Build.0 = Debug|Win32
		{FCA38F3C-7C73-4C47-BE4E-32F77FA8538D}.Release|ARM64.ActiveCfg = Release|ARM64
		{FCA38F3C-7C73-4C47-BE4E-32F77FA8538D}.Release|ARM64.Build.0 = Release|ARM64
		{FCA38F3C-7C73-4C47-BE4E-32F77FA8538D}.Release|x64.ActiveCfg = Release|x64
		{FCA38F3C-7C73-4C47-BE4E-32F77FA8538D}.Release|x64.Build.0 = Release|x64
		{FCA38F3C-7C73-4C47-BE4E-32F77FA8538D}.Release|x86.ActiveCfg = Release|Win32
		{FCA38F3C-7C73-4C47-BE4E-32F77FA8538D}.Release|x86.Build.0 = Release|Win32
		{F2824844-CE15-4242-9420-308923CD76C3}.Debug|ARM64.ActiveCfg = Debug|ARM64
		{F2824844-CE15-4242-9420-308923CD76C3}.Debug|ARM64.Build.0 = Debug|ARM64
		{F2824844-CE15-4242-9420-308923CD76C3}.Debug|x64.ActiveCfg = Debug|x64
		{F2824844-CE15-4242-9420-308923CD76C3}.Debug|x64.Build.0 = Debug|x64
		{F2824844-CE15-4242-9420-308923CD76C3}.Debug|x86.ActiveCfg = Debug|x86
		{F2824844-CE15-4242-9420-308923CD76C3}.Debug|x86.Build.0 = Debug|x86
		{F2824844-CE15-4242-9420-308923CD76C3}.Release|ARM64.ActiveCfg = Release|ARM64
		{F2824844-CE15-4242-9420-308923CD76C3}.Release|ARM64.Build.0 = Release|ARM64
		{F2824844-CE15-4242-9420-308923CD76C3}.Release|x64.ActiveCfg = Release|x64
		{F2824844-CE15-4242-9420-308923CD76C3}.Release|x64.Build.0 = Release|x64
		{F2824844-CE15-4242-9420-308923CD76C3}.Release|x86.ActiveCfg = Release|x86
		{F2824844-CE15-4242-9420-308923CD76C3}.Release|x86.Build.0 = Release|x86
		{ADED4FBE-887D-4271-AF24-F0823BCE7961}.Debug|ARM64.ActiveCfg = Debug|ARM64
		{ADED4FBE-887D-4271-AF24-F0823BCE7961}.Debug|ARM64.Build.0 = Debug|ARM64
		{ADED4FBE-887D-4271-AF24-F0823BCE7961}.Debug|x64.ActiveCfg = Debug|x64
		{ADED4FBE-887D-4271-AF24-F0823BCE7961}.Debug|x64.Build.0 = Debug|x64
		{ADED4FBE-887D-4271-AF24-F0823BCE7961}.Debug|x86.ActiveCfg = Debug|x86
		{ADED4FBE-887D-4271-AF24-F0823BCE7961}.Debug|x86.Build.0 = Debug|x86
		{ADED4FBE-887D-4271-AF24-F0823BCE7961}.Release|ARM64.ActiveCfg = Release|ARM64
		{ADED4FBE-887D-4271-AF24-F0823BCE7961}.Release|ARM64.Build.0 = Release|ARM64
		{ADED4FBE-887D-4271-AF24-F0823BCE7961}.Release|x64.ActiveCfg = Release|x64
		{ADED4FBE-887D-4271-AF24-F0823BCE7961}.Release|x64.Build.0 = Release|x64
		{ADED4FBE-887D-4271-AF24-F0823BCE7961}.Release|x86.ActiveCfg = Release|x86
		{ADED4FBE-887D-4271-AF24-F0823BCE7961}.Release|x86.Build.0 = Release|x86
		{14B93DC8-FD93-4A6D-81CB-8BC96644501C}.Debug|ARM64.ActiveCfg = Debug|ARM64
		{14B93DC8-FD93-4A6D-81CB-8BC96644501C}.Debug|ARM64.Build.0 = Debug|ARM64
		{14B93DC8-FD93-4A6D-81CB-8BC96644501C}.Debug|x64.ActiveCfg = Debug|x64
		{14B93DC8-FD93-4A6D-81CB-8BC96644501C}.Debug|x64.Build.0 = Debug|x64
		{14B93DC8-FD93-4A6D-81CB-8BC96644501C}.Debug|x86.ActiveCfg = Debug|Win32
		{14B93DC8-FD93-4A6D-81CB-8BC96644501C}.Debug|x86.Build.0 = Debug|Win32
		{14B93DC8-FD93-4A6D-81CB-8BC96644501C}.Debug|x86.Deploy.0 = Debug|Win32
		{14B93DC8-FD93-4A6D-81CB-8BC96644501C}.Release|ARM64.ActiveCfg = Release|ARM64
		{14B93DC8-FD93-4A6D-81CB-8BC96644501C}.Release|ARM64.Build.0 = Release|ARM64
		{14B93DC8-FD93-4A6D-81CB-8BC96644501C}.Release|x64.ActiveCfg = Release|x64
		{14B93DC8-FD93-4A6D-81CB-8BC96644501C}.Release|x64.Build.0 = Release|x64
		{14B93DC8-FD93-4A6D-81CB-8BC96644501C}.Release|x86.ActiveCfg = Release|Win32
		{14B93DC8-FD93-4A6D-81CB-8BC96644501C}.Release|x86.Build.0 = Release|Win32
		{14B93DC8-FD93-4A6D-81CB-8BC96644501C}.Release|x86.Deploy.0 = Release|Win32
	EndGlobalSection
	GlobalSection(SolutionProperties) = preSolution
		HideSolutionNode = FALSE
	EndGlobalSection
	GlobalSection(NestedProjects) = preSolution
		{A990658C-CE31-4BCC-976F-0FC6B1AF693D} = {5EA20F54-880A-49F3-99FA-4B3FE54E8AB1}
		{A9D95A91-4DB7-4F72-BEB6-FE8A5C89BFBD} = {5EA20F54-880A-49F3-99FA-4B3FE54E8AB1}
		{C38970C0-5FBF-4D69-90D8-CBAC225AE895} = {5EA20F54-880A-49F3-99FA-4B3FE54E8AB1}
		{F7D32BD0-2749-483E-9A0D-1635EF7E3136} = {5EA20F54-880A-49F3-99FA-4B3FE54E8AB1}
		{DA8B35B3-DA00-4B02-BDE6-6A397B3FD46B} = {5EA20F54-880A-49F3-99FA-4B3FE54E8AB1}
		{FCA38F3C-7C73-4C47-BE4E-32F77FA8538D} = {5EA20F54-880A-49F3-99FA-4B3FE54E8AB1}
		{2049DBE9-8D13-42C9-AE4B-413AE38FFFD0} = {5EA20F54-880A-49F3-99FA-4B3FE54E8AB1}
		{84E05BFA-CBAF-4F0D-BFB6-4CE85742A57E} = {5EA20F54-880A-49F3-99FA-4B3FE54E8AB1}
		{EF074BA1-2D54-4D49-A28E-5E040B47CD2E} = {5EA20F54-880A-49F3-99FA-4B3FE54E8AB1}
		{F2824844-CE15-4242-9420-308923CD76C3} = {5EA20F54-880A-49F3-99FA-4B3FE54E8AB1}
		{ADED4FBE-887D-4271-AF24-F0823BCE7961} = {5EA20F54-880A-49F3-99FA-4B3FE54E8AB1}
		{14B93DC8-FD93-4A6D-81CB-8BC96644501C} = {5EA20F54-880A-49F3-99FA-4B3FE54E8AB1}
	EndGlobalSection
	GlobalSection(ExtensibilityGlobals) = postSolution
		SolutionGuid = {D43FAD39-F619-437D-BB40-04A3982ACB6A}
	EndGlobalSection
EndGlobal
"
`;

exports[`C# Hermes Application: index.windows.bundle 1`] = `
"/**
 * 
 * Be sure to generate this file using the CLI:
 *
 * npx react-native bundle --platform windows --entry-file index.js 
 *   --bundle-output windows\\\\SnapshotApp\\\\Bundle\\\\index.windows.bundle
 *   --assets-dest windows\\\\SnapshotApp\\\\Bundle
 *
 */"
`;

exports[`C# Hermes Application: metro.config.js 1`] = `
"/**
 * Metro configuration for React Native
 * https://github.com/facebook/react-native
 *
 * @format
 */
const fs = require('fs');
const path = require('path');
const exclusionList = require('metro-config/src/defaults/exclusionList');

const rnwPath = fs.realpathSync(
  path.resolve(require.resolve('react-native-windows/package.json'), '..'),
);

module.exports = {
  resolver: {
    blockList: exclusionList([
      // This stops \\"react-native run-windows\\" from causing the metro server to crash if its already running
      new RegExp(
        \`\${path.resolve(__dirname, 'windows').replace(/[/\\\\\\\\]/g, '/')}.*\`,
      ),
      // This prevents \\"react-native run-windows\\" from hitting: EBUSY: resource busy or locked, open msbuild.ProjectImports.zip or other files produced by msbuild
      new RegExp(\`\${rnwPath}/build/.*\`),
      new RegExp(\`\${rnwPath}/target/.*\`),
      /.*\\\\.ProjectImports\\\\.zip/,
    ]),
  },
  transformer: {
    getTransformOptions: async () => ({
      transform: {
        experimentalImportSupport: false,
        inlineRequires: true,
      },
    }),
  },
};
"
`;

exports[`C# Hermes Library: AssemblyInfo.cs 1`] = `
"﻿using System.Reflection;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;

// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
[assembly: AssemblyTitle(\\"SnapshotApp\\")]
[assembly: AssemblyDescription(\\"\\")]
[assembly: AssemblyConfiguration(\\"\\")]
[assembly: AssemblyCompany(\\"\\")]
[assembly: AssemblyProduct(\\"SnapshotApp\\")]
[assembly: AssemblyCopyright(\\"Copyright ©  2019\\")]
[assembly: AssemblyTrademark(\\"\\")]
[assembly: AssemblyCulture(\\"\\")]

// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Build and Revision Numbers 
// by using the '*' as shown below:
// [assembly: AssemblyVersion(\\"1.0.*\\")]
[assembly: AssemblyVersion(\\"1.0.0.0\\")]
[assembly: AssemblyFileVersion(\\"1.0.0.0\\")]
[assembly: ComVisible(false)]"
`;

exports[`C# Hermes Library: Default.rd.xml 1`] = `
"<!--
    This file contains Runtime Directives used by .NET Native. The defaults here are suitable for most
    developers. However, you can modify these parameters to modify the behavior of the .NET Native
    optimizer.

    Runtime Directives are documented at https://go.microsoft.com/fwlink/?LinkID=391919

    To fully enable reflection for App1.MyClass and all of its public/private members
    <Type Name=\\"App1.MyClass\\" Dynamic=\\"Required All\\"/>

    To enable dynamic creation of the specific instantiation of AppClass<T> over System.Int32
    <TypeInstantiation Name=\\"App1.AppClass\\" Arguments=\\"System.Int32\\" Activate=\\"Required Public\\" />

    Using the Namespace directive to apply reflection policy to all the types in a particular namespace
    <Namespace Name=\\"DataClasses.ViewModels\\" Serialize=\\"All\\" />
-->

<Directives xmlns=\\"http://schemas.microsoft.com/netfx/2013/01/metadata\\">
  <Application>
    <!--
      An Assembly element with Name=\\"*Application*\\" applies to all assemblies in
      the application package. The asterisks are not wildcards.
    -->
    <Assembly Name=\\"*Application*\\" Dynamic=\\"Required All\\" />
    
    
    <!-- Add your application specific runtime directives here. -->
    <Namespace Name=\\"Microsoft.ReactNative\\" Dynamic=\\"Required All\\" MarshalObject=\\"Required All\\" />
    <Namespace Name=\\"Microsoft.ReactNative.Managed\\" Dynamic=\\"Required All\\" MarshalObject=\\"Required All\\" />

  </Application>
</Directives>"
`;

exports[`C# Hermes Library: ExperimentalFeatures.props 1`] = `
"<?xml version=\\"1.0\\" encoding=\\"utf-8\\"?>
<Project xmlns=\\"http://schemas.microsoft.com/developer/msbuild/2003\\">

  <!--
    Application projects contain a file with this name to specify some important settings
    that will apply globally for the app and *all* native modules the app consumes. These
    values are set by the app developer.
  -->

</Project>
"
`;

exports[`C# Hermes Library: NuGet.Config 1`] = `
"<?xml version=\\"1.0\\" encoding=\\"utf-8\\"?>
<configuration>
  <config>
    <add key=\\"repositoryPath\\" value=\\"packages\\" />
  </config>
  <packageSources>
    <clear />
    <add key=\\"react-native\\" value=\\"https://pkgs.dev.azure.com/ms/react-native/_packaging/react-native-public/nuget/v3/index.json\\" />
    <add key=\\"Nuget.org\\" value=\\"https://api.nuget.org/v3/index.json\\" />
  </packageSources>
  <disabledPackageSources>
    <clear />
  </disabledPackageSources>  
</configuration>
"
`;

exports[`C# Hermes Library: ReactNativeModule.cs 1`] = `
"﻿using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

using Microsoft.ReactNative;
using Microsoft.ReactNative.Managed;

namespace SnapshotApp
{
    [ReactModule(\\"SnapshotApp\\")]
    internal sealed class ReactNativeModule
    {
        // See https://microsoft.github.io/react-native-windows/docs/native-modules for details on writing native modules

        private ReactContext _reactContext;

        [ReactInitializer]
        public void Initialize(ReactContext reactContext)
        {
            _reactContext = reactContext;
        }

        [ReactMethod]
        public void sampleMethod(string stringArgument, int numberArgument, Action<string> callback)
        {
            // TODO: Implement some actually useful functionality
            callback(\\"Received numberArgument: \\" + numberArgument + \\" stringArgument: \\" + stringArgument);
        }
    }
}
"
`;

exports[`C# Hermes Library: ReactPackageProvider.cs 1`] = `
"using Microsoft.ReactNative;

namespace SnapshotApp
{
    public partial class ReactPackageProvider : IReactPackageProvider
    {
        public void CreatePackage(IReactPackageBuilder packageBuilder)
        {
            CreatePackageImplementation(packageBuilder);
        }

        /// <summary>
        /// This method is implemented by the C# code generator
        /// </summary>
        partial void CreatePackageImplementation(IReactPackageBuilder packageBuilder);
    }
}
"
`;

exports[`C# Hermes Library: SnapshotApp.csproj 1`] = `
"﻿<?xml version=\\"1.0\\" encoding=\\"utf-8\\"?>
<Project ToolsVersion=\\"Current\\" DefaultTargets=\\"Build\\" xmlns=\\"http://schemas.microsoft.com/developer/msbuild/2003\\">
  <Import Project=\\"$(MSBuildExtensionsPath)\\\\$(MSBuildToolsVersion)\\\\Microsoft.Common.props\\" Condition=\\"Exists('$(MSBuildExtensionsPath)\\\\$(MSBuildToolsVersion)\\\\Microsoft.Common.props')\\" />
  <Import Project=\\"$(SolutionDir)\\\\ExperimentalFeatures.props\\" Condition=\\"Exists('$(SolutionDir)\\\\ExperimentalFeatures.props')\\" />
  <PropertyGroup Label=\\"ReactNativeWindowsProps\\">
    <ReactNativeWindowsDir Condition=\\"'$(ReactNativeWindowsDir)' == ''\\">$([MSBuild]::GetDirectoryNameOfFileAbove($(SolutionDir), 'node_modules\\\\react-native-windows\\\\package.json'))\\\\node_modules\\\\react-native-windows\\\\</ReactNativeWindowsDir>
  </PropertyGroup>
  <PropertyGroup>
    <Configuration Condition=\\" '$(Configuration)' == '' \\">Debug</Configuration>
    <Platform Condition=\\" '$(Platform)' == '' \\">x86</Platform>
    <ProjectGuid>{BF008457-D471-4D67-BC94-FACA861EF695}</ProjectGuid>
    <OutputType>winmdobj</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>SnapshotApp</RootNamespace>
    <AssemblyName>SnapshotApp</AssemblyName>
    <DefaultLanguage>en-US</DefaultLanguage>
    <TargetPlatformIdentifier>UAP</TargetPlatformIdentifier>
    <TargetPlatformVersion Condition=\\" '$(TargetPlatformVersion)' == '' \\">10.0.19041.0</TargetPlatformVersion>
    <TargetPlatformMinVersion>10.0.16299.0</TargetPlatformMinVersion>
    <MinimumVisualStudioVersion>16.0</MinimumVisualStudioVersion>
    <FileAlignment>512</FileAlignment>
    <ProjectTypeGuids>{A5A43C5B-DE2A-4C0C-9213-0A381AF9435A};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <WindowsXamlEnableOverview>true</WindowsXamlEnableOverview>
    <LangVersion>7.3</LangVersion>
  </PropertyGroup>
  <PropertyGroup Condition=\\"'$(Configuration)|$(Platform)' == 'Debug|x86'\\">
    <DebugSymbols>true</DebugSymbols>
    <OutputPath>bin\\\\x86\\\\Debug\\\\</OutputPath>
    <DefineConstants>DEBUG;TRACE;NETFX_CORE;WINDOWS_UWP</DefineConstants>
    <NoWarn>;2008</NoWarn>
    <DebugType>full</DebugType>
    <PlatformTarget>x86</PlatformTarget>
    <UseVSHostingProcess>false</UseVSHostingProcess>
    <ErrorReport>prompt</ErrorReport>
    <Prefer32Bit>true</Prefer32Bit>
  </PropertyGroup>
  <PropertyGroup Condition=\\"'$(Configuration)|$(Platform)' == 'Release|x86'\\">
    <OutputPath>bin\\\\x86\\\\Release\\\\</OutputPath>
    <DefineConstants>TRACE;NETFX_CORE;WINDOWS_UWP</DefineConstants>
    <Optimize>true</Optimize>
    <NoWarn>;2008</NoWarn>
    <DebugType>pdbonly</DebugType>
    <PlatformTarget>x86</PlatformTarget>
    <UseVSHostingProcess>false</UseVSHostingProcess>
    <ErrorReport>prompt</ErrorReport>
    <Prefer32Bit>true</Prefer32Bit>
    <UseDotNetNativeToolchain>true</UseDotNetNativeToolchain>
  </PropertyGroup>
  <PropertyGroup Condition=\\"'$(Configuration)|$(Platform)' == 'Debug|ARM64'\\">
    <DebugSymbols>true</DebugSymbols>
    <OutputPath>bin\\\\ARM64\\\\Debug\\\\</OutputPath>
    <DefineConstants>DEBUG;TRACE;NETFX_CORE;WINDOWS_UWP</DefineConstants>
    <NoWarn>;2008</NoWarn>
    <DebugType>full</DebugType>
    <PlatformTarget>ARM64</PlatformTarget>
    <UseVSHostingProcess>false</UseVSHostingProcess>
    <ErrorReport>prompt</ErrorReport>
    <Prefer32Bit>true</Prefer32Bit>
  </PropertyGroup>
  <PropertyGroup Condition=\\"'$(Configuration)|$(Platform)' == 'Release|ARM64'\\">
    <OutputPath>bin\\\\ARM64\\\\Release\\\\</OutputPath>
    <DefineConstants>TRACE;NETFX_CORE;WINDOWS_UWP</DefineConstants>
    <Optimize>true</Optimize>
    <NoWarn>;2008</NoWarn>
    <DebugType>pdbonly</DebugType>
    <PlatformTarget>ARM64</PlatformTarget>
    <UseVSHostingProcess>false</UseVSHostingProcess>
    <ErrorReport>prompt</ErrorReport>
    <Prefer32Bit>true</Prefer32Bit>
    <UseDotNetNativeToolchain>true</UseDotNetNativeToolchain>
  </PropertyGroup>
  <PropertyGroup Condition=\\"'$(Configuration)|$(Platform)' == 'Debug|x64'\\">
    <DebugSymbols>true</DebugSymbols>
    <OutputPath>bin\\\\x64\\\\Debug\\\\</OutputPath>
    <DefineConstants>DEBUG;TRACE;NETFX_CORE;WINDOWS_UWP</DefineConstants>
    <NoWarn>;2008</NoWarn>
    <DebugType>full</DebugType>
    <PlatformTarget>x64</PlatformTarget>
    <UseVSHostingProcess>false</UseVSHostingProcess>
    <ErrorReport>prompt</ErrorReport>
    <Prefer32Bit>true</Prefer32Bit>
  </PropertyGroup>
  <PropertyGroup Condition=\\"'$(Configuration)|$(Platform)' == 'Release|x64'\\">
    <OutputPath>bin\\\\x64\\\\Release\\\\</OutputPath>
    <DefineConstants>TRACE;NETFX_CORE;WINDOWS_UWP</DefineConstants>
    <Optimize>true</Optimize>
    <NoWarn>;2008</NoWarn>
    <DebugType>pdbonly</DebugType>
    <PlatformTarget>x64</PlatformTarget>
    <UseVSHostingProcess>false</UseVSHostingProcess>
    <ErrorReport>prompt</ErrorReport>
    <Prefer32Bit>true</Prefer32Bit>
    <UseDotNetNativeToolchain>true</UseDotNetNativeToolchain>
  </PropertyGroup>
  <PropertyGroup>
    <RestoreProjectStyle>PackageReference</RestoreProjectStyle>
  </PropertyGroup>
  <ItemGroup>
    <Compile Include=\\"Properties\\\\AssemblyInfo.cs\\" />
    <Compile Include=\\"ReactNativeModule.cs\\" />
    <Compile Include=\\"ReactPackageProvider.cs\\" />
  </ItemGroup>
  <ItemGroup>
    <PackageReference Include=\\"Microsoft.NETCore.UniversalWindowsPlatform\\">
      <Version>6.2.9</Version>
    </PackageReference>
    <PackageReference Include=\\"ReactNative.Hermes.Windows\\">
      <Version>0.9.0-ms.6</Version>
    </PackageReference>
  </ItemGroup>
  <PropertyGroup Condition=\\" '$(VisualStudioVersion)' == '' or '$(VisualStudioVersion)' &lt; '16.0' \\">
    <VisualStudioVersion>16.0</VisualStudioVersion>
  </PropertyGroup>
  <Import Project=\\"$(MSBuildExtensionsPath)\\\\Microsoft\\\\WindowsXaml\\\\v$(VisualStudioVersion)\\\\Microsoft.Windows.UI.Xaml.CSharp.targets\\" />
  <ImportGroup Label=\\"ReactNativeWindowsPropertySheets\\">
    <Import Project=\\"$(ReactNativeWindowsDir)\\\\PropertySheets\\\\External\\\\Microsoft.ReactNative.Uwp.CSharpLib.props\\" Condition=\\"Exists('$(ReactNativeWindowsDir)\\\\PropertySheets\\\\External\\\\Microsoft.ReactNative.Uwp.CSharpLib.props')\\" />
  </ImportGroup>
  <ImportGroup Label=\\"ReactNativeWindowsTargets\\">
    <Import Project=\\"$(ReactNativeWindowsDir)\\\\PropertySheets\\\\External\\\\Microsoft.ReactNative.Uwp.CSharpLib.targets\\" Condition=\\"Exists('$(ReactNativeWindowsDir)\\\\PropertySheets\\\\External\\\\Microsoft.ReactNative.Uwp.CSharpLib.targets')\\" />
  </ImportGroup>
  <Target Name=\\"EnsureReactNativeWindowsTargets\\" BeforeTargets=\\"PrepareForBuild\\">
    <PropertyGroup>
      <ErrorText>This project references targets in your node_modules\\\\react-native-windows folder that are missing. The missing file is {0}.</ErrorText>
    </PropertyGroup>
    <Error Condition=\\"!Exists('$(ReactNativeWindowsDir)\\\\PropertySheets\\\\External\\\\Microsoft.ReactNative.Uwp.CSharpLib.props')\\" Text=\\"$([System.String]::Format('$(ErrorText)', '$(ReactNativeWindowsDir)\\\\PropertySheets\\\\External\\\\Microsoft.ReactNative.Uwp.CSharpLib.props'))\\" />
    <Error Condition=\\"!Exists('$(ReactNativeWindowsDir)\\\\PropertySheets\\\\External\\\\Microsoft.ReactNative.Uwp.CSharpLib.targets')\\" Text=\\"$([System.String]::Format('$(ErrorText)', '$(ReactNativeWindowsDir)\\\\PropertySheets\\\\External\\\\Microsoft.ReactNative.Uwp.CSharpLib.targets'))\\" />
  </Target>
</Project>
"
`;

exports[`C# Hermes Library: SnapshotApp.sln 1`] = `
"﻿
Microsoft Visual Studio Solution File, Format Version 12.00
# Visual Studio Version 16
VisualStudioVersion = 16.0.29215.179
MinimumVisualStudioVersion = 10.0.40219.1
Project(\\"{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}\\") = \\"SnapshotApp\\", \\"SnapshotApp\\\\SnapshotApp.csproj\\", \\"{BF008457-D471-4D67-BC94-FACA861EF695}\\"
EndProject
Project(\\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\\") = \\"Folly\\", \\"..\\\\node_modules\\\\react-native-windows\\\\Folly\\\\Folly.vcxproj\\", \\"{A990658C-CE31-4BCC-976F-0FC6B1AF693D}\\"
EndProject
Project(\\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\\") = \\"fmt\\", \\"..\\\\node_modules\\\\react-native-windows\\\\fmt\\\\fmt.vcxproj\\", \\"{14B93DC8-FD93-4A6D-81CB-8BC96644501C}\\"
EndProject
Project(\\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\\") = \\"ReactCommon\\", \\"..\\\\node_modules\\\\react-native-windows\\\\ReactCommon\\\\ReactCommon.vcxproj\\", \\"{A9D95A91-4DB7-4F72-BEB6-FE8A5C89BFBD}\\"
	ProjectSection(ProjectDependencies) = postProject
		{A990658C-CE31-4BCC-976F-0FC6B1AF693D} = {A990658C-CE31-4BCC-976F-0FC6B1AF693D}
	EndProjectSection
EndProject
Project(\\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\\") = \\"Chakra\\", \\"..\\\\node_modules\\\\react-native-windows\\\\Chakra\\\\Chakra.vcxitems\\", \\"{C38970C0-5FBF-4D69-90D8-CBAC225AE895}\\"
EndProject
Project(\\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\\") = \\"Microsoft.ReactNative\\", \\"..\\\\node_modules\\\\react-native-windows\\\\Microsoft.ReactNative\\\\Microsoft.ReactNative.vcxproj\\", \\"{F7D32BD0-2749-483E-9A0D-1635EF7E3136}\\"
EndProject
Project(\\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\\") = \\"Microsoft.ReactNative.Cxx\\", \\"..\\\\node_modules\\\\react-native-windows\\\\Microsoft.ReactNative.Cxx\\\\Microsoft.ReactNative.Cxx.vcxitems\\", \\"{DA8B35B3-DA00-4B02-BDE6-6A397B3FD46B}\\"
EndProject
Project(\\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\\") = \\"Common\\", \\"..\\\\node_modules\\\\react-native-windows\\\\Common\\\\Common.vcxproj\\", \\"{FCA38F3C-7C73-4C47-BE4E-32F77FA8538D}\\"
EndProject
Project(\\"{2150E333-8FDC-42A3-9474-1A3956D46DE8}\\") = \\"ReactNative\\", \\"ReactNative\\", \\"{5EA20F54-880A-49F3-99FA-4B3FE54E8AB1}\\"
EndProject
Project(\\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\\") = \\"Microsoft.ReactNative.Shared\\", \\"..\\\\node_modules\\\\react-native-windows\\\\Shared\\\\Shared.vcxitems\\", \\"{2049DBE9-8D13-42C9-AE4B-413AE38FFFD0}\\"
EndProject
Project(\\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\\") = \\"Mso\\", \\"..\\\\node_modules\\\\react-native-windows\\\\Mso\\\\Mso.vcxitems\\", \\"{84E05BFA-CBAF-4F0D-BFB6-4CE85742A57E}\\"
EndProject
Project(\\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\\") = \\"Include\\", \\"..\\\\node_modules\\\\react-native-windows\\\\include\\\\Include.vcxitems\\", \\"{EF074BA1-2D54-4D49-A28E-5E040B47CD2E}\\"
EndProject
Project(\\"{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}\\") = \\"Microsoft.ReactNative.Managed\\", \\"..\\\\node_modules\\\\react-native-windows\\\\Microsoft.ReactNative.Managed\\\\Microsoft.ReactNative.Managed.csproj\\", \\"{F2824844-CE15-4242-9420-308923CD76C3}\\"
EndProject
Project(\\"{9A19103F-16F7-4668-BE54-9A1E7A4F7556}\\") = \\"Microsoft.ReactNative.Managed.CodeGen\\", \\"..\\\\node_modules\\\\react-native-windows\\\\Microsoft.ReactNative.Managed.CodeGen\\\\Microsoft.ReactNative.Managed.CodeGen.csproj\\", \\"{ADED4FBE-887D-4271-AF24-F0823BCE7961}\\"
EndProject
Global
	GlobalSection(SharedMSBuildProjectFiles) = preSolution
		..\\\\node_modules\\\\react-native-windows\\\\Shared\\\\Shared.vcxitems*{2049dbe9-8d13-42c9-ae4b-413ae38fffd0}*SharedItemsImports = 9
		..\\\\node_modules\\\\react-native-windows\\\\Mso\\\\Mso.vcxitems*{84e05bfa-cbaf-4f0d-bfb6-4ce85742a57e}*SharedItemsImports = 9
		..\\\\node_modules\\\\react-native-windows\\\\Chakra\\\\Chakra.vcxitems*{c38970c0-5fbf-4d69-90d8-cbac225ae895}*SharedItemsImports = 9
		..\\\\node_modules\\\\react-native-windows\\\\Microsoft.ReactNative.Cxx\\\\Microsoft.ReactNative.Cxx.vcxitems*{da8b35b3-da00-4b02-bde6-6a397b3fd46b}*SharedItemsImports = 9
		..\\\\node_modules\\\\react-native-windows\\\\include\\\\Include.vcxitems*{ef074ba1-2d54-4d49-a28e-5e040b47cd2e}*SharedItemsImports = 9
		..\\\\node_modules\\\\react-native-windows\\\\Chakra\\\\Chakra.vcxitems*{f7d32bd0-2749-483e-9a0d-1635ef7e3136}*SharedItemsImports = 4
		..\\\\node_modules\\\\react-native-windows\\\\Microsoft.ReactNative.Cxx\\\\Microsoft.ReactNative.Cxx.vcxitems*{f7d32bd0-2749-483e-9a0d-1635ef7e3136}*SharedItemsImports = 4
		..\\\\node_modules\\\\react-native-windows\\\\Mso\\\\Mso.vcxitems*{f7d32bd0-2749-483e-9a0d-1635ef7e3136}*SharedItemsImports = 4
		..\\\\node_modules\\\\react-native-windows\\\\Shared\\\\Shared.vcxitems*{f7d32bd0-2749-483e-9a0d-1635ef7e3136}*SharedItemsImports = 4
	EndGlobalSection
	GlobalSection(SolutionConfigurationPlatforms) = preSolution
		Debug|ARM64 = Debug|ARM64
		Debug|x64 = Debug|x64
		Debug|x86 = Debug|x86
		Release|ARM64 = Release|ARM64
		Release|x64 = Release|x64
		Release|x86 = Release|x86
	EndGlobalSection
	GlobalSection(ProjectConfigurationPlatforms) = postSolution
		{BF008457-D471-4D67-BC94-FACA861EF695}.Debug|ARM64.ActiveCfg = Debug|ARM64
		{BF008457-D471-4D67-BC94-FACA861EF695}.Debug|ARM64.Build.0 = Debug|ARM64
		{BF008457-D471-4D67-BC94-FACA861EF695}.Debug|ARM64.Deploy.0 = Debug|ARM64
		{BF008457-D471-4D67-BC94-FACA861EF695}.Debug|x64.ActiveCfg = Debug|x64
		{BF008457-D471-4D67-BC94-FACA861EF695}.Debug|x64.Build.0 = Debug|x64
		{BF008457-D471-4D67-BC94-FACA861EF695}.Debug|x64.Deploy.0 = Debug|x64
		{BF008457-D471-4D67-BC94-FACA861EF695}.Debug|x86.ActiveCfg = Debug|x86
		{BF008457-D471-4D67-BC94-FACA861EF695}.Debug|x86.Build.0 = Debug|x86
		{BF008457-D471-4D67-BC94-FACA861EF695}.Debug|x86.Deploy.0 = Debug|x86
		{BF008457-D471-4D67-BC94-FACA861EF695}.Release|ARM64.ActiveCfg = Release|ARM64
		{BF008457-D471-4D67-BC94-FACA861EF695}.Release|ARM64.Build.0 = Release|ARM64
		{BF008457-D471-4D67-BC94-FACA861EF695}.Release|ARM64.Deploy.0 = Release|ARM64
		{BF008457-D471-4D67-BC94-FACA861EF695}.Release|x64.ActiveCfg = Release|x64
		{BF008457-D471-4D67-BC94-FACA861EF695}.Release|x64.Build.0 = Release|x64
		{BF008457-D471-4D67-BC94-FACA861EF695}.Release|x64.Deploy.0 = Release|x64
		{BF008457-D471-4D67-BC94-FACA861EF695}.Release|x86.ActiveCfg = Release|x86
		{BF008457-D471-4D67-BC94-FACA861EF695}.Release|x86.Build.0 = Release|x86
		{BF008457-D471-4D67-BC94-FACA861EF695}.Release|x86.Deploy.0 = Release|x86
		{A990658C-CE31-4BCC-976F-0FC6B1AF693D}.Debug|ARM64.ActiveCfg = Debug|ARM64
		{A990658C-CE31-4BCC-976F-0FC6B1AF693D}.Debug|ARM64.Build.0 = Debug|ARM64
		{A990658C-CE31-4BCC-976F-0FC6B1AF693D}.Debug|x64.ActiveCfg = Debug|x64
		{A990658C-CE31-4BCC-976F-0FC6B1AF693D}.Debug|x64.Build.0 = Debug|x64
		{A990658C-CE31-4BCC-976F-0FC6B1AF693D}.Debug|x86.ActiveCfg = Debug|Win32
		{A990658C-CE31-4BCC-976F-0FC6B1AF693D}.Debug|x86.Build.0 = Debug|Win32
		{A990658C-CE31-4BCC-976F-0FC6B1AF693D}.Release|ARM64.ActiveCfg = Release|ARM64
		{A990658C-CE31-4BCC-976F-0FC6B1AF693D}.Release|ARM64.Build.0 = Release|ARM64
		{A990658C-CE31-4BCC-976F-0FC6B1AF693D}.Release|x64.ActiveCfg = Release|x64
		{A990658C-CE31-4BCC-976F-0FC6B1AF693D}.Release|x64.Build.0 = Release|x64
		{A990658C-CE31-4BCC-976F-0FC6B1AF693D}.Release|x86.ActiveCfg = Release|Win32
		{A990658C-CE31-4BCC-976F-0FC6B1AF693D}.Release|x86.Build.0 = Release|Win32
		{A9D95A91-4DB7-4F72-BEB6-FE8A5C89BFBD}.Debug|ARM64.ActiveCfg = Debug|ARM64
		{A9D95A91-4DB7-4F72-BEB6-FE8A5C89BFBD}.Debug|ARM64.Build.0 = Debug|ARM64
		{A9D95A91-4DB7-4F72-BEB6-FE8A5C89BFBD}.Debug|x64.ActiveCfg = Debug|x64
		{A9D95A91-4DB7-4F72-BEB6-FE8A5C89BFBD}.Debug|x64.Build.0 = Debug|x64
		{A9D95A91-4DB7-4F72-BEB6-FE8A5C89BFBD}.Debug|x86.ActiveCfg = Debug|Win32
		{A9D95A91-4DB7-4F72-BEB6-FE8A5C89BFBD}.Debug|x86.Build.0 = Debug|Win32
		{A9D95A91-4DB7-4F72-BEB6-FE8A5C89BFBD}.Release|ARM64.ActiveCfg = Release|ARM64
		{A9D95A91-4DB7-4F72-BEB6-FE8A5C89BFBD}.Release|ARM64.Build.0 = Release|ARM64
		{A9D95A91-4DB7-4F72-BEB6-FE8A5C89BFBD}.Release|x64.ActiveCfg = Release|x64
		{A9D95A91-4DB7-4F72-BEB6-FE8A5C89BFBD}.Release|x64.Build.0 = Release|x64
		{A9D95A91-4DB7-4F72-BEB6-FE8A5C89BFBD}.Release|x86.ActiveCfg = Release|Win32
		{A9D95A91-4DB7-4F72-BEB6-FE8A5C89BFBD}.Release|x86.Build.0 = Release|Win32
		{F7D32BD0-2749-483E-9A0D-1635EF7E3136}.Debug|ARM64.ActiveCfg = Debug|ARM64
		{F7D32BD0-2749-483E-9A0D-1635EF7E3136}.Debug|ARM64.Build.0 = Debug|ARM64
		{F7D32BD0-2749-483E-9A0D-1635EF7E3136}.Debug|x64.ActiveCfg = Debug|x64
		{F7D32BD0-2749-483E-9A0D-1635EF7E3136}.Debug|x64.Build.0 = Debug|x64
		{F7D32BD0-2749-483E-9A0D-1635EF7E3136}.Debug|x86.ActiveCfg = Debug|Win32
		{F7D32BD0-2749-483E-9A0D-1635EF7E3136}.Debug|x86.Build.0 = Debug|Win32
		{F7D32BD0-2749-483E-9A0D-1635EF7E3136}.Release|ARM64.ActiveCfg = Release|ARM64
		{F7D32BD0-2749-483E-9A0D-1635EF7E3136}.Release|ARM64.Build.0 = Release|ARM64
		{F7D32BD0-2749-483E-9A0D-1635EF7E3136}.Release|x64.ActiveCfg = Release|x64
		{F7D32BD0-2749-483E-9A0D-1635EF7E3136}.Release|x64.Build.0 = Release|x64
		{F7D32BD0-2749-483E-9A0D-1635EF7E3136}.Release|x86.ActiveCfg = Release|Win32
		{F7D32BD0-2749-483E-9A0D-1635EF7E3136}.Release|x86.Build.0 = Release|Win32
		{FCA38F3C-7C73-4C47-BE4E-32F77FA8538D}.Debug|ARM64.ActiveCfg = Debug|ARM64
		{FCA38F3C-7C73-4C47-BE4E-32F77FA8538D}.Debug|ARM64.Build.0 = Debug|ARM64
		{FCA38F3C-7C73-4C47-BE4E-32F77FA8538D}.Debug|x64.ActiveCfg = Debug|x64
		{FCA38F3C-7C73-4C47-BE4E-32F77FA8538D}.Debug|x64.Build.0 = Debug|x64
		{FCA38F3C-7C73-4C47-BE4E-32F77FA8538D}.Debug|x86.ActiveCfg = Debug|Win32
		{FCA38F3C-7C73-4C47-BE4E-32F77FA8538D}.Debug|x86.Build.0 = Debug|Win32
		{FCA38F3C-7C73-4C47-BE4E-32F77FA8538D}.Release|ARM64.ActiveCfg = Release|ARM64
		{FCA38F3C-7C73-4C47-BE4E-32F77FA8538D}.Release|ARM64.Build.0 = Release|ARM64
		{FCA38F3C-7C73-4C47-BE4E-32F77FA8538D}.Release|x64.ActiveCfg = Release|x64
		{FCA38F3C-7C73-4C47-BE4E-32F77FA8538D}.Release|x64.Build.0 = Release|x64
		{FCA38F3C-7C73-4C47-BE4E-32F77FA8538D}.Release|x86.ActiveCfg = Release|Win32
		{FCA38F3C-7C73-4C47-BE4E-32F77FA8538D}.Release|x86.Build.0 = Release|Win32
		{F2824844-CE15-4242-9420-308923CD76C3}.Debug|ARM64.ActiveCfg = Debug|ARM64
		{F2824844-CE15-4242-9420-308923CD76C3}.Debug|ARM64.Build.0 = Debug|ARM64
		{F2824844-CE15-4242-9420-308923CD76C3}.Debug|x64.ActiveCfg = Debug|x64
		{F2824844-CE15-4242-9420-308923CD76C3}.Debug|x64.Build.0 = Debug|x64
		{F2824844-CE15-4242-9420-308923CD76C3}.Debug|x86.ActiveCfg = Debug|x86
		{F2824844-CE15-4242-9420-308923CD76C3}.Debug|x86.Build.0 = Debug|x86
		{F2824844-CE15-4242-9420-308923CD76C3}.Release|ARM64.ActiveCfg = Release|ARM64
		{F2824844-CE15-4242-9420-308923CD76C3}.Release|ARM64.Build.0 = Release|ARM64
		{F2824844-CE15-4242-9420-308923CD76C3}.Release|x64.ActiveCfg = Release|x64
		{F2824844-CE15-4242-9420-308923CD76C3}.Release|x64.Build.0 = Release|x64
		{F2824844-CE15-4242-9420-308923CD76C3}.Release|x86.ActiveCfg = Release|x86
		{F2824844-CE15-4242-9420-308923CD76C3}.Release|x86.Build.0 = Release|x86
		{ADED4FBE-887D-4271-AF24-F0823BCE7961}.Debug|ARM64.ActiveCfg = Debug|ARM64
		{ADED4FBE-887D-4271-AF24-F0823BCE7961}.Debug|ARM64.Build.0 = Debug|ARM64
		{ADED4FBE-887D-4271-AF24-F0823BCE7961}.Debug|x64.ActiveCfg = Debug|x64
		{ADED4FBE-887D-4271-AF24-F0823BCE7961}.Debug|x64.Build.0 = Debug|x64
		{ADED4FBE-887D-4271-AF24-F0823BCE7961}.Debug|x86.ActiveCfg = Debug|x86
		{ADED4FBE-887D-4271-AF24-F0823BCE7961}.Debug|x86.Build.0 = Debug|x86
		{ADED4FBE-887D-4271-AF24-F0823BCE7961}.Release|ARM64.ActiveCfg = Release|ARM64
		{ADED4FBE-887D-4271-AF24-F0823BCE7961}.Release|ARM64.Build.0 = Release|ARM64
		{ADED4FBE-887D-4271-AF24-F0823BCE7961}.Release|x64.ActiveCfg = Release|x64
		{ADED4FBE-887D-4271-AF24-F0823BCE7961}.Release|x64.Build.0 = Release|x64
		{ADED4FBE-887D-4271-AF24-F0823BCE7961}.Release|x86.ActiveCfg = Release|x86
		{ADED4FBE-887D-4271-AF24-F0823BCE7961}.Release|x86.Build.0 = Release|x86
		{14B93DC8-FD93-4A6D-81CB-8BC96644501C}.Debug|ARM64.ActiveCfg = Debug|ARM64
		{14B93DC8-FD93-4A6D-81CB-8BC96644501C}.Debug|ARM64.Build.0 = Debug|ARM64
		{14B93DC8-FD93-4A6D-81CB-8BC96644501C}.Debug|x64.ActiveCfg = Debug|x64
		{14B93DC8-FD93-4A6D-81CB-8BC96644501C}.Debug|x64.Build.0 = Debug|x64
		{14B93DC8-FD93-4A6D-81CB-8BC96644501C}.Debug|x86.ActiveCfg = Debug|Win32
		{14B93DC8-FD93-4A6D-81CB-8BC96644501C}.Debug|x86.Build.0 = Debug|Win32
		{14B93DC8-FD93-4A6D-81CB-8BC96644501C}.Debug|x86.Deploy.0 = Debug|Win32
		{14B93DC8-FD93-4A6D-81CB-8BC96644501C}.Release|ARM64.ActiveCfg = Release|ARM64
		{14B93DC8-FD93-4A6D-81CB-8BC96644501C}.Release|ARM64.Build.0 = Release|ARM64
		{14B93DC8-FD93-4A6D-81CB-8BC96644501C}.Release|x64.ActiveCfg = Release|x64
		{14B93DC8-FD93-4A6D-81CB-8BC96644501C}.Release|x64.Build.0 = Release|x64
		{14B93DC8-FD93-4A6D-81CB-8BC96644501C}.Release|x86.ActiveCfg = Release|Win32
		{14B93DC8-FD93-4A6D-81CB-8BC96644501C}.Release|x86.Build.0 = Release|Win32
		{14B93DC8-FD93-4A6D-81CB-8BC96644501C}.Release|x86.Deploy.0 = Release|Win32
	EndGlobalSection
	GlobalSection(SolutionProperties) = preSolution
		HideSolutionNode = FALSE
	EndGlobalSection
	GlobalSection(NestedProjects) = preSolution
		{A990658C-CE31-4BCC-976F-0FC6B1AF693D} = {5EA20F54-880A-49F3-99FA-4B3FE54E8AB1}
		{A9D95A91-4DB7-4F72-BEB6-FE8A5C89BFBD} = {5EA20F54-880A-49F3-99FA-4B3FE54E8AB1}
		{C38970C0-5FBF-4D69-90D8-CBAC225AE895} = {5EA20F54-880A-49F3-99FA-4B3FE54E8AB1}
		{F7D32BD0-2749-483E-9A0D-1635EF7E3136} = {5EA20F54-880A-49F3-99FA-4B3FE54E8AB1}
		{DA8B35B3-DA00-4B02-BDE6-6A397B3FD46B} = {5EA20F54-880A-49F3-99FA-4B3FE54E8AB1}
		{FCA38F3C-7C73-4C47-BE4E-32F77FA8538D} = {5EA20F54-880A-49F3-99FA-4B3FE54E8AB1}
		{2049DBE9-8D13-42C9-AE4B-413AE38FFFD0} = {5EA20F54-880A-49F3-99FA-4B3FE54E8AB1}
		{84E05BFA-CBAF-4F0D-BFB6-4CE85742A57E} = {5EA20F54-880A-49F3-99FA-4B3FE54E8AB1}
		{EF074BA1-2D54-4D49-A28E-5E040B47CD2E} = {5EA20F54-880A-49F3-99FA-4B3FE54E8AB1}
		{F2824844-CE15-4242-9420-308923CD76C3} = {5EA20F54-880A-49F3-99FA-4B3FE54E8AB1}
		{ADED4FBE-887D-4271-AF24-F0823BCE7961} = {5EA20F54-880A-49F3-99FA-4B3FE54E8AB1}
		{14B93DC8-FD93-4A6D-81CB-8BC96644501C} = {5EA20F54-880A-49F3-99FA-4B3FE54E8AB1}
	EndGlobalSection
	GlobalSection(ExtensibilityGlobals) = postSolution
		SolutionGuid = {D43FAD39-F619-437D-BB40-04A3982ACB6A}
	EndGlobalSection
EndGlobal
"
`;

exports[`C# NuGet Application: App.xaml 1`] = `
"﻿<react:ReactApplication
    x:Class=\\"SnapshotApp.App\\"
    xmlns=\\"http://schemas.microsoft.com/winfx/2006/xaml/presentation\\"
    xmlns:x=\\"http://schemas.microsoft.com/winfx/2006/xaml\\"
    xmlns:local=\\"using:SnapshotApp\\"
    xmlns:react=\\"using:Microsoft.ReactNative\\">
    <Application.Resources>
        <XamlControlsResources xmlns=\\"using:Microsoft.UI.Xaml.Controls\\" />
    </Application.Resources>
</react:ReactApplication>
"
`;

exports[`C# NuGet Application: App.xaml.cs 1`] = `
"using Microsoft.ReactNative;
#if USE_WINUI3
using Microsoft.UI.Xaml;
using Microsoft.UI.Xaml.Controls;
#else
using Windows.ApplicationModel.Activation;
using Windows.UI.Xaml;
using Windows.UI.Xaml.Controls;
#endif

namespace SnapshotApp
{
    sealed partial class App : ReactApplication
    {
        public App()
        {
#if BUNDLE
            JavaScriptBundleFile = \\"index.windows\\";
            InstanceSettings.UseWebDebugger = false;
            InstanceSettings.UseFastRefresh = false;
#else
            JavaScriptBundleFile = \\"index\\";
            InstanceSettings.UseWebDebugger = true;
            InstanceSettings.UseFastRefresh = true;
#endif

#if DEBUG
            InstanceSettings.UseDeveloperSupport = true;
#else
            InstanceSettings.UseDeveloperSupport = false;
#endif

            Microsoft.ReactNative.Managed.AutolinkedNativeModules.RegisterAutolinkedNativeModulePackages(PackageProviders); // Includes any autolinked modules

            PackageProviders.Add(new ReactPackageProvider());

            InitializeComponent();
        }

        /// <summary>
        /// Invoked when the application is launched normally by the end user.  Other entry points
        /// will be used such as when the application is launched to open a specific file.
        /// </summary>
        /// <param name=\\"e\\">Details about the launch request and process.</param>
        protected override void OnLaunched(LaunchActivatedEventArgs e)
        {
            base.OnLaunched(e);
            var frame = (Frame)Window.Current.Content;
            frame.Navigate(typeof(MainPage), e.Arguments);
        }

        /// <summary>
        /// Invoked when the application is activated by some means other than normal launching.
        /// </summary>
        protected override void OnActivated(Windows.ApplicationModel.Activation.IActivatedEventArgs e)
        {
            var preActivationContent = Window.Current.Content;
            base.OnActivated(e);
            if (preActivationContent == null && Window.Current != null)
            {
                // Display the initial content
                var frame = (Frame)Window.Current.Content;
                frame.Navigate(typeof(MainPage), null);
            }
        }
    }
}
"
`;

exports[`C# NuGet Application: AssemblyInfo.cs 1`] = `
"﻿using System.Reflection;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;

// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
[assembly: AssemblyTitle(\\"SnapshotApp\\")]
[assembly: AssemblyDescription(\\"\\")]
[assembly: AssemblyConfiguration(\\"\\")]
[assembly: AssemblyCompany(\\"\\")]
[assembly: AssemblyProduct(\\"SnapshotApp\\")]
[assembly: AssemblyCopyright(\\"Copyright ©  2019\\")]
[assembly: AssemblyTrademark(\\"\\")]
[assembly: AssemblyCulture(\\"\\")]

// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Build and Revision Numbers 
// by using the '*' as shown below:
// [assembly: AssemblyVersion(\\"1.0.*\\")]
[assembly: AssemblyVersion(\\"1.0.0.0\\")]
[assembly: AssemblyFileVersion(\\"1.0.0.0\\")]
[assembly: ComVisible(false)]"
`;

exports[`C# NuGet Application: AutolinkedNativeModules.g.cs 1`] = `
"﻿// AutolinkedNativeModules.g.cs contents generated by \\"react-native autolink-windows\\"

using System.Collections.Generic;

namespace Microsoft.ReactNative.Managed
{
    internal static class AutolinkedNativeModules
    {
        internal static void RegisterAutolinkedNativeModulePackages(IList<IReactPackageProvider> packageProviders)
        { 
        }
    }
}
"
`;

exports[`C# NuGet Application: AutolinkedNativeModules.g.props 1`] = `
"<?xml version=\\"1.0\\" encoding=\\"utf-8\\"?>
<Project xmlns=\\"http://schemas.microsoft.com/developer/msbuild/2003\\">
  <!-- AutolinkedNativeModules.g.props contents generated by \\"react-native autolink-windows\\" -->
  <PropertyGroup>
  </PropertyGroup>
</Project>
"
`;

exports[`C# NuGet Application: AutolinkedNativeModules.g.targets 1`] = `
"<?xml version=\\"1.0\\" encoding=\\"utf-8\\"?>
<Project xmlns=\\"http://schemas.microsoft.com/developer/msbuild/2003\\">
  <!-- AutolinkedNativeModules.g.targets contents generated by \\"react-native autolink-windows\\" -->
  <ItemGroup>
  </ItemGroup>
</Project>
"
`;

exports[`C# NuGet Application: Default.rd.xml 1`] = `
"<!--
    This file contains Runtime Directives used by .NET Native. The defaults here are suitable for most
    developers. However, you can modify these parameters to modify the behavior of the .NET Native
    optimizer.

    Runtime Directives are documented at https://go.microsoft.com/fwlink/?LinkID=391919

    To fully enable reflection for App1.MyClass and all of its public/private members
    <Type Name=\\"App1.MyClass\\" Dynamic=\\"Required All\\"/>

    To enable dynamic creation of the specific instantiation of AppClass<T> over System.Int32
    <TypeInstantiation Name=\\"App1.AppClass\\" Arguments=\\"System.Int32\\" Activate=\\"Required Public\\" />

    Using the Namespace directive to apply reflection policy to all the types in a particular namespace
    <Namespace Name=\\"DataClasses.ViewModels\\" Serialize=\\"All\\" />
-->

<Directives xmlns=\\"http://schemas.microsoft.com/netfx/2013/01/metadata\\">
  <Application>
    <!--
      An Assembly element with Name=\\"*Application*\\" applies to all assemblies in
      the application package. The asterisks are not wildcards.
    -->
    <Assembly Name=\\"*Application*\\" Dynamic=\\"Required All\\" />
    
    
    <!-- Add your application specific runtime directives here. -->
    <Namespace Name=\\"Microsoft.ReactNative\\" Dynamic=\\"Required All\\" MarshalObject=\\"Required All\\" />
    <Namespace Name=\\"Microsoft.ReactNative.Managed\\" Dynamic=\\"Required All\\" MarshalObject=\\"Required All\\" />

  </Application>
</Directives>"
`;

exports[`C# NuGet Application: ExperimentalFeatures.props 1`] = `
"<?xml version=\\"1.0\\" encoding=\\"utf-8\\"?>
<Project xmlns=\\"http://schemas.microsoft.com/developer/msbuild/2003\\">

  <!--
    This file contains some important settings that will apply globally for
    your app and *all* native modules your app consumes. These values were
    set when you created the app project, and in some cases cannot be
    simply changed here without recreating a new project.
  -->

  <PropertyGroup Label=\\"Microsoft.ReactNative Experimental Features\\">
    <!--
      Enables default usage of Hermes.
      
      See https://microsoft.github.io/react-native-windows/docs/hermes
    -->
    <UseHermes>false</UseHermes>

    <!--
      Changes compilation to assume use of WinUI 3 instead of System XAML.
      Requires creation of new project.

      See https://microsoft.github.io/react-native-windows/docs/winui3
    -->
    <UseWinUI3>false</UseWinUI3>

    <!--
      Changes compilation to assume use of Microsoft.ReactNative NuGet packages
      instead of building the framework from source.
      Requires creation of new project.

      See https://microsoft.github.io/react-native-windows/docs/nuget
    -->
    <UseExperimentalNuget>true</UseExperimentalNuget>
  
  </PropertyGroup>

</Project>
"
`;

exports[`C# NuGet Application: MainPage.xaml 1`] = `
"<Page
    x:Class=\\"SnapshotApp.MainPage\\"
    xmlns=\\"http://schemas.microsoft.com/winfx/2006/xaml/presentation\\"
    xmlns:x=\\"http://schemas.microsoft.com/winfx/2006/xaml\\"
    xmlns:local=\\"using:SnapshotApp\\"
    xmlns:react=\\"using:Microsoft.ReactNative\\"
    xmlns:d=\\"http://schemas.microsoft.com/expression/blend/2008\\"
    xmlns:mc=\\"http://schemas.openxmlformats.org/markup-compatibility/2006\\"
    mc:Ignorable=\\"d\\"
    Background=\\"{ThemeResource ApplicationPageBackgroundThemeBrush}\\">
    <react:ReactRootView 
        x:Name=\\"reactRootView\\"
        ComponentName=\\"SnapshotApp\\"
        Background=\\"{ThemeResource ApplicationPageBackgroundThemeBrush}\\"
        MinHeight=\\"400\\"/>
</Page>
"
`;

exports[`C# NuGet Application: MainPage.xaml.cs 1`] = `
"using Microsoft.ReactNative;
using System;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System.Runtime.InteropServices.WindowsRuntime;
using Windows.Foundation;
using Windows.Foundation.Collections;
#if !USE_WINUI3
using Windows.UI.Xaml;
using Windows.UI.Xaml.Controls;
using Windows.UI.Xaml.Controls.Primitives;
using Windows.UI.Xaml.Data;
using Windows.UI.Xaml.Input;
using Windows.UI.Xaml.Media;
using Windows.UI.Xaml.Navigation;
#else
using Microsoft.UI.Xaml;
using Microsoft.UI.Xaml.Controls;
using Microsoft.UI.Xaml.Controls.Primitives;
using Microsoft.UI.Xaml.Data;
using Microsoft.UI.Xaml.Input;
using Microsoft.UI.Xaml.Media;
using Microsoft.UI.Xaml.Navigation;
#endif

// The Blank Page item template is documented at https://go.microsoft.com/fwlink/?LinkId=234238

namespace SnapshotApp
{
    /// <summary>
    /// An empty page that can be used on its own or navigated to within a Frame.
    /// </summary>
    public sealed partial class MainPage : Page
    {
        public MainPage()
        {
            this.InitializeComponent();
            var app = Application.Current as App;
            reactRootView.ReactNativeHost = app.Host;
        }
    }
}
"
`;

exports[`C# NuGet Application: NuGet.Config 1`] = `
"<?xml version=\\"1.0\\" encoding=\\"utf-8\\"?>
<configuration>
  <config>
    <add key=\\"repositoryPath\\" value=\\"packages\\" />
  </config>
  <packageSources>
    <clear />
    <add key=\\"react-native\\" value=\\"https://pkgs.dev.azure.com/ms/react-native/_packaging/react-native-public/nuget/v3/index.json\\" />
    <add key=\\"Nuget.org\\" value=\\"https://api.nuget.org/v3/index.json\\" />
  </packageSources>
  <disabledPackageSources>
    <clear />
  </disabledPackageSources>  
</configuration>
"
`;

exports[`C# NuGet Application: Package.appxmanifest 1`] = `
"﻿<?xml version=\\"1.0\\" encoding=\\"utf-8\\"?>

<Package
  xmlns=\\"http://schemas.microsoft.com/appx/manifest/foundation/windows10\\"
  xmlns:mp=\\"http://schemas.microsoft.com/appx/2014/phone/manifest\\"
  xmlns:uap=\\"http://schemas.microsoft.com/appx/manifest/uap/windows10\\"
  IgnorableNamespaces=\\"uap mp\\">

  <Identity
    Name=\\"c0947a7d-60a7-4036-9973-6c4ba2daaccc\\"
    Publisher=\\"CN=nickg\\"
    Version=\\"1.0.0.0\\" />

  <mp:PhoneIdentity PhoneProductId=\\"c0947a7d-60a7-4036-9973-6c4ba2daaccc\\" PhonePublisherId=\\"00000000-0000-0000-0000-000000000000\\"/>

  <Properties>
    <DisplayName>SnapshotApp</DisplayName>
    <PublisherDisplayName>nickg</PublisherDisplayName>
    <Logo>Assets\\\\StoreLogo.png</Logo>
  </Properties>

  <Dependencies>
    <TargetDeviceFamily Name=\\"Windows.Universal\\" MinVersion=\\"10.0.0.0\\" MaxVersionTested=\\"10.0.0.0\\" />
  </Dependencies>

  <Resources>
    <Resource Language=\\"x-generate\\"/>
  </Resources>

  <Applications>
    <Application
      Id=\\"App\\"
      Executable=\\"$targetnametoken$.exe\\"
      EntryPoint=\\"SnapshotApp.App\\">
      <uap:VisualElements
        DisplayName=\\"SnapshotApp\\"
        Square150x150Logo=\\"Assets\\\\Square150x150Logo.png\\"
        Square44x44Logo=\\"Assets\\\\Square44x44Logo.png\\"
        Description=\\"SnapshotApp\\"
        BackgroundColor=\\"transparent\\">
        <uap:DefaultTile Wide310x150Logo=\\"Assets\\\\Wide310x150Logo.png\\"/>
        <uap:SplashScreen Image=\\"Assets\\\\SplashScreen.png\\" />
      </uap:VisualElements>
    </Application>
  </Applications>

  <Capabilities>
    <Capability Name=\\"internetClient\\" />
  </Capabilities>
</Package>"
`;

exports[`C# NuGet Application: ReactPackageProvider.cs 1`] = `
"using Microsoft.ReactNative;

namespace SnapshotApp
{
    public partial class ReactPackageProvider : IReactPackageProvider
    {
        public void CreatePackage(IReactPackageBuilder packageBuilder)
        {
            CreatePackageImplementation(packageBuilder);
        }

        /// <summary>
        /// This method is implemented by the C# code generator
        /// </summary>
        partial void CreatePackageImplementation(IReactPackageBuilder packageBuilder);
    }
}
"
`;

exports[`C# NuGet Application: SnapshotApp.csproj 1`] = `
"﻿<?xml version=\\"1.0\\" encoding=\\"utf-8\\"?>
<Project ToolsVersion=\\"Current\\" DefaultTargets=\\"Build\\" xmlns=\\"http://schemas.microsoft.com/developer/msbuild/2003\\">
  <Import Project=\\"$(MSBuildExtensionsPath)\\\\$(MSBuildToolsVersion)\\\\Microsoft.Common.props\\" Condition=\\"Exists('$(MSBuildExtensionsPath)\\\\$(MSBuildToolsVersion)\\\\Microsoft.Common.props')\\" />
  <Import Project=\\"$(SolutionDir)\\\\ExperimentalFeatures.props\\" Condition=\\"Exists('$(SolutionDir)\\\\ExperimentalFeatures.props')\\" />
  <PropertyGroup Label=\\"ReactNativeWindowsProps\\">
    <ReactNativeWindowsDir Condition=\\"'$(ReactNativeWindowsDir)' == ''\\">$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), 'node_modules\\\\react-native-windows\\\\package.json'))\\\\node_modules\\\\react-native-windows\\\\</ReactNativeWindowsDir>
  </PropertyGroup>
  <PropertyGroup>
    <Configuration Condition=\\" '$(Configuration)' == '' \\">Debug</Configuration>
    <Platform Condition=\\" '$(Platform)' == '' \\">x86</Platform>
    <ProjectGuid>{1C1B3321-7BF7-46EB-BC32-FBF6F86B3475}</ProjectGuid>
    <OutputType>AppContainerExe</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>SnapshotApp</RootNamespace>
    <AssemblyName>SnapshotApp</AssemblyName>
    <DefaultLanguage>en-US</DefaultLanguage>
    <TargetPlatformIdentifier>UAP</TargetPlatformIdentifier>
    <TargetPlatformVersion Condition=\\" '$(TargetPlatformVersion)' == '' \\">10.0.19041.0</TargetPlatformVersion>
    <TargetPlatformMinVersion>10.0.16299.0</TargetPlatformMinVersion>
    <MinimumVisualStudioVersion>16.0</MinimumVisualStudioVersion>
    <FileAlignment>512</FileAlignment>
    <ProjectTypeGuids>{A5A43C5B-DE2A-4C0C-9213-0A381AF9435A};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <WindowsXamlEnableOverview>true</WindowsXamlEnableOverview>
    <AppxGeneratePrisForPortableLibrariesEnabled>false</AppxGeneratePrisForPortableLibrariesEnabled>
    <LangVersion>7.3</LangVersion>
  </PropertyGroup>
  <PropertyGroup Condition=\\"'$(Configuration)|$(Platform)' == 'Debug|x86'\\">
    <DebugSymbols>true</DebugSymbols>
    <OutputPath>bin\\\\x86\\\\Debug\\\\</OutputPath>
    <DefineConstants>DEBUG;TRACE;NETFX_CORE;WINDOWS_UWP</DefineConstants>
    <NoWarn>;2008</NoWarn>
    <DebugType>full</DebugType>
    <PlatformTarget>x86</PlatformTarget>
    <UseVSHostingProcess>false</UseVSHostingProcess>
    <ErrorReport>prompt</ErrorReport>
    <Prefer32Bit>true</Prefer32Bit>
  </PropertyGroup>
  <PropertyGroup Condition=\\"'$(Configuration)|$(Platform)' == 'Release|x86'\\">
    <OutputPath>bin\\\\x86\\\\Release\\\\</OutputPath>
    <DefineConstants>TRACE;NETFX_CORE;WINDOWS_UWP</DefineConstants>
    <Optimize>true</Optimize>
    <NoWarn>;2008</NoWarn>
    <DebugType>pdbonly</DebugType>
    <PlatformTarget>x86</PlatformTarget>
    <UseVSHostingProcess>false</UseVSHostingProcess>
    <ErrorReport>prompt</ErrorReport>
    <Prefer32Bit>true</Prefer32Bit>
    <UseDotNetNativeToolchain>true</UseDotNetNativeToolchain>
  </PropertyGroup>
  <PropertyGroup Condition=\\"'$(Configuration)|$(Platform)' == 'Debug|ARM64'\\">
    <DebugSymbols>true</DebugSymbols>
    <OutputPath>bin\\\\ARM64\\\\Debug\\\\</OutputPath>
    <DefineConstants>DEBUG;TRACE;NETFX_CORE;WINDOWS_UWP</DefineConstants>
    <NoWarn>;2008</NoWarn>
    <DebugType>full</DebugType>
    <PlatformTarget>ARM64</PlatformTarget>
    <UseVSHostingProcess>false</UseVSHostingProcess>
    <ErrorReport>prompt</ErrorReport>
    <Prefer32Bit>true</Prefer32Bit>
  </PropertyGroup>
  <PropertyGroup Condition=\\"'$(Configuration)|$(Platform)' == 'Release|ARM64'\\">
    <OutputPath>bin\\\\ARM64\\\\Release\\\\</OutputPath>
    <DefineConstants>TRACE;NETFX_CORE;WINDOWS_UWP</DefineConstants>
    <Optimize>true</Optimize>
    <NoWarn>;2008</NoWarn>
    <DebugType>pdbonly</DebugType>
    <PlatformTarget>ARM64</PlatformTarget>
    <UseVSHostingProcess>false</UseVSHostingProcess>
    <ErrorReport>prompt</ErrorReport>
    <Prefer32Bit>true</Prefer32Bit>
    <UseDotNetNativeToolchain>true</UseDotNetNativeToolchain>
  </PropertyGroup>
  <PropertyGroup Condition=\\"'$(Configuration)|$(Platform)' == 'Debug|x64'\\">
    <DebugSymbols>true</DebugSymbols>
    <OutputPath>bin\\\\x64\\\\Debug\\\\</OutputPath>
    <DefineConstants>DEBUG;TRACE;NETFX_CORE;WINDOWS_UWP</DefineConstants>
    <NoWarn>;2008</NoWarn>
    <DebugType>full</DebugType>
    <PlatformTarget>x64</PlatformTarget>
    <UseVSHostingProcess>false</UseVSHostingProcess>
    <ErrorReport>prompt</ErrorReport>
    <Prefer32Bit>true</Prefer32Bit>
  </PropertyGroup>
  <PropertyGroup Condition=\\"'$(Configuration)|$(Platform)' == 'Release|x64'\\">
    <OutputPath>bin\\\\x64\\\\Release\\\\</OutputPath>
    <DefineConstants>TRACE;NETFX_CORE;WINDOWS_UWP</DefineConstants>
    <Optimize>true</Optimize>
    <NoWarn>;2008</NoWarn>
    <DebugType>pdbonly</DebugType>
    <PlatformTarget>x64</PlatformTarget>
    <UseVSHostingProcess>false</UseVSHostingProcess>
    <ErrorReport>prompt</ErrorReport>
    <Prefer32Bit>true</Prefer32Bit>
    <UseDotNetNativeToolchain>true</UseDotNetNativeToolchain>
  </PropertyGroup>
  <PropertyGroup>
    <RestoreProjectStyle>PackageReference</RestoreProjectStyle>
  </PropertyGroup>
  <ItemGroup>
    <Compile Include=\\"App.xaml.cs\\">
      <DependentUpon>App.xaml</DependentUpon>
    </Compile>
    <Compile Include=\\"MainPage.xaml.cs\\">
      <DependentUpon>MainPage.xaml</DependentUpon>
    </Compile>
    <Compile Include=\\"Properties\\\\AssemblyInfo.cs\\" />
    <Compile Include=\\"AutolinkedNativeModules.g.cs\\" />
    <Compile Include=\\"ReactPackageProvider.cs\\" />
  </ItemGroup>
  <ItemGroup>
    <AppxManifest Include=\\"Package.appxmanifest\\">
      <SubType>Designer</SubType>
    </AppxManifest>
  </ItemGroup>
  <ItemGroup>
    <Content Include=\\"Properties\\\\Default.rd.xml\\" />
    <Content Include=\\"Assets\\\\LockScreenLogo.scale-200.png\\" />
    <Content Include=\\"Assets\\\\SplashScreen.scale-200.png\\" />
    <Content Include=\\"Assets\\\\Square150x150Logo.scale-200.png\\" />
    <Content Include=\\"Assets\\\\Square44x44Logo.scale-200.png\\" />
    <Content Include=\\"Assets\\\\Square44x44Logo.targetsize-24_altform-unplated.png\\" />
    <Content Include=\\"Assets\\\\StoreLogo.png\\" />
    <Content Include=\\"Assets\\\\Wide310x150Logo.scale-200.png\\" />
  </ItemGroup>
  <ItemGroup>
    <ApplicationDefinition Include=\\"App.xaml\\">
      <Generator>MSBuild:Compile</Generator>
      <SubType>Designer</SubType>
    </ApplicationDefinition>
    <Page Include=\\"MainPage.xaml\\">
      <Generator>MSBuild:Compile</Generator>
      <SubType>Designer</SubType>
    </Page>
  </ItemGroup>
  <PropertyGroup Condition=\\" '$(VisualStudioVersion)' == '' or '$(VisualStudioVersion)' &lt; '16.0' \\">
    <VisualStudioVersion>16.0</VisualStudioVersion>
  </PropertyGroup>
  <Import Project=\\"$(MSBuildExtensionsPath)\\\\Microsoft\\\\WindowsXaml\\\\v$(VisualStudioVersion)\\\\Microsoft.Windows.UI.Xaml.CSharp.targets\\" />
  <ImportGroup Label=\\"ReactNativeWindowsPropertySheets\\">
    <Import Project=\\"$(ReactNativeWindowsDir)\\\\PropertySheets\\\\External\\\\Microsoft.ReactNative.Uwp.CSharpApp.props\\" Condition=\\"Exists('$(ReactNativeWindowsDir)\\\\PropertySheets\\\\External\\\\Microsoft.ReactNative.Uwp.CSharpApp.props')\\" />
  </ImportGroup>
  <Choose>
    <When Condition=\\"'$(UseWinUI3)'!='true'\\">
      <ItemGroup>
        <PackageReference Include=\\"Microsoft.UI.Xaml\\" >
          <Version>$(WinUI2xVersion)</Version>
        </PackageReference>
      </ItemGroup>
    </When>
    <Otherwise>
      <ItemGroup>
        <PackageReference Include=\\"Microsoft.WinUI\\">
          <Version>$(WinUI3Version)</Version>
        </PackageReference>
      </ItemGroup>
    </Otherwise>
  </Choose>
  <ItemGroup>
    <PackageReference Include=\\"Microsoft.NETCore.UniversalWindowsPlatform\\">
      <Version>6.2.9</Version>
    </PackageReference>
    <PackageReference Include=\\"ReactNative.Hermes.Windows\\">
      <Version>0.9.0-ms.6</Version>
    </PackageReference>
    <PackageReference Include=\\"Microsoft.ReactNative.Managed\\">
      <Version>0.0.0-canary.409</Version>
    </PackageReference>
  </ItemGroup>
  <ImportGroup Label=\\"ReactNativeWindowsTargets\\">
    <Import Project=\\"$(ReactNativeWindowsDir)\\\\PropertySheets\\\\External\\\\Microsoft.ReactNative.Uwp.CSharpApp.targets\\" Condition=\\"Exists('$(ReactNativeWindowsDir)\\\\PropertySheets\\\\External\\\\Microsoft.ReactNative.Uwp.CSharpApp.targets')\\" />
  </ImportGroup>
  <Target Name=\\"EnsureReactNativeWindowsTargets\\" BeforeTargets=\\"PrepareForBuild\\">
    <PropertyGroup>
      <ErrorText>This project references targets in your node_modules\\\\react-native-windows folder that are missing. The missing file is {0}.</ErrorText>
    </PropertyGroup>
    <Error Condition=\\"!Exists('$(ReactNativeWindowsDir)\\\\PropertySheets\\\\External\\\\Microsoft.ReactNative.Uwp.CSharpApp.props')\\" Text=\\"$([System.String]::Format('$(ErrorText)', '$(ReactNativeWindowsDir)\\\\PropertySheets\\\\External\\\\Microsoft.ReactNative.Uwp.CSharpApp.props'))\\" />
    <Error Condition=\\"!Exists('$(ReactNativeWindowsDir)\\\\PropertySheets\\\\External\\\\Microsoft.ReactNative.Uwp.CSharpApp.targets')\\" Text=\\"$([System.String]::Format('$(ErrorText)', '$(ReactNativeWindowsDir)\\\\PropertySheets\\\\External\\\\Microsoft.ReactNative.Uwp.CSharpApp.targets'))\\" />
  </Target>
</Project>
"
`;

exports[`C# NuGet Application: SnapshotApp.sln 1`] = `
"﻿
Microsoft Visual Studio Solution File, Format Version 12.00
# Visual Studio Version 16
VisualStudioVersion = 16.0.29215.179
MinimumVisualStudioVersion = 10.0.40219.1
Project(\\"{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}\\") = \\"SnapshotApp\\", \\"SnapshotApp\\\\SnapshotApp.csproj\\", \\"{1C1B3321-7BF7-46EB-BC32-FBF6F86B3475}\\"
EndProject
Global
	GlobalSection(SolutionConfigurationPlatforms) = preSolution
		Debug|ARM64 = Debug|ARM64
		Debug|x64 = Debug|x64
		Debug|x86 = Debug|x86
		Release|ARM64 = Release|ARM64
		Release|x64 = Release|x64
		Release|x86 = Release|x86
	EndGlobalSection
	GlobalSection(ProjectConfigurationPlatforms) = postSolution
		{1C1B3321-7BF7-46EB-BC32-FBF6F86B3475}.Debug|ARM64.ActiveCfg = Debug|ARM64
		{1C1B3321-7BF7-46EB-BC32-FBF6F86B3475}.Debug|ARM64.Build.0 = Debug|ARM64
		{1C1B3321-7BF7-46EB-BC32-FBF6F86B3475}.Debug|ARM64.Deploy.0 = Debug|ARM64
		{1C1B3321-7BF7-46EB-BC32-FBF6F86B3475}.Debug|x64.ActiveCfg = Debug|x64
		{1C1B3321-7BF7-46EB-BC32-FBF6F86B3475}.Debug|x64.Build.0 = Debug|x64
		{1C1B3321-7BF7-46EB-BC32-FBF6F86B3475}.Debug|x64.Deploy.0 = Debug|x64
		{1C1B3321-7BF7-46EB-BC32-FBF6F86B3475}.Debug|x86.ActiveCfg = Debug|x86
		{1C1B3321-7BF7-46EB-BC32-FBF6F86B3475}.Debug|x86.Build.0 = Debug|x86
		{1C1B3321-7BF7-46EB-BC32-FBF6F86B3475}.Debug|x86.Deploy.0 = Debug|x86
		{1C1B3321-7BF7-46EB-BC32-FBF6F86B3475}.Release|ARM64.ActiveCfg = Release|ARM64
		{1C1B3321-7BF7-46EB-BC32-FBF6F86B3475}.Release|ARM64.Build.0 = Release|ARM64
		{1C1B3321-7BF7-46EB-BC32-FBF6F86B3475}.Release|ARM64.Deploy.0 = Release|ARM64
		{1C1B3321-7BF7-46EB-BC32-FBF6F86B3475}.Release|x64.ActiveCfg = Release|x64
		{1C1B3321-7BF7-46EB-BC32-FBF6F86B3475}.Release|x64.Build.0 = Release|x64
		{1C1B3321-7BF7-46EB-BC32-FBF6F86B3475}.Release|x64.Deploy.0 = Release|x64
		{1C1B3321-7BF7-46EB-BC32-FBF6F86B3475}.Release|x86.ActiveCfg = Release|x86
		{1C1B3321-7BF7-46EB-BC32-FBF6F86B3475}.Release|x86.Build.0 = Release|x86
		{1C1B3321-7BF7-46EB-BC32-FBF6F86B3475}.Release|x86.Deploy.0 = Release|x86
	EndGlobalSection
	GlobalSection(SolutionProperties) = preSolution
		HideSolutionNode = FALSE
	EndGlobalSection
	GlobalSection(ExtensibilityGlobals) = postSolution
		SolutionGuid = {D43FAD39-F619-437D-BB40-04A3982ACB6A}
	EndGlobalSection
EndGlobal
"
`;

exports[`C# NuGet Application: index.windows.bundle 1`] = `
"/**
 * 
 * Be sure to generate this file using the CLI:
 *
 * npx react-native bundle --platform windows --entry-file index.js 
 *   --bundle-output windows\\\\SnapshotApp\\\\Bundle\\\\index.windows.bundle
 *   --assets-dest windows\\\\SnapshotApp\\\\Bundle
 *
 */"
`;

exports[`C# NuGet Application: metro.config.js 1`] = `
"/**
 * Metro configuration for React Native
 * https://github.com/facebook/react-native
 *
 * @format
 */
const fs = require('fs');
const path = require('path');
const exclusionList = require('metro-config/src/defaults/exclusionList');

const rnwPath = fs.realpathSync(
  path.resolve(require.resolve('react-native-windows/package.json'), '..'),
);

module.exports = {
  resolver: {
    blockList: exclusionList([
      // This stops \\"react-native run-windows\\" from causing the metro server to crash if its already running
      new RegExp(
        \`\${path.resolve(__dirname, 'windows').replace(/[/\\\\\\\\]/g, '/')}.*\`,
      ),
      // This prevents \\"react-native run-windows\\" from hitting: EBUSY: resource busy or locked, open msbuild.ProjectImports.zip or other files produced by msbuild
      new RegExp(\`\${rnwPath}/build/.*\`),
      new RegExp(\`\${rnwPath}/target/.*\`),
      /.*\\\\.ProjectImports\\\\.zip/,
    ]),
  },
  transformer: {
    getTransformOptions: async () => ({
      transform: {
        experimentalImportSupport: false,
        inlineRequires: true,
      },
    }),
  },
};
"
`;

exports[`C# NuGet Library: AssemblyInfo.cs 1`] = `
"﻿using System.Reflection;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;

// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
[assembly: AssemblyTitle(\\"SnapshotApp\\")]
[assembly: AssemblyDescription(\\"\\")]
[assembly: AssemblyConfiguration(\\"\\")]
[assembly: AssemblyCompany(\\"\\")]
[assembly: AssemblyProduct(\\"SnapshotApp\\")]
[assembly: AssemblyCopyright(\\"Copyright ©  2019\\")]
[assembly: AssemblyTrademark(\\"\\")]
[assembly: AssemblyCulture(\\"\\")]

// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Build and Revision Numbers 
// by using the '*' as shown below:
// [assembly: AssemblyVersion(\\"1.0.*\\")]
[assembly: AssemblyVersion(\\"1.0.0.0\\")]
[assembly: AssemblyFileVersion(\\"1.0.0.0\\")]
[assembly: ComVisible(false)]"
`;

exports[`C# NuGet Library: Default.rd.xml 1`] = `
"<!--
    This file contains Runtime Directives used by .NET Native. The defaults here are suitable for most
    developers. However, you can modify these parameters to modify the behavior of the .NET Native
    optimizer.

    Runtime Directives are documented at https://go.microsoft.com/fwlink/?LinkID=391919

    To fully enable reflection for App1.MyClass and all of its public/private members
    <Type Name=\\"App1.MyClass\\" Dynamic=\\"Required All\\"/>

    To enable dynamic creation of the specific instantiation of AppClass<T> over System.Int32
    <TypeInstantiation Name=\\"App1.AppClass\\" Arguments=\\"System.Int32\\" Activate=\\"Required Public\\" />

    Using the Namespace directive to apply reflection policy to all the types in a particular namespace
    <Namespace Name=\\"DataClasses.ViewModels\\" Serialize=\\"All\\" />
-->

<Directives xmlns=\\"http://schemas.microsoft.com/netfx/2013/01/metadata\\">
  <Application>
    <!--
      An Assembly element with Name=\\"*Application*\\" applies to all assemblies in
      the application package. The asterisks are not wildcards.
    -->
    <Assembly Name=\\"*Application*\\" Dynamic=\\"Required All\\" />
    
    
    <!-- Add your application specific runtime directives here. -->
    <Namespace Name=\\"Microsoft.ReactNative\\" Dynamic=\\"Required All\\" MarshalObject=\\"Required All\\" />
    <Namespace Name=\\"Microsoft.ReactNative.Managed\\" Dynamic=\\"Required All\\" MarshalObject=\\"Required All\\" />

  </Application>
</Directives>"
`;

exports[`C# NuGet Library: ExperimentalFeatures.props 1`] = `
"<?xml version=\\"1.0\\" encoding=\\"utf-8\\"?>
<Project xmlns=\\"http://schemas.microsoft.com/developer/msbuild/2003\\">

  <!--
    Application projects contain a file with this name to specify some important settings
    that will apply globally for the app and *all* native modules the app consumes. These
    values are set by the app developer.
  -->

</Project>
"
`;

exports[`C# NuGet Library: NuGet.Config 1`] = `
"<?xml version=\\"1.0\\" encoding=\\"utf-8\\"?>
<configuration>
  <config>
    <add key=\\"repositoryPath\\" value=\\"packages\\" />
  </config>
  <packageSources>
    <clear />
    <add key=\\"react-native\\" value=\\"https://pkgs.dev.azure.com/ms/react-native/_packaging/react-native-public/nuget/v3/index.json\\" />
    <add key=\\"Nuget.org\\" value=\\"https://api.nuget.org/v3/index.json\\" />
  </packageSources>
  <disabledPackageSources>
    <clear />
  </disabledPackageSources>  
</configuration>
"
`;

exports[`C# NuGet Library: ReactNativeModule.cs 1`] = `
"﻿using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

using Microsoft.ReactNative;
using Microsoft.ReactNative.Managed;

namespace SnapshotApp
{
    [ReactModule(\\"SnapshotApp\\")]
    internal sealed class ReactNativeModule
    {
        // See https://microsoft.github.io/react-native-windows/docs/native-modules for details on writing native modules

        private ReactContext _reactContext;

        [ReactInitializer]
        public void Initialize(ReactContext reactContext)
        {
            _reactContext = reactContext;
        }

        [ReactMethod]
        public void sampleMethod(string stringArgument, int numberArgument, Action<string> callback)
        {
            // TODO: Implement some actually useful functionality
            callback(\\"Received numberArgument: \\" + numberArgument + \\" stringArgument: \\" + stringArgument);
        }
    }
}
"
`;

exports[`C# NuGet Library: ReactPackageProvider.cs 1`] = `
"using Microsoft.ReactNative;

namespace SnapshotApp
{
    public partial class ReactPackageProvider : IReactPackageProvider
    {
        public void CreatePackage(IReactPackageBuilder packageBuilder)
        {
            CreatePackageImplementation(packageBuilder);
        }

        /// <summary>
        /// This method is implemented by the C# code generator
        /// </summary>
        partial void CreatePackageImplementation(IReactPackageBuilder packageBuilder);
    }
}
"
`;

exports[`C# NuGet Library: SnapshotApp.csproj 1`] = `
"﻿<?xml version=\\"1.0\\" encoding=\\"utf-8\\"?>
<Project ToolsVersion=\\"Current\\" DefaultTargets=\\"Build\\" xmlns=\\"http://schemas.microsoft.com/developer/msbuild/2003\\">
  <Import Project=\\"$(MSBuildExtensionsPath)\\\\$(MSBuildToolsVersion)\\\\Microsoft.Common.props\\" Condition=\\"Exists('$(MSBuildExtensionsPath)\\\\$(MSBuildToolsVersion)\\\\Microsoft.Common.props')\\" />
  <Import Project=\\"$(SolutionDir)\\\\ExperimentalFeatures.props\\" Condition=\\"Exists('$(SolutionDir)\\\\ExperimentalFeatures.props')\\" />
  <PropertyGroup Label=\\"ReactNativeWindowsProps\\">
    <ReactNativeWindowsDir Condition=\\"'$(ReactNativeWindowsDir)' == ''\\">$([MSBuild]::GetDirectoryNameOfFileAbove($(SolutionDir), 'node_modules\\\\react-native-windows\\\\package.json'))\\\\node_modules\\\\react-native-windows\\\\</ReactNativeWindowsDir>
  </PropertyGroup>
  <PropertyGroup>
    <Configuration Condition=\\" '$(Configuration)' == '' \\">Debug</Configuration>
    <Platform Condition=\\" '$(Platform)' == '' \\">x86</Platform>
    <ProjectGuid>{67E2DA82-1142-4174-8A1B-E83B81E9F1DF}</ProjectGuid>
    <OutputType>winmdobj</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>SnapshotApp</RootNamespace>
    <AssemblyName>SnapshotApp</AssemblyName>
    <DefaultLanguage>en-US</DefaultLanguage>
    <TargetPlatformIdentifier>UAP</TargetPlatformIdentifier>
    <TargetPlatformVersion Condition=\\" '$(TargetPlatformVersion)' == '' \\">10.0.19041.0</TargetPlatformVersion>
    <TargetPlatformMinVersion>10.0.16299.0</TargetPlatformMinVersion>
    <MinimumVisualStudioVersion>16.0</MinimumVisualStudioVersion>
    <FileAlignment>512</FileAlignment>
    <ProjectTypeGuids>{A5A43C5B-DE2A-4C0C-9213-0A381AF9435A};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <WindowsXamlEnableOverview>true</WindowsXamlEnableOverview>
    <LangVersion>7.3</LangVersion>
  </PropertyGroup>
  <PropertyGroup Condition=\\"'$(Configuration)|$(Platform)' == 'Debug|x86'\\">
    <DebugSymbols>true</DebugSymbols>
    <OutputPath>bin\\\\x86\\\\Debug\\\\</OutputPath>
    <DefineConstants>DEBUG;TRACE;NETFX_CORE;WINDOWS_UWP</DefineConstants>
    <NoWarn>;2008</NoWarn>
    <DebugType>full</DebugType>
    <PlatformTarget>x86</PlatformTarget>
    <UseVSHostingProcess>false</UseVSHostingProcess>
    <ErrorReport>prompt</ErrorReport>
    <Prefer32Bit>true</Prefer32Bit>
  </PropertyGroup>
  <PropertyGroup Condition=\\"'$(Configuration)|$(Platform)' == 'Release|x86'\\">
    <OutputPath>bin\\\\x86\\\\Release\\\\</OutputPath>
    <DefineConstants>TRACE;NETFX_CORE;WINDOWS_UWP</DefineConstants>
    <Optimize>true</Optimize>
    <NoWarn>;2008</NoWarn>
    <DebugType>pdbonly</DebugType>
    <PlatformTarget>x86</PlatformTarget>
    <UseVSHostingProcess>false</UseVSHostingProcess>
    <ErrorReport>prompt</ErrorReport>
    <Prefer32Bit>true</Prefer32Bit>
    <UseDotNetNativeToolchain>true</UseDotNetNativeToolchain>
  </PropertyGroup>
  <PropertyGroup Condition=\\"'$(Configuration)|$(Platform)' == 'Debug|ARM64'\\">
    <DebugSymbols>true</DebugSymbols>
    <OutputPath>bin\\\\ARM64\\\\Debug\\\\</OutputPath>
    <DefineConstants>DEBUG;TRACE;NETFX_CORE;WINDOWS_UWP</DefineConstants>
    <NoWarn>;2008</NoWarn>
    <DebugType>full</DebugType>
    <PlatformTarget>ARM64</PlatformTarget>
    <UseVSHostingProcess>false</UseVSHostingProcess>
    <ErrorReport>prompt</ErrorReport>
    <Prefer32Bit>true</Prefer32Bit>
  </PropertyGroup>
  <PropertyGroup Condition=\\"'$(Configuration)|$(Platform)' == 'Release|ARM64'\\">
    <OutputPath>bin\\\\ARM64\\\\Release\\\\</OutputPath>
    <DefineConstants>TRACE;NETFX_CORE;WINDOWS_UWP</DefineConstants>
    <Optimize>true</Optimize>
    <NoWarn>;2008</NoWarn>
    <DebugType>pdbonly</DebugType>
    <PlatformTarget>ARM64</PlatformTarget>
    <UseVSHostingProcess>false</UseVSHostingProcess>
    <ErrorReport>prompt</ErrorReport>
    <Prefer32Bit>true</Prefer32Bit>
    <UseDotNetNativeToolchain>true</UseDotNetNativeToolchain>
  </PropertyGroup>
  <PropertyGroup Condition=\\"'$(Configuration)|$(Platform)' == 'Debug|x64'\\">
    <DebugSymbols>true</DebugSymbols>
    <OutputPath>bin\\\\x64\\\\Debug\\\\</OutputPath>
    <DefineConstants>DEBUG;TRACE;NETFX_CORE;WINDOWS_UWP</DefineConstants>
    <NoWarn>;2008</NoWarn>
    <DebugType>full</DebugType>
    <PlatformTarget>x64</PlatformTarget>
    <UseVSHostingProcess>false</UseVSHostingProcess>
    <ErrorReport>prompt</ErrorReport>
    <Prefer32Bit>true</Prefer32Bit>
  </PropertyGroup>
  <PropertyGroup Condition=\\"'$(Configuration)|$(Platform)' == 'Release|x64'\\">
    <OutputPath>bin\\\\x64\\\\Release\\\\</OutputPath>
    <DefineConstants>TRACE;NETFX_CORE;WINDOWS_UWP</DefineConstants>
    <Optimize>true</Optimize>
    <NoWarn>;2008</NoWarn>
    <DebugType>pdbonly</DebugType>
    <PlatformTarget>x64</PlatformTarget>
    <UseVSHostingProcess>false</UseVSHostingProcess>
    <ErrorReport>prompt</ErrorReport>
    <Prefer32Bit>true</Prefer32Bit>
    <UseDotNetNativeToolchain>true</UseDotNetNativeToolchain>
  </PropertyGroup>
  <PropertyGroup>
    <RestoreProjectStyle>PackageReference</RestoreProjectStyle>
  </PropertyGroup>
  <ItemGroup>
    <Compile Include=\\"Properties\\\\AssemblyInfo.cs\\" />
    <Compile Include=\\"ReactNativeModule.cs\\" />
    <Compile Include=\\"ReactPackageProvider.cs\\" />
  </ItemGroup>
  <ItemGroup>
    <PackageReference Include=\\"Microsoft.NETCore.UniversalWindowsPlatform\\">
      <Version>6.2.9</Version>
    </PackageReference>
    <PackageReference Include=\\"ReactNative.Hermes.Windows\\">
      <Version>0.9.0-ms.6</Version>
    </PackageReference>
    <PackageReference Include=\\"Microsoft.ReactNative.Managed\\">
      <Version>0.0.0-canary.409</Version>
    </PackageReference>
  </ItemGroup>
  <PropertyGroup Condition=\\" '$(VisualStudioVersion)' == '' or '$(VisualStudioVersion)' &lt; '16.0' \\">
    <VisualStudioVersion>16.0</VisualStudioVersion>
  </PropertyGroup>
  <Import Project=\\"$(MSBuildExtensionsPath)\\\\Microsoft\\\\WindowsXaml\\\\v$(VisualStudioVersion)\\\\Microsoft.Windows.UI.Xaml.CSharp.targets\\" />
  <ImportGroup Label=\\"ReactNativeWindowsPropertySheets\\">
    <Import Project=\\"$(ReactNativeWindowsDir)\\\\PropertySheets\\\\External\\\\Microsoft.ReactNative.Uwp.CSharpLib.props\\" Condition=\\"Exists('$(ReactNativeWindowsDir)\\\\PropertySheets\\\\External\\\\Microsoft.ReactNative.Uwp.CSharpLib.props')\\" />
  </ImportGroup>
  <ImportGroup Label=\\"ReactNativeWindowsTargets\\">
    <Import Project=\\"$(ReactNativeWindowsDir)\\\\PropertySheets\\\\External\\\\Microsoft.ReactNative.Uwp.CSharpLib.targets\\" Condition=\\"Exists('$(ReactNativeWindowsDir)\\\\PropertySheets\\\\External\\\\Microsoft.ReactNative.Uwp.CSharpLib.targets')\\" />
  </ImportGroup>
  <Target Name=\\"EnsureReactNativeWindowsTargets\\" BeforeTargets=\\"PrepareForBuild\\">
    <PropertyGroup>
      <ErrorText>This project references targets in your node_modules\\\\react-native-windows folder that are missing. The missing file is {0}.</ErrorText>
    </PropertyGroup>
    <Error Condition=\\"!Exists('$(ReactNativeWindowsDir)\\\\PropertySheets\\\\External\\\\Microsoft.ReactNative.Uwp.CSharpLib.props')\\" Text=\\"$([System.String]::Format('$(ErrorText)', '$(ReactNativeWindowsDir)\\\\PropertySheets\\\\External\\\\Microsoft.ReactNative.Uwp.CSharpLib.props'))\\" />
    <Error Condition=\\"!Exists('$(ReactNativeWindowsDir)\\\\PropertySheets\\\\External\\\\Microsoft.ReactNative.Uwp.CSharpLib.targets')\\" Text=\\"$([System.String]::Format('$(ErrorText)', '$(ReactNativeWindowsDir)\\\\PropertySheets\\\\External\\\\Microsoft.ReactNative.Uwp.CSharpLib.targets'))\\" />
  </Target>
</Project>
"
`;

exports[`C# NuGet Library: SnapshotApp.sln 1`] = `
"﻿
Microsoft Visual Studio Solution File, Format Version 12.00
# Visual Studio Version 16
VisualStudioVersion = 16.0.29215.179
MinimumVisualStudioVersion = 10.0.40219.1
Project(\\"{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}\\") = \\"SnapshotApp\\", \\"SnapshotApp\\\\SnapshotApp.csproj\\", \\"{67E2DA82-1142-4174-8A1B-E83B81E9F1DF}\\"
EndProject
Global
	GlobalSection(SolutionConfigurationPlatforms) = preSolution
		Debug|ARM64 = Debug|ARM64
		Debug|x64 = Debug|x64
		Debug|x86 = Debug|x86
		Release|ARM64 = Release|ARM64
		Release|x64 = Release|x64
		Release|x86 = Release|x86
	EndGlobalSection
	GlobalSection(ProjectConfigurationPlatforms) = postSolution
		{67E2DA82-1142-4174-8A1B-E83B81E9F1DF}.Debug|ARM64.ActiveCfg = Debug|ARM64
		{67E2DA82-1142-4174-8A1B-E83B81E9F1DF}.Debug|ARM64.Build.0 = Debug|ARM64
		{67E2DA82-1142-4174-8A1B-E83B81E9F1DF}.Debug|ARM64.Deploy.0 = Debug|ARM64
		{67E2DA82-1142-4174-8A1B-E83B81E9F1DF}.Debug|x64.ActiveCfg = Debug|x64
		{67E2DA82-1142-4174-8A1B-E83B81E9F1DF}.Debug|x64.Build.0 = Debug|x64
		{67E2DA82-1142-4174-8A1B-E83B81E9F1DF}.Debug|x64.Deploy.0 = Debug|x64
		{67E2DA82-1142-4174-8A1B-E83B81E9F1DF}.Debug|x86.ActiveCfg = Debug|x86
		{67E2DA82-1142-4174-8A1B-E83B81E9F1DF}.Debug|x86.Build.0 = Debug|x86
		{67E2DA82-1142-4174-8A1B-E83B81E9F1DF}.Debug|x86.Deploy.0 = Debug|x86
		{67E2DA82-1142-4174-8A1B-E83B81E9F1DF}.Release|ARM64.ActiveCfg = Release|ARM64
		{67E2DA82-1142-4174-8A1B-E83B81E9F1DF}.Release|ARM64.Build.0 = Release|ARM64
		{67E2DA82-1142-4174-8A1B-E83B81E9F1DF}.Release|ARM64.Deploy.0 = Release|ARM64
		{67E2DA82-1142-4174-8A1B-E83B81E9F1DF}.Release|x64.ActiveCfg = Release|x64
		{67E2DA82-1142-4174-8A1B-E83B81E9F1DF}.Release|x64.Build.0 = Release|x64
		{67E2DA82-1142-4174-8A1B-E83B81E9F1DF}.Release|x64.Deploy.0 = Release|x64
		{67E2DA82-1142-4174-8A1B-E83B81E9F1DF}.Release|x86.ActiveCfg = Release|x86
		{67E2DA82-1142-4174-8A1B-E83B81E9F1DF}.Release|x86.Build.0 = Release|x86
		{67E2DA82-1142-4174-8A1B-E83B81E9F1DF}.Release|x86.Deploy.0 = Release|x86
	EndGlobalSection
	GlobalSection(SolutionProperties) = preSolution
		HideSolutionNode = FALSE
	EndGlobalSection
	GlobalSection(ExtensibilityGlobals) = postSolution
		SolutionGuid = {D43FAD39-F619-437D-BB40-04A3982ACB6A}
	EndGlobalSection
EndGlobal
"
`;

exports[`C# NuGet+Hermes Application: App.xaml 1`] = `
"﻿<react:ReactApplication
    x:Class=\\"SnapshotApp.App\\"
    xmlns=\\"http://schemas.microsoft.com/winfx/2006/xaml/presentation\\"
    xmlns:x=\\"http://schemas.microsoft.com/winfx/2006/xaml\\"
    xmlns:local=\\"using:SnapshotApp\\"
    xmlns:react=\\"using:Microsoft.ReactNative\\">
    <Application.Resources>
        <XamlControlsResources xmlns=\\"using:Microsoft.UI.Xaml.Controls\\" />
    </Application.Resources>
</react:ReactApplication>
"
`;

exports[`C# NuGet+Hermes Application: App.xaml.cs 1`] = `
"using Microsoft.ReactNative;
#if USE_WINUI3
using Microsoft.UI.Xaml;
using Microsoft.UI.Xaml.Controls;
#else
using Windows.ApplicationModel.Activation;
using Windows.UI.Xaml;
using Windows.UI.Xaml.Controls;
#endif

namespace SnapshotApp
{
    sealed partial class App : ReactApplication
    {
        public App()
        {
#if BUNDLE
            JavaScriptBundleFile = \\"index.windows\\";
            InstanceSettings.UseWebDebugger = false;
            InstanceSettings.UseFastRefresh = false;
#else
            JavaScriptBundleFile = \\"index\\";
            InstanceSettings.UseWebDebugger = true;
            InstanceSettings.UseFastRefresh = true;
#endif

#if DEBUG
            InstanceSettings.UseDeveloperSupport = true;
#else
            InstanceSettings.UseDeveloperSupport = false;
#endif

            Microsoft.ReactNative.Managed.AutolinkedNativeModules.RegisterAutolinkedNativeModulePackages(PackageProviders); // Includes any autolinked modules

            PackageProviders.Add(new ReactPackageProvider());

            InitializeComponent();
        }

        /// <summary>
        /// Invoked when the application is launched normally by the end user.  Other entry points
        /// will be used such as when the application is launched to open a specific file.
        /// </summary>
        /// <param name=\\"e\\">Details about the launch request and process.</param>
        protected override void OnLaunched(LaunchActivatedEventArgs e)
        {
            base.OnLaunched(e);
            var frame = (Frame)Window.Current.Content;
            frame.Navigate(typeof(MainPage), e.Arguments);
        }

        /// <summary>
        /// Invoked when the application is activated by some means other than normal launching.
        /// </summary>
        protected override void OnActivated(Windows.ApplicationModel.Activation.IActivatedEventArgs e)
        {
            var preActivationContent = Window.Current.Content;
            base.OnActivated(e);
            if (preActivationContent == null && Window.Current != null)
            {
                // Display the initial content
                var frame = (Frame)Window.Current.Content;
                frame.Navigate(typeof(MainPage), null);
            }
        }
    }
}
"
`;

exports[`C# NuGet+Hermes Application: AssemblyInfo.cs 1`] = `
"﻿using System.Reflection;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;

// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
[assembly: AssemblyTitle(\\"SnapshotApp\\")]
[assembly: AssemblyDescription(\\"\\")]
[assembly: AssemblyConfiguration(\\"\\")]
[assembly: AssemblyCompany(\\"\\")]
[assembly: AssemblyProduct(\\"SnapshotApp\\")]
[assembly: AssemblyCopyright(\\"Copyright ©  2019\\")]
[assembly: AssemblyTrademark(\\"\\")]
[assembly: AssemblyCulture(\\"\\")]

// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Build and Revision Numbers 
// by using the '*' as shown below:
// [assembly: AssemblyVersion(\\"1.0.*\\")]
[assembly: AssemblyVersion(\\"1.0.0.0\\")]
[assembly: AssemblyFileVersion(\\"1.0.0.0\\")]
[assembly: ComVisible(false)]"
`;

exports[`C# NuGet+Hermes Application: AutolinkedNativeModules.g.cs 1`] = `
"﻿// AutolinkedNativeModules.g.cs contents generated by \\"react-native autolink-windows\\"

using System.Collections.Generic;

namespace Microsoft.ReactNative.Managed
{
    internal static class AutolinkedNativeModules
    {
        internal static void RegisterAutolinkedNativeModulePackages(IList<IReactPackageProvider> packageProviders)
        { 
        }
    }
}
"
`;

exports[`C# NuGet+Hermes Application: AutolinkedNativeModules.g.props 1`] = `
"<?xml version=\\"1.0\\" encoding=\\"utf-8\\"?>
<Project xmlns=\\"http://schemas.microsoft.com/developer/msbuild/2003\\">
  <!-- AutolinkedNativeModules.g.props contents generated by \\"react-native autolink-windows\\" -->
  <PropertyGroup>
  </PropertyGroup>
</Project>
"
`;

exports[`C# NuGet+Hermes Application: AutolinkedNativeModules.g.targets 1`] = `
"<?xml version=\\"1.0\\" encoding=\\"utf-8\\"?>
<Project xmlns=\\"http://schemas.microsoft.com/developer/msbuild/2003\\">
  <!-- AutolinkedNativeModules.g.targets contents generated by \\"react-native autolink-windows\\" -->
  <ItemGroup>
  </ItemGroup>
</Project>
"
`;

exports[`C# NuGet+Hermes Application: Default.rd.xml 1`] = `
"<!--
    This file contains Runtime Directives used by .NET Native. The defaults here are suitable for most
    developers. However, you can modify these parameters to modify the behavior of the .NET Native
    optimizer.

    Runtime Directives are documented at https://go.microsoft.com/fwlink/?LinkID=391919

    To fully enable reflection for App1.MyClass and all of its public/private members
    <Type Name=\\"App1.MyClass\\" Dynamic=\\"Required All\\"/>

    To enable dynamic creation of the specific instantiation of AppClass<T> over System.Int32
    <TypeInstantiation Name=\\"App1.AppClass\\" Arguments=\\"System.Int32\\" Activate=\\"Required Public\\" />

    Using the Namespace directive to apply reflection policy to all the types in a particular namespace
    <Namespace Name=\\"DataClasses.ViewModels\\" Serialize=\\"All\\" />
-->

<Directives xmlns=\\"http://schemas.microsoft.com/netfx/2013/01/metadata\\">
  <Application>
    <!--
      An Assembly element with Name=\\"*Application*\\" applies to all assemblies in
      the application package. The asterisks are not wildcards.
    -->
    <Assembly Name=\\"*Application*\\" Dynamic=\\"Required All\\" />
    
    
    <!-- Add your application specific runtime directives here. -->
    <Namespace Name=\\"Microsoft.ReactNative\\" Dynamic=\\"Required All\\" MarshalObject=\\"Required All\\" />
    <Namespace Name=\\"Microsoft.ReactNative.Managed\\" Dynamic=\\"Required All\\" MarshalObject=\\"Required All\\" />

  </Application>
</Directives>"
`;

exports[`C# NuGet+Hermes Application: ExperimentalFeatures.props 1`] = `
"<?xml version=\\"1.0\\" encoding=\\"utf-8\\"?>
<Project xmlns=\\"http://schemas.microsoft.com/developer/msbuild/2003\\">

  <!--
    This file contains some important settings that will apply globally for
    your app and *all* native modules your app consumes. These values were
    set when you created the app project, and in some cases cannot be
    simply changed here without recreating a new project.
  -->

  <PropertyGroup Label=\\"Microsoft.ReactNative Experimental Features\\">
    <!--
      Enables default usage of Hermes.
      
      See https://microsoft.github.io/react-native-windows/docs/hermes
    -->
    <UseHermes>true</UseHermes>

    <!--
      Changes compilation to assume use of WinUI 3 instead of System XAML.
      Requires creation of new project.

      See https://microsoft.github.io/react-native-windows/docs/winui3
    -->
    <UseWinUI3>false</UseWinUI3>

    <!--
      Changes compilation to assume use of Microsoft.ReactNative NuGet packages
      instead of building the framework from source.
      Requires creation of new project.

      See https://microsoft.github.io/react-native-windows/docs/nuget
    -->
    <UseExperimentalNuget>true</UseExperimentalNuget>
  
  </PropertyGroup>

</Project>
"
`;

exports[`C# NuGet+Hermes Application: MainPage.xaml 1`] = `
"<Page
    x:Class=\\"SnapshotApp.MainPage\\"
    xmlns=\\"http://schemas.microsoft.com/winfx/2006/xaml/presentation\\"
    xmlns:x=\\"http://schemas.microsoft.com/winfx/2006/xaml\\"
    xmlns:local=\\"using:SnapshotApp\\"
    xmlns:react=\\"using:Microsoft.ReactNative\\"
    xmlns:d=\\"http://schemas.microsoft.com/expression/blend/2008\\"
    xmlns:mc=\\"http://schemas.openxmlformats.org/markup-compatibility/2006\\"
    mc:Ignorable=\\"d\\"
    Background=\\"{ThemeResource ApplicationPageBackgroundThemeBrush}\\">
    <react:ReactRootView 
        x:Name=\\"reactRootView\\"
        ComponentName=\\"SnapshotApp\\"
        Background=\\"{ThemeResource ApplicationPageBackgroundThemeBrush}\\"
        MinHeight=\\"400\\"/>
</Page>
"
`;

exports[`C# NuGet+Hermes Application: MainPage.xaml.cs 1`] = `
"using Microsoft.ReactNative;
using System;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System.Runtime.InteropServices.WindowsRuntime;
using Windows.Foundation;
using Windows.Foundation.Collections;
#if !USE_WINUI3
using Windows.UI.Xaml;
using Windows.UI.Xaml.Controls;
using Windows.UI.Xaml.Controls.Primitives;
using Windows.UI.Xaml.Data;
using Windows.UI.Xaml.Input;
using Windows.UI.Xaml.Media;
using Windows.UI.Xaml.Navigation;
#else
using Microsoft.UI.Xaml;
using Microsoft.UI.Xaml.Controls;
using Microsoft.UI.Xaml.Controls.Primitives;
using Microsoft.UI.Xaml.Data;
using Microsoft.UI.Xaml.Input;
using Microsoft.UI.Xaml.Media;
using Microsoft.UI.Xaml.Navigation;
#endif

// The Blank Page item template is documented at https://go.microsoft.com/fwlink/?LinkId=234238

namespace SnapshotApp
{
    /// <summary>
    /// An empty page that can be used on its own or navigated to within a Frame.
    /// </summary>
    public sealed partial class MainPage : Page
    {
        public MainPage()
        {
            this.InitializeComponent();
            var app = Application.Current as App;
            reactRootView.ReactNativeHost = app.Host;
        }
    }
}
"
`;

exports[`C# NuGet+Hermes Application: NuGet.Config 1`] = `
"<?xml version=\\"1.0\\" encoding=\\"utf-8\\"?>
<configuration>
  <config>
    <add key=\\"repositoryPath\\" value=\\"packages\\" />
  </config>
  <packageSources>
    <clear />
    <add key=\\"react-native\\" value=\\"https://pkgs.dev.azure.com/ms/react-native/_packaging/react-native-public/nuget/v3/index.json\\" />
    <add key=\\"Nuget.org\\" value=\\"https://api.nuget.org/v3/index.json\\" />
  </packageSources>
  <disabledPackageSources>
    <clear />
  </disabledPackageSources>  
</configuration>
"
`;

exports[`C# NuGet+Hermes Application: Package.appxmanifest 1`] = `
"﻿<?xml version=\\"1.0\\" encoding=\\"utf-8\\"?>

<Package
  xmlns=\\"http://schemas.microsoft.com/appx/manifest/foundation/windows10\\"
  xmlns:mp=\\"http://schemas.microsoft.com/appx/2014/phone/manifest\\"
  xmlns:uap=\\"http://schemas.microsoft.com/appx/manifest/uap/windows10\\"
  IgnorableNamespaces=\\"uap mp\\">

  <Identity
    Name=\\"ae27421a-a130-48b8-9a3f-908dd5c98ed6\\"
    Publisher=\\"CN=nickg\\"
    Version=\\"1.0.0.0\\" />

  <mp:PhoneIdentity PhoneProductId=\\"ae27421a-a130-48b8-9a3f-908dd5c98ed6\\" PhonePublisherId=\\"00000000-0000-0000-0000-000000000000\\"/>

  <Properties>
    <DisplayName>SnapshotApp</DisplayName>
    <PublisherDisplayName>nickg</PublisherDisplayName>
    <Logo>Assets\\\\StoreLogo.png</Logo>
  </Properties>

  <Dependencies>
    <TargetDeviceFamily Name=\\"Windows.Universal\\" MinVersion=\\"10.0.0.0\\" MaxVersionTested=\\"10.0.0.0\\" />
  </Dependencies>

  <Resources>
    <Resource Language=\\"x-generate\\"/>
  </Resources>

  <Applications>
    <Application
      Id=\\"App\\"
      Executable=\\"$targetnametoken$.exe\\"
      EntryPoint=\\"SnapshotApp.App\\">
      <uap:VisualElements
        DisplayName=\\"SnapshotApp\\"
        Square150x150Logo=\\"Assets\\\\Square150x150Logo.png\\"
        Square44x44Logo=\\"Assets\\\\Square44x44Logo.png\\"
        Description=\\"SnapshotApp\\"
        BackgroundColor=\\"transparent\\">
        <uap:DefaultTile Wide310x150Logo=\\"Assets\\\\Wide310x150Logo.png\\"/>
        <uap:SplashScreen Image=\\"Assets\\\\SplashScreen.png\\" />
      </uap:VisualElements>
    </Application>
  </Applications>

  <Capabilities>
    <Capability Name=\\"internetClient\\" />
  </Capabilities>
</Package>"
`;

exports[`C# NuGet+Hermes Application: ReactPackageProvider.cs 1`] = `
"using Microsoft.ReactNative;

namespace SnapshotApp
{
    public partial class ReactPackageProvider : IReactPackageProvider
    {
        public void CreatePackage(IReactPackageBuilder packageBuilder)
        {
            CreatePackageImplementation(packageBuilder);
        }

        /// <summary>
        /// This method is implemented by the C# code generator
        /// </summary>
        partial void CreatePackageImplementation(IReactPackageBuilder packageBuilder);
    }
}
"
`;

exports[`C# NuGet+Hermes Application: SnapshotApp.csproj 1`] = `
"﻿<?xml version=\\"1.0\\" encoding=\\"utf-8\\"?>
<Project ToolsVersion=\\"Current\\" DefaultTargets=\\"Build\\" xmlns=\\"http://schemas.microsoft.com/developer/msbuild/2003\\">
  <Import Project=\\"$(MSBuildExtensionsPath)\\\\$(MSBuildToolsVersion)\\\\Microsoft.Common.props\\" Condition=\\"Exists('$(MSBuildExtensionsPath)\\\\$(MSBuildToolsVersion)\\\\Microsoft.Common.props')\\" />
  <Import Project=\\"$(SolutionDir)\\\\ExperimentalFeatures.props\\" Condition=\\"Exists('$(SolutionDir)\\\\ExperimentalFeatures.props')\\" />
  <PropertyGroup Label=\\"ReactNativeWindowsProps\\">
    <ReactNativeWindowsDir Condition=\\"'$(ReactNativeWindowsDir)' == ''\\">$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), 'node_modules\\\\react-native-windows\\\\package.json'))\\\\node_modules\\\\react-native-windows\\\\</ReactNativeWindowsDir>
  </PropertyGroup>
  <PropertyGroup>
    <Configuration Condition=\\" '$(Configuration)' == '' \\">Debug</Configuration>
    <Platform Condition=\\" '$(Platform)' == '' \\">x86</Platform>
    <ProjectGuid>{27DC03BC-54B5-4F2A-B7F6-BB361E106ED3}</ProjectGuid>
    <OutputType>AppContainerExe</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>SnapshotApp</RootNamespace>
    <AssemblyName>SnapshotApp</AssemblyName>
    <DefaultLanguage>en-US</DefaultLanguage>
    <TargetPlatformIdentifier>UAP</TargetPlatformIdentifier>
    <TargetPlatformVersion Condition=\\" '$(TargetPlatformVersion)' == '' \\">10.0.19041.0</TargetPlatformVersion>
    <TargetPlatformMinVersion>10.0.16299.0</TargetPlatformMinVersion>
    <MinimumVisualStudioVersion>16.0</MinimumVisualStudioVersion>
    <FileAlignment>512</FileAlignment>
    <ProjectTypeGuids>{A5A43C5B-DE2A-4C0C-9213-0A381AF9435A};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <WindowsXamlEnableOverview>true</WindowsXamlEnableOverview>
    <AppxGeneratePrisForPortableLibrariesEnabled>false</AppxGeneratePrisForPortableLibrariesEnabled>
    <LangVersion>7.3</LangVersion>
  </PropertyGroup>
  <PropertyGroup Condition=\\"'$(Configuration)|$(Platform)' == 'Debug|x86'\\">
    <DebugSymbols>true</DebugSymbols>
    <OutputPath>bin\\\\x86\\\\Debug\\\\</OutputPath>
    <DefineConstants>DEBUG;TRACE;NETFX_CORE;WINDOWS_UWP</DefineConstants>
    <NoWarn>;2008</NoWarn>
    <DebugType>full</DebugType>
    <PlatformTarget>x86</PlatformTarget>
    <UseVSHostingProcess>false</UseVSHostingProcess>
    <ErrorReport>prompt</ErrorReport>
    <Prefer32Bit>true</Prefer32Bit>
  </PropertyGroup>
  <PropertyGroup Condition=\\"'$(Configuration)|$(Platform)' == 'Release|x86'\\">
    <OutputPath>bin\\\\x86\\\\Release\\\\</OutputPath>
    <DefineConstants>TRACE;NETFX_CORE;WINDOWS_UWP</DefineConstants>
    <Optimize>true</Optimize>
    <NoWarn>;2008</NoWarn>
    <DebugType>pdbonly</DebugType>
    <PlatformTarget>x86</PlatformTarget>
    <UseVSHostingProcess>false</UseVSHostingProcess>
    <ErrorReport>prompt</ErrorReport>
    <Prefer32Bit>true</Prefer32Bit>
    <UseDotNetNativeToolchain>true</UseDotNetNativeToolchain>
  </PropertyGroup>
  <PropertyGroup Condition=\\"'$(Configuration)|$(Platform)' == 'Debug|ARM64'\\">
    <DebugSymbols>true</DebugSymbols>
    <OutputPath>bin\\\\ARM64\\\\Debug\\\\</OutputPath>
    <DefineConstants>DEBUG;TRACE;NETFX_CORE;WINDOWS_UWP</DefineConstants>
    <NoWarn>;2008</NoWarn>
    <DebugType>full</DebugType>
    <PlatformTarget>ARM64</PlatformTarget>
    <UseVSHostingProcess>false</UseVSHostingProcess>
    <ErrorReport>prompt</ErrorReport>
    <Prefer32Bit>true</Prefer32Bit>
  </PropertyGroup>
  <PropertyGroup Condition=\\"'$(Configuration)|$(Platform)' == 'Release|ARM64'\\">
    <OutputPath>bin\\\\ARM64\\\\Release\\\\</OutputPath>
    <DefineConstants>TRACE;NETFX_CORE;WINDOWS_UWP</DefineConstants>
    <Optimize>true</Optimize>
    <NoWarn>;2008</NoWarn>
    <DebugType>pdbonly</DebugType>
    <PlatformTarget>ARM64</PlatformTarget>
    <UseVSHostingProcess>false</UseVSHostingProcess>
    <ErrorReport>prompt</ErrorReport>
    <Prefer32Bit>true</Prefer32Bit>
    <UseDotNetNativeToolchain>true</UseDotNetNativeToolchain>
  </PropertyGroup>
  <PropertyGroup Condition=\\"'$(Configuration)|$(Platform)' == 'Debug|x64'\\">
    <DebugSymbols>true</DebugSymbols>
    <OutputPath>bin\\\\x64\\\\Debug\\\\</OutputPath>
    <DefineConstants>DEBUG;TRACE;NETFX_CORE;WINDOWS_UWP</DefineConstants>
    <NoWarn>;2008</NoWarn>
    <DebugType>full</DebugType>
    <PlatformTarget>x64</PlatformTarget>
    <UseVSHostingProcess>false</UseVSHostingProcess>
    <ErrorReport>prompt</ErrorReport>
    <Prefer32Bit>true</Prefer32Bit>
  </PropertyGroup>
  <PropertyGroup Condition=\\"'$(Configuration)|$(Platform)' == 'Release|x64'\\">
    <OutputPath>bin\\\\x64\\\\Release\\\\</OutputPath>
    <DefineConstants>TRACE;NETFX_CORE;WINDOWS_UWP</DefineConstants>
    <Optimize>true</Optimize>
    <NoWarn>;2008</NoWarn>
    <DebugType>pdbonly</DebugType>
    <PlatformTarget>x64</PlatformTarget>
    <UseVSHostingProcess>false</UseVSHostingProcess>
    <ErrorReport>prompt</ErrorReport>
    <Prefer32Bit>true</Prefer32Bit>
    <UseDotNetNativeToolchain>true</UseDotNetNativeToolchain>
  </PropertyGroup>
  <PropertyGroup>
    <RestoreProjectStyle>PackageReference</RestoreProjectStyle>
  </PropertyGroup>
  <ItemGroup>
    <Compile Include=\\"App.xaml.cs\\">
      <DependentUpon>App.xaml</DependentUpon>
    </Compile>
    <Compile Include=\\"MainPage.xaml.cs\\">
      <DependentUpon>MainPage.xaml</DependentUpon>
    </Compile>
    <Compile Include=\\"Properties\\\\AssemblyInfo.cs\\" />
    <Compile Include=\\"AutolinkedNativeModules.g.cs\\" />
    <Compile Include=\\"ReactPackageProvider.cs\\" />
  </ItemGroup>
  <ItemGroup>
    <AppxManifest Include=\\"Package.appxmanifest\\">
      <SubType>Designer</SubType>
    </AppxManifest>
  </ItemGroup>
  <ItemGroup>
    <Content Include=\\"Properties\\\\Default.rd.xml\\" />
    <Content Include=\\"Assets\\\\LockScreenLogo.scale-200.png\\" />
    <Content Include=\\"Assets\\\\SplashScreen.scale-200.png\\" />
    <Content Include=\\"Assets\\\\Square150x150Logo.scale-200.png\\" />
    <Content Include=\\"Assets\\\\Square44x44Logo.scale-200.png\\" />
    <Content Include=\\"Assets\\\\Square44x44Logo.targetsize-24_altform-unplated.png\\" />
    <Content Include=\\"Assets\\\\StoreLogo.png\\" />
    <Content Include=\\"Assets\\\\Wide310x150Logo.scale-200.png\\" />
  </ItemGroup>
  <ItemGroup>
    <ApplicationDefinition Include=\\"App.xaml\\">
      <Generator>MSBuild:Compile</Generator>
      <SubType>Designer</SubType>
    </ApplicationDefinition>
    <Page Include=\\"MainPage.xaml\\">
      <Generator>MSBuild:Compile</Generator>
      <SubType>Designer</SubType>
    </Page>
  </ItemGroup>
  <PropertyGroup Condition=\\" '$(VisualStudioVersion)' == '' or '$(VisualStudioVersion)' &lt; '16.0' \\">
    <VisualStudioVersion>16.0</VisualStudioVersion>
  </PropertyGroup>
  <Import Project=\\"$(MSBuildExtensionsPath)\\\\Microsoft\\\\WindowsXaml\\\\v$(VisualStudioVersion)\\\\Microsoft.Windows.UI.Xaml.CSharp.targets\\" />
  <ImportGroup Label=\\"ReactNativeWindowsPropertySheets\\">
    <Import Project=\\"$(ReactNativeWindowsDir)\\\\PropertySheets\\\\External\\\\Microsoft.ReactNative.Uwp.CSharpApp.props\\" Condition=\\"Exists('$(ReactNativeWindowsDir)\\\\PropertySheets\\\\External\\\\Microsoft.ReactNative.Uwp.CSharpApp.props')\\" />
  </ImportGroup>
  <Choose>
    <When Condition=\\"'$(UseWinUI3)'!='true'\\">
      <ItemGroup>
        <PackageReference Include=\\"Microsoft.UI.Xaml\\" >
          <Version>$(WinUI2xVersion)</Version>
        </PackageReference>
      </ItemGroup>
    </When>
    <Otherwise>
      <ItemGroup>
        <PackageReference Include=\\"Microsoft.WinUI\\">
          <Version>$(WinUI3Version)</Version>
        </PackageReference>
      </ItemGroup>
    </Otherwise>
  </Choose>
  <ItemGroup>
    <PackageReference Include=\\"Microsoft.NETCore.UniversalWindowsPlatform\\">
      <Version>6.2.9</Version>
    </PackageReference>
    <PackageReference Include=\\"ReactNative.Hermes.Windows\\">
      <Version>0.9.0-ms.6</Version>
    </PackageReference>
    <PackageReference Include=\\"Microsoft.ReactNative.Managed\\">
      <Version>0.0.0-canary.409</Version>
    </PackageReference>
  </ItemGroup>
  <ImportGroup Label=\\"ReactNativeWindowsTargets\\">
    <Import Project=\\"$(ReactNativeWindowsDir)\\\\PropertySheets\\\\External\\\\Microsoft.ReactNative.Uwp.CSharpApp.targets\\" Condition=\\"Exists('$(ReactNativeWindowsDir)\\\\PropertySheets\\\\External\\\\Microsoft.ReactNative.Uwp.CSharpApp.targets')\\" />
  </ImportGroup>
  <Target Name=\\"EnsureReactNativeWindowsTargets\\" BeforeTargets=\\"PrepareForBuild\\">
    <PropertyGroup>
      <ErrorText>This project references targets in your node_modules\\\\react-native-windows folder that are missing. The missing file is {0}.</ErrorText>
    </PropertyGroup>
    <Error Condition=\\"!Exists('$(ReactNativeWindowsDir)\\\\PropertySheets\\\\External\\\\Microsoft.ReactNative.Uwp.CSharpApp.props')\\" Text=\\"$([System.String]::Format('$(ErrorText)', '$(ReactNativeWindowsDir)\\\\PropertySheets\\\\External\\\\Microsoft.ReactNative.Uwp.CSharpApp.props'))\\" />
    <Error Condition=\\"!Exists('$(ReactNativeWindowsDir)\\\\PropertySheets\\\\External\\\\Microsoft.ReactNative.Uwp.CSharpApp.targets')\\" Text=\\"$([System.String]::Format('$(ErrorText)', '$(ReactNativeWindowsDir)\\\\PropertySheets\\\\External\\\\Microsoft.ReactNative.Uwp.CSharpApp.targets'))\\" />
  </Target>
</Project>
"
`;

exports[`C# NuGet+Hermes Application: SnapshotApp.sln 1`] = `
"﻿
Microsoft Visual Studio Solution File, Format Version 12.00
# Visual Studio Version 16
VisualStudioVersion = 16.0.29215.179
MinimumVisualStudioVersion = 10.0.40219.1
Project(\\"{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}\\") = \\"SnapshotApp\\", \\"SnapshotApp\\\\SnapshotApp.csproj\\", \\"{27DC03BC-54B5-4F2A-B7F6-BB361E106ED3}\\"
EndProject
Global
	GlobalSection(SolutionConfigurationPlatforms) = preSolution
		Debug|ARM64 = Debug|ARM64
		Debug|x64 = Debug|x64
		Debug|x86 = Debug|x86
		Release|ARM64 = Release|ARM64
		Release|x64 = Release|x64
		Release|x86 = Release|x86
	EndGlobalSection
	GlobalSection(ProjectConfigurationPlatforms) = postSolution
		{27DC03BC-54B5-4F2A-B7F6-BB361E106ED3}.Debug|ARM64.ActiveCfg = Debug|ARM64
		{27DC03BC-54B5-4F2A-B7F6-BB361E106ED3}.Debug|ARM64.Build.0 = Debug|ARM64
		{27DC03BC-54B5-4F2A-B7F6-BB361E106ED3}.Debug|ARM64.Deploy.0 = Debug|ARM64
		{27DC03BC-54B5-4F2A-B7F6-BB361E106ED3}.Debug|x64.ActiveCfg = Debug|x64
		{27DC03BC-54B5-4F2A-B7F6-BB361E106ED3}.Debug|x64.Build.0 = Debug|x64
		{27DC03BC-54B5-4F2A-B7F6-BB361E106ED3}.Debug|x64.Deploy.0 = Debug|x64
		{27DC03BC-54B5-4F2A-B7F6-BB361E106ED3}.Debug|x86.ActiveCfg = Debug|x86
		{27DC03BC-54B5-4F2A-B7F6-BB361E106ED3}.Debug|x86.Build.0 = Debug|x86
		{27DC03BC-54B5-4F2A-B7F6-BB361E106ED3}.Debug|x86.Deploy.0 = Debug|x86
		{27DC03BC-54B5-4F2A-B7F6-BB361E106ED3}.Release|ARM64.ActiveCfg = Release|ARM64
		{27DC03BC-54B5-4F2A-B7F6-BB361E106ED3}.Release|ARM64.Build.0 = Release|ARM64
		{27DC03BC-54B5-4F2A-B7F6-BB361E106ED3}.Release|ARM64.Deploy.0 = Release|ARM64
		{27DC03BC-54B5-4F2A-B7F6-BB361E106ED3}.Release|x64.ActiveCfg = Release|x64
		{27DC03BC-54B5-4F2A-B7F6-BB361E106ED3}.Release|x64.Build.0 = Release|x64
		{27DC03BC-54B5-4F2A-B7F6-BB361E106ED3}.Release|x64.Deploy.0 = Release|x64
		{27DC03BC-54B5-4F2A-B7F6-BB361E106ED3}.Release|x86.ActiveCfg = Release|x86
		{27DC03BC-54B5-4F2A-B7F6-BB361E106ED3}.Release|x86.Build.0 = Release|x86
		{27DC03BC-54B5-4F2A-B7F6-BB361E106ED3}.Release|x86.Deploy.0 = Release|x86
	EndGlobalSection
	GlobalSection(SolutionProperties) = preSolution
		HideSolutionNode = FALSE
	EndGlobalSection
	GlobalSection(ExtensibilityGlobals) = postSolution
		SolutionGuid = {D43FAD39-F619-437D-BB40-04A3982ACB6A}
	EndGlobalSection
EndGlobal
"
`;

exports[`C# NuGet+Hermes Application: index.windows.bundle 1`] = `
"/**
 * 
 * Be sure to generate this file using the CLI:
 *
 * npx react-native bundle --platform windows --entry-file index.js 
 *   --bundle-output windows\\\\SnapshotApp\\\\Bundle\\\\index.windows.bundle
 *   --assets-dest windows\\\\SnapshotApp\\\\Bundle
 *
 */"
`;

exports[`C# NuGet+Hermes Application: metro.config.js 1`] = `
"/**
 * Metro configuration for React Native
 * https://github.com/facebook/react-native
 *
 * @format
 */
const fs = require('fs');
const path = require('path');
const exclusionList = require('metro-config/src/defaults/exclusionList');

const rnwPath = fs.realpathSync(
  path.resolve(require.resolve('react-native-windows/package.json'), '..'),
);

module.exports = {
  resolver: {
    blockList: exclusionList([
      // This stops \\"react-native run-windows\\" from causing the metro server to crash if its already running
      new RegExp(
        \`\${path.resolve(__dirname, 'windows').replace(/[/\\\\\\\\]/g, '/')}.*\`,
      ),
      // This prevents \\"react-native run-windows\\" from hitting: EBUSY: resource busy or locked, open msbuild.ProjectImports.zip or other files produced by msbuild
      new RegExp(\`\${rnwPath}/build/.*\`),
      new RegExp(\`\${rnwPath}/target/.*\`),
      /.*\\\\.ProjectImports\\\\.zip/,
    ]),
  },
  transformer: {
    getTransformOptions: async () => ({
      transform: {
        experimentalImportSupport: false,
        inlineRequires: true,
      },
    }),
  },
};
"
`;

exports[`C# NuGet+Hermes Library: AssemblyInfo.cs 1`] = `
"﻿using System.Reflection;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;

// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
[assembly: AssemblyTitle(\\"SnapshotApp\\")]
[assembly: AssemblyDescription(\\"\\")]
[assembly: AssemblyConfiguration(\\"\\")]
[assembly: AssemblyCompany(\\"\\")]
[assembly: AssemblyProduct(\\"SnapshotApp\\")]
[assembly: AssemblyCopyright(\\"Copyright ©  2019\\")]
[assembly: AssemblyTrademark(\\"\\")]
[assembly: AssemblyCulture(\\"\\")]

// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Build and Revision Numbers 
// by using the '*' as shown below:
// [assembly: AssemblyVersion(\\"1.0.*\\")]
[assembly: AssemblyVersion(\\"1.0.0.0\\")]
[assembly: AssemblyFileVersion(\\"1.0.0.0\\")]
[assembly: ComVisible(false)]"
`;

exports[`C# NuGet+Hermes Library: Default.rd.xml 1`] = `
"<!--
    This file contains Runtime Directives used by .NET Native. The defaults here are suitable for most
    developers. However, you can modify these parameters to modify the behavior of the .NET Native
    optimizer.

    Runtime Directives are documented at https://go.microsoft.com/fwlink/?LinkID=391919

    To fully enable reflection for App1.MyClass and all of its public/private members
    <Type Name=\\"App1.MyClass\\" Dynamic=\\"Required All\\"/>

    To enable dynamic creation of the specific instantiation of AppClass<T> over System.Int32
    <TypeInstantiation Name=\\"App1.AppClass\\" Arguments=\\"System.Int32\\" Activate=\\"Required Public\\" />

    Using the Namespace directive to apply reflection policy to all the types in a particular namespace
    <Namespace Name=\\"DataClasses.ViewModels\\" Serialize=\\"All\\" />
-->

<Directives xmlns=\\"http://schemas.microsoft.com/netfx/2013/01/metadata\\">
  <Application>
    <!--
      An Assembly element with Name=\\"*Application*\\" applies to all assemblies in
      the application package. The asterisks are not wildcards.
    -->
    <Assembly Name=\\"*Application*\\" Dynamic=\\"Required All\\" />
    
    
    <!-- Add your application specific runtime directives here. -->
    <Namespace Name=\\"Microsoft.ReactNative\\" Dynamic=\\"Required All\\" MarshalObject=\\"Required All\\" />
    <Namespace Name=\\"Microsoft.ReactNative.Managed\\" Dynamic=\\"Required All\\" MarshalObject=\\"Required All\\" />

  </Application>
</Directives>"
`;

exports[`C# NuGet+Hermes Library: ExperimentalFeatures.props 1`] = `
"<?xml version=\\"1.0\\" encoding=\\"utf-8\\"?>
<Project xmlns=\\"http://schemas.microsoft.com/developer/msbuild/2003\\">

  <!--
    Application projects contain a file with this name to specify some important settings
    that will apply globally for the app and *all* native modules the app consumes. These
    values are set by the app developer.
  -->

</Project>
"
`;

exports[`C# NuGet+Hermes Library: NuGet.Config 1`] = `
"<?xml version=\\"1.0\\" encoding=\\"utf-8\\"?>
<configuration>
  <config>
    <add key=\\"repositoryPath\\" value=\\"packages\\" />
  </config>
  <packageSources>
    <clear />
    <add key=\\"react-native\\" value=\\"https://pkgs.dev.azure.com/ms/react-native/_packaging/react-native-public/nuget/v3/index.json\\" />
    <add key=\\"Nuget.org\\" value=\\"https://api.nuget.org/v3/index.json\\" />
  </packageSources>
  <disabledPackageSources>
    <clear />
  </disabledPackageSources>  
</configuration>
"
`;

exports[`C# NuGet+Hermes Library: ReactNativeModule.cs 1`] = `
"﻿using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

using Microsoft.ReactNative;
using Microsoft.ReactNative.Managed;

namespace SnapshotApp
{
    [ReactModule(\\"SnapshotApp\\")]
    internal sealed class ReactNativeModule
    {
        // See https://microsoft.github.io/react-native-windows/docs/native-modules for details on writing native modules

        private ReactContext _reactContext;

        [ReactInitializer]
        public void Initialize(ReactContext reactContext)
        {
            _reactContext = reactContext;
        }

        [ReactMethod]
        public void sampleMethod(string stringArgument, int numberArgument, Action<string> callback)
        {
            // TODO: Implement some actually useful functionality
            callback(\\"Received numberArgument: \\" + numberArgument + \\" stringArgument: \\" + stringArgument);
        }
    }
}
"
`;

exports[`C# NuGet+Hermes Library: ReactPackageProvider.cs 1`] = `
"using Microsoft.ReactNative;

namespace SnapshotApp
{
    public partial class ReactPackageProvider : IReactPackageProvider
    {
        public void CreatePackage(IReactPackageBuilder packageBuilder)
        {
            CreatePackageImplementation(packageBuilder);
        }

        /// <summary>
        /// This method is implemented by the C# code generator
        /// </summary>
        partial void CreatePackageImplementation(IReactPackageBuilder packageBuilder);
    }
}
"
`;

exports[`C# NuGet+Hermes Library: SnapshotApp.csproj 1`] = `
"﻿<?xml version=\\"1.0\\" encoding=\\"utf-8\\"?>
<Project ToolsVersion=\\"Current\\" DefaultTargets=\\"Build\\" xmlns=\\"http://schemas.microsoft.com/developer/msbuild/2003\\">
  <Import Project=\\"$(MSBuildExtensionsPath)\\\\$(MSBuildToolsVersion)\\\\Microsoft.Common.props\\" Condition=\\"Exists('$(MSBuildExtensionsPath)\\\\$(MSBuildToolsVersion)\\\\Microsoft.Common.props')\\" />
  <Import Project=\\"$(SolutionDir)\\\\ExperimentalFeatures.props\\" Condition=\\"Exists('$(SolutionDir)\\\\ExperimentalFeatures.props')\\" />
  <PropertyGroup Label=\\"ReactNativeWindowsProps\\">
    <ReactNativeWindowsDir Condition=\\"'$(ReactNativeWindowsDir)' == ''\\">$([MSBuild]::GetDirectoryNameOfFileAbove($(SolutionDir), 'node_modules\\\\react-native-windows\\\\package.json'))\\\\node_modules\\\\react-native-windows\\\\</ReactNativeWindowsDir>
  </PropertyGroup>
  <PropertyGroup>
    <Configuration Condition=\\" '$(Configuration)' == '' \\">Debug</Configuration>
    <Platform Condition=\\" '$(Platform)' == '' \\">x86</Platform>
    <ProjectGuid>{A5EC8E76-8079-46CA-B0A4-49FB432EDC43}</ProjectGuid>
    <OutputType>winmdobj</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>SnapshotApp</RootNamespace>
    <AssemblyName>SnapshotApp</AssemblyName>
    <DefaultLanguage>en-US</DefaultLanguage>
    <TargetPlatformIdentifier>UAP</TargetPlatformIdentifier>
    <TargetPlatformVersion Condition=\\" '$(TargetPlatformVersion)' == '' \\">10.0.19041.0</TargetPlatformVersion>
    <TargetPlatformMinVersion>10.0.16299.0</TargetPlatformMinVersion>
    <MinimumVisualStudioVersion>16.0</MinimumVisualStudioVersion>
    <FileAlignment>512</FileAlignment>
    <ProjectTypeGuids>{A5A43C5B-DE2A-4C0C-9213-0A381AF9435A};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <WindowsXamlEnableOverview>true</WindowsXamlEnableOverview>
    <LangVersion>7.3</LangVersion>
  </PropertyGroup>
  <PropertyGroup Condition=\\"'$(Configuration)|$(Platform)' == 'Debug|x86'\\">
    <DebugSymbols>true</DebugSymbols>
    <OutputPath>bin\\\\x86\\\\Debug\\\\</OutputPath>
    <DefineConstants>DEBUG;TRACE;NETFX_CORE;WINDOWS_UWP</DefineConstants>
    <NoWarn>;2008</NoWarn>
    <DebugType>full</DebugType>
    <PlatformTarget>x86</PlatformTarget>
    <UseVSHostingProcess>false</UseVSHostingProcess>
    <ErrorReport>prompt</ErrorReport>
    <Prefer32Bit>true</Prefer32Bit>
  </PropertyGroup>
  <PropertyGroup Condition=\\"'$(Configuration)|$(Platform)' == 'Release|x86'\\">
    <OutputPath>bin\\\\x86\\\\Release\\\\</OutputPath>
    <DefineConstants>TRACE;NETFX_CORE;WINDOWS_UWP</DefineConstants>
    <Optimize>true</Optimize>
    <NoWarn>;2008</NoWarn>
    <DebugType>pdbonly</DebugType>
    <PlatformTarget>x86</PlatformTarget>
    <UseVSHostingProcess>false</UseVSHostingProcess>
    <ErrorReport>prompt</ErrorReport>
    <Prefer32Bit>true</Prefer32Bit>
    <UseDotNetNativeToolchain>true</UseDotNetNativeToolchain>
  </PropertyGroup>
  <PropertyGroup Condition=\\"'$(Configuration)|$(Platform)' == 'Debug|ARM64'\\">
    <DebugSymbols>true</DebugSymbols>
    <OutputPath>bin\\\\ARM64\\\\Debug\\\\</OutputPath>
    <DefineConstants>DEBUG;TRACE;NETFX_CORE;WINDOWS_UWP</DefineConstants>
    <NoWarn>;2008</NoWarn>
    <DebugType>full</DebugType>
    <PlatformTarget>ARM64</PlatformTarget>
    <UseVSHostingProcess>false</UseVSHostingProcess>
    <ErrorReport>prompt</ErrorReport>
    <Prefer32Bit>true</Prefer32Bit>
  </PropertyGroup>
  <PropertyGroup Condition=\\"'$(Configuration)|$(Platform)' == 'Release|ARM64'\\">
    <OutputPath>bin\\\\ARM64\\\\Release\\\\</OutputPath>
    <DefineConstants>TRACE;NETFX_CORE;WINDOWS_UWP</DefineConstants>
    <Optimize>true</Optimize>
    <NoWarn>;2008</NoWarn>
    <DebugType>pdbonly</DebugType>
    <PlatformTarget>ARM64</PlatformTarget>
    <UseVSHostingProcess>false</UseVSHostingProcess>
    <ErrorReport>prompt</ErrorReport>
    <Prefer32Bit>true</Prefer32Bit>
    <UseDotNetNativeToolchain>true</UseDotNetNativeToolchain>
  </PropertyGroup>
  <PropertyGroup Condition=\\"'$(Configuration)|$(Platform)' == 'Debug|x64'\\">
    <DebugSymbols>true</DebugSymbols>
    <OutputPath>bin\\\\x64\\\\Debug\\\\</OutputPath>
    <DefineConstants>DEBUG;TRACE;NETFX_CORE;WINDOWS_UWP</DefineConstants>
    <NoWarn>;2008</NoWarn>
    <DebugType>full</DebugType>
    <PlatformTarget>x64</PlatformTarget>
    <UseVSHostingProcess>false</UseVSHostingProcess>
    <ErrorReport>prompt</ErrorReport>
    <Prefer32Bit>true</Prefer32Bit>
  </PropertyGroup>
  <PropertyGroup Condition=\\"'$(Configuration)|$(Platform)' == 'Release|x64'\\">
    <OutputPath>bin\\\\x64\\\\Release\\\\</OutputPath>
    <DefineConstants>TRACE;NETFX_CORE;WINDOWS_UWP</DefineConstants>
    <Optimize>true</Optimize>
    <NoWarn>;2008</NoWarn>
    <DebugType>pdbonly</DebugType>
    <PlatformTarget>x64</PlatformTarget>
    <UseVSHostingProcess>false</UseVSHostingProcess>
    <ErrorReport>prompt</ErrorReport>
    <Prefer32Bit>true</Prefer32Bit>
    <UseDotNetNativeToolchain>true</UseDotNetNativeToolchain>
  </PropertyGroup>
  <PropertyGroup>
    <RestoreProjectStyle>PackageReference</RestoreProjectStyle>
  </PropertyGroup>
  <ItemGroup>
    <Compile Include=\\"Properties\\\\AssemblyInfo.cs\\" />
    <Compile Include=\\"ReactNativeModule.cs\\" />
    <Compile Include=\\"ReactPackageProvider.cs\\" />
  </ItemGroup>
  <ItemGroup>
    <PackageReference Include=\\"Microsoft.NETCore.UniversalWindowsPlatform\\">
      <Version>6.2.9</Version>
    </PackageReference>
    <PackageReference Include=\\"ReactNative.Hermes.Windows\\">
      <Version>0.9.0-ms.6</Version>
    </PackageReference>
    <PackageReference Include=\\"Microsoft.ReactNative.Managed\\">
      <Version>0.0.0-canary.409</Version>
    </PackageReference>
  </ItemGroup>
  <PropertyGroup Condition=\\" '$(VisualStudioVersion)' == '' or '$(VisualStudioVersion)' &lt; '16.0' \\">
    <VisualStudioVersion>16.0</VisualStudioVersion>
  </PropertyGroup>
  <Import Project=\\"$(MSBuildExtensionsPath)\\\\Microsoft\\\\WindowsXaml\\\\v$(VisualStudioVersion)\\\\Microsoft.Windows.UI.Xaml.CSharp.targets\\" />
  <ImportGroup Label=\\"ReactNativeWindowsPropertySheets\\">
    <Import Project=\\"$(ReactNativeWindowsDir)\\\\PropertySheets\\\\External\\\\Microsoft.ReactNative.Uwp.CSharpLib.props\\" Condition=\\"Exists('$(ReactNativeWindowsDir)\\\\PropertySheets\\\\External\\\\Microsoft.ReactNative.Uwp.CSharpLib.props')\\" />
  </ImportGroup>
  <ImportGroup Label=\\"ReactNativeWindowsTargets\\">
    <Import Project=\\"$(ReactNativeWindowsDir)\\\\PropertySheets\\\\External\\\\Microsoft.ReactNative.Uwp.CSharpLib.targets\\" Condition=\\"Exists('$(ReactNativeWindowsDir)\\\\PropertySheets\\\\External\\\\Microsoft.ReactNative.Uwp.CSharpLib.targets')\\" />
  </ImportGroup>
  <Target Name=\\"EnsureReactNativeWindowsTargets\\" BeforeTargets=\\"PrepareForBuild\\">
    <PropertyGroup>
      <ErrorText>This project references targets in your node_modules\\\\react-native-windows folder that are missing. The missing file is {0}.</ErrorText>
    </PropertyGroup>
    <Error Condition=\\"!Exists('$(ReactNativeWindowsDir)\\\\PropertySheets\\\\External\\\\Microsoft.ReactNative.Uwp.CSharpLib.props')\\" Text=\\"$([System.String]::Format('$(ErrorText)', '$(ReactNativeWindowsDir)\\\\PropertySheets\\\\External\\\\Microsoft.ReactNative.Uwp.CSharpLib.props'))\\" />
    <Error Condition=\\"!Exists('$(ReactNativeWindowsDir)\\\\PropertySheets\\\\External\\\\Microsoft.ReactNative.Uwp.CSharpLib.targets')\\" Text=\\"$([System.String]::Format('$(ErrorText)', '$(ReactNativeWindowsDir)\\\\PropertySheets\\\\External\\\\Microsoft.ReactNative.Uwp.CSharpLib.targets'))\\" />
  </Target>
</Project>
"
`;

exports[`C# NuGet+Hermes Library: SnapshotApp.sln 1`] = `
"﻿
Microsoft Visual Studio Solution File, Format Version 12.00
# Visual Studio Version 16
VisualStudioVersion = 16.0.29215.179
MinimumVisualStudioVersion = 10.0.40219.1
Project(\\"{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}\\") = \\"SnapshotApp\\", \\"SnapshotApp\\\\SnapshotApp.csproj\\", \\"{A5EC8E76-8079-46CA-B0A4-49FB432EDC43}\\"
EndProject
Global
	GlobalSection(SolutionConfigurationPlatforms) = preSolution
		Debug|ARM64 = Debug|ARM64
		Debug|x64 = Debug|x64
		Debug|x86 = Debug|x86
		Release|ARM64 = Release|ARM64
		Release|x64 = Release|x64
		Release|x86 = Release|x86
	EndGlobalSection
	GlobalSection(ProjectConfigurationPlatforms) = postSolution
		{A5EC8E76-8079-46CA-B0A4-49FB432EDC43}.Debug|ARM64.ActiveCfg = Debug|ARM64
		{A5EC8E76-8079-46CA-B0A4-49FB432EDC43}.Debug|ARM64.Build.0 = Debug|ARM64
		{A5EC8E76-8079-46CA-B0A4-49FB432EDC43}.Debug|ARM64.Deploy.0 = Debug|ARM64
		{A5EC8E76-8079-46CA-B0A4-49FB432EDC43}.Debug|x64.ActiveCfg = Debug|x64
		{A5EC8E76-8079-46CA-B0A4-49FB432EDC43}.Debug|x64.Build.0 = Debug|x64
		{A5EC8E76-8079-46CA-B0A4-49FB432EDC43}.Debug|x64.Deploy.0 = Debug|x64
		{A5EC8E76-8079-46CA-B0A4-49FB432EDC43}.Debug|x86.ActiveCfg = Debug|x86
		{A5EC8E76-8079-46CA-B0A4-49FB432EDC43}.Debug|x86.Build.0 = Debug|x86
		{A5EC8E76-8079-46CA-B0A4-49FB432EDC43}.Debug|x86.Deploy.0 = Debug|x86
		{A5EC8E76-8079-46CA-B0A4-49FB432EDC43}.Release|ARM64.ActiveCfg = Release|ARM64
		{A5EC8E76-8079-46CA-B0A4-49FB432EDC43}.Release|ARM64.Build.0 = Release|ARM64
		{A5EC8E76-8079-46CA-B0A4-49FB432EDC43}.Release|ARM64.Deploy.0 = Release|ARM64
		{A5EC8E76-8079-46CA-B0A4-49FB432EDC43}.Release|x64.ActiveCfg = Release|x64
		{A5EC8E76-8079-46CA-B0A4-49FB432EDC43}.Release|x64.Build.0 = Release|x64
		{A5EC8E76-8079-46CA-B0A4-49FB432EDC43}.Release|x64.Deploy.0 = Release|x64
		{A5EC8E76-8079-46CA-B0A4-49FB432EDC43}.Release|x86.ActiveCfg = Release|x86
		{A5EC8E76-8079-46CA-B0A4-49FB432EDC43}.Release|x86.Build.0 = Release|x86
		{A5EC8E76-8079-46CA-B0A4-49FB432EDC43}.Release|x86.Deploy.0 = Release|x86
	EndGlobalSection
	GlobalSection(SolutionProperties) = preSolution
		HideSolutionNode = FALSE
	EndGlobalSection
	GlobalSection(ExtensibilityGlobals) = postSolution
		SolutionGuid = {D43FAD39-F619-437D-BB40-04A3982ACB6A}
	EndGlobalSection
EndGlobal
"
`;

exports[`C# NuGet+WinUI3 Application: App.xaml 1`] = `
"﻿<react:ReactApplication
    x:Class=\\"SnapshotApp.App\\"
    xmlns=\\"http://schemas.microsoft.com/winfx/2006/xaml/presentation\\"
    xmlns:x=\\"http://schemas.microsoft.com/winfx/2006/xaml\\"
    xmlns:local=\\"using:SnapshotApp\\"
    xmlns:react=\\"using:Microsoft.ReactNative\\">
    <Application.Resources>
        <XamlControlsResources xmlns=\\"using:Microsoft.UI.Xaml.Controls\\" />
    </Application.Resources>
</react:ReactApplication>
"
`;

exports[`C# NuGet+WinUI3 Application: App.xaml.cs 1`] = `
"using Microsoft.ReactNative;
#if USE_WINUI3
using Microsoft.UI.Xaml;
using Microsoft.UI.Xaml.Controls;
#else
using Windows.ApplicationModel.Activation;
using Windows.UI.Xaml;
using Windows.UI.Xaml.Controls;
#endif

namespace SnapshotApp
{
    sealed partial class App : ReactApplication
    {
        public App()
        {
#if BUNDLE
            JavaScriptBundleFile = \\"index.windows\\";
            InstanceSettings.UseWebDebugger = false;
            InstanceSettings.UseFastRefresh = false;
#else
            JavaScriptBundleFile = \\"index\\";
            InstanceSettings.UseWebDebugger = true;
            InstanceSettings.UseFastRefresh = true;
#endif

#if DEBUG
            InstanceSettings.UseDeveloperSupport = true;
#else
            InstanceSettings.UseDeveloperSupport = false;
#endif

            Microsoft.ReactNative.Managed.AutolinkedNativeModules.RegisterAutolinkedNativeModulePackages(PackageProviders); // Includes any autolinked modules

            PackageProviders.Add(new ReactPackageProvider());

            InitializeComponent();
        }

        /// <summary>
        /// Invoked when the application is launched normally by the end user.  Other entry points
        /// will be used such as when the application is launched to open a specific file.
        /// </summary>
        /// <param name=\\"e\\">Details about the launch request and process.</param>
        protected override void OnLaunched(LaunchActivatedEventArgs e)
        {
            base.OnLaunched(e);
            var frame = (Frame)Window.Current.Content;
            frame.Navigate(typeof(MainPage), e.Arguments);
        }

        /// <summary>
        /// Invoked when the application is activated by some means other than normal launching.
        /// </summary>
        protected override void OnActivated(Windows.ApplicationModel.Activation.IActivatedEventArgs e)
        {
            var preActivationContent = Window.Current.Content;
            base.OnActivated(e);
            if (preActivationContent == null && Window.Current != null)
            {
                // Display the initial content
                var frame = (Frame)Window.Current.Content;
                frame.Navigate(typeof(MainPage), null);
            }
        }
    }
}
"
`;

exports[`C# NuGet+WinUI3 Application: AssemblyInfo.cs 1`] = `
"﻿using System.Reflection;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;

// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
[assembly: AssemblyTitle(\\"SnapshotApp\\")]
[assembly: AssemblyDescription(\\"\\")]
[assembly: AssemblyConfiguration(\\"\\")]
[assembly: AssemblyCompany(\\"\\")]
[assembly: AssemblyProduct(\\"SnapshotApp\\")]
[assembly: AssemblyCopyright(\\"Copyright ©  2019\\")]
[assembly: AssemblyTrademark(\\"\\")]
[assembly: AssemblyCulture(\\"\\")]

// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Build and Revision Numbers 
// by using the '*' as shown below:
// [assembly: AssemblyVersion(\\"1.0.*\\")]
[assembly: AssemblyVersion(\\"1.0.0.0\\")]
[assembly: AssemblyFileVersion(\\"1.0.0.0\\")]
[assembly: ComVisible(false)]"
`;

exports[`C# NuGet+WinUI3 Application: AutolinkedNativeModules.g.cs 1`] = `
"﻿// AutolinkedNativeModules.g.cs contents generated by \\"react-native autolink-windows\\"

using System.Collections.Generic;

namespace Microsoft.ReactNative.Managed
{
    internal static class AutolinkedNativeModules
    {
        internal static void RegisterAutolinkedNativeModulePackages(IList<IReactPackageProvider> packageProviders)
        { 
        }
    }
}
"
`;

exports[`C# NuGet+WinUI3 Application: AutolinkedNativeModules.g.props 1`] = `
"<?xml version=\\"1.0\\" encoding=\\"utf-8\\"?>
<Project xmlns=\\"http://schemas.microsoft.com/developer/msbuild/2003\\">
  <!-- AutolinkedNativeModules.g.props contents generated by \\"react-native autolink-windows\\" -->
  <PropertyGroup>
  </PropertyGroup>
</Project>
"
`;

exports[`C# NuGet+WinUI3 Application: AutolinkedNativeModules.g.targets 1`] = `
"<?xml version=\\"1.0\\" encoding=\\"utf-8\\"?>
<Project xmlns=\\"http://schemas.microsoft.com/developer/msbuild/2003\\">
  <!-- AutolinkedNativeModules.g.targets contents generated by \\"react-native autolink-windows\\" -->
  <ItemGroup>
  </ItemGroup>
</Project>
"
`;

exports[`C# NuGet+WinUI3 Application: Default.rd.xml 1`] = `
"<!--
    This file contains Runtime Directives used by .NET Native. The defaults here are suitable for most
    developers. However, you can modify these parameters to modify the behavior of the .NET Native
    optimizer.

    Runtime Directives are documented at https://go.microsoft.com/fwlink/?LinkID=391919

    To fully enable reflection for App1.MyClass and all of its public/private members
    <Type Name=\\"App1.MyClass\\" Dynamic=\\"Required All\\"/>

    To enable dynamic creation of the specific instantiation of AppClass<T> over System.Int32
    <TypeInstantiation Name=\\"App1.AppClass\\" Arguments=\\"System.Int32\\" Activate=\\"Required Public\\" />

    Using the Namespace directive to apply reflection policy to all the types in a particular namespace
    <Namespace Name=\\"DataClasses.ViewModels\\" Serialize=\\"All\\" />
-->

<Directives xmlns=\\"http://schemas.microsoft.com/netfx/2013/01/metadata\\">
  <Application>
    <!--
      An Assembly element with Name=\\"*Application*\\" applies to all assemblies in
      the application package. The asterisks are not wildcards.
    -->
    <Assembly Name=\\"*Application*\\" Dynamic=\\"Required All\\" />
    
    
    <!-- Add your application specific runtime directives here. -->
    <Namespace Name=\\"Microsoft.ReactNative\\" Dynamic=\\"Required All\\" MarshalObject=\\"Required All\\" />
    <Namespace Name=\\"Microsoft.ReactNative.Managed\\" Dynamic=\\"Required All\\" MarshalObject=\\"Required All\\" />

  </Application>
</Directives>"
`;

exports[`C# NuGet+WinUI3 Application: ExperimentalFeatures.props 1`] = `
"<?xml version=\\"1.0\\" encoding=\\"utf-8\\"?>
<Project xmlns=\\"http://schemas.microsoft.com/developer/msbuild/2003\\">

  <!--
    This file contains some important settings that will apply globally for
    your app and *all* native modules your app consumes. These values were
    set when you created the app project, and in some cases cannot be
    simply changed here without recreating a new project.
  -->

  <PropertyGroup Label=\\"Microsoft.ReactNative Experimental Features\\">
    <!--
      Enables default usage of Hermes.
      
      See https://microsoft.github.io/react-native-windows/docs/hermes
    -->
    <UseHermes>false</UseHermes>

    <!--
      Changes compilation to assume use of WinUI 3 instead of System XAML.
      Requires creation of new project.

      See https://microsoft.github.io/react-native-windows/docs/winui3
    -->
    <UseWinUI3>true</UseWinUI3>

    <!--
      Changes compilation to assume use of Microsoft.ReactNative NuGet packages
      instead of building the framework from source.
      Requires creation of new project.

      See https://microsoft.github.io/react-native-windows/docs/nuget
    -->
    <UseExperimentalNuget>true</UseExperimentalNuget>
  
  </PropertyGroup>

</Project>
"
`;

exports[`C# NuGet+WinUI3 Application: MainPage.xaml 1`] = `
"<Page
    x:Class=\\"SnapshotApp.MainPage\\"
    xmlns=\\"http://schemas.microsoft.com/winfx/2006/xaml/presentation\\"
    xmlns:x=\\"http://schemas.microsoft.com/winfx/2006/xaml\\"
    xmlns:local=\\"using:SnapshotApp\\"
    xmlns:react=\\"using:Microsoft.ReactNative\\"
    xmlns:d=\\"http://schemas.microsoft.com/expression/blend/2008\\"
    xmlns:mc=\\"http://schemas.openxmlformats.org/markup-compatibility/2006\\"
    mc:Ignorable=\\"d\\"
    Background=\\"{ThemeResource ApplicationPageBackgroundThemeBrush}\\">
    <react:ReactRootView 
        x:Name=\\"reactRootView\\"
        ComponentName=\\"SnapshotApp\\"
        Background=\\"{ThemeResource ApplicationPageBackgroundThemeBrush}\\"
        MinHeight=\\"400\\"/>
</Page>
"
`;

exports[`C# NuGet+WinUI3 Application: MainPage.xaml.cs 1`] = `
"using Microsoft.ReactNative;
using System;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System.Runtime.InteropServices.WindowsRuntime;
using Windows.Foundation;
using Windows.Foundation.Collections;
#if !USE_WINUI3
using Windows.UI.Xaml;
using Windows.UI.Xaml.Controls;
using Windows.UI.Xaml.Controls.Primitives;
using Windows.UI.Xaml.Data;
using Windows.UI.Xaml.Input;
using Windows.UI.Xaml.Media;
using Windows.UI.Xaml.Navigation;
#else
using Microsoft.UI.Xaml;
using Microsoft.UI.Xaml.Controls;
using Microsoft.UI.Xaml.Controls.Primitives;
using Microsoft.UI.Xaml.Data;
using Microsoft.UI.Xaml.Input;
using Microsoft.UI.Xaml.Media;
using Microsoft.UI.Xaml.Navigation;
#endif

// The Blank Page item template is documented at https://go.microsoft.com/fwlink/?LinkId=234238

namespace SnapshotApp
{
    /// <summary>
    /// An empty page that can be used on its own or navigated to within a Frame.
    /// </summary>
    public sealed partial class MainPage : Page
    {
        public MainPage()
        {
            this.InitializeComponent();
            var app = Application.Current as App;
            reactRootView.ReactNativeHost = app.Host;
        }
    }
}
"
`;

exports[`C# NuGet+WinUI3 Application: NuGet.Config 1`] = `
"<?xml version=\\"1.0\\" encoding=\\"utf-8\\"?>
<configuration>
  <config>
    <add key=\\"repositoryPath\\" value=\\"packages\\" />
  </config>
  <packageSources>
    <clear />
    <add key=\\"react-native\\" value=\\"https://pkgs.dev.azure.com/ms/react-native/_packaging/react-native-public/nuget/v3/index.json\\" />
    <add key=\\"Nuget.org\\" value=\\"https://api.nuget.org/v3/index.json\\" />
  </packageSources>
  <disabledPackageSources>
    <clear />
  </disabledPackageSources>  
</configuration>
"
`;

exports[`C# NuGet+WinUI3 Application: Package.appxmanifest 1`] = `
"﻿<?xml version=\\"1.0\\" encoding=\\"utf-8\\"?>

<Package
  xmlns=\\"http://schemas.microsoft.com/appx/manifest/foundation/windows10\\"
  xmlns:mp=\\"http://schemas.microsoft.com/appx/2014/phone/manifest\\"
  xmlns:uap=\\"http://schemas.microsoft.com/appx/manifest/uap/windows10\\"
  IgnorableNamespaces=\\"uap mp\\">

  <Identity
    Name=\\"eabb8389-0446-4e6e-a0bc-233573731a79\\"
    Publisher=\\"CN=nickg\\"
    Version=\\"1.0.0.0\\" />

  <mp:PhoneIdentity PhoneProductId=\\"eabb8389-0446-4e6e-a0bc-233573731a79\\" PhonePublisherId=\\"00000000-0000-0000-0000-000000000000\\"/>

  <Properties>
    <DisplayName>SnapshotApp</DisplayName>
    <PublisherDisplayName>nickg</PublisherDisplayName>
    <Logo>Assets\\\\StoreLogo.png</Logo>
  </Properties>

  <Dependencies>
    <TargetDeviceFamily Name=\\"Windows.Universal\\" MinVersion=\\"10.0.0.0\\" MaxVersionTested=\\"10.0.0.0\\" />
  </Dependencies>

  <Resources>
    <Resource Language=\\"x-generate\\"/>
  </Resources>

  <Applications>
    <Application
      Id=\\"App\\"
      Executable=\\"$targetnametoken$.exe\\"
      EntryPoint=\\"SnapshotApp.App\\">
      <uap:VisualElements
        DisplayName=\\"SnapshotApp\\"
        Square150x150Logo=\\"Assets\\\\Square150x150Logo.png\\"
        Square44x44Logo=\\"Assets\\\\Square44x44Logo.png\\"
        Description=\\"SnapshotApp\\"
        BackgroundColor=\\"transparent\\">
        <uap:DefaultTile Wide310x150Logo=\\"Assets\\\\Wide310x150Logo.png\\"/>
        <uap:SplashScreen Image=\\"Assets\\\\SplashScreen.png\\" />
      </uap:VisualElements>
    </Application>
  </Applications>

  <Capabilities>
    <Capability Name=\\"internetClient\\" />
  </Capabilities>
</Package>"
`;

exports[`C# NuGet+WinUI3 Application: ReactPackageProvider.cs 1`] = `
"using Microsoft.ReactNative;

namespace SnapshotApp
{
    public partial class ReactPackageProvider : IReactPackageProvider
    {
        public void CreatePackage(IReactPackageBuilder packageBuilder)
        {
            CreatePackageImplementation(packageBuilder);
        }

        /// <summary>
        /// This method is implemented by the C# code generator
        /// </summary>
        partial void CreatePackageImplementation(IReactPackageBuilder packageBuilder);
    }
}
"
`;

exports[`C# NuGet+WinUI3 Application: SnapshotApp.csproj 1`] = `
"﻿<?xml version=\\"1.0\\" encoding=\\"utf-8\\"?>
<Project ToolsVersion=\\"Current\\" DefaultTargets=\\"Build\\" xmlns=\\"http://schemas.microsoft.com/developer/msbuild/2003\\">
  <Import Project=\\"$(MSBuildExtensionsPath)\\\\$(MSBuildToolsVersion)\\\\Microsoft.Common.props\\" Condition=\\"Exists('$(MSBuildExtensionsPath)\\\\$(MSBuildToolsVersion)\\\\Microsoft.Common.props')\\" />
  <Import Project=\\"$(SolutionDir)\\\\ExperimentalFeatures.props\\" Condition=\\"Exists('$(SolutionDir)\\\\ExperimentalFeatures.props')\\" />
  <PropertyGroup Label=\\"ReactNativeWindowsProps\\">
    <ReactNativeWindowsDir Condition=\\"'$(ReactNativeWindowsDir)' == ''\\">$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), 'node_modules\\\\react-native-windows\\\\package.json'))\\\\node_modules\\\\react-native-windows\\\\</ReactNativeWindowsDir>
  </PropertyGroup>
  <PropertyGroup>
    <Configuration Condition=\\" '$(Configuration)' == '' \\">Debug</Configuration>
    <Platform Condition=\\" '$(Platform)' == '' \\">x86</Platform>
    <ProjectGuid>{2B89CEBD-A545-4756-ADFA-1E621DA453CC}</ProjectGuid>
    <OutputType>AppContainerExe</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>SnapshotApp</RootNamespace>
    <AssemblyName>SnapshotApp</AssemblyName>
    <DefaultLanguage>en-US</DefaultLanguage>
    <TargetPlatformIdentifier>UAP</TargetPlatformIdentifier>
    <TargetPlatformVersion Condition=\\" '$(TargetPlatformVersion)' == '' \\">10.0.19041.0</TargetPlatformVersion>
    <TargetPlatformMinVersion>10.0.16299.0</TargetPlatformMinVersion>
    <MinimumVisualStudioVersion>16.0</MinimumVisualStudioVersion>
    <FileAlignment>512</FileAlignment>
    <ProjectTypeGuids>{A5A43C5B-DE2A-4C0C-9213-0A381AF9435A};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <WindowsXamlEnableOverview>true</WindowsXamlEnableOverview>
    <AppxGeneratePrisForPortableLibrariesEnabled>false</AppxGeneratePrisForPortableLibrariesEnabled>
    <LangVersion>7.3</LangVersion>
  </PropertyGroup>
  <PropertyGroup Condition=\\"'$(Configuration)|$(Platform)' == 'Debug|x86'\\">
    <DebugSymbols>true</DebugSymbols>
    <OutputPath>bin\\\\x86\\\\Debug\\\\</OutputPath>
    <DefineConstants>DEBUG;TRACE;NETFX_CORE;WINDOWS_UWP</DefineConstants>
    <NoWarn>;2008</NoWarn>
    <DebugType>full</DebugType>
    <PlatformTarget>x86</PlatformTarget>
    <UseVSHostingProcess>false</UseVSHostingProcess>
    <ErrorReport>prompt</ErrorReport>
    <Prefer32Bit>true</Prefer32Bit>
  </PropertyGroup>
  <PropertyGroup Condition=\\"'$(Configuration)|$(Platform)' == 'Release|x86'\\">
    <OutputPath>bin\\\\x86\\\\Release\\\\</OutputPath>
    <DefineConstants>TRACE;NETFX_CORE;WINDOWS_UWP</DefineConstants>
    <Optimize>true</Optimize>
    <NoWarn>;2008</NoWarn>
    <DebugType>pdbonly</DebugType>
    <PlatformTarget>x86</PlatformTarget>
    <UseVSHostingProcess>false</UseVSHostingProcess>
    <ErrorReport>prompt</ErrorReport>
    <Prefer32Bit>true</Prefer32Bit>
    <UseDotNetNativeToolchain>true</UseDotNetNativeToolchain>
  </PropertyGroup>
  <PropertyGroup Condition=\\"'$(Configuration)|$(Platform)' == 'Debug|ARM64'\\">
    <DebugSymbols>true</DebugSymbols>
    <OutputPath>bin\\\\ARM64\\\\Debug\\\\</OutputPath>
    <DefineConstants>DEBUG;TRACE;NETFX_CORE;WINDOWS_UWP</DefineConstants>
    <NoWarn>;2008</NoWarn>
    <DebugType>full</DebugType>
    <PlatformTarget>ARM64</PlatformTarget>
    <UseVSHostingProcess>false</UseVSHostingProcess>
    <ErrorReport>prompt</ErrorReport>
    <Prefer32Bit>true</Prefer32Bit>
  </PropertyGroup>
  <PropertyGroup Condition=\\"'$(Configuration)|$(Platform)' == 'Release|ARM64'\\">
    <OutputPath>bin\\\\ARM64\\\\Release\\\\</OutputPath>
    <DefineConstants>TRACE;NETFX_CORE;WINDOWS_UWP</DefineConstants>
    <Optimize>true</Optimize>
    <NoWarn>;2008</NoWarn>
    <DebugType>pdbonly</DebugType>
    <PlatformTarget>ARM64</PlatformTarget>
    <UseVSHostingProcess>false</UseVSHostingProcess>
    <ErrorReport>prompt</ErrorReport>
    <Prefer32Bit>true</Prefer32Bit>
    <UseDotNetNativeToolchain>true</UseDotNetNativeToolchain>
  </PropertyGroup>
  <PropertyGroup Condition=\\"'$(Configuration)|$(Platform)' == 'Debug|x64'\\">
    <DebugSymbols>true</DebugSymbols>
    <OutputPath>bin\\\\x64\\\\Debug\\\\</OutputPath>
    <DefineConstants>DEBUG;TRACE;NETFX_CORE;WINDOWS_UWP</DefineConstants>
    <NoWarn>;2008</NoWarn>
    <DebugType>full</DebugType>
    <PlatformTarget>x64</PlatformTarget>
    <UseVSHostingProcess>false</UseVSHostingProcess>
    <ErrorReport>prompt</ErrorReport>
    <Prefer32Bit>true</Prefer32Bit>
  </PropertyGroup>
  <PropertyGroup Condition=\\"'$(Configuration)|$(Platform)' == 'Release|x64'\\">
    <OutputPath>bin\\\\x64\\\\Release\\\\</OutputPath>
    <DefineConstants>TRACE;NETFX_CORE;WINDOWS_UWP</DefineConstants>
    <Optimize>true</Optimize>
    <NoWarn>;2008</NoWarn>
    <DebugType>pdbonly</DebugType>
    <PlatformTarget>x64</PlatformTarget>
    <UseVSHostingProcess>false</UseVSHostingProcess>
    <ErrorReport>prompt</ErrorReport>
    <Prefer32Bit>true</Prefer32Bit>
    <UseDotNetNativeToolchain>true</UseDotNetNativeToolchain>
  </PropertyGroup>
  <PropertyGroup>
    <RestoreProjectStyle>PackageReference</RestoreProjectStyle>
  </PropertyGroup>
  <ItemGroup>
    <Compile Include=\\"App.xaml.cs\\">
      <DependentUpon>App.xaml</DependentUpon>
    </Compile>
    <Compile Include=\\"MainPage.xaml.cs\\">
      <DependentUpon>MainPage.xaml</DependentUpon>
    </Compile>
    <Compile Include=\\"Properties\\\\AssemblyInfo.cs\\" />
    <Compile Include=\\"AutolinkedNativeModules.g.cs\\" />
    <Compile Include=\\"ReactPackageProvider.cs\\" />
  </ItemGroup>
  <ItemGroup>
    <AppxManifest Include=\\"Package.appxmanifest\\">
      <SubType>Designer</SubType>
    </AppxManifest>
  </ItemGroup>
  <ItemGroup>
    <Content Include=\\"Properties\\\\Default.rd.xml\\" />
    <Content Include=\\"Assets\\\\LockScreenLogo.scale-200.png\\" />
    <Content Include=\\"Assets\\\\SplashScreen.scale-200.png\\" />
    <Content Include=\\"Assets\\\\Square150x150Logo.scale-200.png\\" />
    <Content Include=\\"Assets\\\\Square44x44Logo.scale-200.png\\" />
    <Content Include=\\"Assets\\\\Square44x44Logo.targetsize-24_altform-unplated.png\\" />
    <Content Include=\\"Assets\\\\StoreLogo.png\\" />
    <Content Include=\\"Assets\\\\Wide310x150Logo.scale-200.png\\" />
  </ItemGroup>
  <ItemGroup>
    <ApplicationDefinition Include=\\"App.xaml\\">
      <Generator>MSBuild:Compile</Generator>
      <SubType>Designer</SubType>
    </ApplicationDefinition>
    <Page Include=\\"MainPage.xaml\\">
      <Generator>MSBuild:Compile</Generator>
      <SubType>Designer</SubType>
    </Page>
  </ItemGroup>
  <PropertyGroup Condition=\\" '$(VisualStudioVersion)' == '' or '$(VisualStudioVersion)' &lt; '16.0' \\">
    <VisualStudioVersion>16.0</VisualStudioVersion>
  </PropertyGroup>
  <Import Project=\\"$(MSBuildExtensionsPath)\\\\Microsoft\\\\WindowsXaml\\\\v$(VisualStudioVersion)\\\\Microsoft.Windows.UI.Xaml.CSharp.targets\\" />
  <ImportGroup Label=\\"ReactNativeWindowsPropertySheets\\">
    <Import Project=\\"$(ReactNativeWindowsDir)\\\\PropertySheets\\\\External\\\\Microsoft.ReactNative.Uwp.CSharpApp.props\\" Condition=\\"Exists('$(ReactNativeWindowsDir)\\\\PropertySheets\\\\External\\\\Microsoft.ReactNative.Uwp.CSharpApp.props')\\" />
  </ImportGroup>
  <Choose>
    <When Condition=\\"'$(UseWinUI3)'!='true'\\">
      <ItemGroup>
        <PackageReference Include=\\"Microsoft.UI.Xaml\\" >
          <Version>$(WinUI2xVersion)</Version>
        </PackageReference>
      </ItemGroup>
    </When>
    <Otherwise>
      <ItemGroup>
        <PackageReference Include=\\"Microsoft.WinUI\\">
          <Version>$(WinUI3Version)</Version>
        </PackageReference>
      </ItemGroup>
    </Otherwise>
  </Choose>
  <ItemGroup>
    <PackageReference Include=\\"Microsoft.NETCore.UniversalWindowsPlatform\\">
      <Version>6.2.9</Version>
    </PackageReference>
    <PackageReference Include=\\"ReactNative.Hermes.Windows\\">
      <Version>0.9.0-ms.6</Version>
    </PackageReference>
    <PackageReference Include=\\"Microsoft.ReactNative.Managed\\">
      <Version>0.0.0-canary.409</Version>
    </PackageReference>
  </ItemGroup>
  <ImportGroup Label=\\"ReactNativeWindowsTargets\\">
    <Import Project=\\"$(ReactNativeWindowsDir)\\\\PropertySheets\\\\External\\\\Microsoft.ReactNative.Uwp.CSharpApp.targets\\" Condition=\\"Exists('$(ReactNativeWindowsDir)\\\\PropertySheets\\\\External\\\\Microsoft.ReactNative.Uwp.CSharpApp.targets')\\" />
  </ImportGroup>
  <Target Name=\\"EnsureReactNativeWindowsTargets\\" BeforeTargets=\\"PrepareForBuild\\">
    <PropertyGroup>
      <ErrorText>This project references targets in your node_modules\\\\react-native-windows folder that are missing. The missing file is {0}.</ErrorText>
    </PropertyGroup>
    <Error Condition=\\"!Exists('$(ReactNativeWindowsDir)\\\\PropertySheets\\\\External\\\\Microsoft.ReactNative.Uwp.CSharpApp.props')\\" Text=\\"$([System.String]::Format('$(ErrorText)', '$(ReactNativeWindowsDir)\\\\PropertySheets\\\\External\\\\Microsoft.ReactNative.Uwp.CSharpApp.props'))\\" />
    <Error Condition=\\"!Exists('$(ReactNativeWindowsDir)\\\\PropertySheets\\\\External\\\\Microsoft.ReactNative.Uwp.CSharpApp.targets')\\" Text=\\"$([System.String]::Format('$(ErrorText)', '$(ReactNativeWindowsDir)\\\\PropertySheets\\\\External\\\\Microsoft.ReactNative.Uwp.CSharpApp.targets'))\\" />
  </Target>
</Project>
"
`;

exports[`C# NuGet+WinUI3 Application: SnapshotApp.sln 1`] = `
"﻿
Microsoft Visual Studio Solution File, Format Version 12.00
# Visual Studio Version 16
VisualStudioVersion = 16.0.29215.179
MinimumVisualStudioVersion = 10.0.40219.1
Project(\\"{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}\\") = \\"SnapshotApp\\", \\"SnapshotApp\\\\SnapshotApp.csproj\\", \\"{2B89CEBD-A545-4756-ADFA-1E621DA453CC}\\"
EndProject
Global
	GlobalSection(SolutionConfigurationPlatforms) = preSolution
		Debug|ARM64 = Debug|ARM64
		Debug|x64 = Debug|x64
		Debug|x86 = Debug|x86
		Release|ARM64 = Release|ARM64
		Release|x64 = Release|x64
		Release|x86 = Release|x86
	EndGlobalSection
	GlobalSection(ProjectConfigurationPlatforms) = postSolution
		{2B89CEBD-A545-4756-ADFA-1E621DA453CC}.Debug|ARM64.ActiveCfg = Debug|ARM64
		{2B89CEBD-A545-4756-ADFA-1E621DA453CC}.Debug|ARM64.Build.0 = Debug|ARM64
		{2B89CEBD-A545-4756-ADFA-1E621DA453CC}.Debug|ARM64.Deploy.0 = Debug|ARM64
		{2B89CEBD-A545-4756-ADFA-1E621DA453CC}.Debug|x64.ActiveCfg = Debug|x64
		{2B89CEBD-A545-4756-ADFA-1E621DA453CC}.Debug|x64.Build.0 = Debug|x64
		{2B89CEBD-A545-4756-ADFA-1E621DA453CC}.Debug|x64.Deploy.0 = Debug|x64
		{2B89CEBD-A545-4756-ADFA-1E621DA453CC}.Debug|x86.ActiveCfg = Debug|x86
		{2B89CEBD-A545-4756-ADFA-1E621DA453CC}.Debug|x86.Build.0 = Debug|x86
		{2B89CEBD-A545-4756-ADFA-1E621DA453CC}.Debug|x86.Deploy.0 = Debug|x86
		{2B89CEBD-A545-4756-ADFA-1E621DA453CC}.Release|ARM64.ActiveCfg = Release|ARM64
		{2B89CEBD-A545-4756-ADFA-1E621DA453CC}.Release|ARM64.Build.0 = Release|ARM64
		{2B89CEBD-A545-4756-ADFA-1E621DA453CC}.Release|ARM64.Deploy.0 = Release|ARM64
		{2B89CEBD-A545-4756-ADFA-1E621DA453CC}.Release|x64.ActiveCfg = Release|x64
		{2B89CEBD-A545-4756-ADFA-1E621DA453CC}.Release|x64.Build.0 = Release|x64
		{2B89CEBD-A545-4756-ADFA-1E621DA453CC}.Release|x64.Deploy.0 = Release|x64
		{2B89CEBD-A545-4756-ADFA-1E621DA453CC}.Release|x86.ActiveCfg = Release|x86
		{2B89CEBD-A545-4756-ADFA-1E621DA453CC}.Release|x86.Build.0 = Release|x86
		{2B89CEBD-A545-4756-ADFA-1E621DA453CC}.Release|x86.Deploy.0 = Release|x86
	EndGlobalSection
	GlobalSection(SolutionProperties) = preSolution
		HideSolutionNode = FALSE
	EndGlobalSection
	GlobalSection(ExtensibilityGlobals) = postSolution
		SolutionGuid = {D43FAD39-F619-437D-BB40-04A3982ACB6A}
	EndGlobalSection
EndGlobal
"
`;

exports[`C# NuGet+WinUI3 Application: index.windows.bundle 1`] = `
"/**
 * 
 * Be sure to generate this file using the CLI:
 *
 * npx react-native bundle --platform windows --entry-file index.js 
 *   --bundle-output windows\\\\SnapshotApp\\\\Bundle\\\\index.windows.bundle
 *   --assets-dest windows\\\\SnapshotApp\\\\Bundle
 *
 */"
`;

exports[`C# NuGet+WinUI3 Application: metro.config.js 1`] = `
"/**
 * Metro configuration for React Native
 * https://github.com/facebook/react-native
 *
 * @format
 */
const fs = require('fs');
const path = require('path');
const exclusionList = require('metro-config/src/defaults/exclusionList');

const rnwPath = fs.realpathSync(
  path.resolve(require.resolve('react-native-windows/package.json'), '..'),
);

module.exports = {
  resolver: {
    blockList: exclusionList([
      // This stops \\"react-native run-windows\\" from causing the metro server to crash if its already running
      new RegExp(
        \`\${path.resolve(__dirname, 'windows').replace(/[/\\\\\\\\]/g, '/')}.*\`,
      ),
      // This prevents \\"react-native run-windows\\" from hitting: EBUSY: resource busy or locked, open msbuild.ProjectImports.zip or other files produced by msbuild
      new RegExp(\`\${rnwPath}/build/.*\`),
      new RegExp(\`\${rnwPath}/target/.*\`),
      /.*\\\\.ProjectImports\\\\.zip/,
    ]),
  },
  transformer: {
    getTransformOptions: async () => ({
      transform: {
        experimentalImportSupport: false,
        inlineRequires: true,
      },
    }),
  },
};
"
`;

exports[`C# NuGet+WinUI3 Library: AssemblyInfo.cs 1`] = `
"﻿using System.Reflection;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;

// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
[assembly: AssemblyTitle(\\"SnapshotApp\\")]
[assembly: AssemblyDescription(\\"\\")]
[assembly: AssemblyConfiguration(\\"\\")]
[assembly: AssemblyCompany(\\"\\")]
[assembly: AssemblyProduct(\\"SnapshotApp\\")]
[assembly: AssemblyCopyright(\\"Copyright ©  2019\\")]
[assembly: AssemblyTrademark(\\"\\")]
[assembly: AssemblyCulture(\\"\\")]

// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Build and Revision Numbers 
// by using the '*' as shown below:
// [assembly: AssemblyVersion(\\"1.0.*\\")]
[assembly: AssemblyVersion(\\"1.0.0.0\\")]
[assembly: AssemblyFileVersion(\\"1.0.0.0\\")]
[assembly: ComVisible(false)]"
`;

exports[`C# NuGet+WinUI3 Library: Default.rd.xml 1`] = `
"<!--
    This file contains Runtime Directives used by .NET Native. The defaults here are suitable for most
    developers. However, you can modify these parameters to modify the behavior of the .NET Native
    optimizer.

    Runtime Directives are documented at https://go.microsoft.com/fwlink/?LinkID=391919

    To fully enable reflection for App1.MyClass and all of its public/private members
    <Type Name=\\"App1.MyClass\\" Dynamic=\\"Required All\\"/>

    To enable dynamic creation of the specific instantiation of AppClass<T> over System.Int32
    <TypeInstantiation Name=\\"App1.AppClass\\" Arguments=\\"System.Int32\\" Activate=\\"Required Public\\" />

    Using the Namespace directive to apply reflection policy to all the types in a particular namespace
    <Namespace Name=\\"DataClasses.ViewModels\\" Serialize=\\"All\\" />
-->

<Directives xmlns=\\"http://schemas.microsoft.com/netfx/2013/01/metadata\\">
  <Application>
    <!--
      An Assembly element with Name=\\"*Application*\\" applies to all assemblies in
      the application package. The asterisks are not wildcards.
    -->
    <Assembly Name=\\"*Application*\\" Dynamic=\\"Required All\\" />
    
    
    <!-- Add your application specific runtime directives here. -->
    <Namespace Name=\\"Microsoft.ReactNative\\" Dynamic=\\"Required All\\" MarshalObject=\\"Required All\\" />
    <Namespace Name=\\"Microsoft.ReactNative.Managed\\" Dynamic=\\"Required All\\" MarshalObject=\\"Required All\\" />

  </Application>
</Directives>"
`;

exports[`C# NuGet+WinUI3 Library: ExperimentalFeatures.props 1`] = `
"<?xml version=\\"1.0\\" encoding=\\"utf-8\\"?>
<Project xmlns=\\"http://schemas.microsoft.com/developer/msbuild/2003\\">

  <!--
    Application projects contain a file with this name to specify some important settings
    that will apply globally for the app and *all* native modules the app consumes. These
    values are set by the app developer.
  -->

</Project>
"
`;

exports[`C# NuGet+WinUI3 Library: NuGet.Config 1`] = `
"<?xml version=\\"1.0\\" encoding=\\"utf-8\\"?>
<configuration>
  <config>
    <add key=\\"repositoryPath\\" value=\\"packages\\" />
  </config>
  <packageSources>
    <clear />
    <add key=\\"react-native\\" value=\\"https://pkgs.dev.azure.com/ms/react-native/_packaging/react-native-public/nuget/v3/index.json\\" />
    <add key=\\"Nuget.org\\" value=\\"https://api.nuget.org/v3/index.json\\" />
  </packageSources>
  <disabledPackageSources>
    <clear />
  </disabledPackageSources>  
</configuration>
"
`;

exports[`C# NuGet+WinUI3 Library: ReactNativeModule.cs 1`] = `
"﻿using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

using Microsoft.ReactNative;
using Microsoft.ReactNative.Managed;

namespace SnapshotApp
{
    [ReactModule(\\"SnapshotApp\\")]
    internal sealed class ReactNativeModule
    {
        // See https://microsoft.github.io/react-native-windows/docs/native-modules for details on writing native modules

        private ReactContext _reactContext;

        [ReactInitializer]
        public void Initialize(ReactContext reactContext)
        {
            _reactContext = reactContext;
        }

        [ReactMethod]
        public void sampleMethod(string stringArgument, int numberArgument, Action<string> callback)
        {
            // TODO: Implement some actually useful functionality
            callback(\\"Received numberArgument: \\" + numberArgument + \\" stringArgument: \\" + stringArgument);
        }
    }
}
"
`;

exports[`C# NuGet+WinUI3 Library: ReactPackageProvider.cs 1`] = `
"using Microsoft.ReactNative;

namespace SnapshotApp
{
    public partial class ReactPackageProvider : IReactPackageProvider
    {
        public void CreatePackage(IReactPackageBuilder packageBuilder)
        {
            CreatePackageImplementation(packageBuilder);
        }

        /// <summary>
        /// This method is implemented by the C# code generator
        /// </summary>
        partial void CreatePackageImplementation(IReactPackageBuilder packageBuilder);
    }
}
"
`;

exports[`C# NuGet+WinUI3 Library: SnapshotApp.csproj 1`] = `
"﻿<?xml version=\\"1.0\\" encoding=\\"utf-8\\"?>
<Project ToolsVersion=\\"Current\\" DefaultTargets=\\"Build\\" xmlns=\\"http://schemas.microsoft.com/developer/msbuild/2003\\">
  <Import Project=\\"$(MSBuildExtensionsPath)\\\\$(MSBuildToolsVersion)\\\\Microsoft.Common.props\\" Condition=\\"Exists('$(MSBuildExtensionsPath)\\\\$(MSBuildToolsVersion)\\\\Microsoft.Common.props')\\" />
  <Import Project=\\"$(SolutionDir)\\\\ExperimentalFeatures.props\\" Condition=\\"Exists('$(SolutionDir)\\\\ExperimentalFeatures.props')\\" />
  <PropertyGroup Label=\\"ReactNativeWindowsProps\\">
    <ReactNativeWindowsDir Condition=\\"'$(ReactNativeWindowsDir)' == ''\\">$([MSBuild]::GetDirectoryNameOfFileAbove($(SolutionDir), 'node_modules\\\\react-native-windows\\\\package.json'))\\\\node_modules\\\\react-native-windows\\\\</ReactNativeWindowsDir>
  </PropertyGroup>
  <PropertyGroup>
    <Configuration Condition=\\" '$(Configuration)' == '' \\">Debug</Configuration>
    <Platform Condition=\\" '$(Platform)' == '' \\">x86</Platform>
    <ProjectGuid>{AE399C99-8CF6-4245-9A28-4D81D6DDF8B2}</ProjectGuid>
    <OutputType>winmdobj</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>SnapshotApp</RootNamespace>
    <AssemblyName>SnapshotApp</AssemblyName>
    <DefaultLanguage>en-US</DefaultLanguage>
    <TargetPlatformIdentifier>UAP</TargetPlatformIdentifier>
    <TargetPlatformVersion Condition=\\" '$(TargetPlatformVersion)' == '' \\">10.0.19041.0</TargetPlatformVersion>
    <TargetPlatformMinVersion>10.0.16299.0</TargetPlatformMinVersion>
    <MinimumVisualStudioVersion>16.0</MinimumVisualStudioVersion>
    <FileAlignment>512</FileAlignment>
    <ProjectTypeGuids>{A5A43C5B-DE2A-4C0C-9213-0A381AF9435A};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <WindowsXamlEnableOverview>true</WindowsXamlEnableOverview>
    <LangVersion>7.3</LangVersion>
  </PropertyGroup>
  <PropertyGroup Condition=\\"'$(Configuration)|$(Platform)' == 'Debug|x86'\\">
    <DebugSymbols>true</DebugSymbols>
    <OutputPath>bin\\\\x86\\\\Debug\\\\</OutputPath>
    <DefineConstants>DEBUG;TRACE;NETFX_CORE;WINDOWS_UWP</DefineConstants>
    <NoWarn>;2008</NoWarn>
    <DebugType>full</DebugType>
    <PlatformTarget>x86</PlatformTarget>
    <UseVSHostingProcess>false</UseVSHostingProcess>
    <ErrorReport>prompt</ErrorReport>
    <Prefer32Bit>true</Prefer32Bit>
  </PropertyGroup>
  <PropertyGroup Condition=\\"'$(Configuration)|$(Platform)' == 'Release|x86'\\">
    <OutputPath>bin\\\\x86\\\\Release\\\\</OutputPath>
    <DefineConstants>TRACE;NETFX_CORE;WINDOWS_UWP</DefineConstants>
    <Optimize>true</Optimize>
    <NoWarn>;2008</NoWarn>
    <DebugType>pdbonly</DebugType>
    <PlatformTarget>x86</PlatformTarget>
    <UseVSHostingProcess>false</UseVSHostingProcess>
    <ErrorReport>prompt</ErrorReport>
    <Prefer32Bit>true</Prefer32Bit>
    <UseDotNetNativeToolchain>true</UseDotNetNativeToolchain>
  </PropertyGroup>
  <PropertyGroup Condition=\\"'$(Configuration)|$(Platform)' == 'Debug|ARM64'\\">
    <DebugSymbols>true</DebugSymbols>
    <OutputPath>bin\\\\ARM64\\\\Debug\\\\</OutputPath>
    <DefineConstants>DEBUG;TRACE;NETFX_CORE;WINDOWS_UWP</DefineConstants>
    <NoWarn>;2008</NoWarn>
    <DebugType>full</DebugType>
    <PlatformTarget>ARM64</PlatformTarget>
    <UseVSHostingProcess>false</UseVSHostingProcess>
    <ErrorReport>prompt</ErrorReport>
    <Prefer32Bit>true</Prefer32Bit>
  </PropertyGroup>
  <PropertyGroup Condition=\\"'$(Configuration)|$(Platform)' == 'Release|ARM64'\\">
    <OutputPath>bin\\\\ARM64\\\\Release\\\\</OutputPath>
    <DefineConstants>TRACE;NETFX_CORE;WINDOWS_UWP</DefineConstants>
    <Optimize>true</Optimize>
    <NoWarn>;2008</NoWarn>
    <DebugType>pdbonly</DebugType>
    <PlatformTarget>ARM64</PlatformTarget>
    <UseVSHostingProcess>false</UseVSHostingProcess>
    <ErrorReport>prompt</ErrorReport>
    <Prefer32Bit>true</Prefer32Bit>
    <UseDotNetNativeToolchain>true</UseDotNetNativeToolchain>
  </PropertyGroup>
  <PropertyGroup Condition=\\"'$(Configuration)|$(Platform)' == 'Debug|x64'\\">
    <DebugSymbols>true</DebugSymbols>
    <OutputPath>bin\\\\x64\\\\Debug\\\\</OutputPath>
    <DefineConstants>DEBUG;TRACE;NETFX_CORE;WINDOWS_UWP</DefineConstants>
    <NoWarn>;2008</NoWarn>
    <DebugType>full</DebugType>
    <PlatformTarget>x64</PlatformTarget>
    <UseVSHostingProcess>false</UseVSHostingProcess>
    <ErrorReport>prompt</ErrorReport>
    <Prefer32Bit>true</Prefer32Bit>
  </PropertyGroup>
  <PropertyGroup Condition=\\"'$(Configuration)|$(Platform)' == 'Release|x64'\\">
    <OutputPath>bin\\\\x64\\\\Release\\\\</OutputPath>
    <DefineConstants>TRACE;NETFX_CORE;WINDOWS_UWP</DefineConstants>
    <Optimize>true</Optimize>
    <NoWarn>;2008</NoWarn>
    <DebugType>pdbonly</DebugType>
    <PlatformTarget>x64</PlatformTarget>
    <UseVSHostingProcess>false</UseVSHostingProcess>
    <ErrorReport>prompt</ErrorReport>
    <Prefer32Bit>true</Prefer32Bit>
    <UseDotNetNativeToolchain>true</UseDotNetNativeToolchain>
  </PropertyGroup>
  <PropertyGroup>
    <RestoreProjectStyle>PackageReference</RestoreProjectStyle>
  </PropertyGroup>
  <ItemGroup>
    <Compile Include=\\"Properties\\\\AssemblyInfo.cs\\" />
    <Compile Include=\\"ReactNativeModule.cs\\" />
    <Compile Include=\\"ReactPackageProvider.cs\\" />
  </ItemGroup>
  <ItemGroup>
    <PackageReference Include=\\"Microsoft.NETCore.UniversalWindowsPlatform\\">
      <Version>6.2.9</Version>
    </PackageReference>
    <PackageReference Include=\\"ReactNative.Hermes.Windows\\">
      <Version>0.9.0-ms.6</Version>
    </PackageReference>
    <PackageReference Include=\\"Microsoft.ReactNative.Managed\\">
      <Version>0.0.0-canary.409</Version>
    </PackageReference>
  </ItemGroup>
  <PropertyGroup Condition=\\" '$(VisualStudioVersion)' == '' or '$(VisualStudioVersion)' &lt; '16.0' \\">
    <VisualStudioVersion>16.0</VisualStudioVersion>
  </PropertyGroup>
  <Import Project=\\"$(MSBuildExtensionsPath)\\\\Microsoft\\\\WindowsXaml\\\\v$(VisualStudioVersion)\\\\Microsoft.Windows.UI.Xaml.CSharp.targets\\" />
  <ImportGroup Label=\\"ReactNativeWindowsPropertySheets\\">
    <Import Project=\\"$(ReactNativeWindowsDir)\\\\PropertySheets\\\\External\\\\Microsoft.ReactNative.Uwp.CSharpLib.props\\" Condition=\\"Exists('$(ReactNativeWindowsDir)\\\\PropertySheets\\\\External\\\\Microsoft.ReactNative.Uwp.CSharpLib.props')\\" />
  </ImportGroup>
  <ImportGroup Label=\\"ReactNativeWindowsTargets\\">
    <Import Project=\\"$(ReactNativeWindowsDir)\\\\PropertySheets\\\\External\\\\Microsoft.ReactNative.Uwp.CSharpLib.targets\\" Condition=\\"Exists('$(ReactNativeWindowsDir)\\\\PropertySheets\\\\External\\\\Microsoft.ReactNative.Uwp.CSharpLib.targets')\\" />
  </ImportGroup>
  <Target Name=\\"EnsureReactNativeWindowsTargets\\" BeforeTargets=\\"PrepareForBuild\\">
    <PropertyGroup>
      <ErrorText>This project references targets in your node_modules\\\\react-native-windows folder that are missing. The missing file is {0}.</ErrorText>
    </PropertyGroup>
    <Error Condition=\\"!Exists('$(ReactNativeWindowsDir)\\\\PropertySheets\\\\External\\\\Microsoft.ReactNative.Uwp.CSharpLib.props')\\" Text=\\"$([System.String]::Format('$(ErrorText)', '$(ReactNativeWindowsDir)\\\\PropertySheets\\\\External\\\\Microsoft.ReactNative.Uwp.CSharpLib.props'))\\" />
    <Error Condition=\\"!Exists('$(ReactNativeWindowsDir)\\\\PropertySheets\\\\External\\\\Microsoft.ReactNative.Uwp.CSharpLib.targets')\\" Text=\\"$([System.String]::Format('$(ErrorText)', '$(ReactNativeWindowsDir)\\\\PropertySheets\\\\External\\\\Microsoft.ReactNative.Uwp.CSharpLib.targets'))\\" />
  </Target>
</Project>
"
`;

exports[`C# NuGet+WinUI3 Library: SnapshotApp.sln 1`] = `
"﻿
Microsoft Visual Studio Solution File, Format Version 12.00
# Visual Studio Version 16
VisualStudioVersion = 16.0.29215.179
MinimumVisualStudioVersion = 10.0.40219.1
Project(\\"{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}\\") = \\"SnapshotApp\\", \\"SnapshotApp\\\\SnapshotApp.csproj\\", \\"{AE399C99-8CF6-4245-9A28-4D81D6DDF8B2}\\"
EndProject
Global
	GlobalSection(SolutionConfigurationPlatforms) = preSolution
		Debug|ARM64 = Debug|ARM64
		Debug|x64 = Debug|x64
		Debug|x86 = Debug|x86
		Release|ARM64 = Release|ARM64
		Release|x64 = Release|x64
		Release|x86 = Release|x86
	EndGlobalSection
	GlobalSection(ProjectConfigurationPlatforms) = postSolution
		{AE399C99-8CF6-4245-9A28-4D81D6DDF8B2}.Debug|ARM64.ActiveCfg = Debug|ARM64
		{AE399C99-8CF6-4245-9A28-4D81D6DDF8B2}.Debug|ARM64.Build.0 = Debug|ARM64
		{AE399C99-8CF6-4245-9A28-4D81D6DDF8B2}.Debug|ARM64.Deploy.0 = Debug|ARM64
		{AE399C99-8CF6-4245-9A28-4D81D6DDF8B2}.Debug|x64.ActiveCfg = Debug|x64
		{AE399C99-8CF6-4245-9A28-4D81D6DDF8B2}.Debug|x64.Build.0 = Debug|x64
		{AE399C99-8CF6-4245-9A28-4D81D6DDF8B2}.Debug|x64.Deploy.0 = Debug|x64
		{AE399C99-8CF6-4245-9A28-4D81D6DDF8B2}.Debug|x86.ActiveCfg = Debug|x86
		{AE399C99-8CF6-4245-9A28-4D81D6DDF8B2}.Debug|x86.Build.0 = Debug|x86
		{AE399C99-8CF6-4245-9A28-4D81D6DDF8B2}.Debug|x86.Deploy.0 = Debug|x86
		{AE399C99-8CF6-4245-9A28-4D81D6DDF8B2}.Release|ARM64.ActiveCfg = Release|ARM64
		{AE399C99-8CF6-4245-9A28-4D81D6DDF8B2}.Release|ARM64.Build.0 = Release|ARM64
		{AE399C99-8CF6-4245-9A28-4D81D6DDF8B2}.Release|ARM64.Deploy.0 = Release|ARM64
		{AE399C99-8CF6-4245-9A28-4D81D6DDF8B2}.Release|x64.ActiveCfg = Release|x64
		{AE399C99-8CF6-4245-9A28-4D81D6DDF8B2}.Release|x64.Build.0 = Release|x64
		{AE399C99-8CF6-4245-9A28-4D81D6DDF8B2}.Release|x64.Deploy.0 = Release|x64
		{AE399C99-8CF6-4245-9A28-4D81D6DDF8B2}.Release|x86.ActiveCfg = Release|x86
		{AE399C99-8CF6-4245-9A28-4D81D6DDF8B2}.Release|x86.Build.0 = Release|x86
		{AE399C99-8CF6-4245-9A28-4D81D6DDF8B2}.Release|x86.Deploy.0 = Release|x86
	EndGlobalSection
	GlobalSection(SolutionProperties) = preSolution
		HideSolutionNode = FALSE
	EndGlobalSection
	GlobalSection(ExtensibilityGlobals) = postSolution
		SolutionGuid = {D43FAD39-F619-437D-BB40-04A3982ACB6A}
	EndGlobalSection
EndGlobal
"
`;

exports[`C# NuGet+WinUI3+Hermes Application: App.xaml 1`] = `
"﻿<react:ReactApplication
    x:Class=\\"SnapshotApp.App\\"
    xmlns=\\"http://schemas.microsoft.com/winfx/2006/xaml/presentation\\"
    xmlns:x=\\"http://schemas.microsoft.com/winfx/2006/xaml\\"
    xmlns:local=\\"using:SnapshotApp\\"
    xmlns:react=\\"using:Microsoft.ReactNative\\">
    <Application.Resources>
        <XamlControlsResources xmlns=\\"using:Microsoft.UI.Xaml.Controls\\" />
    </Application.Resources>
</react:ReactApplication>
"
`;

exports[`C# NuGet+WinUI3+Hermes Application: App.xaml.cs 1`] = `
"using Microsoft.ReactNative;
#if USE_WINUI3
using Microsoft.UI.Xaml;
using Microsoft.UI.Xaml.Controls;
#else
using Windows.ApplicationModel.Activation;
using Windows.UI.Xaml;
using Windows.UI.Xaml.Controls;
#endif

namespace SnapshotApp
{
    sealed partial class App : ReactApplication
    {
        public App()
        {
#if BUNDLE
            JavaScriptBundleFile = \\"index.windows\\";
            InstanceSettings.UseWebDebugger = false;
            InstanceSettings.UseFastRefresh = false;
#else
            JavaScriptBundleFile = \\"index\\";
            InstanceSettings.UseWebDebugger = true;
            InstanceSettings.UseFastRefresh = true;
#endif

#if DEBUG
            InstanceSettings.UseDeveloperSupport = true;
#else
            InstanceSettings.UseDeveloperSupport = false;
#endif

            Microsoft.ReactNative.Managed.AutolinkedNativeModules.RegisterAutolinkedNativeModulePackages(PackageProviders); // Includes any autolinked modules

            PackageProviders.Add(new ReactPackageProvider());

            InitializeComponent();
        }

        /// <summary>
        /// Invoked when the application is launched normally by the end user.  Other entry points
        /// will be used such as when the application is launched to open a specific file.
        /// </summary>
        /// <param name=\\"e\\">Details about the launch request and process.</param>
        protected override void OnLaunched(LaunchActivatedEventArgs e)
        {
            base.OnLaunched(e);
            var frame = (Frame)Window.Current.Content;
            frame.Navigate(typeof(MainPage), e.Arguments);
        }

        /// <summary>
        /// Invoked when the application is activated by some means other than normal launching.
        /// </summary>
        protected override void OnActivated(Windows.ApplicationModel.Activation.IActivatedEventArgs e)
        {
            var preActivationContent = Window.Current.Content;
            base.OnActivated(e);
            if (preActivationContent == null && Window.Current != null)
            {
                // Display the initial content
                var frame = (Frame)Window.Current.Content;
                frame.Navigate(typeof(MainPage), null);
            }
        }
    }
}
"
`;

exports[`C# NuGet+WinUI3+Hermes Application: AssemblyInfo.cs 1`] = `
"﻿using System.Reflection;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;

// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
[assembly: AssemblyTitle(\\"SnapshotApp\\")]
[assembly: AssemblyDescription(\\"\\")]
[assembly: AssemblyConfiguration(\\"\\")]
[assembly: AssemblyCompany(\\"\\")]
[assembly: AssemblyProduct(\\"SnapshotApp\\")]
[assembly: AssemblyCopyright(\\"Copyright ©  2019\\")]
[assembly: AssemblyTrademark(\\"\\")]
[assembly: AssemblyCulture(\\"\\")]

// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Build and Revision Numbers 
// by using the '*' as shown below:
// [assembly: AssemblyVersion(\\"1.0.*\\")]
[assembly: AssemblyVersion(\\"1.0.0.0\\")]
[assembly: AssemblyFileVersion(\\"1.0.0.0\\")]
[assembly: ComVisible(false)]"
`;

exports[`C# NuGet+WinUI3+Hermes Application: AutolinkedNativeModules.g.cs 1`] = `
"﻿// AutolinkedNativeModules.g.cs contents generated by \\"react-native autolink-windows\\"

using System.Collections.Generic;

namespace Microsoft.ReactNative.Managed
{
    internal static class AutolinkedNativeModules
    {
        internal static void RegisterAutolinkedNativeModulePackages(IList<IReactPackageProvider> packageProviders)
        { 
        }
    }
}
"
`;

exports[`C# NuGet+WinUI3+Hermes Application: AutolinkedNativeModules.g.props 1`] = `
"<?xml version=\\"1.0\\" encoding=\\"utf-8\\"?>
<Project xmlns=\\"http://schemas.microsoft.com/developer/msbuild/2003\\">
  <!-- AutolinkedNativeModules.g.props contents generated by \\"react-native autolink-windows\\" -->
  <PropertyGroup>
  </PropertyGroup>
</Project>
"
`;

exports[`C# NuGet+WinUI3+Hermes Application: AutolinkedNativeModules.g.targets 1`] = `
"<?xml version=\\"1.0\\" encoding=\\"utf-8\\"?>
<Project xmlns=\\"http://schemas.microsoft.com/developer/msbuild/2003\\">
  <!-- AutolinkedNativeModules.g.targets contents generated by \\"react-native autolink-windows\\" -->
  <ItemGroup>
  </ItemGroup>
</Project>
"
`;

exports[`C# NuGet+WinUI3+Hermes Application: Default.rd.xml 1`] = `
"<!--
    This file contains Runtime Directives used by .NET Native. The defaults here are suitable for most
    developers. However, you can modify these parameters to modify the behavior of the .NET Native
    optimizer.

    Runtime Directives are documented at https://go.microsoft.com/fwlink/?LinkID=391919

    To fully enable reflection for App1.MyClass and all of its public/private members
    <Type Name=\\"App1.MyClass\\" Dynamic=\\"Required All\\"/>

    To enable dynamic creation of the specific instantiation of AppClass<T> over System.Int32
    <TypeInstantiation Name=\\"App1.AppClass\\" Arguments=\\"System.Int32\\" Activate=\\"Required Public\\" />

    Using the Namespace directive to apply reflection policy to all the types in a particular namespace
    <Namespace Name=\\"DataClasses.ViewModels\\" Serialize=\\"All\\" />
-->

<Directives xmlns=\\"http://schemas.microsoft.com/netfx/2013/01/metadata\\">
  <Application>
    <!--
      An Assembly element with Name=\\"*Application*\\" applies to all assemblies in
      the application package. The asterisks are not wildcards.
    -->
    <Assembly Name=\\"*Application*\\" Dynamic=\\"Required All\\" />
    
    
    <!-- Add your application specific runtime directives here. -->
    <Namespace Name=\\"Microsoft.ReactNative\\" Dynamic=\\"Required All\\" MarshalObject=\\"Required All\\" />
    <Namespace Name=\\"Microsoft.ReactNative.Managed\\" Dynamic=\\"Required All\\" MarshalObject=\\"Required All\\" />

  </Application>
</Directives>"
`;

exports[`C# NuGet+WinUI3+Hermes Application: ExperimentalFeatures.props 1`] = `
"<?xml version=\\"1.0\\" encoding=\\"utf-8\\"?>
<Project xmlns=\\"http://schemas.microsoft.com/developer/msbuild/2003\\">

  <!--
    This file contains some important settings that will apply globally for
    your app and *all* native modules your app consumes. These values were
    set when you created the app project, and in some cases cannot be
    simply changed here without recreating a new project.
  -->

  <PropertyGroup Label=\\"Microsoft.ReactNative Experimental Features\\">
    <!--
      Enables default usage of Hermes.
      
      See https://microsoft.github.io/react-native-windows/docs/hermes
    -->
    <UseHermes>true</UseHermes>

    <!--
      Changes compilation to assume use of WinUI 3 instead of System XAML.
      Requires creation of new project.

      See https://microsoft.github.io/react-native-windows/docs/winui3
    -->
    <UseWinUI3>true</UseWinUI3>

    <!--
      Changes compilation to assume use of Microsoft.ReactNative NuGet packages
      instead of building the framework from source.
      Requires creation of new project.

      See https://microsoft.github.io/react-native-windows/docs/nuget
    -->
    <UseExperimentalNuget>true</UseExperimentalNuget>
  
  </PropertyGroup>

</Project>
"
`;

exports[`C# NuGet+WinUI3+Hermes Application: MainPage.xaml 1`] = `
"<Page
    x:Class=\\"SnapshotApp.MainPage\\"
    xmlns=\\"http://schemas.microsoft.com/winfx/2006/xaml/presentation\\"
    xmlns:x=\\"http://schemas.microsoft.com/winfx/2006/xaml\\"
    xmlns:local=\\"using:SnapshotApp\\"
    xmlns:react=\\"using:Microsoft.ReactNative\\"
    xmlns:d=\\"http://schemas.microsoft.com/expression/blend/2008\\"
    xmlns:mc=\\"http://schemas.openxmlformats.org/markup-compatibility/2006\\"
    mc:Ignorable=\\"d\\"
    Background=\\"{ThemeResource ApplicationPageBackgroundThemeBrush}\\">
    <react:ReactRootView 
        x:Name=\\"reactRootView\\"
        ComponentName=\\"SnapshotApp\\"
        Background=\\"{ThemeResource ApplicationPageBackgroundThemeBrush}\\"
        MinHeight=\\"400\\"/>
</Page>
"
`;

exports[`C# NuGet+WinUI3+Hermes Application: MainPage.xaml.cs 1`] = `
"using Microsoft.ReactNative;
using System;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System.Runtime.InteropServices.WindowsRuntime;
using Windows.Foundation;
using Windows.Foundation.Collections;
#if !USE_WINUI3
using Windows.UI.Xaml;
using Windows.UI.Xaml.Controls;
using Windows.UI.Xaml.Controls.Primitives;
using Windows.UI.Xaml.Data;
using Windows.UI.Xaml.Input;
using Windows.UI.Xaml.Media;
using Windows.UI.Xaml.Navigation;
#else
using Microsoft.UI.Xaml;
using Microsoft.UI.Xaml.Controls;
using Microsoft.UI.Xaml.Controls.Primitives;
using Microsoft.UI.Xaml.Data;
using Microsoft.UI.Xaml.Input;
using Microsoft.UI.Xaml.Media;
using Microsoft.UI.Xaml.Navigation;
#endif

// The Blank Page item template is documented at https://go.microsoft.com/fwlink/?LinkId=234238

namespace SnapshotApp
{
    /// <summary>
    /// An empty page that can be used on its own or navigated to within a Frame.
    /// </summary>
    public sealed partial class MainPage : Page
    {
        public MainPage()
        {
            this.InitializeComponent();
            var app = Application.Current as App;
            reactRootView.ReactNativeHost = app.Host;
        }
    }
}
"
`;

exports[`C# NuGet+WinUI3+Hermes Application: NuGet.Config 1`] = `
"<?xml version=\\"1.0\\" encoding=\\"utf-8\\"?>
<configuration>
  <config>
    <add key=\\"repositoryPath\\" value=\\"packages\\" />
  </config>
  <packageSources>
    <clear />
    <add key=\\"react-native\\" value=\\"https://pkgs.dev.azure.com/ms/react-native/_packaging/react-native-public/nuget/v3/index.json\\" />
    <add key=\\"Nuget.org\\" value=\\"https://api.nuget.org/v3/index.json\\" />
  </packageSources>
  <disabledPackageSources>
    <clear />
  </disabledPackageSources>  
</configuration>
"
`;

exports[`C# NuGet+WinUI3+Hermes Application: Package.appxmanifest 1`] = `
"﻿<?xml version=\\"1.0\\" encoding=\\"utf-8\\"?>

<Package
  xmlns=\\"http://schemas.microsoft.com/appx/manifest/foundation/windows10\\"
  xmlns:mp=\\"http://schemas.microsoft.com/appx/2014/phone/manifest\\"
  xmlns:uap=\\"http://schemas.microsoft.com/appx/manifest/uap/windows10\\"
  IgnorableNamespaces=\\"uap mp\\">

  <Identity
    Name=\\"a5258554-74aa-49e0-a20c-3b189e3ea1e7\\"
    Publisher=\\"CN=nickg\\"
    Version=\\"1.0.0.0\\" />

  <mp:PhoneIdentity PhoneProductId=\\"a5258554-74aa-49e0-a20c-3b189e3ea1e7\\" PhonePublisherId=\\"00000000-0000-0000-0000-000000000000\\"/>

  <Properties>
    <DisplayName>SnapshotApp</DisplayName>
    <PublisherDisplayName>nickg</PublisherDisplayName>
    <Logo>Assets\\\\StoreLogo.png</Logo>
  </Properties>

  <Dependencies>
    <TargetDeviceFamily Name=\\"Windows.Universal\\" MinVersion=\\"10.0.0.0\\" MaxVersionTested=\\"10.0.0.0\\" />
  </Dependencies>

  <Resources>
    <Resource Language=\\"x-generate\\"/>
  </Resources>

  <Applications>
    <Application
      Id=\\"App\\"
      Executable=\\"$targetnametoken$.exe\\"
      EntryPoint=\\"SnapshotApp.App\\">
      <uap:VisualElements
        DisplayName=\\"SnapshotApp\\"
        Square150x150Logo=\\"Assets\\\\Square150x150Logo.png\\"
        Square44x44Logo=\\"Assets\\\\Square44x44Logo.png\\"
        Description=\\"SnapshotApp\\"
        BackgroundColor=\\"transparent\\">
        <uap:DefaultTile Wide310x150Logo=\\"Assets\\\\Wide310x150Logo.png\\"/>
        <uap:SplashScreen Image=\\"Assets\\\\SplashScreen.png\\" />
      </uap:VisualElements>
    </Application>
  </Applications>

  <Capabilities>
    <Capability Name=\\"internetClient\\" />
  </Capabilities>
</Package>"
`;

exports[`C# NuGet+WinUI3+Hermes Application: ReactPackageProvider.cs 1`] = `
"using Microsoft.ReactNative;

namespace SnapshotApp
{
    public partial class ReactPackageProvider : IReactPackageProvider
    {
        public void CreatePackage(IReactPackageBuilder packageBuilder)
        {
            CreatePackageImplementation(packageBuilder);
        }

        /// <summary>
        /// This method is implemented by the C# code generator
        /// </summary>
        partial void CreatePackageImplementation(IReactPackageBuilder packageBuilder);
    }
}
"
`;

exports[`C# NuGet+WinUI3+Hermes Application: SnapshotApp.csproj 1`] = `
"﻿<?xml version=\\"1.0\\" encoding=\\"utf-8\\"?>
<Project ToolsVersion=\\"Current\\" DefaultTargets=\\"Build\\" xmlns=\\"http://schemas.microsoft.com/developer/msbuild/2003\\">
  <Import Project=\\"$(MSBuildExtensionsPath)\\\\$(MSBuildToolsVersion)\\\\Microsoft.Common.props\\" Condition=\\"Exists('$(MSBuildExtensionsPath)\\\\$(MSBuildToolsVersion)\\\\Microsoft.Common.props')\\" />
  <Import Project=\\"$(SolutionDir)\\\\ExperimentalFeatures.props\\" Condition=\\"Exists('$(SolutionDir)\\\\ExperimentalFeatures.props')\\" />
  <PropertyGroup Label=\\"ReactNativeWindowsProps\\">
    <ReactNativeWindowsDir Condition=\\"'$(ReactNativeWindowsDir)' == ''\\">$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), 'node_modules\\\\react-native-windows\\\\package.json'))\\\\node_modules\\\\react-native-windows\\\\</ReactNativeWindowsDir>
  </PropertyGroup>
  <PropertyGroup>
    <Configuration Condition=\\" '$(Configuration)' == '' \\">Debug</Configuration>
    <Platform Condition=\\" '$(Platform)' == '' \\">x86</Platform>
    <ProjectGuid>{016A3D94-BE8A-4BFC-89DB-CACA43F891C7}</ProjectGuid>
    <OutputType>AppContainerExe</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>SnapshotApp</RootNamespace>
    <AssemblyName>SnapshotApp</AssemblyName>
    <DefaultLanguage>en-US</DefaultLanguage>
    <TargetPlatformIdentifier>UAP</TargetPlatformIdentifier>
    <TargetPlatformVersion Condition=\\" '$(TargetPlatformVersion)' == '' \\">10.0.19041.0</TargetPlatformVersion>
    <TargetPlatformMinVersion>10.0.16299.0</TargetPlatformMinVersion>
    <MinimumVisualStudioVersion>16.0</MinimumVisualStudioVersion>
    <FileAlignment>512</FileAlignment>
    <ProjectTypeGuids>{A5A43C5B-DE2A-4C0C-9213-0A381AF9435A};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <WindowsXamlEnableOverview>true</WindowsXamlEnableOverview>
    <AppxGeneratePrisForPortableLibrariesEnabled>false</AppxGeneratePrisForPortableLibrariesEnabled>
    <LangVersion>7.3</LangVersion>
  </PropertyGroup>
  <PropertyGroup Condition=\\"'$(Configuration)|$(Platform)' == 'Debug|x86'\\">
    <DebugSymbols>true</DebugSymbols>
    <OutputPath>bin\\\\x86\\\\Debug\\\\</OutputPath>
    <DefineConstants>DEBUG;TRACE;NETFX_CORE;WINDOWS_UWP</DefineConstants>
    <NoWarn>;2008</NoWarn>
    <DebugType>full</DebugType>
    <PlatformTarget>x86</PlatformTarget>
    <UseVSHostingProcess>false</UseVSHostingProcess>
    <ErrorReport>prompt</ErrorReport>
    <Prefer32Bit>true</Prefer32Bit>
  </PropertyGroup>
  <PropertyGroup Condition=\\"'$(Configuration)|$(Platform)' == 'Release|x86'\\">
    <OutputPath>bin\\\\x86\\\\Release\\\\</OutputPath>
    <DefineConstants>TRACE;NETFX_CORE;WINDOWS_UWP</DefineConstants>
    <Optimize>true</Optimize>
    <NoWarn>;2008</NoWarn>
    <DebugType>pdbonly</DebugType>
    <PlatformTarget>x86</PlatformTarget>
    <UseVSHostingProcess>false</UseVSHostingProcess>
    <ErrorReport>prompt</ErrorReport>
    <Prefer32Bit>true</Prefer32Bit>
    <UseDotNetNativeToolchain>true</UseDotNetNativeToolchain>
  </PropertyGroup>
  <PropertyGroup Condition=\\"'$(Configuration)|$(Platform)' == 'Debug|ARM64'\\">
    <DebugSymbols>true</DebugSymbols>
    <OutputPath>bin\\\\ARM64\\\\Debug\\\\</OutputPath>
    <DefineConstants>DEBUG;TRACE;NETFX_CORE;WINDOWS_UWP</DefineConstants>
    <NoWarn>;2008</NoWarn>
    <DebugType>full</DebugType>
    <PlatformTarget>ARM64</PlatformTarget>
    <UseVSHostingProcess>false</UseVSHostingProcess>
    <ErrorReport>prompt</ErrorReport>
    <Prefer32Bit>true</Prefer32Bit>
  </PropertyGroup>
  <PropertyGroup Condition=\\"'$(Configuration)|$(Platform)' == 'Release|ARM64'\\">
    <OutputPath>bin\\\\ARM64\\\\Release\\\\</OutputPath>
    <DefineConstants>TRACE;NETFX_CORE;WINDOWS_UWP</DefineConstants>
    <Optimize>true</Optimize>
    <NoWarn>;2008</NoWarn>
    <DebugType>pdbonly</DebugType>
    <PlatformTarget>ARM64</PlatformTarget>
    <UseVSHostingProcess>false</UseVSHostingProcess>
    <ErrorReport>prompt</ErrorReport>
    <Prefer32Bit>true</Prefer32Bit>
    <UseDotNetNativeToolchain>true</UseDotNetNativeToolchain>
  </PropertyGroup>
  <PropertyGroup Condition=\\"'$(Configuration)|$(Platform)' == 'Debug|x64'\\">
    <DebugSymbols>true</DebugSymbols>
    <OutputPath>bin\\\\x64\\\\Debug\\\\</OutputPath>
    <DefineConstants>DEBUG;TRACE;NETFX_CORE;WINDOWS_UWP</DefineConstants>
    <NoWarn>;2008</NoWarn>
    <DebugType>full</DebugType>
    <PlatformTarget>x64</PlatformTarget>
    <UseVSHostingProcess>false</UseVSHostingProcess>
    <ErrorReport>prompt</ErrorReport>
    <Prefer32Bit>true</Prefer32Bit>
  </PropertyGroup>
  <PropertyGroup Condition=\\"'$(Configuration)|$(Platform)' == 'Release|x64'\\">
    <OutputPath>bin\\\\x64\\\\Release\\\\</OutputPath>
    <DefineConstants>TRACE;NETFX_CORE;WINDOWS_UWP</DefineConstants>
    <Optimize>true</Optimize>
    <NoWarn>;2008</NoWarn>
    <DebugType>pdbonly</DebugType>
    <PlatformTarget>x64</PlatformTarget>
    <UseVSHostingProcess>false</UseVSHostingProcess>
    <ErrorReport>prompt</ErrorReport>
    <Prefer32Bit>true</Prefer32Bit>
    <UseDotNetNativeToolchain>true</UseDotNetNativeToolchain>
  </PropertyGroup>
  <PropertyGroup>
    <RestoreProjectStyle>PackageReference</RestoreProjectStyle>
  </PropertyGroup>
  <ItemGroup>
    <Compile Include=\\"App.xaml.cs\\">
      <DependentUpon>App.xaml</DependentUpon>
    </Compile>
    <Compile Include=\\"MainPage.xaml.cs\\">
      <DependentUpon>MainPage.xaml</DependentUpon>
    </Compile>
    <Compile Include=\\"Properties\\\\AssemblyInfo.cs\\" />
    <Compile Include=\\"AutolinkedNativeModules.g.cs\\" />
    <Compile Include=\\"ReactPackageProvider.cs\\" />
  </ItemGroup>
  <ItemGroup>
    <AppxManifest Include=\\"Package.appxmanifest\\">
      <SubType>Designer</SubType>
    </AppxManifest>
  </ItemGroup>
  <ItemGroup>
    <Content Include=\\"Properties\\\\Default.rd.xml\\" />
    <Content Include=\\"Assets\\\\LockScreenLogo.scale-200.png\\" />
    <Content Include=\\"Assets\\\\SplashScreen.scale-200.png\\" />
    <Content Include=\\"Assets\\\\Square150x150Logo.scale-200.png\\" />
    <Content Include=\\"Assets\\\\Square44x44Logo.scale-200.png\\" />
    <Content Include=\\"Assets\\\\Square44x44Logo.targetsize-24_altform-unplated.png\\" />
    <Content Include=\\"Assets\\\\StoreLogo.png\\" />
    <Content Include=\\"Assets\\\\Wide310x150Logo.scale-200.png\\" />
  </ItemGroup>
  <ItemGroup>
    <ApplicationDefinition Include=\\"App.xaml\\">
      <Generator>MSBuild:Compile</Generator>
      <SubType>Designer</SubType>
    </ApplicationDefinition>
    <Page Include=\\"MainPage.xaml\\">
      <Generator>MSBuild:Compile</Generator>
      <SubType>Designer</SubType>
    </Page>
  </ItemGroup>
  <PropertyGroup Condition=\\" '$(VisualStudioVersion)' == '' or '$(VisualStudioVersion)' &lt; '16.0' \\">
    <VisualStudioVersion>16.0</VisualStudioVersion>
  </PropertyGroup>
  <Import Project=\\"$(MSBuildExtensionsPath)\\\\Microsoft\\\\WindowsXaml\\\\v$(VisualStudioVersion)\\\\Microsoft.Windows.UI.Xaml.CSharp.targets\\" />
  <ImportGroup Label=\\"ReactNativeWindowsPropertySheets\\">
    <Import Project=\\"$(ReactNativeWindowsDir)\\\\PropertySheets\\\\External\\\\Microsoft.ReactNative.Uwp.CSharpApp.props\\" Condition=\\"Exists('$(ReactNativeWindowsDir)\\\\PropertySheets\\\\External\\\\Microsoft.ReactNative.Uwp.CSharpApp.props')\\" />
  </ImportGroup>
  <Choose>
    <When Condition=\\"'$(UseWinUI3)'!='true'\\">
      <ItemGroup>
        <PackageReference Include=\\"Microsoft.UI.Xaml\\" >
          <Version>$(WinUI2xVersion)</Version>
        </PackageReference>
      </ItemGroup>
    </When>
    <Otherwise>
      <ItemGroup>
        <PackageReference Include=\\"Microsoft.WinUI\\">
          <Version>$(WinUI3Version)</Version>
        </PackageReference>
      </ItemGroup>
    </Otherwise>
  </Choose>
  <ItemGroup>
    <PackageReference Include=\\"Microsoft.NETCore.UniversalWindowsPlatform\\">
      <Version>6.2.9</Version>
    </PackageReference>
    <PackageReference Include=\\"ReactNative.Hermes.Windows\\">
      <Version>0.9.0-ms.6</Version>
    </PackageReference>
    <PackageReference Include=\\"Microsoft.ReactNative.Managed\\">
      <Version>0.0.0-canary.409</Version>
    </PackageReference>
  </ItemGroup>
  <ImportGroup Label=\\"ReactNativeWindowsTargets\\">
    <Import Project=\\"$(ReactNativeWindowsDir)\\\\PropertySheets\\\\External\\\\Microsoft.ReactNative.Uwp.CSharpApp.targets\\" Condition=\\"Exists('$(ReactNativeWindowsDir)\\\\PropertySheets\\\\External\\\\Microsoft.ReactNative.Uwp.CSharpApp.targets')\\" />
  </ImportGroup>
  <Target Name=\\"EnsureReactNativeWindowsTargets\\" BeforeTargets=\\"PrepareForBuild\\">
    <PropertyGroup>
      <ErrorText>This project references targets in your node_modules\\\\react-native-windows folder that are missing. The missing file is {0}.</ErrorText>
    </PropertyGroup>
    <Error Condition=\\"!Exists('$(ReactNativeWindowsDir)\\\\PropertySheets\\\\External\\\\Microsoft.ReactNative.Uwp.CSharpApp.props')\\" Text=\\"$([System.String]::Format('$(ErrorText)', '$(ReactNativeWindowsDir)\\\\PropertySheets\\\\External\\\\Microsoft.ReactNative.Uwp.CSharpApp.props'))\\" />
    <Error Condition=\\"!Exists('$(ReactNativeWindowsDir)\\\\PropertySheets\\\\External\\\\Microsoft.ReactNative.Uwp.CSharpApp.targets')\\" Text=\\"$([System.String]::Format('$(ErrorText)', '$(ReactNativeWindowsDir)\\\\PropertySheets\\\\External\\\\Microsoft.ReactNative.Uwp.CSharpApp.targets'))\\" />
  </Target>
</Project>
"
`;

exports[`C# NuGet+WinUI3+Hermes Application: SnapshotApp.sln 1`] = `
"﻿
Microsoft Visual Studio Solution File, Format Version 12.00
# Visual Studio Version 16
VisualStudioVersion = 16.0.29215.179
MinimumVisualStudioVersion = 10.0.40219.1
Project(\\"{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}\\") = \\"SnapshotApp\\", \\"SnapshotApp\\\\SnapshotApp.csproj\\", \\"{016A3D94-BE8A-4BFC-89DB-CACA43F891C7}\\"
EndProject
Global
	GlobalSection(SolutionConfigurationPlatforms) = preSolution
		Debug|ARM64 = Debug|ARM64
		Debug|x64 = Debug|x64
		Debug|x86 = Debug|x86
		Release|ARM64 = Release|ARM64
		Release|x64 = Release|x64
		Release|x86 = Release|x86
	EndGlobalSection
	GlobalSection(ProjectConfigurationPlatforms) = postSolution
		{016A3D94-BE8A-4BFC-89DB-CACA43F891C7}.Debug|ARM64.ActiveCfg = Debug|ARM64
		{016A3D94-BE8A-4BFC-89DB-CACA43F891C7}.Debug|ARM64.Build.0 = Debug|ARM64
		{016A3D94-BE8A-4BFC-89DB-CACA43F891C7}.Debug|ARM64.Deploy.0 = Debug|ARM64
		{016A3D94-BE8A-4BFC-89DB-CACA43F891C7}.Debug|x64.ActiveCfg = Debug|x64
		{016A3D94-BE8A-4BFC-89DB-CACA43F891C7}.Debug|x64.Build.0 = Debug|x64
		{016A3D94-BE8A-4BFC-89DB-CACA43F891C7}.Debug|x64.Deploy.0 = Debug|x64
		{016A3D94-BE8A-4BFC-89DB-CACA43F891C7}.Debug|x86.ActiveCfg = Debug|x86
		{016A3D94-BE8A-4BFC-89DB-CACA43F891C7}.Debug|x86.Build.0 = Debug|x86
		{016A3D94-BE8A-4BFC-89DB-CACA43F891C7}.Debug|x86.Deploy.0 = Debug|x86
		{016A3D94-BE8A-4BFC-89DB-CACA43F891C7}.Release|ARM64.ActiveCfg = Release|ARM64
		{016A3D94-BE8A-4BFC-89DB-CACA43F891C7}.Release|ARM64.Build.0 = Release|ARM64
		{016A3D94-BE8A-4BFC-89DB-CACA43F891C7}.Release|ARM64.Deploy.0 = Release|ARM64
		{016A3D94-BE8A-4BFC-89DB-CACA43F891C7}.Release|x64.ActiveCfg = Release|x64
		{016A3D94-BE8A-4BFC-89DB-CACA43F891C7}.Release|x64.Build.0 = Release|x64
		{016A3D94-BE8A-4BFC-89DB-CACA43F891C7}.Release|x64.Deploy.0 = Release|x64
		{016A3D94-BE8A-4BFC-89DB-CACA43F891C7}.Release|x86.ActiveCfg = Release|x86
		{016A3D94-BE8A-4BFC-89DB-CACA43F891C7}.Release|x86.Build.0 = Release|x86
		{016A3D94-BE8A-4BFC-89DB-CACA43F891C7}.Release|x86.Deploy.0 = Release|x86
	EndGlobalSection
	GlobalSection(SolutionProperties) = preSolution
		HideSolutionNode = FALSE
	EndGlobalSection
	GlobalSection(ExtensibilityGlobals) = postSolution
		SolutionGuid = {D43FAD39-F619-437D-BB40-04A3982ACB6A}
	EndGlobalSection
EndGlobal
"
`;

exports[`C# NuGet+WinUI3+Hermes Application: index.windows.bundle 1`] = `
"/**
 * 
 * Be sure to generate this file using the CLI:
 *
 * npx react-native bundle --platform windows --entry-file index.js 
 *   --bundle-output windows\\\\SnapshotApp\\\\Bundle\\\\index.windows.bundle
 *   --assets-dest windows\\\\SnapshotApp\\\\Bundle
 *
 */"
`;

exports[`C# NuGet+WinUI3+Hermes Application: metro.config.js 1`] = `
"/**
 * Metro configuration for React Native
 * https://github.com/facebook/react-native
 *
 * @format
 */
const fs = require('fs');
const path = require('path');
const exclusionList = require('metro-config/src/defaults/exclusionList');

const rnwPath = fs.realpathSync(
  path.resolve(require.resolve('react-native-windows/package.json'), '..'),
);

module.exports = {
  resolver: {
    blockList: exclusionList([
      // This stops \\"react-native run-windows\\" from causing the metro server to crash if its already running
      new RegExp(
        \`\${path.resolve(__dirname, 'windows').replace(/[/\\\\\\\\]/g, '/')}.*\`,
      ),
      // This prevents \\"react-native run-windows\\" from hitting: EBUSY: resource busy or locked, open msbuild.ProjectImports.zip or other files produced by msbuild
      new RegExp(\`\${rnwPath}/build/.*\`),
      new RegExp(\`\${rnwPath}/target/.*\`),
      /.*\\\\.ProjectImports\\\\.zip/,
    ]),
  },
  transformer: {
    getTransformOptions: async () => ({
      transform: {
        experimentalImportSupport: false,
        inlineRequires: true,
      },
    }),
  },
};
"
`;

exports[`C# NuGet+WinUI3+Hermes Library: AssemblyInfo.cs 1`] = `
"﻿using System.Reflection;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;

// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
[assembly: AssemblyTitle(\\"SnapshotApp\\")]
[assembly: AssemblyDescription(\\"\\")]
[assembly: AssemblyConfiguration(\\"\\")]
[assembly: AssemblyCompany(\\"\\")]
[assembly: AssemblyProduct(\\"SnapshotApp\\")]
[assembly: AssemblyCopyright(\\"Copyright ©  2019\\")]
[assembly: AssemblyTrademark(\\"\\")]
[assembly: AssemblyCulture(\\"\\")]

// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Build and Revision Numbers 
// by using the '*' as shown below:
// [assembly: AssemblyVersion(\\"1.0.*\\")]
[assembly: AssemblyVersion(\\"1.0.0.0\\")]
[assembly: AssemblyFileVersion(\\"1.0.0.0\\")]
[assembly: ComVisible(false)]"
`;

exports[`C# NuGet+WinUI3+Hermes Library: Default.rd.xml 1`] = `
"<!--
    This file contains Runtime Directives used by .NET Native. The defaults here are suitable for most
    developers. However, you can modify these parameters to modify the behavior of the .NET Native
    optimizer.

    Runtime Directives are documented at https://go.microsoft.com/fwlink/?LinkID=391919

    To fully enable reflection for App1.MyClass and all of its public/private members
    <Type Name=\\"App1.MyClass\\" Dynamic=\\"Required All\\"/>

    To enable dynamic creation of the specific instantiation of AppClass<T> over System.Int32
    <TypeInstantiation Name=\\"App1.AppClass\\" Arguments=\\"System.Int32\\" Activate=\\"Required Public\\" />

    Using the Namespace directive to apply reflection policy to all the types in a particular namespace
    <Namespace Name=\\"DataClasses.ViewModels\\" Serialize=\\"All\\" />
-->

<Directives xmlns=\\"http://schemas.microsoft.com/netfx/2013/01/metadata\\">
  <Application>
    <!--
      An Assembly element with Name=\\"*Application*\\" applies to all assemblies in
      the application package. The asterisks are not wildcards.
    -->
    <Assembly Name=\\"*Application*\\" Dynamic=\\"Required All\\" />
    
    
    <!-- Add your application specific runtime directives here. -->
    <Namespace Name=\\"Microsoft.ReactNative\\" Dynamic=\\"Required All\\" MarshalObject=\\"Required All\\" />
    <Namespace Name=\\"Microsoft.ReactNative.Managed\\" Dynamic=\\"Required All\\" MarshalObject=\\"Required All\\" />

  </Application>
</Directives>"
`;

exports[`C# NuGet+WinUI3+Hermes Library: ExperimentalFeatures.props 1`] = `
"<?xml version=\\"1.0\\" encoding=\\"utf-8\\"?>
<Project xmlns=\\"http://schemas.microsoft.com/developer/msbuild/2003\\">

  <!--
    Application projects contain a file with this name to specify some important settings
    that will apply globally for the app and *all* native modules the app consumes. These
    values are set by the app developer.
  -->

</Project>
"
`;

exports[`C# NuGet+WinUI3+Hermes Library: NuGet.Config 1`] = `
"<?xml version=\\"1.0\\" encoding=\\"utf-8\\"?>
<configuration>
  <config>
    <add key=\\"repositoryPath\\" value=\\"packages\\" />
  </config>
  <packageSources>
    <clear />
    <add key=\\"react-native\\" value=\\"https://pkgs.dev.azure.com/ms/react-native/_packaging/react-native-public/nuget/v3/index.json\\" />
    <add key=\\"Nuget.org\\" value=\\"https://api.nuget.org/v3/index.json\\" />
  </packageSources>
  <disabledPackageSources>
    <clear />
  </disabledPackageSources>  
</configuration>
"
`;

exports[`C# NuGet+WinUI3+Hermes Library: ReactNativeModule.cs 1`] = `
"﻿using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

using Microsoft.ReactNative;
using Microsoft.ReactNative.Managed;

namespace SnapshotApp
{
    [ReactModule(\\"SnapshotApp\\")]
    internal sealed class ReactNativeModule
    {
        // See https://microsoft.github.io/react-native-windows/docs/native-modules for details on writing native modules

        private ReactContext _reactContext;

        [ReactInitializer]
        public void Initialize(ReactContext reactContext)
        {
            _reactContext = reactContext;
        }

        [ReactMethod]
        public void sampleMethod(string stringArgument, int numberArgument, Action<string> callback)
        {
            // TODO: Implement some actually useful functionality
            callback(\\"Received numberArgument: \\" + numberArgument + \\" stringArgument: \\" + stringArgument);
        }
    }
}
"
`;

exports[`C# NuGet+WinUI3+Hermes Library: ReactPackageProvider.cs 1`] = `
"using Microsoft.ReactNative;

namespace SnapshotApp
{
    public partial class ReactPackageProvider : IReactPackageProvider
    {
        public void CreatePackage(IReactPackageBuilder packageBuilder)
        {
            CreatePackageImplementation(packageBuilder);
        }

        /// <summary>
        /// This method is implemented by the C# code generator
        /// </summary>
        partial void CreatePackageImplementation(IReactPackageBuilder packageBuilder);
    }
}
"
`;

exports[`C# NuGet+WinUI3+Hermes Library: SnapshotApp.csproj 1`] = `
"﻿<?xml version=\\"1.0\\" encoding=\\"utf-8\\"?>
<Project ToolsVersion=\\"Current\\" DefaultTargets=\\"Build\\" xmlns=\\"http://schemas.microsoft.com/developer/msbuild/2003\\">
  <Import Project=\\"$(MSBuildExtensionsPath)\\\\$(MSBuildToolsVersion)\\\\Microsoft.Common.props\\" Condition=\\"Exists('$(MSBuildExtensionsPath)\\\\$(MSBuildToolsVersion)\\\\Microsoft.Common.props')\\" />
  <Import Project=\\"$(SolutionDir)\\\\ExperimentalFeatures.props\\" Condition=\\"Exists('$(SolutionDir)\\\\ExperimentalFeatures.props')\\" />
  <PropertyGroup Label=\\"ReactNativeWindowsProps\\">
    <ReactNativeWindowsDir Condition=\\"'$(ReactNativeWindowsDir)' == ''\\">$([MSBuild]::GetDirectoryNameOfFileAbove($(SolutionDir), 'node_modules\\\\react-native-windows\\\\package.json'))\\\\node_modules\\\\react-native-windows\\\\</ReactNativeWindowsDir>
  </PropertyGroup>
  <PropertyGroup>
    <Configuration Condition=\\" '$(Configuration)' == '' \\">Debug</Configuration>
    <Platform Condition=\\" '$(Platform)' == '' \\">x86</Platform>
    <ProjectGuid>{EAD1881B-9FA3-43D7-B53B-2B1F6B83884E}</ProjectGuid>
    <OutputType>winmdobj</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>SnapshotApp</RootNamespace>
    <AssemblyName>SnapshotApp</AssemblyName>
    <DefaultLanguage>en-US</DefaultLanguage>
    <TargetPlatformIdentifier>UAP</TargetPlatformIdentifier>
    <TargetPlatformVersion Condition=\\" '$(TargetPlatformVersion)' == '' \\">10.0.19041.0</TargetPlatformVersion>
    <TargetPlatformMinVersion>10.0.16299.0</TargetPlatformMinVersion>
    <MinimumVisualStudioVersion>16.0</MinimumVisualStudioVersion>
    <FileAlignment>512</FileAlignment>
    <ProjectTypeGuids>{A5A43C5B-DE2A-4C0C-9213-0A381AF9435A};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <WindowsXamlEnableOverview>true</WindowsXamlEnableOverview>
    <LangVersion>7.3</LangVersion>
  </PropertyGroup>
  <PropertyGroup Condition=\\"'$(Configuration)|$(Platform)' == 'Debug|x86'\\">
    <DebugSymbols>true</DebugSymbols>
    <OutputPath>bin\\\\x86\\\\Debug\\\\</OutputPath>
    <DefineConstants>DEBUG;TRACE;NETFX_CORE;WINDOWS_UWP</DefineConstants>
    <NoWarn>;2008</NoWarn>
    <DebugType>full</DebugType>
    <PlatformTarget>x86</PlatformTarget>
    <UseVSHostingProcess>false</UseVSHostingProcess>
    <ErrorReport>prompt</ErrorReport>
    <Prefer32Bit>true</Prefer32Bit>
  </PropertyGroup>
  <PropertyGroup Condition=\\"'$(Configuration)|$(Platform)' == 'Release|x86'\\">
    <OutputPath>bin\\\\x86\\\\Release\\\\</OutputPath>
    <DefineConstants>TRACE;NETFX_CORE;WINDOWS_UWP</DefineConstants>
    <Optimize>true</Optimize>
    <NoWarn>;2008</NoWarn>
    <DebugType>pdbonly</DebugType>
    <PlatformTarget>x86</PlatformTarget>
    <UseVSHostingProcess>false</UseVSHostingProcess>
    <ErrorReport>prompt</ErrorReport>
    <Prefer32Bit>true</Prefer32Bit>
    <UseDotNetNativeToolchain>true</UseDotNetNativeToolchain>
  </PropertyGroup>
  <PropertyGroup Condition=\\"'$(Configuration)|$(Platform)' == 'Debug|ARM64'\\">
    <DebugSymbols>true</DebugSymbols>
    <OutputPath>bin\\\\ARM64\\\\Debug\\\\</OutputPath>
    <DefineConstants>DEBUG;TRACE;NETFX_CORE;WINDOWS_UWP</DefineConstants>
    <NoWarn>;2008</NoWarn>
    <DebugType>full</DebugType>
    <PlatformTarget>ARM64</PlatformTarget>
    <UseVSHostingProcess>false</UseVSHostingProcess>
    <ErrorReport>prompt</ErrorReport>
    <Prefer32Bit>true</Prefer32Bit>
  </PropertyGroup>
  <PropertyGroup Condition=\\"'$(Configuration)|$(Platform)' == 'Release|ARM64'\\">
    <OutputPath>bin\\\\ARM64\\\\Release\\\\</OutputPath>
    <DefineConstants>TRACE;NETFX_CORE;WINDOWS_UWP</DefineConstants>
    <Optimize>true</Optimize>
    <NoWarn>;2008</NoWarn>
    <DebugType>pdbonly</DebugType>
    <PlatformTarget>ARM64</PlatformTarget>
    <UseVSHostingProcess>false</UseVSHostingProcess>
    <ErrorReport>prompt</ErrorReport>
    <Prefer32Bit>true</Prefer32Bit>
    <UseDotNetNativeToolchain>true</UseDotNetNativeToolchain>
  </PropertyGroup>
  <PropertyGroup Condition=\\"'$(Configuration)|$(Platform)' == 'Debug|x64'\\">
    <DebugSymbols>true</DebugSymbols>
    <OutputPath>bin\\\\x64\\\\Debug\\\\</OutputPath>
    <DefineConstants>DEBUG;TRACE;NETFX_CORE;WINDOWS_UWP</DefineConstants>
    <NoWarn>;2008</NoWarn>
    <DebugType>full</DebugType>
    <PlatformTarget>x64</PlatformTarget>
    <UseVSHostingProcess>false</UseVSHostingProcess>
    <ErrorReport>prompt</ErrorReport>
    <Prefer32Bit>true</Prefer32Bit>
  </PropertyGroup>
  <PropertyGroup Condition=\\"'$(Configuration)|$(Platform)' == 'Release|x64'\\">
    <OutputPath>bin\\\\x64\\\\Release\\\\</OutputPath>
    <DefineConstants>TRACE;NETFX_CORE;WINDOWS_UWP</DefineConstants>
    <Optimize>true</Optimize>
    <NoWarn>;2008</NoWarn>
    <DebugType>pdbonly</DebugType>
    <PlatformTarget>x64</PlatformTarget>
    <UseVSHostingProcess>false</UseVSHostingProcess>
    <ErrorReport>prompt</ErrorReport>
    <Prefer32Bit>true</Prefer32Bit>
    <UseDotNetNativeToolchain>true</UseDotNetNativeToolchain>
  </PropertyGroup>
  <PropertyGroup>
    <RestoreProjectStyle>PackageReference</RestoreProjectStyle>
  </PropertyGroup>
  <ItemGroup>
    <Compile Include=\\"Properties\\\\AssemblyInfo.cs\\" />
    <Compile Include=\\"ReactNativeModule.cs\\" />
    <Compile Include=\\"ReactPackageProvider.cs\\" />
  </ItemGroup>
  <ItemGroup>
    <PackageReference Include=\\"Microsoft.NETCore.UniversalWindowsPlatform\\">
      <Version>6.2.9</Version>
    </PackageReference>
    <PackageReference Include=\\"ReactNative.Hermes.Windows\\">
      <Version>0.9.0-ms.6</Version>
    </PackageReference>
    <PackageReference Include=\\"Microsoft.ReactNative.Managed\\">
      <Version>0.0.0-canary.409</Version>
    </PackageReference>
  </ItemGroup>
  <PropertyGroup Condition=\\" '$(VisualStudioVersion)' == '' or '$(VisualStudioVersion)' &lt; '16.0' \\">
    <VisualStudioVersion>16.0</VisualStudioVersion>
  </PropertyGroup>
  <Import Project=\\"$(MSBuildExtensionsPath)\\\\Microsoft\\\\WindowsXaml\\\\v$(VisualStudioVersion)\\\\Microsoft.Windows.UI.Xaml.CSharp.targets\\" />
  <ImportGroup Label=\\"ReactNativeWindowsPropertySheets\\">
    <Import Project=\\"$(ReactNativeWindowsDir)\\\\PropertySheets\\\\External\\\\Microsoft.ReactNative.Uwp.CSharpLib.props\\" Condition=\\"Exists('$(ReactNativeWindowsDir)\\\\PropertySheets\\\\External\\\\Microsoft.ReactNative.Uwp.CSharpLib.props')\\" />
  </ImportGroup>
  <ImportGroup Label=\\"ReactNativeWindowsTargets\\">
    <Import Project=\\"$(ReactNativeWindowsDir)\\\\PropertySheets\\\\External\\\\Microsoft.ReactNative.Uwp.CSharpLib.targets\\" Condition=\\"Exists('$(ReactNativeWindowsDir)\\\\PropertySheets\\\\External\\\\Microsoft.ReactNative.Uwp.CSharpLib.targets')\\" />
  </ImportGroup>
  <Target Name=\\"EnsureReactNativeWindowsTargets\\" BeforeTargets=\\"PrepareForBuild\\">
    <PropertyGroup>
      <ErrorText>This project references targets in your node_modules\\\\react-native-windows folder that are missing. The missing file is {0}.</ErrorText>
    </PropertyGroup>
    <Error Condition=\\"!Exists('$(ReactNativeWindowsDir)\\\\PropertySheets\\\\External\\\\Microsoft.ReactNative.Uwp.CSharpLib.props')\\" Text=\\"$([System.String]::Format('$(ErrorText)', '$(ReactNativeWindowsDir)\\\\PropertySheets\\\\External\\\\Microsoft.ReactNative.Uwp.CSharpLib.props'))\\" />
    <Error Condition=\\"!Exists('$(ReactNativeWindowsDir)\\\\PropertySheets\\\\External\\\\Microsoft.ReactNative.Uwp.CSharpLib.targets')\\" Text=\\"$([System.String]::Format('$(ErrorText)', '$(ReactNativeWindowsDir)\\\\PropertySheets\\\\External\\\\Microsoft.ReactNative.Uwp.CSharpLib.targets'))\\" />
  </Target>
</Project>
"
`;

exports[`C# NuGet+WinUI3+Hermes Library: SnapshotApp.sln 1`] = `
"﻿
Microsoft Visual Studio Solution File, Format Version 12.00
# Visual Studio Version 16
VisualStudioVersion = 16.0.29215.179
MinimumVisualStudioVersion = 10.0.40219.1
Project(\\"{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}\\") = \\"SnapshotApp\\", \\"SnapshotApp\\\\SnapshotApp.csproj\\", \\"{EAD1881B-9FA3-43D7-B53B-2B1F6B83884E}\\"
EndProject
Global
	GlobalSection(SolutionConfigurationPlatforms) = preSolution
		Debug|ARM64 = Debug|ARM64
		Debug|x64 = Debug|x64
		Debug|x86 = Debug|x86
		Release|ARM64 = Release|ARM64
		Release|x64 = Release|x64
		Release|x86 = Release|x86
	EndGlobalSection
	GlobalSection(ProjectConfigurationPlatforms) = postSolution
		{EAD1881B-9FA3-43D7-B53B-2B1F6B83884E}.Debug|ARM64.ActiveCfg = Debug|ARM64
		{EAD1881B-9FA3-43D7-B53B-2B1F6B83884E}.Debug|ARM64.Build.0 = Debug|ARM64
		{EAD1881B-9FA3-43D7-B53B-2B1F6B83884E}.Debug|ARM64.Deploy.0 = Debug|ARM64
		{EAD1881B-9FA3-43D7-B53B-2B1F6B83884E}.Debug|x64.ActiveCfg = Debug|x64
		{EAD1881B-9FA3-43D7-B53B-2B1F6B83884E}.Debug|x64.Build.0 = Debug|x64
		{EAD1881B-9FA3-43D7-B53B-2B1F6B83884E}.Debug|x64.Deploy.0 = Debug|x64
		{EAD1881B-9FA3-43D7-B53B-2B1F6B83884E}.Debug|x86.ActiveCfg = Debug|x86
		{EAD1881B-9FA3-43D7-B53B-2B1F6B83884E}.Debug|x86.Build.0 = Debug|x86
		{EAD1881B-9FA3-43D7-B53B-2B1F6B83884E}.Debug|x86.Deploy.0 = Debug|x86
		{EAD1881B-9FA3-43D7-B53B-2B1F6B83884E}.Release|ARM64.ActiveCfg = Release|ARM64
		{EAD1881B-9FA3-43D7-B53B-2B1F6B83884E}.Release|ARM64.Build.0 = Release|ARM64
		{EAD1881B-9FA3-43D7-B53B-2B1F6B83884E}.Release|ARM64.Deploy.0 = Release|ARM64
		{EAD1881B-9FA3-43D7-B53B-2B1F6B83884E}.Release|x64.ActiveCfg = Release|x64
		{EAD1881B-9FA3-43D7-B53B-2B1F6B83884E}.Release|x64.Build.0 = Release|x64
		{EAD1881B-9FA3-43D7-B53B-2B1F6B83884E}.Release|x64.Deploy.0 = Release|x64
		{EAD1881B-9FA3-43D7-B53B-2B1F6B83884E}.Release|x86.ActiveCfg = Release|x86
		{EAD1881B-9FA3-43D7-B53B-2B1F6B83884E}.Release|x86.Build.0 = Release|x86
		{EAD1881B-9FA3-43D7-B53B-2B1F6B83884E}.Release|x86.Deploy.0 = Release|x86
	EndGlobalSection
	GlobalSection(SolutionProperties) = preSolution
		HideSolutionNode = FALSE
	EndGlobalSection
	GlobalSection(ExtensibilityGlobals) = postSolution
		SolutionGuid = {D43FAD39-F619-437D-BB40-04A3982ACB6A}
	EndGlobalSection
EndGlobal
"
`;

exports[`C# WinUI3 Application: App.xaml 1`] = `
"﻿<react:ReactApplication
    x:Class=\\"SnapshotApp.App\\"
    xmlns=\\"http://schemas.microsoft.com/winfx/2006/xaml/presentation\\"
    xmlns:x=\\"http://schemas.microsoft.com/winfx/2006/xaml\\"
    xmlns:local=\\"using:SnapshotApp\\"
    xmlns:react=\\"using:Microsoft.ReactNative\\">
    <Application.Resources>
        <XamlControlsResources xmlns=\\"using:Microsoft.UI.Xaml.Controls\\" />
    </Application.Resources>
</react:ReactApplication>
"
`;

exports[`C# WinUI3 Application: App.xaml.cs 1`] = `
"using Microsoft.ReactNative;
#if USE_WINUI3
using Microsoft.UI.Xaml;
using Microsoft.UI.Xaml.Controls;
#else
using Windows.ApplicationModel.Activation;
using Windows.UI.Xaml;
using Windows.UI.Xaml.Controls;
#endif

namespace SnapshotApp
{
    sealed partial class App : ReactApplication
    {
        public App()
        {
#if BUNDLE
            JavaScriptBundleFile = \\"index.windows\\";
            InstanceSettings.UseWebDebugger = false;
            InstanceSettings.UseFastRefresh = false;
#else
            JavaScriptBundleFile = \\"index\\";
            InstanceSettings.UseWebDebugger = true;
            InstanceSettings.UseFastRefresh = true;
#endif

#if DEBUG
            InstanceSettings.UseDeveloperSupport = true;
#else
            InstanceSettings.UseDeveloperSupport = false;
#endif

            Microsoft.ReactNative.Managed.AutolinkedNativeModules.RegisterAutolinkedNativeModulePackages(PackageProviders); // Includes any autolinked modules

            PackageProviders.Add(new ReactPackageProvider());

            InitializeComponent();
        }

        /// <summary>
        /// Invoked when the application is launched normally by the end user.  Other entry points
        /// will be used such as when the application is launched to open a specific file.
        /// </summary>
        /// <param name=\\"e\\">Details about the launch request and process.</param>
        protected override void OnLaunched(LaunchActivatedEventArgs e)
        {
            base.OnLaunched(e);
            var frame = (Frame)Window.Current.Content;
            frame.Navigate(typeof(MainPage), e.Arguments);
        }

        /// <summary>
        /// Invoked when the application is activated by some means other than normal launching.
        /// </summary>
        protected override void OnActivated(Windows.ApplicationModel.Activation.IActivatedEventArgs e)
        {
            var preActivationContent = Window.Current.Content;
            base.OnActivated(e);
            if (preActivationContent == null && Window.Current != null)
            {
                // Display the initial content
                var frame = (Frame)Window.Current.Content;
                frame.Navigate(typeof(MainPage), null);
            }
        }
    }
}
"
`;

exports[`C# WinUI3 Application: AssemblyInfo.cs 1`] = `
"﻿using System.Reflection;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;

// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
[assembly: AssemblyTitle(\\"SnapshotApp\\")]
[assembly: AssemblyDescription(\\"\\")]
[assembly: AssemblyConfiguration(\\"\\")]
[assembly: AssemblyCompany(\\"\\")]
[assembly: AssemblyProduct(\\"SnapshotApp\\")]
[assembly: AssemblyCopyright(\\"Copyright ©  2019\\")]
[assembly: AssemblyTrademark(\\"\\")]
[assembly: AssemblyCulture(\\"\\")]

// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Build and Revision Numbers 
// by using the '*' as shown below:
// [assembly: AssemblyVersion(\\"1.0.*\\")]
[assembly: AssemblyVersion(\\"1.0.0.0\\")]
[assembly: AssemblyFileVersion(\\"1.0.0.0\\")]
[assembly: ComVisible(false)]"
`;

exports[`C# WinUI3 Application: AutolinkedNativeModules.g.cs 1`] = `
"﻿// AutolinkedNativeModules.g.cs contents generated by \\"react-native autolink-windows\\"

using System.Collections.Generic;

namespace Microsoft.ReactNative.Managed
{
    internal static class AutolinkedNativeModules
    {
        internal static void RegisterAutolinkedNativeModulePackages(IList<IReactPackageProvider> packageProviders)
        { 
        }
    }
}
"
`;

exports[`C# WinUI3 Application: AutolinkedNativeModules.g.props 1`] = `
"<?xml version=\\"1.0\\" encoding=\\"utf-8\\"?>
<Project xmlns=\\"http://schemas.microsoft.com/developer/msbuild/2003\\">
  <!-- AutolinkedNativeModules.g.props contents generated by \\"react-native autolink-windows\\" -->
  <PropertyGroup>
  </PropertyGroup>
</Project>
"
`;

exports[`C# WinUI3 Application: AutolinkedNativeModules.g.targets 1`] = `
"<?xml version=\\"1.0\\" encoding=\\"utf-8\\"?>
<Project xmlns=\\"http://schemas.microsoft.com/developer/msbuild/2003\\">
  <!-- AutolinkedNativeModules.g.targets contents generated by \\"react-native autolink-windows\\" -->
  <ItemGroup>
  </ItemGroup>
</Project>
"
`;

exports[`C# WinUI3 Application: Default.rd.xml 1`] = `
"<!--
    This file contains Runtime Directives used by .NET Native. The defaults here are suitable for most
    developers. However, you can modify these parameters to modify the behavior of the .NET Native
    optimizer.

    Runtime Directives are documented at https://go.microsoft.com/fwlink/?LinkID=391919

    To fully enable reflection for App1.MyClass and all of its public/private members
    <Type Name=\\"App1.MyClass\\" Dynamic=\\"Required All\\"/>

    To enable dynamic creation of the specific instantiation of AppClass<T> over System.Int32
    <TypeInstantiation Name=\\"App1.AppClass\\" Arguments=\\"System.Int32\\" Activate=\\"Required Public\\" />

    Using the Namespace directive to apply reflection policy to all the types in a particular namespace
    <Namespace Name=\\"DataClasses.ViewModels\\" Serialize=\\"All\\" />
-->

<Directives xmlns=\\"http://schemas.microsoft.com/netfx/2013/01/metadata\\">
  <Application>
    <!--
      An Assembly element with Name=\\"*Application*\\" applies to all assemblies in
      the application package. The asterisks are not wildcards.
    -->
    <Assembly Name=\\"*Application*\\" Dynamic=\\"Required All\\" />
    
    
    <!-- Add your application specific runtime directives here. -->
    <Namespace Name=\\"Microsoft.ReactNative\\" Dynamic=\\"Required All\\" MarshalObject=\\"Required All\\" />
    <Namespace Name=\\"Microsoft.ReactNative.Managed\\" Dynamic=\\"Required All\\" MarshalObject=\\"Required All\\" />

  </Application>
</Directives>"
`;

exports[`C# WinUI3 Application: ExperimentalFeatures.props 1`] = `
"<?xml version=\\"1.0\\" encoding=\\"utf-8\\"?>
<Project xmlns=\\"http://schemas.microsoft.com/developer/msbuild/2003\\">

  <!--
    This file contains some important settings that will apply globally for
    your app and *all* native modules your app consumes. These values were
    set when you created the app project, and in some cases cannot be
    simply changed here without recreating a new project.
  -->

  <PropertyGroup Label=\\"Microsoft.ReactNative Experimental Features\\">
    <!--
      Enables default usage of Hermes.
      
      See https://microsoft.github.io/react-native-windows/docs/hermes
    -->
    <UseHermes>false</UseHermes>

    <!--
      Changes compilation to assume use of WinUI 3 instead of System XAML.
      Requires creation of new project.

      See https://microsoft.github.io/react-native-windows/docs/winui3
    -->
    <UseWinUI3>true</UseWinUI3>

    <!--
      Changes compilation to assume use of Microsoft.ReactNative NuGet packages
      instead of building the framework from source.
      Requires creation of new project.

      See https://microsoft.github.io/react-native-windows/docs/nuget
    -->
    <UseExperimentalNuget>false</UseExperimentalNuget>
  
  </PropertyGroup>

</Project>
"
`;

exports[`C# WinUI3 Application: MainPage.xaml 1`] = `
"<Page
    x:Class=\\"SnapshotApp.MainPage\\"
    xmlns=\\"http://schemas.microsoft.com/winfx/2006/xaml/presentation\\"
    xmlns:x=\\"http://schemas.microsoft.com/winfx/2006/xaml\\"
    xmlns:local=\\"using:SnapshotApp\\"
    xmlns:react=\\"using:Microsoft.ReactNative\\"
    xmlns:d=\\"http://schemas.microsoft.com/expression/blend/2008\\"
    xmlns:mc=\\"http://schemas.openxmlformats.org/markup-compatibility/2006\\"
    mc:Ignorable=\\"d\\"
    Background=\\"{ThemeResource ApplicationPageBackgroundThemeBrush}\\">
    <react:ReactRootView 
        x:Name=\\"reactRootView\\"
        ComponentName=\\"SnapshotApp\\"
        Background=\\"{ThemeResource ApplicationPageBackgroundThemeBrush}\\"
        MinHeight=\\"400\\"/>
</Page>
"
`;

exports[`C# WinUI3 Application: MainPage.xaml.cs 1`] = `
"using Microsoft.ReactNative;
using System;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System.Runtime.InteropServices.WindowsRuntime;
using Windows.Foundation;
using Windows.Foundation.Collections;
#if !USE_WINUI3
using Windows.UI.Xaml;
using Windows.UI.Xaml.Controls;
using Windows.UI.Xaml.Controls.Primitives;
using Windows.UI.Xaml.Data;
using Windows.UI.Xaml.Input;
using Windows.UI.Xaml.Media;
using Windows.UI.Xaml.Navigation;
#else
using Microsoft.UI.Xaml;
using Microsoft.UI.Xaml.Controls;
using Microsoft.UI.Xaml.Controls.Primitives;
using Microsoft.UI.Xaml.Data;
using Microsoft.UI.Xaml.Input;
using Microsoft.UI.Xaml.Media;
using Microsoft.UI.Xaml.Navigation;
#endif

// The Blank Page item template is documented at https://go.microsoft.com/fwlink/?LinkId=234238

namespace SnapshotApp
{
    /// <summary>
    /// An empty page that can be used on its own or navigated to within a Frame.
    /// </summary>
    public sealed partial class MainPage : Page
    {
        public MainPage()
        {
            this.InitializeComponent();
            var app = Application.Current as App;
            reactRootView.ReactNativeHost = app.Host;
        }
    }
}
"
`;

exports[`C# WinUI3 Application: NuGet.Config 1`] = `
"<?xml version=\\"1.0\\" encoding=\\"utf-8\\"?>
<configuration>
  <config>
    <add key=\\"repositoryPath\\" value=\\"packages\\" />
  </config>
  <packageSources>
    <clear />
    <add key=\\"react-native\\" value=\\"https://pkgs.dev.azure.com/ms/react-native/_packaging/react-native-public/nuget/v3/index.json\\" />
    <add key=\\"Nuget.org\\" value=\\"https://api.nuget.org/v3/index.json\\" />
  </packageSources>
  <disabledPackageSources>
    <clear />
  </disabledPackageSources>  
</configuration>
"
`;

exports[`C# WinUI3 Application: Package.appxmanifest 1`] = `
"﻿<?xml version=\\"1.0\\" encoding=\\"utf-8\\"?>

<Package
  xmlns=\\"http://schemas.microsoft.com/appx/manifest/foundation/windows10\\"
  xmlns:mp=\\"http://schemas.microsoft.com/appx/2014/phone/manifest\\"
  xmlns:uap=\\"http://schemas.microsoft.com/appx/manifest/uap/windows10\\"
  IgnorableNamespaces=\\"uap mp\\">

  <Identity
    Name=\\"56f3a74d-c94b-4cc2-8082-c8c891b55791\\"
    Publisher=\\"CN=nickg\\"
    Version=\\"1.0.0.0\\" />

  <mp:PhoneIdentity PhoneProductId=\\"56f3a74d-c94b-4cc2-8082-c8c891b55791\\" PhonePublisherId=\\"00000000-0000-0000-0000-000000000000\\"/>

  <Properties>
    <DisplayName>SnapshotApp</DisplayName>
    <PublisherDisplayName>nickg</PublisherDisplayName>
    <Logo>Assets\\\\StoreLogo.png</Logo>
  </Properties>

  <Dependencies>
    <TargetDeviceFamily Name=\\"Windows.Universal\\" MinVersion=\\"10.0.0.0\\" MaxVersionTested=\\"10.0.0.0\\" />
  </Dependencies>

  <Resources>
    <Resource Language=\\"x-generate\\"/>
  </Resources>

  <Applications>
    <Application
      Id=\\"App\\"
      Executable=\\"$targetnametoken$.exe\\"
      EntryPoint=\\"SnapshotApp.App\\">
      <uap:VisualElements
        DisplayName=\\"SnapshotApp\\"
        Square150x150Logo=\\"Assets\\\\Square150x150Logo.png\\"
        Square44x44Logo=\\"Assets\\\\Square44x44Logo.png\\"
        Description=\\"SnapshotApp\\"
        BackgroundColor=\\"transparent\\">
        <uap:DefaultTile Wide310x150Logo=\\"Assets\\\\Wide310x150Logo.png\\"/>
        <uap:SplashScreen Image=\\"Assets\\\\SplashScreen.png\\" />
      </uap:VisualElements>
    </Application>
  </Applications>

  <Capabilities>
    <Capability Name=\\"internetClient\\" />
  </Capabilities>
</Package>"
`;

exports[`C# WinUI3 Application: ReactPackageProvider.cs 1`] = `
"using Microsoft.ReactNative;

namespace SnapshotApp
{
    public partial class ReactPackageProvider : IReactPackageProvider
    {
        public void CreatePackage(IReactPackageBuilder packageBuilder)
        {
            CreatePackageImplementation(packageBuilder);
        }

        /// <summary>
        /// This method is implemented by the C# code generator
        /// </summary>
        partial void CreatePackageImplementation(IReactPackageBuilder packageBuilder);
    }
}
"
`;

exports[`C# WinUI3 Application: SnapshotApp.csproj 1`] = `
"﻿<?xml version=\\"1.0\\" encoding=\\"utf-8\\"?>
<Project ToolsVersion=\\"Current\\" DefaultTargets=\\"Build\\" xmlns=\\"http://schemas.microsoft.com/developer/msbuild/2003\\">
  <Import Project=\\"$(MSBuildExtensionsPath)\\\\$(MSBuildToolsVersion)\\\\Microsoft.Common.props\\" Condition=\\"Exists('$(MSBuildExtensionsPath)\\\\$(MSBuildToolsVersion)\\\\Microsoft.Common.props')\\" />
  <Import Project=\\"$(SolutionDir)\\\\ExperimentalFeatures.props\\" Condition=\\"Exists('$(SolutionDir)\\\\ExperimentalFeatures.props')\\" />
  <PropertyGroup Label=\\"ReactNativeWindowsProps\\">
    <ReactNativeWindowsDir Condition=\\"'$(ReactNativeWindowsDir)' == ''\\">$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), 'node_modules\\\\react-native-windows\\\\package.json'))\\\\node_modules\\\\react-native-windows\\\\</ReactNativeWindowsDir>
  </PropertyGroup>
  <PropertyGroup>
    <Configuration Condition=\\" '$(Configuration)' == '' \\">Debug</Configuration>
    <Platform Condition=\\" '$(Platform)' == '' \\">x86</Platform>
    <ProjectGuid>{E56836E7-9109-4082-BFE9-2566740EDF25}</ProjectGuid>
    <OutputType>AppContainerExe</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>SnapshotApp</RootNamespace>
    <AssemblyName>SnapshotApp</AssemblyName>
    <DefaultLanguage>en-US</DefaultLanguage>
    <TargetPlatformIdentifier>UAP</TargetPlatformIdentifier>
    <TargetPlatformVersion Condition=\\" '$(TargetPlatformVersion)' == '' \\">10.0.19041.0</TargetPlatformVersion>
    <TargetPlatformMinVersion>10.0.16299.0</TargetPlatformMinVersion>
    <MinimumVisualStudioVersion>16.0</MinimumVisualStudioVersion>
    <FileAlignment>512</FileAlignment>
    <ProjectTypeGuids>{A5A43C5B-DE2A-4C0C-9213-0A381AF9435A};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <WindowsXamlEnableOverview>true</WindowsXamlEnableOverview>
    <AppxGeneratePrisForPortableLibrariesEnabled>false</AppxGeneratePrisForPortableLibrariesEnabled>
    <LangVersion>7.3</LangVersion>
  </PropertyGroup>
  <PropertyGroup Condition=\\"'$(Configuration)|$(Platform)' == 'Debug|x86'\\">
    <DebugSymbols>true</DebugSymbols>
    <OutputPath>bin\\\\x86\\\\Debug\\\\</OutputPath>
    <DefineConstants>DEBUG;TRACE;NETFX_CORE;WINDOWS_UWP</DefineConstants>
    <NoWarn>;2008</NoWarn>
    <DebugType>full</DebugType>
    <PlatformTarget>x86</PlatformTarget>
    <UseVSHostingProcess>false</UseVSHostingProcess>
    <ErrorReport>prompt</ErrorReport>
    <Prefer32Bit>true</Prefer32Bit>
  </PropertyGroup>
  <PropertyGroup Condition=\\"'$(Configuration)|$(Platform)' == 'Release|x86'\\">
    <OutputPath>bin\\\\x86\\\\Release\\\\</OutputPath>
    <DefineConstants>TRACE;NETFX_CORE;WINDOWS_UWP</DefineConstants>
    <Optimize>true</Optimize>
    <NoWarn>;2008</NoWarn>
    <DebugType>pdbonly</DebugType>
    <PlatformTarget>x86</PlatformTarget>
    <UseVSHostingProcess>false</UseVSHostingProcess>
    <ErrorReport>prompt</ErrorReport>
    <Prefer32Bit>true</Prefer32Bit>
    <UseDotNetNativeToolchain>true</UseDotNetNativeToolchain>
  </PropertyGroup>
  <PropertyGroup Condition=\\"'$(Configuration)|$(Platform)' == 'Debug|ARM64'\\">
    <DebugSymbols>true</DebugSymbols>
    <OutputPath>bin\\\\ARM64\\\\Debug\\\\</OutputPath>
    <DefineConstants>DEBUG;TRACE;NETFX_CORE;WINDOWS_UWP</DefineConstants>
    <NoWarn>;2008</NoWarn>
    <DebugType>full</DebugType>
    <PlatformTarget>ARM64</PlatformTarget>
    <UseVSHostingProcess>false</UseVSHostingProcess>
    <ErrorReport>prompt</ErrorReport>
    <Prefer32Bit>true</Prefer32Bit>
  </PropertyGroup>
  <PropertyGroup Condition=\\"'$(Configuration)|$(Platform)' == 'Release|ARM64'\\">
    <OutputPath>bin\\\\ARM64\\\\Release\\\\</OutputPath>
    <DefineConstants>TRACE;NETFX_CORE;WINDOWS_UWP</DefineConstants>
    <Optimize>true</Optimize>
    <NoWarn>;2008</NoWarn>
    <DebugType>pdbonly</DebugType>
    <PlatformTarget>ARM64</PlatformTarget>
    <UseVSHostingProcess>false</UseVSHostingProcess>
    <ErrorReport>prompt</ErrorReport>
    <Prefer32Bit>true</Prefer32Bit>
    <UseDotNetNativeToolchain>true</UseDotNetNativeToolchain>
  </PropertyGroup>
  <PropertyGroup Condition=\\"'$(Configuration)|$(Platform)' == 'Debug|x64'\\">
    <DebugSymbols>true</DebugSymbols>
    <OutputPath>bin\\\\x64\\\\Debug\\\\</OutputPath>
    <DefineConstants>DEBUG;TRACE;NETFX_CORE;WINDOWS_UWP</DefineConstants>
    <NoWarn>;2008</NoWarn>
    <DebugType>full</DebugType>
    <PlatformTarget>x64</PlatformTarget>
    <UseVSHostingProcess>false</UseVSHostingProcess>
    <ErrorReport>prompt</ErrorReport>
    <Prefer32Bit>true</Prefer32Bit>
  </PropertyGroup>
  <PropertyGroup Condition=\\"'$(Configuration)|$(Platform)' == 'Release|x64'\\">
    <OutputPath>bin\\\\x64\\\\Release\\\\</OutputPath>
    <DefineConstants>TRACE;NETFX_CORE;WINDOWS_UWP</DefineConstants>
    <Optimize>true</Optimize>
    <NoWarn>;2008</NoWarn>
    <DebugType>pdbonly</DebugType>
    <PlatformTarget>x64</PlatformTarget>
    <UseVSHostingProcess>false</UseVSHostingProcess>
    <ErrorReport>prompt</ErrorReport>
    <Prefer32Bit>true</Prefer32Bit>
    <UseDotNetNativeToolchain>true</UseDotNetNativeToolchain>
  </PropertyGroup>
  <PropertyGroup>
    <RestoreProjectStyle>PackageReference</RestoreProjectStyle>
  </PropertyGroup>
  <ItemGroup>
    <Compile Include=\\"App.xaml.cs\\">
      <DependentUpon>App.xaml</DependentUpon>
    </Compile>
    <Compile Include=\\"MainPage.xaml.cs\\">
      <DependentUpon>MainPage.xaml</DependentUpon>
    </Compile>
    <Compile Include=\\"Properties\\\\AssemblyInfo.cs\\" />
    <Compile Include=\\"AutolinkedNativeModules.g.cs\\" />
    <Compile Include=\\"ReactPackageProvider.cs\\" />
  </ItemGroup>
  <ItemGroup>
    <AppxManifest Include=\\"Package.appxmanifest\\">
      <SubType>Designer</SubType>
    </AppxManifest>
  </ItemGroup>
  <ItemGroup>
    <Content Include=\\"Properties\\\\Default.rd.xml\\" />
    <Content Include=\\"Assets\\\\LockScreenLogo.scale-200.png\\" />
    <Content Include=\\"Assets\\\\SplashScreen.scale-200.png\\" />
    <Content Include=\\"Assets\\\\Square150x150Logo.scale-200.png\\" />
    <Content Include=\\"Assets\\\\Square44x44Logo.scale-200.png\\" />
    <Content Include=\\"Assets\\\\Square44x44Logo.targetsize-24_altform-unplated.png\\" />
    <Content Include=\\"Assets\\\\StoreLogo.png\\" />
    <Content Include=\\"Assets\\\\Wide310x150Logo.scale-200.png\\" />
  </ItemGroup>
  <ItemGroup>
    <ApplicationDefinition Include=\\"App.xaml\\">
      <Generator>MSBuild:Compile</Generator>
      <SubType>Designer</SubType>
    </ApplicationDefinition>
    <Page Include=\\"MainPage.xaml\\">
      <Generator>MSBuild:Compile</Generator>
      <SubType>Designer</SubType>
    </Page>
  </ItemGroup>
  <PropertyGroup Condition=\\" '$(VisualStudioVersion)' == '' or '$(VisualStudioVersion)' &lt; '16.0' \\">
    <VisualStudioVersion>16.0</VisualStudioVersion>
  </PropertyGroup>
  <Import Project=\\"$(MSBuildExtensionsPath)\\\\Microsoft\\\\WindowsXaml\\\\v$(VisualStudioVersion)\\\\Microsoft.Windows.UI.Xaml.CSharp.targets\\" />
  <ImportGroup Label=\\"ReactNativeWindowsPropertySheets\\">
    <Import Project=\\"$(ReactNativeWindowsDir)\\\\PropertySheets\\\\External\\\\Microsoft.ReactNative.Uwp.CSharpApp.props\\" Condition=\\"Exists('$(ReactNativeWindowsDir)\\\\PropertySheets\\\\External\\\\Microsoft.ReactNative.Uwp.CSharpApp.props')\\" />
  </ImportGroup>
  <Choose>
    <When Condition=\\"'$(UseWinUI3)'!='true'\\">
      <ItemGroup>
        <PackageReference Include=\\"Microsoft.UI.Xaml\\" >
          <Version>$(WinUI2xVersion)</Version>
        </PackageReference>
      </ItemGroup>
    </When>
    <Otherwise>
      <ItemGroup>
        <PackageReference Include=\\"Microsoft.WinUI\\">
          <Version>$(WinUI3Version)</Version>
        </PackageReference>
      </ItemGroup>
    </Otherwise>
  </Choose>
  <ItemGroup>
    <PackageReference Include=\\"Microsoft.NETCore.UniversalWindowsPlatform\\">
      <Version>6.2.9</Version>
    </PackageReference>
    <PackageReference Include=\\"ReactNative.Hermes.Windows\\">
      <Version>0.9.0-ms.6</Version>
    </PackageReference>
  </ItemGroup>
  <ImportGroup Label=\\"ReactNativeWindowsTargets\\">
    <Import Project=\\"$(ReactNativeWindowsDir)\\\\PropertySheets\\\\External\\\\Microsoft.ReactNative.Uwp.CSharpApp.targets\\" Condition=\\"Exists('$(ReactNativeWindowsDir)\\\\PropertySheets\\\\External\\\\Microsoft.ReactNative.Uwp.CSharpApp.targets')\\" />
  </ImportGroup>
  <Target Name=\\"EnsureReactNativeWindowsTargets\\" BeforeTargets=\\"PrepareForBuild\\">
    <PropertyGroup>
      <ErrorText>This project references targets in your node_modules\\\\react-native-windows folder that are missing. The missing file is {0}.</ErrorText>
    </PropertyGroup>
    <Error Condition=\\"!Exists('$(ReactNativeWindowsDir)\\\\PropertySheets\\\\External\\\\Microsoft.ReactNative.Uwp.CSharpApp.props')\\" Text=\\"$([System.String]::Format('$(ErrorText)', '$(ReactNativeWindowsDir)\\\\PropertySheets\\\\External\\\\Microsoft.ReactNative.Uwp.CSharpApp.props'))\\" />
    <Error Condition=\\"!Exists('$(ReactNativeWindowsDir)\\\\PropertySheets\\\\External\\\\Microsoft.ReactNative.Uwp.CSharpApp.targets')\\" Text=\\"$([System.String]::Format('$(ErrorText)', '$(ReactNativeWindowsDir)\\\\PropertySheets\\\\External\\\\Microsoft.ReactNative.Uwp.CSharpApp.targets'))\\" />
  </Target>
</Project>
"
`;

exports[`C# WinUI3 Application: SnapshotApp.sln 1`] = `
"﻿
Microsoft Visual Studio Solution File, Format Version 12.00
# Visual Studio Version 16
VisualStudioVersion = 16.0.29215.179
MinimumVisualStudioVersion = 10.0.40219.1
Project(\\"{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}\\") = \\"SnapshotApp\\", \\"SnapshotApp\\\\SnapshotApp.csproj\\", \\"{E56836E7-9109-4082-BFE9-2566740EDF25}\\"
EndProject
Project(\\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\\") = \\"Folly\\", \\"..\\\\node_modules\\\\react-native-windows\\\\Folly\\\\Folly.vcxproj\\", \\"{A990658C-CE31-4BCC-976F-0FC6B1AF693D}\\"
EndProject
Project(\\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\\") = \\"fmt\\", \\"..\\\\node_modules\\\\react-native-windows\\\\fmt\\\\fmt.vcxproj\\", \\"{14B93DC8-FD93-4A6D-81CB-8BC96644501C}\\"
EndProject
Project(\\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\\") = \\"ReactCommon\\", \\"..\\\\node_modules\\\\react-native-windows\\\\ReactCommon\\\\ReactCommon.vcxproj\\", \\"{A9D95A91-4DB7-4F72-BEB6-FE8A5C89BFBD}\\"
	ProjectSection(ProjectDependencies) = postProject
		{A990658C-CE31-4BCC-976F-0FC6B1AF693D} = {A990658C-CE31-4BCC-976F-0FC6B1AF693D}
	EndProjectSection
EndProject
Project(\\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\\") = \\"Chakra\\", \\"..\\\\node_modules\\\\react-native-windows\\\\Chakra\\\\Chakra.vcxitems\\", \\"{C38970C0-5FBF-4D69-90D8-CBAC225AE895}\\"
EndProject
Project(\\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\\") = \\"Microsoft.ReactNative\\", \\"..\\\\node_modules\\\\react-native-windows\\\\Microsoft.ReactNative\\\\Microsoft.ReactNative.vcxproj\\", \\"{F7D32BD0-2749-483E-9A0D-1635EF7E3136}\\"
EndProject
Project(\\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\\") = \\"Microsoft.ReactNative.Cxx\\", \\"..\\\\node_modules\\\\react-native-windows\\\\Microsoft.ReactNative.Cxx\\\\Microsoft.ReactNative.Cxx.vcxitems\\", \\"{DA8B35B3-DA00-4B02-BDE6-6A397B3FD46B}\\"
EndProject
Project(\\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\\") = \\"Common\\", \\"..\\\\node_modules\\\\react-native-windows\\\\Common\\\\Common.vcxproj\\", \\"{FCA38F3C-7C73-4C47-BE4E-32F77FA8538D}\\"
EndProject
Project(\\"{2150E333-8FDC-42A3-9474-1A3956D46DE8}\\") = \\"ReactNative\\", \\"ReactNative\\", \\"{5EA20F54-880A-49F3-99FA-4B3FE54E8AB1}\\"
EndProject
Project(\\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\\") = \\"Microsoft.ReactNative.Shared\\", \\"..\\\\node_modules\\\\react-native-windows\\\\Shared\\\\Shared.vcxitems\\", \\"{2049DBE9-8D13-42C9-AE4B-413AE38FFFD0}\\"
EndProject
Project(\\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\\") = \\"Mso\\", \\"..\\\\node_modules\\\\react-native-windows\\\\Mso\\\\Mso.vcxitems\\", \\"{84E05BFA-CBAF-4F0D-BFB6-4CE85742A57E}\\"
EndProject
Project(\\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\\") = \\"Include\\", \\"..\\\\node_modules\\\\react-native-windows\\\\include\\\\Include.vcxitems\\", \\"{EF074BA1-2D54-4D49-A28E-5E040B47CD2E}\\"
EndProject
Project(\\"{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}\\") = \\"Microsoft.ReactNative.Managed\\", \\"..\\\\node_modules\\\\react-native-windows\\\\Microsoft.ReactNative.Managed\\\\Microsoft.ReactNative.Managed.csproj\\", \\"{F2824844-CE15-4242-9420-308923CD76C3}\\"
EndProject
Project(\\"{9A19103F-16F7-4668-BE54-9A1E7A4F7556}\\") = \\"Microsoft.ReactNative.Managed.CodeGen\\", \\"..\\\\node_modules\\\\react-native-windows\\\\Microsoft.ReactNative.Managed.CodeGen\\\\Microsoft.ReactNative.Managed.CodeGen.csproj\\", \\"{ADED4FBE-887D-4271-AF24-F0823BCE7961}\\"
EndProject
Global
	GlobalSection(SharedMSBuildProjectFiles) = preSolution
		..\\\\node_modules\\\\react-native-windows\\\\Shared\\\\Shared.vcxitems*{2049dbe9-8d13-42c9-ae4b-413ae38fffd0}*SharedItemsImports = 9
		..\\\\node_modules\\\\react-native-windows\\\\Mso\\\\Mso.vcxitems*{84e05bfa-cbaf-4f0d-bfb6-4ce85742a57e}*SharedItemsImports = 9
		..\\\\node_modules\\\\react-native-windows\\\\Chakra\\\\Chakra.vcxitems*{c38970c0-5fbf-4d69-90d8-cbac225ae895}*SharedItemsImports = 9
		..\\\\node_modules\\\\react-native-windows\\\\Microsoft.ReactNative.Cxx\\\\Microsoft.ReactNative.Cxx.vcxitems*{da8b35b3-da00-4b02-bde6-6a397b3fd46b}*SharedItemsImports = 9
		..\\\\node_modules\\\\react-native-windows\\\\include\\\\Include.vcxitems*{ef074ba1-2d54-4d49-a28e-5e040b47cd2e}*SharedItemsImports = 9
		..\\\\node_modules\\\\react-native-windows\\\\Chakra\\\\Chakra.vcxitems*{f7d32bd0-2749-483e-9a0d-1635ef7e3136}*SharedItemsImports = 4
		..\\\\node_modules\\\\react-native-windows\\\\Microsoft.ReactNative.Cxx\\\\Microsoft.ReactNative.Cxx.vcxitems*{f7d32bd0-2749-483e-9a0d-1635ef7e3136}*SharedItemsImports = 4
		..\\\\node_modules\\\\react-native-windows\\\\Mso\\\\Mso.vcxitems*{f7d32bd0-2749-483e-9a0d-1635ef7e3136}*SharedItemsImports = 4
		..\\\\node_modules\\\\react-native-windows\\\\Shared\\\\Shared.vcxitems*{f7d32bd0-2749-483e-9a0d-1635ef7e3136}*SharedItemsImports = 4
	EndGlobalSection
	GlobalSection(SolutionConfigurationPlatforms) = preSolution
		Debug|ARM64 = Debug|ARM64
		Debug|x64 = Debug|x64
		Debug|x86 = Debug|x86
		Release|ARM64 = Release|ARM64
		Release|x64 = Release|x64
		Release|x86 = Release|x86
	EndGlobalSection
	GlobalSection(ProjectConfigurationPlatforms) = postSolution
		{E56836E7-9109-4082-BFE9-2566740EDF25}.Debug|ARM64.ActiveCfg = Debug|ARM64
		{E56836E7-9109-4082-BFE9-2566740EDF25}.Debug|ARM64.Build.0 = Debug|ARM64
		{E56836E7-9109-4082-BFE9-2566740EDF25}.Debug|ARM64.Deploy.0 = Debug|ARM64
		{E56836E7-9109-4082-BFE9-2566740EDF25}.Debug|x64.ActiveCfg = Debug|x64
		{E56836E7-9109-4082-BFE9-2566740EDF25}.Debug|x64.Build.0 = Debug|x64
		{E56836E7-9109-4082-BFE9-2566740EDF25}.Debug|x64.Deploy.0 = Debug|x64
		{E56836E7-9109-4082-BFE9-2566740EDF25}.Debug|x86.ActiveCfg = Debug|x86
		{E56836E7-9109-4082-BFE9-2566740EDF25}.Debug|x86.Build.0 = Debug|x86
		{E56836E7-9109-4082-BFE9-2566740EDF25}.Debug|x86.Deploy.0 = Debug|x86
		{E56836E7-9109-4082-BFE9-2566740EDF25}.Release|ARM64.ActiveCfg = Release|ARM64
		{E56836E7-9109-4082-BFE9-2566740EDF25}.Release|ARM64.Build.0 = Release|ARM64
		{E56836E7-9109-4082-BFE9-2566740EDF25}.Release|ARM64.Deploy.0 = Release|ARM64
		{E56836E7-9109-4082-BFE9-2566740EDF25}.Release|x64.ActiveCfg = Release|x64
		{E56836E7-9109-4082-BFE9-2566740EDF25}.Release|x64.Build.0 = Release|x64
		{E56836E7-9109-4082-BFE9-2566740EDF25}.Release|x64.Deploy.0 = Release|x64
		{E56836E7-9109-4082-BFE9-2566740EDF25}.Release|x86.ActiveCfg = Release|x86
		{E56836E7-9109-4082-BFE9-2566740EDF25}.Release|x86.Build.0 = Release|x86
		{E56836E7-9109-4082-BFE9-2566740EDF25}.Release|x86.Deploy.0 = Release|x86
		{A990658C-CE31-4BCC-976F-0FC6B1AF693D}.Debug|ARM64.ActiveCfg = Debug|ARM64
		{A990658C-CE31-4BCC-976F-0FC6B1AF693D}.Debug|ARM64.Build.0 = Debug|ARM64
		{A990658C-CE31-4BCC-976F-0FC6B1AF693D}.Debug|x64.ActiveCfg = Debug|x64
		{A990658C-CE31-4BCC-976F-0FC6B1AF693D}.Debug|x64.Build.0 = Debug|x64
		{A990658C-CE31-4BCC-976F-0FC6B1AF693D}.Debug|x86.ActiveCfg = Debug|Win32
		{A990658C-CE31-4BCC-976F-0FC6B1AF693D}.Debug|x86.Build.0 = Debug|Win32
		{A990658C-CE31-4BCC-976F-0FC6B1AF693D}.Release|ARM64.ActiveCfg = Release|ARM64
		{A990658C-CE31-4BCC-976F-0FC6B1AF693D}.Release|ARM64.Build.0 = Release|ARM64
		{A990658C-CE31-4BCC-976F-0FC6B1AF693D}.Release|x64.ActiveCfg = Release|x64
		{A990658C-CE31-4BCC-976F-0FC6B1AF693D}.Release|x64.Build.0 = Release|x64
		{A990658C-CE31-4BCC-976F-0FC6B1AF693D}.Release|x86.ActiveCfg = Release|Win32
		{A990658C-CE31-4BCC-976F-0FC6B1AF693D}.Release|x86.Build.0 = Release|Win32
		{A9D95A91-4DB7-4F72-BEB6-FE8A5C89BFBD}.Debug|ARM64.ActiveCfg = Debug|ARM64
		{A9D95A91-4DB7-4F72-BEB6-FE8A5C89BFBD}.Debug|ARM64.Build.0 = Debug|ARM64
		{A9D95A91-4DB7-4F72-BEB6-FE8A5C89BFBD}.Debug|x64.ActiveCfg = Debug|x64
		{A9D95A91-4DB7-4F72-BEB6-FE8A5C89BFBD}.Debug|x64.Build.0 = Debug|x64
		{A9D95A91-4DB7-4F72-BEB6-FE8A5C89BFBD}.Debug|x86.ActiveCfg = Debug|Win32
		{A9D95A91-4DB7-4F72-BEB6-FE8A5C89BFBD}.Debug|x86.Build.0 = Debug|Win32
		{A9D95A91-4DB7-4F72-BEB6-FE8A5C89BFBD}.Release|ARM64.ActiveCfg = Release|ARM64
		{A9D95A91-4DB7-4F72-BEB6-FE8A5C89BFBD}.Release|ARM64.Build.0 = Release|ARM64
		{A9D95A91-4DB7-4F72-BEB6-FE8A5C89BFBD}.Release|x64.ActiveCfg = Release|x64
		{A9D95A91-4DB7-4F72-BEB6-FE8A5C89BFBD}.Release|x64.Build.0 = Release|x64
		{A9D95A91-4DB7-4F72-BEB6-FE8A5C89BFBD}.Release|x86.ActiveCfg = Release|Win32
		{A9D95A91-4DB7-4F72-BEB6-FE8A5C89BFBD}.Release|x86.Build.0 = Release|Win32
		{F7D32BD0-2749-483E-9A0D-1635EF7E3136}.Debug|ARM64.ActiveCfg = Debug|ARM64
		{F7D32BD0-2749-483E-9A0D-1635EF7E3136}.Debug|ARM64.Build.0 = Debug|ARM64
		{F7D32BD0-2749-483E-9A0D-1635EF7E3136}.Debug|x64.ActiveCfg = Debug|x64
		{F7D32BD0-2749-483E-9A0D-1635EF7E3136}.Debug|x64.Build.0 = Debug|x64
		{F7D32BD0-2749-483E-9A0D-1635EF7E3136}.Debug|x86.ActiveCfg = Debug|Win32
		{F7D32BD0-2749-483E-9A0D-1635EF7E3136}.Debug|x86.Build.0 = Debug|Win32
		{F7D32BD0-2749-483E-9A0D-1635EF7E3136}.Release|ARM64.ActiveCfg = Release|ARM64
		{F7D32BD0-2749-483E-9A0D-1635EF7E3136}.Release|ARM64.Build.0 = Release|ARM64
		{F7D32BD0-2749-483E-9A0D-1635EF7E3136}.Release|x64.ActiveCfg = Release|x64
		{F7D32BD0-2749-483E-9A0D-1635EF7E3136}.Release|x64.Build.0 = Release|x64
		{F7D32BD0-2749-483E-9A0D-1635EF7E3136}.Release|x86.ActiveCfg = Release|Win32
		{F7D32BD0-2749-483E-9A0D-1635EF7E3136}.Release|x86.Build.0 = Release|Win32
		{FCA38F3C-7C73-4C47-BE4E-32F77FA8538D}.Debug|ARM64.ActiveCfg = Debug|ARM64
		{FCA38F3C-7C73-4C47-BE4E-32F77FA8538D}.Debug|ARM64.Build.0 = Debug|ARM64
		{FCA38F3C-7C73-4C47-BE4E-32F77FA8538D}.Debug|x64.ActiveCfg = Debug|x64
		{FCA38F3C-7C73-4C47-BE4E-32F77FA8538D}.Debug|x64.Build.0 = Debug|x64
		{FCA38F3C-7C73-4C47-BE4E-32F77FA8538D}.Debug|x86.ActiveCfg = Debug|Win32
		{FCA38F3C-7C73-4C47-BE4E-32F77FA8538D}.Debug|x86.Build.0 = Debug|Win32
		{FCA38F3C-7C73-4C47-BE4E-32F77FA8538D}.Release|ARM64.ActiveCfg = Release|ARM64
		{FCA38F3C-7C73-4C47-BE4E-32F77FA8538D}.Release|ARM64.Build.0 = Release|ARM64
		{FCA38F3C-7C73-4C47-BE4E-32F77FA8538D}.Release|x64.ActiveCfg = Release|x64
		{FCA38F3C-7C73-4C47-BE4E-32F77FA8538D}.Release|x64.Build.0 = Release|x64
		{FCA38F3C-7C73-4C47-BE4E-32F77FA8538D}.Release|x86.ActiveCfg = Release|Win32
		{FCA38F3C-7C73-4C47-BE4E-32F77FA8538D}.Release|x86.Build.0 = Release|Win32
		{F2824844-CE15-4242-9420-308923CD76C3}.Debug|ARM64.ActiveCfg = Debug|ARM64
		{F2824844-CE15-4242-9420-308923CD76C3}.Debug|ARM64.Build.0 = Debug|ARM64
		{F2824844-CE15-4242-9420-308923CD76C3}.Debug|x64.ActiveCfg = Debug|x64
		{F2824844-CE15-4242-9420-308923CD76C3}.Debug|x64.Build.0 = Debug|x64
		{F2824844-CE15-4242-9420-308923CD76C3}.Debug|x86.ActiveCfg = Debug|x86
		{F2824844-CE15-4242-9420-308923CD76C3}.Debug|x86.Build.0 = Debug|x86
		{F2824844-CE15-4242-9420-308923CD76C3}.Release|ARM64.ActiveCfg = Release|ARM64
		{F2824844-CE15-4242-9420-308923CD76C3}.Release|ARM64.Build.0 = Release|ARM64
		{F2824844-CE15-4242-9420-308923CD76C3}.Release|x64.ActiveCfg = Release|x64
		{F2824844-CE15-4242-9420-308923CD76C3}.Release|x64.Build.0 = Release|x64
		{F2824844-CE15-4242-9420-308923CD76C3}.Release|x86.ActiveCfg = Release|x86
		{F2824844-CE15-4242-9420-308923CD76C3}.Release|x86.Build.0 = Release|x86
		{ADED4FBE-887D-4271-AF24-F0823BCE7961}.Debug|ARM64.ActiveCfg = Debug|ARM64
		{ADED4FBE-887D-4271-AF24-F0823BCE7961}.Debug|ARM64.Build.0 = Debug|ARM64
		{ADED4FBE-887D-4271-AF24-F0823BCE7961}.Debug|x64.ActiveCfg = Debug|x64
		{ADED4FBE-887D-4271-AF24-F0823BCE7961}.Debug|x64.Build.0 = Debug|x64
		{ADED4FBE-887D-4271-AF24-F0823BCE7961}.Debug|x86.ActiveCfg = Debug|x86
		{ADED4FBE-887D-4271-AF24-F0823BCE7961}.Debug|x86.Build.0 = Debug|x86
		{ADED4FBE-887D-4271-AF24-F0823BCE7961}.Release|ARM64.ActiveCfg = Release|ARM64
		{ADED4FBE-887D-4271-AF24-F0823BCE7961}.Release|ARM64.Build.0 = Release|ARM64
		{ADED4FBE-887D-4271-AF24-F0823BCE7961}.Release|x64.ActiveCfg = Release|x64
		{ADED4FBE-887D-4271-AF24-F0823BCE7961}.Release|x64.Build.0 = Release|x64
		{ADED4FBE-887D-4271-AF24-F0823BCE7961}.Release|x86.ActiveCfg = Release|x86
		{ADED4FBE-887D-4271-AF24-F0823BCE7961}.Release|x86.Build.0 = Release|x86
		{14B93DC8-FD93-4A6D-81CB-8BC96644501C}.Debug|ARM64.ActiveCfg = Debug|ARM64
		{14B93DC8-FD93-4A6D-81CB-8BC96644501C}.Debug|ARM64.Build.0 = Debug|ARM64
		{14B93DC8-FD93-4A6D-81CB-8BC96644501C}.Debug|x64.ActiveCfg = Debug|x64
		{14B93DC8-FD93-4A6D-81CB-8BC96644501C}.Debug|x64.Build.0 = Debug|x64
		{14B93DC8-FD93-4A6D-81CB-8BC96644501C}.Debug|x86.ActiveCfg = Debug|Win32
		{14B93DC8-FD93-4A6D-81CB-8BC96644501C}.Debug|x86.Build.0 = Debug|Win32
		{14B93DC8-FD93-4A6D-81CB-8BC96644501C}.Debug|x86.Deploy.0 = Debug|Win32
		{14B93DC8-FD93-4A6D-81CB-8BC96644501C}.Release|ARM64.ActiveCfg = Release|ARM64
		{14B93DC8-FD93-4A6D-81CB-8BC96644501C}.Release|ARM64.Build.0 = Release|ARM64
		{14B93DC8-FD93-4A6D-81CB-8BC96644501C}.Release|x64.ActiveCfg = Release|x64
		{14B93DC8-FD93-4A6D-81CB-8BC96644501C}.Release|x64.Build.0 = Release|x64
		{14B93DC8-FD93-4A6D-81CB-8BC96644501C}.Release|x86.ActiveCfg = Release|Win32
		{14B93DC8-FD93-4A6D-81CB-8BC96644501C}.Release|x86.Build.0 = Release|Win32
		{14B93DC8-FD93-4A6D-81CB-8BC96644501C}.Release|x86.Deploy.0 = Release|Win32
	EndGlobalSection
	GlobalSection(SolutionProperties) = preSolution
		HideSolutionNode = FALSE
	EndGlobalSection
	GlobalSection(NestedProjects) = preSolution
		{A990658C-CE31-4BCC-976F-0FC6B1AF693D} = {5EA20F54-880A-49F3-99FA-4B3FE54E8AB1}
		{A9D95A91-4DB7-4F72-BEB6-FE8A5C89BFBD} = {5EA20F54-880A-49F3-99FA-4B3FE54E8AB1}
		{C38970C0-5FBF-4D69-90D8-CBAC225AE895} = {5EA20F54-880A-49F3-99FA-4B3FE54E8AB1}
		{F7D32BD0-2749-483E-9A0D-1635EF7E3136} = {5EA20F54-880A-49F3-99FA-4B3FE54E8AB1}
		{DA8B35B3-DA00-4B02-BDE6-6A397B3FD46B} = {5EA20F54-880A-49F3-99FA-4B3FE54E8AB1}
		{FCA38F3C-7C73-4C47-BE4E-32F77FA8538D} = {5EA20F54-880A-49F3-99FA-4B3FE54E8AB1}
		{2049DBE9-8D13-42C9-AE4B-413AE38FFFD0} = {5EA20F54-880A-49F3-99FA-4B3FE54E8AB1}
		{84E05BFA-CBAF-4F0D-BFB6-4CE85742A57E} = {5EA20F54-880A-49F3-99FA-4B3FE54E8AB1}
		{EF074BA1-2D54-4D49-A28E-5E040B47CD2E} = {5EA20F54-880A-49F3-99FA-4B3FE54E8AB1}
		{F2824844-CE15-4242-9420-308923CD76C3} = {5EA20F54-880A-49F3-99FA-4B3FE54E8AB1}
		{ADED4FBE-887D-4271-AF24-F0823BCE7961} = {5EA20F54-880A-49F3-99FA-4B3FE54E8AB1}
		{14B93DC8-FD93-4A6D-81CB-8BC96644501C} = {5EA20F54-880A-49F3-99FA-4B3FE54E8AB1}
	EndGlobalSection
	GlobalSection(ExtensibilityGlobals) = postSolution
		SolutionGuid = {D43FAD39-F619-437D-BB40-04A3982ACB6A}
	EndGlobalSection
EndGlobal
"
`;

exports[`C# WinUI3 Application: index.windows.bundle 1`] = `
"/**
 * 
 * Be sure to generate this file using the CLI:
 *
 * npx react-native bundle --platform windows --entry-file index.js 
 *   --bundle-output windows\\\\SnapshotApp\\\\Bundle\\\\index.windows.bundle
 *   --assets-dest windows\\\\SnapshotApp\\\\Bundle
 *
 */"
`;

exports[`C# WinUI3 Application: metro.config.js 1`] = `
"/**
 * Metro configuration for React Native
 * https://github.com/facebook/react-native
 *
 * @format
 */
const fs = require('fs');
const path = require('path');
const exclusionList = require('metro-config/src/defaults/exclusionList');

const rnwPath = fs.realpathSync(
  path.resolve(require.resolve('react-native-windows/package.json'), '..'),
);

module.exports = {
  resolver: {
    blockList: exclusionList([
      // This stops \\"react-native run-windows\\" from causing the metro server to crash if its already running
      new RegExp(
        \`\${path.resolve(__dirname, 'windows').replace(/[/\\\\\\\\]/g, '/')}.*\`,
      ),
      // This prevents \\"react-native run-windows\\" from hitting: EBUSY: resource busy or locked, open msbuild.ProjectImports.zip or other files produced by msbuild
      new RegExp(\`\${rnwPath}/build/.*\`),
      new RegExp(\`\${rnwPath}/target/.*\`),
      /.*\\\\.ProjectImports\\\\.zip/,
    ]),
  },
  transformer: {
    getTransformOptions: async () => ({
      transform: {
        experimentalImportSupport: false,
        inlineRequires: true,
      },
    }),
  },
};
"
`;

exports[`C# WinUI3 Library: AssemblyInfo.cs 1`] = `
"﻿using System.Reflection;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;

// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
[assembly: AssemblyTitle(\\"SnapshotApp\\")]
[assembly: AssemblyDescription(\\"\\")]
[assembly: AssemblyConfiguration(\\"\\")]
[assembly: AssemblyCompany(\\"\\")]
[assembly: AssemblyProduct(\\"SnapshotApp\\")]
[assembly: AssemblyCopyright(\\"Copyright ©  2019\\")]
[assembly: AssemblyTrademark(\\"\\")]
[assembly: AssemblyCulture(\\"\\")]

// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Build and Revision Numbers 
// by using the '*' as shown below:
// [assembly: AssemblyVersion(\\"1.0.*\\")]
[assembly: AssemblyVersion(\\"1.0.0.0\\")]
[assembly: AssemblyFileVersion(\\"1.0.0.0\\")]
[assembly: ComVisible(false)]"
`;

exports[`C# WinUI3 Library: Default.rd.xml 1`] = `
"<!--
    This file contains Runtime Directives used by .NET Native. The defaults here are suitable for most
    developers. However, you can modify these parameters to modify the behavior of the .NET Native
    optimizer.

    Runtime Directives are documented at https://go.microsoft.com/fwlink/?LinkID=391919

    To fully enable reflection for App1.MyClass and all of its public/private members
    <Type Name=\\"App1.MyClass\\" Dynamic=\\"Required All\\"/>

    To enable dynamic creation of the specific instantiation of AppClass<T> over System.Int32
    <TypeInstantiation Name=\\"App1.AppClass\\" Arguments=\\"System.Int32\\" Activate=\\"Required Public\\" />

    Using the Namespace directive to apply reflection policy to all the types in a particular namespace
    <Namespace Name=\\"DataClasses.ViewModels\\" Serialize=\\"All\\" />
-->

<Directives xmlns=\\"http://schemas.microsoft.com/netfx/2013/01/metadata\\">
  <Application>
    <!--
      An Assembly element with Name=\\"*Application*\\" applies to all assemblies in
      the application package. The asterisks are not wildcards.
    -->
    <Assembly Name=\\"*Application*\\" Dynamic=\\"Required All\\" />
    
    
    <!-- Add your application specific runtime directives here. -->
    <Namespace Name=\\"Microsoft.ReactNative\\" Dynamic=\\"Required All\\" MarshalObject=\\"Required All\\" />
    <Namespace Name=\\"Microsoft.ReactNative.Managed\\" Dynamic=\\"Required All\\" MarshalObject=\\"Required All\\" />

  </Application>
</Directives>"
`;

exports[`C# WinUI3 Library: ExperimentalFeatures.props 1`] = `
"<?xml version=\\"1.0\\" encoding=\\"utf-8\\"?>
<Project xmlns=\\"http://schemas.microsoft.com/developer/msbuild/2003\\">

  <!--
    Application projects contain a file with this name to specify some important settings
    that will apply globally for the app and *all* native modules the app consumes. These
    values are set by the app developer.
  -->

</Project>
"
`;

exports[`C# WinUI3 Library: NuGet.Config 1`] = `
"<?xml version=\\"1.0\\" encoding=\\"utf-8\\"?>
<configuration>
  <config>
    <add key=\\"repositoryPath\\" value=\\"packages\\" />
  </config>
  <packageSources>
    <clear />
    <add key=\\"react-native\\" value=\\"https://pkgs.dev.azure.com/ms/react-native/_packaging/react-native-public/nuget/v3/index.json\\" />
    <add key=\\"Nuget.org\\" value=\\"https://api.nuget.org/v3/index.json\\" />
  </packageSources>
  <disabledPackageSources>
    <clear />
  </disabledPackageSources>  
</configuration>
"
`;

exports[`C# WinUI3 Library: ReactNativeModule.cs 1`] = `
"﻿using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

using Microsoft.ReactNative;
using Microsoft.ReactNative.Managed;

namespace SnapshotApp
{
    [ReactModule(\\"SnapshotApp\\")]
    internal sealed class ReactNativeModule
    {
        // See https://microsoft.github.io/react-native-windows/docs/native-modules for details on writing native modules

        private ReactContext _reactContext;

        [ReactInitializer]
        public void Initialize(ReactContext reactContext)
        {
            _reactContext = reactContext;
        }

        [ReactMethod]
        public void sampleMethod(string stringArgument, int numberArgument, Action<string> callback)
        {
            // TODO: Implement some actually useful functionality
            callback(\\"Received numberArgument: \\" + numberArgument + \\" stringArgument: \\" + stringArgument);
        }
    }
}
"
`;

exports[`C# WinUI3 Library: ReactPackageProvider.cs 1`] = `
"using Microsoft.ReactNative;

namespace SnapshotApp
{
    public partial class ReactPackageProvider : IReactPackageProvider
    {
        public void CreatePackage(IReactPackageBuilder packageBuilder)
        {
            CreatePackageImplementation(packageBuilder);
        }

        /// <summary>
        /// This method is implemented by the C# code generator
        /// </summary>
        partial void CreatePackageImplementation(IReactPackageBuilder packageBuilder);
    }
}
"
`;

exports[`C# WinUI3 Library: SnapshotApp.csproj 1`] = `
"﻿<?xml version=\\"1.0\\" encoding=\\"utf-8\\"?>
<Project ToolsVersion=\\"Current\\" DefaultTargets=\\"Build\\" xmlns=\\"http://schemas.microsoft.com/developer/msbuild/2003\\">
  <Import Project=\\"$(MSBuildExtensionsPath)\\\\$(MSBuildToolsVersion)\\\\Microsoft.Common.props\\" Condition=\\"Exists('$(MSBuildExtensionsPath)\\\\$(MSBuildToolsVersion)\\\\Microsoft.Common.props')\\" />
  <Import Project=\\"$(SolutionDir)\\\\ExperimentalFeatures.props\\" Condition=\\"Exists('$(SolutionDir)\\\\ExperimentalFeatures.props')\\" />
  <PropertyGroup Label=\\"ReactNativeWindowsProps\\">
    <ReactNativeWindowsDir Condition=\\"'$(ReactNativeWindowsDir)' == ''\\">$([MSBuild]::GetDirectoryNameOfFileAbove($(SolutionDir), 'node_modules\\\\react-native-windows\\\\package.json'))\\\\node_modules\\\\react-native-windows\\\\</ReactNativeWindowsDir>
  </PropertyGroup>
  <PropertyGroup>
    <Configuration Condition=\\" '$(Configuration)' == '' \\">Debug</Configuration>
    <Platform Condition=\\" '$(Platform)' == '' \\">x86</Platform>
    <ProjectGuid>{D9D5CF0F-3500-43BF-ACB9-3154C7C47DB4}</ProjectGuid>
    <OutputType>winmdobj</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>SnapshotApp</RootNamespace>
    <AssemblyName>SnapshotApp</AssemblyName>
    <DefaultLanguage>en-US</DefaultLanguage>
    <TargetPlatformIdentifier>UAP</TargetPlatformIdentifier>
    <TargetPlatformVersion Condition=\\" '$(TargetPlatformVersion)' == '' \\">10.0.19041.0</TargetPlatformVersion>
    <TargetPlatformMinVersion>10.0.16299.0</TargetPlatformMinVersion>
    <MinimumVisualStudioVersion>16.0</MinimumVisualStudioVersion>
    <FileAlignment>512</FileAlignment>
    <ProjectTypeGuids>{A5A43C5B-DE2A-4C0C-9213-0A381AF9435A};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <WindowsXamlEnableOverview>true</WindowsXamlEnableOverview>
    <LangVersion>7.3</LangVersion>
  </PropertyGroup>
  <PropertyGroup Condition=\\"'$(Configuration)|$(Platform)' == 'Debug|x86'\\">
    <DebugSymbols>true</DebugSymbols>
    <OutputPath>bin\\\\x86\\\\Debug\\\\</OutputPath>
    <DefineConstants>DEBUG;TRACE;NETFX_CORE;WINDOWS_UWP</DefineConstants>
    <NoWarn>;2008</NoWarn>
    <DebugType>full</DebugType>
    <PlatformTarget>x86</PlatformTarget>
    <UseVSHostingProcess>false</UseVSHostingProcess>
    <ErrorReport>prompt</ErrorReport>
    <Prefer32Bit>true</Prefer32Bit>
  </PropertyGroup>
  <PropertyGroup Condition=\\"'$(Configuration)|$(Platform)' == 'Release|x86'\\">
    <OutputPath>bin\\\\x86\\\\Release\\\\</OutputPath>
    <DefineConstants>TRACE;NETFX_CORE;WINDOWS_UWP</DefineConstants>
    <Optimize>true</Optimize>
    <NoWarn>;2008</NoWarn>
    <DebugType>pdbonly</DebugType>
    <PlatformTarget>x86</PlatformTarget>
    <UseVSHostingProcess>false</UseVSHostingProcess>
    <ErrorReport>prompt</ErrorReport>
    <Prefer32Bit>true</Prefer32Bit>
    <UseDotNetNativeToolchain>true</UseDotNetNativeToolchain>
  </PropertyGroup>
  <PropertyGroup Condition=\\"'$(Configuration)|$(Platform)' == 'Debug|ARM64'\\">
    <DebugSymbols>true</DebugSymbols>
    <OutputPath>bin\\\\ARM64\\\\Debug\\\\</OutputPath>
    <DefineConstants>DEBUG;TRACE;NETFX_CORE;WINDOWS_UWP</DefineConstants>
    <NoWarn>;2008</NoWarn>
    <DebugType>full</DebugType>
    <PlatformTarget>ARM64</PlatformTarget>
    <UseVSHostingProcess>false</UseVSHostingProcess>
    <ErrorReport>prompt</ErrorReport>
    <Prefer32Bit>true</Prefer32Bit>
  </PropertyGroup>
  <PropertyGroup Condition=\\"'$(Configuration)|$(Platform)' == 'Release|ARM64'\\">
    <OutputPath>bin\\\\ARM64\\\\Release\\\\</OutputPath>
    <DefineConstants>TRACE;NETFX_CORE;WINDOWS_UWP</DefineConstants>
    <Optimize>true</Optimize>
    <NoWarn>;2008</NoWarn>
    <DebugType>pdbonly</DebugType>
    <PlatformTarget>ARM64</PlatformTarget>
    <UseVSHostingProcess>false</UseVSHostingProcess>
    <ErrorReport>prompt</ErrorReport>
    <Prefer32Bit>true</Prefer32Bit>
    <UseDotNetNativeToolchain>true</UseDotNetNativeToolchain>
  </PropertyGroup>
  <PropertyGroup Condition=\\"'$(Configuration)|$(Platform)' == 'Debug|x64'\\">
    <DebugSymbols>true</DebugSymbols>
    <OutputPath>bin\\\\x64\\\\Debug\\\\</OutputPath>
    <DefineConstants>DEBUG;TRACE;NETFX_CORE;WINDOWS_UWP</DefineConstants>
    <NoWarn>;2008</NoWarn>
    <DebugType>full</DebugType>
    <PlatformTarget>x64</PlatformTarget>
    <UseVSHostingProcess>false</UseVSHostingProcess>
    <ErrorReport>prompt</ErrorReport>
    <Prefer32Bit>true</Prefer32Bit>
  </PropertyGroup>
  <PropertyGroup Condition=\\"'$(Configuration)|$(Platform)' == 'Release|x64'\\">
    <OutputPath>bin\\\\x64\\\\Release\\\\</OutputPath>
    <DefineConstants>TRACE;NETFX_CORE;WINDOWS_UWP</DefineConstants>
    <Optimize>true</Optimize>
    <NoWarn>;2008</NoWarn>
    <DebugType>pdbonly</DebugType>
    <PlatformTarget>x64</PlatformTarget>
    <UseVSHostingProcess>false</UseVSHostingProcess>
    <ErrorReport>prompt</ErrorReport>
    <Prefer32Bit>true</Prefer32Bit>
    <UseDotNetNativeToolchain>true</UseDotNetNativeToolchain>
  </PropertyGroup>
  <PropertyGroup>
    <RestoreProjectStyle>PackageReference</RestoreProjectStyle>
  </PropertyGroup>
  <ItemGroup>
    <Compile Include=\\"Properties\\\\AssemblyInfo.cs\\" />
    <Compile Include=\\"ReactNativeModule.cs\\" />
    <Compile Include=\\"ReactPackageProvider.cs\\" />
  </ItemGroup>
  <ItemGroup>
    <PackageReference Include=\\"Microsoft.NETCore.UniversalWindowsPlatform\\">
      <Version>6.2.9</Version>
    </PackageReference>
    <PackageReference Include=\\"ReactNative.Hermes.Windows\\">
      <Version>0.9.0-ms.6</Version>
    </PackageReference>
  </ItemGroup>
  <PropertyGroup Condition=\\" '$(VisualStudioVersion)' == '' or '$(VisualStudioVersion)' &lt; '16.0' \\">
    <VisualStudioVersion>16.0</VisualStudioVersion>
  </PropertyGroup>
  <Import Project=\\"$(MSBuildExtensionsPath)\\\\Microsoft\\\\WindowsXaml\\\\v$(VisualStudioVersion)\\\\Microsoft.Windows.UI.Xaml.CSharp.targets\\" />
  <ImportGroup Label=\\"ReactNativeWindowsPropertySheets\\">
    <Import Project=\\"$(ReactNativeWindowsDir)\\\\PropertySheets\\\\External\\\\Microsoft.ReactNative.Uwp.CSharpLib.props\\" Condition=\\"Exists('$(ReactNativeWindowsDir)\\\\PropertySheets\\\\External\\\\Microsoft.ReactNative.Uwp.CSharpLib.props')\\" />
  </ImportGroup>
  <ImportGroup Label=\\"ReactNativeWindowsTargets\\">
    <Import Project=\\"$(ReactNativeWindowsDir)\\\\PropertySheets\\\\External\\\\Microsoft.ReactNative.Uwp.CSharpLib.targets\\" Condition=\\"Exists('$(ReactNativeWindowsDir)\\\\PropertySheets\\\\External\\\\Microsoft.ReactNative.Uwp.CSharpLib.targets')\\" />
  </ImportGroup>
  <Target Name=\\"EnsureReactNativeWindowsTargets\\" BeforeTargets=\\"PrepareForBuild\\">
    <PropertyGroup>
      <ErrorText>This project references targets in your node_modules\\\\react-native-windows folder that are missing. The missing file is {0}.</ErrorText>
    </PropertyGroup>
    <Error Condition=\\"!Exists('$(ReactNativeWindowsDir)\\\\PropertySheets\\\\External\\\\Microsoft.ReactNative.Uwp.CSharpLib.props')\\" Text=\\"$([System.String]::Format('$(ErrorText)', '$(ReactNativeWindowsDir)\\\\PropertySheets\\\\External\\\\Microsoft.ReactNative.Uwp.CSharpLib.props'))\\" />
    <Error Condition=\\"!Exists('$(ReactNativeWindowsDir)\\\\PropertySheets\\\\External\\\\Microsoft.ReactNative.Uwp.CSharpLib.targets')\\" Text=\\"$([System.String]::Format('$(ErrorText)', '$(ReactNativeWindowsDir)\\\\PropertySheets\\\\External\\\\Microsoft.ReactNative.Uwp.CSharpLib.targets'))\\" />
  </Target>
</Project>
"
`;

exports[`C# WinUI3 Library: SnapshotApp.sln 1`] = `
"﻿
Microsoft Visual Studio Solution File, Format Version 12.00
# Visual Studio Version 16
VisualStudioVersion = 16.0.29215.179
MinimumVisualStudioVersion = 10.0.40219.1
Project(\\"{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}\\") = \\"SnapshotApp\\", \\"SnapshotApp\\\\SnapshotApp.csproj\\", \\"{D9D5CF0F-3500-43BF-ACB9-3154C7C47DB4}\\"
EndProject
Project(\\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\\") = \\"Folly\\", \\"..\\\\node_modules\\\\react-native-windows\\\\Folly\\\\Folly.vcxproj\\", \\"{A990658C-CE31-4BCC-976F-0FC6B1AF693D}\\"
EndProject
Project(\\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\\") = \\"fmt\\", \\"..\\\\node_modules\\\\react-native-windows\\\\fmt\\\\fmt.vcxproj\\", \\"{14B93DC8-FD93-4A6D-81CB-8BC96644501C}\\"
EndProject
Project(\\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\\") = \\"ReactCommon\\", \\"..\\\\node_modules\\\\react-native-windows\\\\ReactCommon\\\\ReactCommon.vcxproj\\", \\"{A9D95A91-4DB7-4F72-BEB6-FE8A5C89BFBD}\\"
	ProjectSection(ProjectDependencies) = postProject
		{A990658C-CE31-4BCC-976F-0FC6B1AF693D} = {A990658C-CE31-4BCC-976F-0FC6B1AF693D}
	EndProjectSection
EndProject
Project(\\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\\") = \\"Chakra\\", \\"..\\\\node_modules\\\\react-native-windows\\\\Chakra\\\\Chakra.vcxitems\\", \\"{C38970C0-5FBF-4D69-90D8-CBAC225AE895}\\"
EndProject
Project(\\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\\") = \\"Microsoft.ReactNative\\", \\"..\\\\node_modules\\\\react-native-windows\\\\Microsoft.ReactNative\\\\Microsoft.ReactNative.vcxproj\\", \\"{F7D32BD0-2749-483E-9A0D-1635EF7E3136}\\"
EndProject
Project(\\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\\") = \\"Microsoft.ReactNative.Cxx\\", \\"..\\\\node_modules\\\\react-native-windows\\\\Microsoft.ReactNative.Cxx\\\\Microsoft.ReactNative.Cxx.vcxitems\\", \\"{DA8B35B3-DA00-4B02-BDE6-6A397B3FD46B}\\"
EndProject
Project(\\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\\") = \\"Common\\", \\"..\\\\node_modules\\\\react-native-windows\\\\Common\\\\Common.vcxproj\\", \\"{FCA38F3C-7C73-4C47-BE4E-32F77FA8538D}\\"
EndProject
Project(\\"{2150E333-8FDC-42A3-9474-1A3956D46DE8}\\") = \\"ReactNative\\", \\"ReactNative\\", \\"{5EA20F54-880A-49F3-99FA-4B3FE54E8AB1}\\"
EndProject
Project(\\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\\") = \\"Microsoft.ReactNative.Shared\\", \\"..\\\\node_modules\\\\react-native-windows\\\\Shared\\\\Shared.vcxitems\\", \\"{2049DBE9-8D13-42C9-AE4B-413AE38FFFD0}\\"
EndProject
Project(\\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\\") = \\"Mso\\", \\"..\\\\node_modules\\\\react-native-windows\\\\Mso\\\\Mso.vcxitems\\", \\"{84E05BFA-CBAF-4F0D-BFB6-4CE85742A57E}\\"
EndProject
Project(\\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\\") = \\"Include\\", \\"..\\\\node_modules\\\\react-native-windows\\\\include\\\\Include.vcxitems\\", \\"{EF074BA1-2D54-4D49-A28E-5E040B47CD2E}\\"
EndProject
Project(\\"{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}\\") = \\"Microsoft.ReactNative.Managed\\", \\"..\\\\node_modules\\\\react-native-windows\\\\Microsoft.ReactNative.Managed\\\\Microsoft.ReactNative.Managed.csproj\\", \\"{F2824844-CE15-4242-9420-308923CD76C3}\\"
EndProject
Project(\\"{9A19103F-16F7-4668-BE54-9A1E7A4F7556}\\") = \\"Microsoft.ReactNative.Managed.CodeGen\\", \\"..\\\\node_modules\\\\react-native-windows\\\\Microsoft.ReactNative.Managed.CodeGen\\\\Microsoft.ReactNative.Managed.CodeGen.csproj\\", \\"{ADED4FBE-887D-4271-AF24-F0823BCE7961}\\"
EndProject
Global
	GlobalSection(SharedMSBuildProjectFiles) = preSolution
		..\\\\node_modules\\\\react-native-windows\\\\Shared\\\\Shared.vcxitems*{2049dbe9-8d13-42c9-ae4b-413ae38fffd0}*SharedItemsImports = 9
		..\\\\node_modules\\\\react-native-windows\\\\Mso\\\\Mso.vcxitems*{84e05bfa-cbaf-4f0d-bfb6-4ce85742a57e}*SharedItemsImports = 9
		..\\\\node_modules\\\\react-native-windows\\\\Chakra\\\\Chakra.vcxitems*{c38970c0-5fbf-4d69-90d8-cbac225ae895}*SharedItemsImports = 9
		..\\\\node_modules\\\\react-native-windows\\\\Microsoft.ReactNative.Cxx\\\\Microsoft.ReactNative.Cxx.vcxitems*{da8b35b3-da00-4b02-bde6-6a397b3fd46b}*SharedItemsImports = 9
		..\\\\node_modules\\\\react-native-windows\\\\include\\\\Include.vcxitems*{ef074ba1-2d54-4d49-a28e-5e040b47cd2e}*SharedItemsImports = 9
		..\\\\node_modules\\\\react-native-windows\\\\Chakra\\\\Chakra.vcxitems*{f7d32bd0-2749-483e-9a0d-1635ef7e3136}*SharedItemsImports = 4
		..\\\\node_modules\\\\react-native-windows\\\\Microsoft.ReactNative.Cxx\\\\Microsoft.ReactNative.Cxx.vcxitems*{f7d32bd0-2749-483e-9a0d-1635ef7e3136}*SharedItemsImports = 4
		..\\\\node_modules\\\\react-native-windows\\\\Mso\\\\Mso.vcxitems*{f7d32bd0-2749-483e-9a0d-1635ef7e3136}*SharedItemsImports = 4
		..\\\\node_modules\\\\react-native-windows\\\\Shared\\\\Shared.vcxitems*{f7d32bd0-2749-483e-9a0d-1635ef7e3136}*SharedItemsImports = 4
	EndGlobalSection
	GlobalSection(SolutionConfigurationPlatforms) = preSolution
		Debug|ARM64 = Debug|ARM64
		Debug|x64 = Debug|x64
		Debug|x86 = Debug|x86
		Release|ARM64 = Release|ARM64
		Release|x64 = Release|x64
		Release|x86 = Release|x86
	EndGlobalSection
	GlobalSection(ProjectConfigurationPlatforms) = postSolution
		{D9D5CF0F-3500-43BF-ACB9-3154C7C47DB4}.Debug|ARM64.ActiveCfg = Debug|ARM64
		{D9D5CF0F-3500-43BF-ACB9-3154C7C47DB4}.Debug|ARM64.Build.0 = Debug|ARM64
		{D9D5CF0F-3500-43BF-ACB9-3154C7C47DB4}.Debug|ARM64.Deploy.0 = Debug|ARM64
		{D9D5CF0F-3500-43BF-ACB9-3154C7C47DB4}.Debug|x64.ActiveCfg = Debug|x64
		{D9D5CF0F-3500-43BF-ACB9-3154C7C47DB4}.Debug|x64.Build.0 = Debug|x64
		{D9D5CF0F-3500-43BF-ACB9-3154C7C47DB4}.Debug|x64.Deploy.0 = Debug|x64
		{D9D5CF0F-3500-43BF-ACB9-3154C7C47DB4}.Debug|x86.ActiveCfg = Debug|x86
		{D9D5CF0F-3500-43BF-ACB9-3154C7C47DB4}.Debug|x86.Build.0 = Debug|x86
		{D9D5CF0F-3500-43BF-ACB9-3154C7C47DB4}.Debug|x86.Deploy.0 = Debug|x86
		{D9D5CF0F-3500-43BF-ACB9-3154C7C47DB4}.Release|ARM64.ActiveCfg = Release|ARM64
		{D9D5CF0F-3500-43BF-ACB9-3154C7C47DB4}.Release|ARM64.Build.0 = Release|ARM64
		{D9D5CF0F-3500-43BF-ACB9-3154C7C47DB4}.Release|ARM64.Deploy.0 = Release|ARM64
		{D9D5CF0F-3500-43BF-ACB9-3154C7C47DB4}.Release|x64.ActiveCfg = Release|x64
		{D9D5CF0F-3500-43BF-ACB9-3154C7C47DB4}.Release|x64.Build.0 = Release|x64
		{D9D5CF0F-3500-43BF-ACB9-3154C7C47DB4}.Release|x64.Deploy.0 = Release|x64
		{D9D5CF0F-3500-43BF-ACB9-3154C7C47DB4}.Release|x86.ActiveCfg = Release|x86
		{D9D5CF0F-3500-43BF-ACB9-3154C7C47DB4}.Release|x86.Build.0 = Release|x86
		{D9D5CF0F-3500-43BF-ACB9-3154C7C47DB4}.Release|x86.Deploy.0 = Release|x86
		{A990658C-CE31-4BCC-976F-0FC6B1AF693D}.Debug|ARM64.ActiveCfg = Debug|ARM64
		{A990658C-CE31-4BCC-976F-0FC6B1AF693D}.Debug|ARM64.Build.0 = Debug|ARM64
		{A990658C-CE31-4BCC-976F-0FC6B1AF693D}.Debug|x64.ActiveCfg = Debug|x64
		{A990658C-CE31-4BCC-976F-0FC6B1AF693D}.Debug|x64.Build.0 = Debug|x64
		{A990658C-CE31-4BCC-976F-0FC6B1AF693D}.Debug|x86.ActiveCfg = Debug|Win32
		{A990658C-CE31-4BCC-976F-0FC6B1AF693D}.Debug|x86.Build.0 = Debug|Win32
		{A990658C-CE31-4BCC-976F-0FC6B1AF693D}.Release|ARM64.ActiveCfg = Release|ARM64
		{A990658C-CE31-4BCC-976F-0FC6B1AF693D}.Release|ARM64.Build.0 = Release|ARM64
		{A990658C-CE31-4BCC-976F-0FC6B1AF693D}.Release|x64.ActiveCfg = Release|x64
		{A990658C-CE31-4BCC-976F-0FC6B1AF693D}.Release|x64.Build.0 = Release|x64
		{A990658C-CE31-4BCC-976F-0FC6B1AF693D}.Release|x86.ActiveCfg = Release|Win32
		{A990658C-CE31-4BCC-976F-0FC6B1AF693D}.Release|x86.Build.0 = Release|Win32
		{A9D95A91-4DB7-4F72-BEB6-FE8A5C89BFBD}.Debug|ARM64.ActiveCfg = Debug|ARM64
		{A9D95A91-4DB7-4F72-BEB6-FE8A5C89BFBD}.Debug|ARM64.Build.0 = Debug|ARM64
		{A9D95A91-4DB7-4F72-BEB6-FE8A5C89BFBD}.Debug|x64.ActiveCfg = Debug|x64
		{A9D95A91-4DB7-4F72-BEB6-FE8A5C89BFBD}.Debug|x64.Build.0 = Debug|x64
		{A9D95A91-4DB7-4F72-BEB6-FE8A5C89BFBD}.Debug|x86.ActiveCfg = Debug|Win32
		{A9D95A91-4DB7-4F72-BEB6-FE8A5C89BFBD}.Debug|x86.Build.0 = Debug|Win32
		{A9D95A91-4DB7-4F72-BEB6-FE8A5C89BFBD}.Release|ARM64.ActiveCfg = Release|ARM64
		{A9D95A91-4DB7-4F72-BEB6-FE8A5C89BFBD}.Release|ARM64.Build.0 = Release|ARM64
		{A9D95A91-4DB7-4F72-BEB6-FE8A5C89BFBD}.Release|x64.ActiveCfg = Release|x64
		{A9D95A91-4DB7-4F72-BEB6-FE8A5C89BFBD}.Release|x64.Build.0 = Release|x64
		{A9D95A91-4DB7-4F72-BEB6-FE8A5C89BFBD}.Release|x86.ActiveCfg = Release|Win32
		{A9D95A91-4DB7-4F72-BEB6-FE8A5C89BFBD}.Release|x86.Build.0 = Release|Win32
		{F7D32BD0-2749-483E-9A0D-1635EF7E3136}.Debug|ARM64.ActiveCfg = Debug|ARM64
		{F7D32BD0-2749-483E-9A0D-1635EF7E3136}.Debug|ARM64.Build.0 = Debug|ARM64
		{F7D32BD0-2749-483E-9A0D-1635EF7E3136}.Debug|x64.ActiveCfg = Debug|x64
		{F7D32BD0-2749-483E-9A0D-1635EF7E3136}.Debug|x64.Build.0 = Debug|x64
		{F7D32BD0-2749-483E-9A0D-1635EF7E3136}.Debug|x86.ActiveCfg = Debug|Win32
		{F7D32BD0-2749-483E-9A0D-1635EF7E3136}.Debug|x86.Build.0 = Debug|Win32
		{F7D32BD0-2749-483E-9A0D-1635EF7E3136}.Release|ARM64.ActiveCfg = Release|ARM64
		{F7D32BD0-2749-483E-9A0D-1635EF7E3136}.Release|ARM64.Build.0 = Release|ARM64
		{F7D32BD0-2749-483E-9A0D-1635EF7E3136}.Release|x64.ActiveCfg = Release|x64
		{F7D32BD0-2749-483E-9A0D-1635EF7E3136}.Release|x64.Build.0 = Release|x64
		{F7D32BD0-2749-483E-9A0D-1635EF7E3136}.Release|x86.ActiveCfg = Release|Win32
		{F7D32BD0-2749-483E-9A0D-1635EF7E3136}.Release|x86.Build.0 = Release|Win32
		{FCA38F3C-7C73-4C47-BE4E-32F77FA8538D}.Debug|ARM64.ActiveCfg = Debug|ARM64
		{FCA38F3C-7C73-4C47-BE4E-32F77FA8538D}.Debug|ARM64.Build.0 = Debug|ARM64
		{FCA38F3C-7C73-4C47-BE4E-32F77FA8538D}.Debug|x64.ActiveCfg = Debug|x64
		{FCA38F3C-7C73-4C47-BE4E-32F77FA8538D}.Debug|x64.Build.0 = Debug|x64
		{FCA38F3C-7C73-4C47-BE4E-32F77FA8538D}.Debug|x86.ActiveCfg = Debug|Win32
		{FCA38F3C-7C73-4C47-BE4E-32F77FA8538D}.Debug|x86.Build.0 = Debug|Win32
		{FCA38F3C-7C73-4C47-BE4E-32F77FA8538D}.Release|ARM64.ActiveCfg = Release|ARM64
		{FCA38F3C-7C73-4C47-BE4E-32F77FA8538D}.Release|ARM64.Build.0 = Release|ARM64
		{FCA38F3C-7C73-4C47-BE4E-32F77FA8538D}.Release|x64.ActiveCfg = Release|x64
		{FCA38F3C-7C73-4C47-BE4E-32F77FA8538D}.Release|x64.Build.0 = Release|x64
		{FCA38F3C-7C73-4C47-BE4E-32F77FA8538D}.Release|x86.ActiveCfg = Release|Win32
		{FCA38F3C-7C73-4C47-BE4E-32F77FA8538D}.Release|x86.Build.0 = Release|Win32
		{F2824844-CE15-4242-9420-308923CD76C3}.Debug|ARM64.ActiveCfg = Debug|ARM64
		{F2824844-CE15-4242-9420-308923CD76C3}.Debug|ARM64.Build.0 = Debug|ARM64
		{F2824844-CE15-4242-9420-308923CD76C3}.Debug|x64.ActiveCfg = Debug|x64
		{F2824844-CE15-4242-9420-308923CD76C3}.Debug|x64.Build.0 = Debug|x64
		{F2824844-CE15-4242-9420-308923CD76C3}.Debug|x86.ActiveCfg = Debug|x86
		{F2824844-CE15-4242-9420-308923CD76C3}.Debug|x86.Build.0 = Debug|x86
		{F2824844-CE15-4242-9420-308923CD76C3}.Release|ARM64.ActiveCfg = Release|ARM64
		{F2824844-CE15-4242-9420-308923CD76C3}.Release|ARM64.Build.0 = Release|ARM64
		{F2824844-CE15-4242-9420-308923CD76C3}.Release|x64.ActiveCfg = Release|x64
		{F2824844-CE15-4242-9420-308923CD76C3}.Release|x64.Build.0 = Release|x64
		{F2824844-CE15-4242-9420-308923CD76C3}.Release|x86.ActiveCfg = Release|x86
		{F2824844-CE15-4242-9420-308923CD76C3}.Release|x86.Build.0 = Release|x86
		{ADED4FBE-887D-4271-AF24-F0823BCE7961}.Debug|ARM64.ActiveCfg = Debug|ARM64
		{ADED4FBE-887D-4271-AF24-F0823BCE7961}.Debug|ARM64.Build.0 = Debug|ARM64
		{ADED4FBE-887D-4271-AF24-F0823BCE7961}.Debug|x64.ActiveCfg = Debug|x64
		{ADED4FBE-887D-4271-AF24-F0823BCE7961}.Debug|x64.Build.0 = Debug|x64
		{ADED4FBE-887D-4271-AF24-F0823BCE7961}.Debug|x86.ActiveCfg = Debug|x86
		{ADED4FBE-887D-4271-AF24-F0823BCE7961}.Debug|x86.Build.0 = Debug|x86
		{ADED4FBE-887D-4271-AF24-F0823BCE7961}.Release|ARM64.ActiveCfg = Release|ARM64
		{ADED4FBE-887D-4271-AF24-F0823BCE7961}.Release|ARM64.Build.0 = Release|ARM64
		{ADED4FBE-887D-4271-AF24-F0823BCE7961}.Release|x64.ActiveCfg = Release|x64
		{ADED4FBE-887D-4271-AF24-F0823BCE7961}.Release|x64.Build.0 = Release|x64
		{ADED4FBE-887D-4271-AF24-F0823BCE7961}.Release|x86.ActiveCfg = Release|x86
		{ADED4FBE-887D-4271-AF24-F0823BCE7961}.Release|x86.Build.0 = Release|x86
		{14B93DC8-FD93-4A6D-81CB-8BC96644501C}.Debug|ARM64.ActiveCfg = Debug|ARM64
		{14B93DC8-FD93-4A6D-81CB-8BC96644501C}.Debug|ARM64.Build.0 = Debug|ARM64
		{14B93DC8-FD93-4A6D-81CB-8BC96644501C}.Debug|x64.ActiveCfg = Debug|x64
		{14B93DC8-FD93-4A6D-81CB-8BC96644501C}.Debug|x64.Build.0 = Debug|x64
		{14B93DC8-FD93-4A6D-81CB-8BC96644501C}.Debug|x86.ActiveCfg = Debug|Win32
		{14B93DC8-FD93-4A6D-81CB-8BC96644501C}.Debug|x86.Build.0 = Debug|Win32
		{14B93DC8-FD93-4A6D-81CB-8BC96644501C}.Debug|x86.Deploy.0 = Debug|Win32
		{14B93DC8-FD93-4A6D-81CB-8BC96644501C}.Release|ARM64.ActiveCfg = Release|ARM64
		{14B93DC8-FD93-4A6D-81CB-8BC96644501C}.Release|ARM64.Build.0 = Release|ARM64
		{14B93DC8-FD93-4A6D-81CB-8BC96644501C}.Release|x64.ActiveCfg = Release|x64
		{14B93DC8-FD93-4A6D-81CB-8BC96644501C}.Release|x64.Build.0 = Release|x64
		{14B93DC8-FD93-4A6D-81CB-8BC96644501C}.Release|x86.ActiveCfg = Release|Win32
		{14B93DC8-FD93-4A6D-81CB-8BC96644501C}.Release|x86.Build.0 = Release|Win32
		{14B93DC8-FD93-4A6D-81CB-8BC96644501C}.Release|x86.Deploy.0 = Release|Win32
	EndGlobalSection
	GlobalSection(SolutionProperties) = preSolution
		HideSolutionNode = FALSE
	EndGlobalSection
	GlobalSection(NestedProjects) = preSolution
		{A990658C-CE31-4BCC-976F-0FC6B1AF693D} = {5EA20F54-880A-49F3-99FA-4B3FE54E8AB1}
		{A9D95A91-4DB7-4F72-BEB6-FE8A5C89BFBD} = {5EA20F54-880A-49F3-99FA-4B3FE54E8AB1}
		{C38970C0-5FBF-4D69-90D8-CBAC225AE895} = {5EA20F54-880A-49F3-99FA-4B3FE54E8AB1}
		{F7D32BD0-2749-483E-9A0D-1635EF7E3136} = {5EA20F54-880A-49F3-99FA-4B3FE54E8AB1}
		{DA8B35B3-DA00-4B02-BDE6-6A397B3FD46B} = {5EA20F54-880A-49F3-99FA-4B3FE54E8AB1}
		{FCA38F3C-7C73-4C47-BE4E-32F77FA8538D} = {5EA20F54-880A-49F3-99FA-4B3FE54E8AB1}
		{2049DBE9-8D13-42C9-AE4B-413AE38FFFD0} = {5EA20F54-880A-49F3-99FA-4B3FE54E8AB1}
		{84E05BFA-CBAF-4F0D-BFB6-4CE85742A57E} = {5EA20F54-880A-49F3-99FA-4B3FE54E8AB1}
		{EF074BA1-2D54-4D49-A28E-5E040B47CD2E} = {5EA20F54-880A-49F3-99FA-4B3FE54E8AB1}
		{F2824844-CE15-4242-9420-308923CD76C3} = {5EA20F54-880A-49F3-99FA-4B3FE54E8AB1}
		{ADED4FBE-887D-4271-AF24-F0823BCE7961} = {5EA20F54-880A-49F3-99FA-4B3FE54E8AB1}
		{14B93DC8-FD93-4A6D-81CB-8BC96644501C} = {5EA20F54-880A-49F3-99FA-4B3FE54E8AB1}
	EndGlobalSection
	GlobalSection(ExtensibilityGlobals) = postSolution
		SolutionGuid = {D43FAD39-F619-437D-BB40-04A3982ACB6A}
	EndGlobalSection
EndGlobal
"
`;

exports[`C# WinUI3+Hermes Application: App.xaml 1`] = `
"﻿<react:ReactApplication
    x:Class=\\"SnapshotApp.App\\"
    xmlns=\\"http://schemas.microsoft.com/winfx/2006/xaml/presentation\\"
    xmlns:x=\\"http://schemas.microsoft.com/winfx/2006/xaml\\"
    xmlns:local=\\"using:SnapshotApp\\"
    xmlns:react=\\"using:Microsoft.ReactNative\\">
    <Application.Resources>
        <XamlControlsResources xmlns=\\"using:Microsoft.UI.Xaml.Controls\\" />
    </Application.Resources>
</react:ReactApplication>
"
`;

exports[`C# WinUI3+Hermes Application: App.xaml.cs 1`] = `
"using Microsoft.ReactNative;
#if USE_WINUI3
using Microsoft.UI.Xaml;
using Microsoft.UI.Xaml.Controls;
#else
using Windows.ApplicationModel.Activation;
using Windows.UI.Xaml;
using Windows.UI.Xaml.Controls;
#endif

namespace SnapshotApp
{
    sealed partial class App : ReactApplication
    {
        public App()
        {
#if BUNDLE
            JavaScriptBundleFile = \\"index.windows\\";
            InstanceSettings.UseWebDebugger = false;
            InstanceSettings.UseFastRefresh = false;
#else
            JavaScriptBundleFile = \\"index\\";
            InstanceSettings.UseWebDebugger = true;
            InstanceSettings.UseFastRefresh = true;
#endif

#if DEBUG
            InstanceSettings.UseDeveloperSupport = true;
#else
            InstanceSettings.UseDeveloperSupport = false;
#endif

            Microsoft.ReactNative.Managed.AutolinkedNativeModules.RegisterAutolinkedNativeModulePackages(PackageProviders); // Includes any autolinked modules

            PackageProviders.Add(new ReactPackageProvider());

            InitializeComponent();
        }

        /// <summary>
        /// Invoked when the application is launched normally by the end user.  Other entry points
        /// will be used such as when the application is launched to open a specific file.
        /// </summary>
        /// <param name=\\"e\\">Details about the launch request and process.</param>
        protected override void OnLaunched(LaunchActivatedEventArgs e)
        {
            base.OnLaunched(e);
            var frame = (Frame)Window.Current.Content;
            frame.Navigate(typeof(MainPage), e.Arguments);
        }

        /// <summary>
        /// Invoked when the application is activated by some means other than normal launching.
        /// </summary>
        protected override void OnActivated(Windows.ApplicationModel.Activation.IActivatedEventArgs e)
        {
            var preActivationContent = Window.Current.Content;
            base.OnActivated(e);
            if (preActivationContent == null && Window.Current != null)
            {
                // Display the initial content
                var frame = (Frame)Window.Current.Content;
                frame.Navigate(typeof(MainPage), null);
            }
        }
    }
}
"
`;

exports[`C# WinUI3+Hermes Application: AssemblyInfo.cs 1`] = `
"﻿using System.Reflection;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;

// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
[assembly: AssemblyTitle(\\"SnapshotApp\\")]
[assembly: AssemblyDescription(\\"\\")]
[assembly: AssemblyConfiguration(\\"\\")]
[assembly: AssemblyCompany(\\"\\")]
[assembly: AssemblyProduct(\\"SnapshotApp\\")]
[assembly: AssemblyCopyright(\\"Copyright ©  2019\\")]
[assembly: AssemblyTrademark(\\"\\")]
[assembly: AssemblyCulture(\\"\\")]

// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Build and Revision Numbers 
// by using the '*' as shown below:
// [assembly: AssemblyVersion(\\"1.0.*\\")]
[assembly: AssemblyVersion(\\"1.0.0.0\\")]
[assembly: AssemblyFileVersion(\\"1.0.0.0\\")]
[assembly: ComVisible(false)]"
`;

exports[`C# WinUI3+Hermes Application: AutolinkedNativeModules.g.cs 1`] = `
"﻿// AutolinkedNativeModules.g.cs contents generated by \\"react-native autolink-windows\\"

using System.Collections.Generic;

namespace Microsoft.ReactNative.Managed
{
    internal static class AutolinkedNativeModules
    {
        internal static void RegisterAutolinkedNativeModulePackages(IList<IReactPackageProvider> packageProviders)
        { 
        }
    }
}
"
`;

exports[`C# WinUI3+Hermes Application: AutolinkedNativeModules.g.props 1`] = `
"<?xml version=\\"1.0\\" encoding=\\"utf-8\\"?>
<Project xmlns=\\"http://schemas.microsoft.com/developer/msbuild/2003\\">
  <!-- AutolinkedNativeModules.g.props contents generated by \\"react-native autolink-windows\\" -->
  <PropertyGroup>
  </PropertyGroup>
</Project>
"
`;

exports[`C# WinUI3+Hermes Application: AutolinkedNativeModules.g.targets 1`] = `
"<?xml version=\\"1.0\\" encoding=\\"utf-8\\"?>
<Project xmlns=\\"http://schemas.microsoft.com/developer/msbuild/2003\\">
  <!-- AutolinkedNativeModules.g.targets contents generated by \\"react-native autolink-windows\\" -->
  <ItemGroup>
  </ItemGroup>
</Project>
"
`;

exports[`C# WinUI3+Hermes Application: Default.rd.xml 1`] = `
"<!--
    This file contains Runtime Directives used by .NET Native. The defaults here are suitable for most
    developers. However, you can modify these parameters to modify the behavior of the .NET Native
    optimizer.

    Runtime Directives are documented at https://go.microsoft.com/fwlink/?LinkID=391919

    To fully enable reflection for App1.MyClass and all of its public/private members
    <Type Name=\\"App1.MyClass\\" Dynamic=\\"Required All\\"/>

    To enable dynamic creation of the specific instantiation of AppClass<T> over System.Int32
    <TypeInstantiation Name=\\"App1.AppClass\\" Arguments=\\"System.Int32\\" Activate=\\"Required Public\\" />

    Using the Namespace directive to apply reflection policy to all the types in a particular namespace
    <Namespace Name=\\"DataClasses.ViewModels\\" Serialize=\\"All\\" />
-->

<Directives xmlns=\\"http://schemas.microsoft.com/netfx/2013/01/metadata\\">
  <Application>
    <!--
      An Assembly element with Name=\\"*Application*\\" applies to all assemblies in
      the application package. The asterisks are not wildcards.
    -->
    <Assembly Name=\\"*Application*\\" Dynamic=\\"Required All\\" />
    
    
    <!-- Add your application specific runtime directives here. -->
    <Namespace Name=\\"Microsoft.ReactNative\\" Dynamic=\\"Required All\\" MarshalObject=\\"Required All\\" />
    <Namespace Name=\\"Microsoft.ReactNative.Managed\\" Dynamic=\\"Required All\\" MarshalObject=\\"Required All\\" />

  </Application>
</Directives>"
`;

exports[`C# WinUI3+Hermes Application: ExperimentalFeatures.props 1`] = `
"<?xml version=\\"1.0\\" encoding=\\"utf-8\\"?>
<Project xmlns=\\"http://schemas.microsoft.com/developer/msbuild/2003\\">

  <!--
    This file contains some important settings that will apply globally for
    your app and *all* native modules your app consumes. These values were
    set when you created the app project, and in some cases cannot be
    simply changed here without recreating a new project.
  -->

  <PropertyGroup Label=\\"Microsoft.ReactNative Experimental Features\\">
    <!--
      Enables default usage of Hermes.
      
      See https://microsoft.github.io/react-native-windows/docs/hermes
    -->
    <UseHermes>true</UseHermes>

    <!--
      Changes compilation to assume use of WinUI 3 instead of System XAML.
      Requires creation of new project.

      See https://microsoft.github.io/react-native-windows/docs/winui3
    -->
    <UseWinUI3>true</UseWinUI3>

    <!--
      Changes compilation to assume use of Microsoft.ReactNative NuGet packages
      instead of building the framework from source.
      Requires creation of new project.

      See https://microsoft.github.io/react-native-windows/docs/nuget
    -->
    <UseExperimentalNuget>false</UseExperimentalNuget>
  
  </PropertyGroup>

</Project>
"
`;

exports[`C# WinUI3+Hermes Application: MainPage.xaml 1`] = `
"<Page
    x:Class=\\"SnapshotApp.MainPage\\"
    xmlns=\\"http://schemas.microsoft.com/winfx/2006/xaml/presentation\\"
    xmlns:x=\\"http://schemas.microsoft.com/winfx/2006/xaml\\"
    xmlns:local=\\"using:SnapshotApp\\"
    xmlns:react=\\"using:Microsoft.ReactNative\\"
    xmlns:d=\\"http://schemas.microsoft.com/expression/blend/2008\\"
    xmlns:mc=\\"http://schemas.openxmlformats.org/markup-compatibility/2006\\"
    mc:Ignorable=\\"d\\"
    Background=\\"{ThemeResource ApplicationPageBackgroundThemeBrush}\\">
    <react:ReactRootView 
        x:Name=\\"reactRootView\\"
        ComponentName=\\"SnapshotApp\\"
        Background=\\"{ThemeResource ApplicationPageBackgroundThemeBrush}\\"
        MinHeight=\\"400\\"/>
</Page>
"
`;

exports[`C# WinUI3+Hermes Application: MainPage.xaml.cs 1`] = `
"using Microsoft.ReactNative;
using System;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System.Runtime.InteropServices.WindowsRuntime;
using Windows.Foundation;
using Windows.Foundation.Collections;
#if !USE_WINUI3
using Windows.UI.Xaml;
using Windows.UI.Xaml.Controls;
using Windows.UI.Xaml.Controls.Primitives;
using Windows.UI.Xaml.Data;
using Windows.UI.Xaml.Input;
using Windows.UI.Xaml.Media;
using Windows.UI.Xaml.Navigation;
#else
using Microsoft.UI.Xaml;
using Microsoft.UI.Xaml.Controls;
using Microsoft.UI.Xaml.Controls.Primitives;
using Microsoft.UI.Xaml.Data;
using Microsoft.UI.Xaml.Input;
using Microsoft.UI.Xaml.Media;
using Microsoft.UI.Xaml.Navigation;
#endif

// The Blank Page item template is documented at https://go.microsoft.com/fwlink/?LinkId=234238

namespace SnapshotApp
{
    /// <summary>
    /// An empty page that can be used on its own or navigated to within a Frame.
    /// </summary>
    public sealed partial class MainPage : Page
    {
        public MainPage()
        {
            this.InitializeComponent();
            var app = Application.Current as App;
            reactRootView.ReactNativeHost = app.Host;
        }
    }
}
"
`;

exports[`C# WinUI3+Hermes Application: NuGet.Config 1`] = `
"<?xml version=\\"1.0\\" encoding=\\"utf-8\\"?>
<configuration>
  <config>
    <add key=\\"repositoryPath\\" value=\\"packages\\" />
  </config>
  <packageSources>
    <clear />
    <add key=\\"react-native\\" value=\\"https://pkgs.dev.azure.com/ms/react-native/_packaging/react-native-public/nuget/v3/index.json\\" />
    <add key=\\"Nuget.org\\" value=\\"https://api.nuget.org/v3/index.json\\" />
  </packageSources>
  <disabledPackageSources>
    <clear />
  </disabledPackageSources>  
</configuration>
"
`;

exports[`C# WinUI3+Hermes Application: Package.appxmanifest 1`] = `
"﻿<?xml version=\\"1.0\\" encoding=\\"utf-8\\"?>

<Package
  xmlns=\\"http://schemas.microsoft.com/appx/manifest/foundation/windows10\\"
  xmlns:mp=\\"http://schemas.microsoft.com/appx/2014/phone/manifest\\"
  xmlns:uap=\\"http://schemas.microsoft.com/appx/manifest/uap/windows10\\"
  IgnorableNamespaces=\\"uap mp\\">

  <Identity
    Name=\\"e1429392-bccb-4a42-86a4-7d95fcdd96fb\\"
    Publisher=\\"CN=nickg\\"
    Version=\\"1.0.0.0\\" />

  <mp:PhoneIdentity PhoneProductId=\\"e1429392-bccb-4a42-86a4-7d95fcdd96fb\\" PhonePublisherId=\\"00000000-0000-0000-0000-000000000000\\"/>

  <Properties>
    <DisplayName>SnapshotApp</DisplayName>
    <PublisherDisplayName>nickg</PublisherDisplayName>
    <Logo>Assets\\\\StoreLogo.png</Logo>
  </Properties>

  <Dependencies>
    <TargetDeviceFamily Name=\\"Windows.Universal\\" MinVersion=\\"10.0.0.0\\" MaxVersionTested=\\"10.0.0.0\\" />
  </Dependencies>

  <Resources>
    <Resource Language=\\"x-generate\\"/>
  </Resources>

  <Applications>
    <Application
      Id=\\"App\\"
      Executable=\\"$targetnametoken$.exe\\"
      EntryPoint=\\"SnapshotApp.App\\">
      <uap:VisualElements
        DisplayName=\\"SnapshotApp\\"
        Square150x150Logo=\\"Assets\\\\Square150x150Logo.png\\"
        Square44x44Logo=\\"Assets\\\\Square44x44Logo.png\\"
        Description=\\"SnapshotApp\\"
        BackgroundColor=\\"transparent\\">
        <uap:DefaultTile Wide310x150Logo=\\"Assets\\\\Wide310x150Logo.png\\"/>
        <uap:SplashScreen Image=\\"Assets\\\\SplashScreen.png\\" />
      </uap:VisualElements>
    </Application>
  </Applications>

  <Capabilities>
    <Capability Name=\\"internetClient\\" />
  </Capabilities>
</Package>"
`;

exports[`C# WinUI3+Hermes Application: ReactPackageProvider.cs 1`] = `
"using Microsoft.ReactNative;

namespace SnapshotApp
{
    public partial class ReactPackageProvider : IReactPackageProvider
    {
        public void CreatePackage(IReactPackageBuilder packageBuilder)
        {
            CreatePackageImplementation(packageBuilder);
        }

        /// <summary>
        /// This method is implemented by the C# code generator
        /// </summary>
        partial void CreatePackageImplementation(IReactPackageBuilder packageBuilder);
    }
}
"
`;

exports[`C# WinUI3+Hermes Application: SnapshotApp.csproj 1`] = `
"﻿<?xml version=\\"1.0\\" encoding=\\"utf-8\\"?>
<Project ToolsVersion=\\"Current\\" DefaultTargets=\\"Build\\" xmlns=\\"http://schemas.microsoft.com/developer/msbuild/2003\\">
  <Import Project=\\"$(MSBuildExtensionsPath)\\\\$(MSBuildToolsVersion)\\\\Microsoft.Common.props\\" Condition=\\"Exists('$(MSBuildExtensionsPath)\\\\$(MSBuildToolsVersion)\\\\Microsoft.Common.props')\\" />
  <Import Project=\\"$(SolutionDir)\\\\ExperimentalFeatures.props\\" Condition=\\"Exists('$(SolutionDir)\\\\ExperimentalFeatures.props')\\" />
  <PropertyGroup Label=\\"ReactNativeWindowsProps\\">
    <ReactNativeWindowsDir Condition=\\"'$(ReactNativeWindowsDir)' == ''\\">$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), 'node_modules\\\\react-native-windows\\\\package.json'))\\\\node_modules\\\\react-native-windows\\\\</ReactNativeWindowsDir>
  </PropertyGroup>
  <PropertyGroup>
    <Configuration Condition=\\" '$(Configuration)' == '' \\">Debug</Configuration>
    <Platform Condition=\\" '$(Platform)' == '' \\">x86</Platform>
    <ProjectGuid>{DB4EE33E-D6B0-4773-AD9C-ACC0E096BE8F}</ProjectGuid>
    <OutputType>AppContainerExe</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>SnapshotApp</RootNamespace>
    <AssemblyName>SnapshotApp</AssemblyName>
    <DefaultLanguage>en-US</DefaultLanguage>
    <TargetPlatformIdentifier>UAP</TargetPlatformIdentifier>
    <TargetPlatformVersion Condition=\\" '$(TargetPlatformVersion)' == '' \\">10.0.19041.0</TargetPlatformVersion>
    <TargetPlatformMinVersion>10.0.16299.0</TargetPlatformMinVersion>
    <MinimumVisualStudioVersion>16.0</MinimumVisualStudioVersion>
    <FileAlignment>512</FileAlignment>
    <ProjectTypeGuids>{A5A43C5B-DE2A-4C0C-9213-0A381AF9435A};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <WindowsXamlEnableOverview>true</WindowsXamlEnableOverview>
    <AppxGeneratePrisForPortableLibrariesEnabled>false</AppxGeneratePrisForPortableLibrariesEnabled>
    <LangVersion>7.3</LangVersion>
  </PropertyGroup>
  <PropertyGroup Condition=\\"'$(Configuration)|$(Platform)' == 'Debug|x86'\\">
    <DebugSymbols>true</DebugSymbols>
    <OutputPath>bin\\\\x86\\\\Debug\\\\</OutputPath>
    <DefineConstants>DEBUG;TRACE;NETFX_CORE;WINDOWS_UWP</DefineConstants>
    <NoWarn>;2008</NoWarn>
    <DebugType>full</DebugType>
    <PlatformTarget>x86</PlatformTarget>
    <UseVSHostingProcess>false</UseVSHostingProcess>
    <ErrorReport>prompt</ErrorReport>
    <Prefer32Bit>true</Prefer32Bit>
  </PropertyGroup>
  <PropertyGroup Condition=\\"'$(Configuration)|$(Platform)' == 'Release|x86'\\">
    <OutputPath>bin\\\\x86\\\\Release\\\\</OutputPath>
    <DefineConstants>TRACE;NETFX_CORE;WINDOWS_UWP</DefineConstants>
    <Optimize>true</Optimize>
    <NoWarn>;2008</NoWarn>
    <DebugType>pdbonly</DebugType>
    <PlatformTarget>x86</PlatformTarget>
    <UseVSHostingProcess>false</UseVSHostingProcess>
    <ErrorReport>prompt</ErrorReport>
    <Prefer32Bit>true</Prefer32Bit>
    <UseDotNetNativeToolchain>true</UseDotNetNativeToolchain>
  </PropertyGroup>
  <PropertyGroup Condition=\\"'$(Configuration)|$(Platform)' == 'Debug|ARM64'\\">
    <DebugSymbols>true</DebugSymbols>
    <OutputPath>bin\\\\ARM64\\\\Debug\\\\</OutputPath>
    <DefineConstants>DEBUG;TRACE;NETFX_CORE;WINDOWS_UWP</DefineConstants>
    <NoWarn>;2008</NoWarn>
    <DebugType>full</DebugType>
    <PlatformTarget>ARM64</PlatformTarget>
    <UseVSHostingProcess>false</UseVSHostingProcess>
    <ErrorReport>prompt</ErrorReport>
    <Prefer32Bit>true</Prefer32Bit>
  </PropertyGroup>
  <PropertyGroup Condition=\\"'$(Configuration)|$(Platform)' == 'Release|ARM64'\\">
    <OutputPath>bin\\\\ARM64\\\\Release\\\\</OutputPath>
    <DefineConstants>TRACE;NETFX_CORE;WINDOWS_UWP</DefineConstants>
    <Optimize>true</Optimize>
    <NoWarn>;2008</NoWarn>
    <DebugType>pdbonly</DebugType>
    <PlatformTarget>ARM64</PlatformTarget>
    <UseVSHostingProcess>false</UseVSHostingProcess>
    <ErrorReport>prompt</ErrorReport>
    <Prefer32Bit>true</Prefer32Bit>
    <UseDotNetNativeToolchain>true</UseDotNetNativeToolchain>
  </PropertyGroup>
  <PropertyGroup Condition=\\"'$(Configuration)|$(Platform)' == 'Debug|x64'\\">
    <DebugSymbols>true</DebugSymbols>
    <OutputPath>bin\\\\x64\\\\Debug\\\\</OutputPath>
    <DefineConstants>DEBUG;TRACE;NETFX_CORE;WINDOWS_UWP</DefineConstants>
    <NoWarn>;2008</NoWarn>
    <DebugType>full</DebugType>
    <PlatformTarget>x64</PlatformTarget>
    <UseVSHostingProcess>false</UseVSHostingProcess>
    <ErrorReport>prompt</ErrorReport>
    <Prefer32Bit>true</Prefer32Bit>
  </PropertyGroup>
  <PropertyGroup Condition=\\"'$(Configuration)|$(Platform)' == 'Release|x64'\\">
    <OutputPath>bin\\\\x64\\\\Release\\\\</OutputPath>
    <DefineConstants>TRACE;NETFX_CORE;WINDOWS_UWP</DefineConstants>
    <Optimize>true</Optimize>
    <NoWarn>;2008</NoWarn>
    <DebugType>pdbonly</DebugType>
    <PlatformTarget>x64</PlatformTarget>
    <UseVSHostingProcess>false</UseVSHostingProcess>
    <ErrorReport>prompt</ErrorReport>
    <Prefer32Bit>true</Prefer32Bit>
    <UseDotNetNativeToolchain>true</UseDotNetNativeToolchain>
  </PropertyGroup>
  <PropertyGroup>
    <RestoreProjectStyle>PackageReference</RestoreProjectStyle>
  </PropertyGroup>
  <ItemGroup>
    <Compile Include=\\"App.xaml.cs\\">
      <DependentUpon>App.xaml</DependentUpon>
    </Compile>
    <Compile Include=\\"MainPage.xaml.cs\\">
      <DependentUpon>MainPage.xaml</DependentUpon>
    </Compile>
    <Compile Include=\\"Properties\\\\AssemblyInfo.cs\\" />
    <Compile Include=\\"AutolinkedNativeModules.g.cs\\" />
    <Compile Include=\\"ReactPackageProvider.cs\\" />
  </ItemGroup>
  <ItemGroup>
    <AppxManifest Include=\\"Package.appxmanifest\\">
      <SubType>Designer</SubType>
    </AppxManifest>
  </ItemGroup>
  <ItemGroup>
    <Content Include=\\"Properties\\\\Default.rd.xml\\" />
    <Content Include=\\"Assets\\\\LockScreenLogo.scale-200.png\\" />
    <Content Include=\\"Assets\\\\SplashScreen.scale-200.png\\" />
    <Content Include=\\"Assets\\\\Square150x150Logo.scale-200.png\\" />
    <Content Include=\\"Assets\\\\Square44x44Logo.scale-200.png\\" />
    <Content Include=\\"Assets\\\\Square44x44Logo.targetsize-24_altform-unplated.png\\" />
    <Content Include=\\"Assets\\\\StoreLogo.png\\" />
    <Content Include=\\"Assets\\\\Wide310x150Logo.scale-200.png\\" />
  </ItemGroup>
  <ItemGroup>
    <ApplicationDefinition Include=\\"App.xaml\\">
      <Generator>MSBuild:Compile</Generator>
      <SubType>Designer</SubType>
    </ApplicationDefinition>
    <Page Include=\\"MainPage.xaml\\">
      <Generator>MSBuild:Compile</Generator>
      <SubType>Designer</SubType>
    </Page>
  </ItemGroup>
  <PropertyGroup Condition=\\" '$(VisualStudioVersion)' == '' or '$(VisualStudioVersion)' &lt; '16.0' \\">
    <VisualStudioVersion>16.0</VisualStudioVersion>
  </PropertyGroup>
  <Import Project=\\"$(MSBuildExtensionsPath)\\\\Microsoft\\\\WindowsXaml\\\\v$(VisualStudioVersion)\\\\Microsoft.Windows.UI.Xaml.CSharp.targets\\" />
  <ImportGroup Label=\\"ReactNativeWindowsPropertySheets\\">
    <Import Project=\\"$(ReactNativeWindowsDir)\\\\PropertySheets\\\\External\\\\Microsoft.ReactNative.Uwp.CSharpApp.props\\" Condition=\\"Exists('$(ReactNativeWindowsDir)\\\\PropertySheets\\\\External\\\\Microsoft.ReactNative.Uwp.CSharpApp.props')\\" />
  </ImportGroup>
  <Choose>
    <When Condition=\\"'$(UseWinUI3)'!='true'\\">
      <ItemGroup>
        <PackageReference Include=\\"Microsoft.UI.Xaml\\" >
          <Version>$(WinUI2xVersion)</Version>
        </PackageReference>
      </ItemGroup>
    </When>
    <Otherwise>
      <ItemGroup>
        <PackageReference Include=\\"Microsoft.WinUI\\">
          <Version>$(WinUI3Version)</Version>
        </PackageReference>
      </ItemGroup>
    </Otherwise>
  </Choose>
  <ItemGroup>
    <PackageReference Include=\\"Microsoft.NETCore.UniversalWindowsPlatform\\">
      <Version>6.2.9</Version>
    </PackageReference>
    <PackageReference Include=\\"ReactNative.Hermes.Windows\\">
      <Version>0.9.0-ms.6</Version>
    </PackageReference>
  </ItemGroup>
  <ImportGroup Label=\\"ReactNativeWindowsTargets\\">
    <Import Project=\\"$(ReactNativeWindowsDir)\\\\PropertySheets\\\\External\\\\Microsoft.ReactNative.Uwp.CSharpApp.targets\\" Condition=\\"Exists('$(ReactNativeWindowsDir)\\\\PropertySheets\\\\External\\\\Microsoft.ReactNative.Uwp.CSharpApp.targets')\\" />
  </ImportGroup>
  <Target Name=\\"EnsureReactNativeWindowsTargets\\" BeforeTargets=\\"PrepareForBuild\\">
    <PropertyGroup>
      <ErrorText>This project references targets in your node_modules\\\\react-native-windows folder that are missing. The missing file is {0}.</ErrorText>
    </PropertyGroup>
    <Error Condition=\\"!Exists('$(ReactNativeWindowsDir)\\\\PropertySheets\\\\External\\\\Microsoft.ReactNative.Uwp.CSharpApp.props')\\" Text=\\"$([System.String]::Format('$(ErrorText)', '$(ReactNativeWindowsDir)\\\\PropertySheets\\\\External\\\\Microsoft.ReactNative.Uwp.CSharpApp.props'))\\" />
    <Error Condition=\\"!Exists('$(ReactNativeWindowsDir)\\\\PropertySheets\\\\External\\\\Microsoft.ReactNative.Uwp.CSharpApp.targets')\\" Text=\\"$([System.String]::Format('$(ErrorText)', '$(ReactNativeWindowsDir)\\\\PropertySheets\\\\External\\\\Microsoft.ReactNative.Uwp.CSharpApp.targets'))\\" />
  </Target>
</Project>
"
`;

exports[`C# WinUI3+Hermes Application: SnapshotApp.sln 1`] = `
"﻿
Microsoft Visual Studio Solution File, Format Version 12.00
# Visual Studio Version 16
VisualStudioVersion = 16.0.29215.179
MinimumVisualStudioVersion = 10.0.40219.1
Project(\\"{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}\\") = \\"SnapshotApp\\", \\"SnapshotApp\\\\SnapshotApp.csproj\\", \\"{DB4EE33E-D6B0-4773-AD9C-ACC0E096BE8F}\\"
EndProject
Project(\\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\\") = \\"Folly\\", \\"..\\\\node_modules\\\\react-native-windows\\\\Folly\\\\Folly.vcxproj\\", \\"{A990658C-CE31-4BCC-976F-0FC6B1AF693D}\\"
EndProject
Project(\\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\\") = \\"fmt\\", \\"..\\\\node_modules\\\\react-native-windows\\\\fmt\\\\fmt.vcxproj\\", \\"{14B93DC8-FD93-4A6D-81CB-8BC96644501C}\\"
EndProject
Project(\\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\\") = \\"ReactCommon\\", \\"..\\\\node_modules\\\\react-native-windows\\\\ReactCommon\\\\ReactCommon.vcxproj\\", \\"{A9D95A91-4DB7-4F72-BEB6-FE8A5C89BFBD}\\"
	ProjectSection(ProjectDependencies) = postProject
		{A990658C-CE31-4BCC-976F-0FC6B1AF693D} = {A990658C-CE31-4BCC-976F-0FC6B1AF693D}
	EndProjectSection
EndProject
Project(\\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\\") = \\"Chakra\\", \\"..\\\\node_modules\\\\react-native-windows\\\\Chakra\\\\Chakra.vcxitems\\", \\"{C38970C0-5FBF-4D69-90D8-CBAC225AE895}\\"
EndProject
Project(\\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\\") = \\"Microsoft.ReactNative\\", \\"..\\\\node_modules\\\\react-native-windows\\\\Microsoft.ReactNative\\\\Microsoft.ReactNative.vcxproj\\", \\"{F7D32BD0-2749-483E-9A0D-1635EF7E3136}\\"
EndProject
Project(\\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\\") = \\"Microsoft.ReactNative.Cxx\\", \\"..\\\\node_modules\\\\react-native-windows\\\\Microsoft.ReactNative.Cxx\\\\Microsoft.ReactNative.Cxx.vcxitems\\", \\"{DA8B35B3-DA00-4B02-BDE6-6A397B3FD46B}\\"
EndProject
Project(\\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\\") = \\"Common\\", \\"..\\\\node_modules\\\\react-native-windows\\\\Common\\\\Common.vcxproj\\", \\"{FCA38F3C-7C73-4C47-BE4E-32F77FA8538D}\\"
EndProject
Project(\\"{2150E333-8FDC-42A3-9474-1A3956D46DE8}\\") = \\"ReactNative\\", \\"ReactNative\\", \\"{5EA20F54-880A-49F3-99FA-4B3FE54E8AB1}\\"
EndProject
Project(\\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\\") = \\"Microsoft.ReactNative.Shared\\", \\"..\\\\node_modules\\\\react-native-windows\\\\Shared\\\\Shared.vcxitems\\", \\"{2049DBE9-8D13-42C9-AE4B-413AE38FFFD0}\\"
EndProject
Project(\\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\\") = \\"Mso\\", \\"..\\\\node_modules\\\\react-native-windows\\\\Mso\\\\Mso.vcxitems\\", \\"{84E05BFA-CBAF-4F0D-BFB6-4CE85742A57E}\\"
EndProject
Project(\\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\\") = \\"Include\\", \\"..\\\\node_modules\\\\react-native-windows\\\\include\\\\Include.vcxitems\\", \\"{EF074BA1-2D54-4D49-A28E-5E040B47CD2E}\\"
EndProject
Project(\\"{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}\\") = \\"Microsoft.ReactNative.Managed\\", \\"..\\\\node_modules\\\\react-native-windows\\\\Microsoft.ReactNative.Managed\\\\Microsoft.ReactNative.Managed.csproj\\", \\"{F2824844-CE15-4242-9420-308923CD76C3}\\"
EndProject
Project(\\"{9A19103F-16F7-4668-BE54-9A1E7A4F7556}\\") = \\"Microsoft.ReactNative.Managed.CodeGen\\", \\"..\\\\node_modules\\\\react-native-windows\\\\Microsoft.ReactNative.Managed.CodeGen\\\\Microsoft.ReactNative.Managed.CodeGen.csproj\\", \\"{ADED4FBE-887D-4271-AF24-F0823BCE7961}\\"
EndProject
Global
	GlobalSection(SharedMSBuildProjectFiles) = preSolution
		..\\\\node_modules\\\\react-native-windows\\\\Shared\\\\Shared.vcxitems*{2049dbe9-8d13-42c9-ae4b-413ae38fffd0}*SharedItemsImports = 9
		..\\\\node_modules\\\\react-native-windows\\\\Mso\\\\Mso.vcxitems*{84e05bfa-cbaf-4f0d-bfb6-4ce85742a57e}*SharedItemsImports = 9
		..\\\\node_modules\\\\react-native-windows\\\\Chakra\\\\Chakra.vcxitems*{c38970c0-5fbf-4d69-90d8-cbac225ae895}*SharedItemsImports = 9
		..\\\\node_modules\\\\react-native-windows\\\\Microsoft.ReactNative.Cxx\\\\Microsoft.ReactNative.Cxx.vcxitems*{da8b35b3-da00-4b02-bde6-6a397b3fd46b}*SharedItemsImports = 9
		..\\\\node_modules\\\\react-native-windows\\\\include\\\\Include.vcxitems*{ef074ba1-2d54-4d49-a28e-5e040b47cd2e}*SharedItemsImports = 9
		..\\\\node_modules\\\\react-native-windows\\\\Chakra\\\\Chakra.vcxitems*{f7d32bd0-2749-483e-9a0d-1635ef7e3136}*SharedItemsImports = 4
		..\\\\node_modules\\\\react-native-windows\\\\Microsoft.ReactNative.Cxx\\\\Microsoft.ReactNative.Cxx.vcxitems*{f7d32bd0-2749-483e-9a0d-1635ef7e3136}*SharedItemsImports = 4
		..\\\\node_modules\\\\react-native-windows\\\\Mso\\\\Mso.vcxitems*{f7d32bd0-2749-483e-9a0d-1635ef7e3136}*SharedItemsImports = 4
		..\\\\node_modules\\\\react-native-windows\\\\Shared\\\\Shared.vcxitems*{f7d32bd0-2749-483e-9a0d-1635ef7e3136}*SharedItemsImports = 4
	EndGlobalSection
	GlobalSection(SolutionConfigurationPlatforms) = preSolution
		Debug|ARM64 = Debug|ARM64
		Debug|x64 = Debug|x64
		Debug|x86 = Debug|x86
		Release|ARM64 = Release|ARM64
		Release|x64 = Release|x64
		Release|x86 = Release|x86
	EndGlobalSection
	GlobalSection(ProjectConfigurationPlatforms) = postSolution
		{DB4EE33E-D6B0-4773-AD9C-ACC0E096BE8F}.Debug|ARM64.ActiveCfg = Debug|ARM64
		{DB4EE33E-D6B0-4773-AD9C-ACC0E096BE8F}.Debug|ARM64.Build.0 = Debug|ARM64
		{DB4EE33E-D6B0-4773-AD9C-ACC0E096BE8F}.Debug|ARM64.Deploy.0 = Debug|ARM64
		{DB4EE33E-D6B0-4773-AD9C-ACC0E096BE8F}.Debug|x64.ActiveCfg = Debug|x64
		{DB4EE33E-D6B0-4773-AD9C-ACC0E096BE8F}.Debug|x64.Build.0 = Debug|x64
		{DB4EE33E-D6B0-4773-AD9C-ACC0E096BE8F}.Debug|x64.Deploy.0 = Debug|x64
		{DB4EE33E-D6B0-4773-AD9C-ACC0E096BE8F}.Debug|x86.ActiveCfg = Debug|x86
		{DB4EE33E-D6B0-4773-AD9C-ACC0E096BE8F}.Debug|x86.Build.0 = Debug|x86
		{DB4EE33E-D6B0-4773-AD9C-ACC0E096BE8F}.Debug|x86.Deploy.0 = Debug|x86
		{DB4EE33E-D6B0-4773-AD9C-ACC0E096BE8F}.Release|ARM64.ActiveCfg = Release|ARM64
		{DB4EE33E-D6B0-4773-AD9C-ACC0E096BE8F}.Release|ARM64.Build.0 = Release|ARM64
		{DB4EE33E-D6B0-4773-AD9C-ACC0E096BE8F}.Release|ARM64.Deploy.0 = Release|ARM64
		{DB4EE33E-D6B0-4773-AD9C-ACC0E096BE8F}.Release|x64.ActiveCfg = Release|x64
		{DB4EE33E-D6B0-4773-AD9C-ACC0E096BE8F}.Release|x64.Build.0 = Release|x64
		{DB4EE33E-D6B0-4773-AD9C-ACC0E096BE8F}.Release|x64.Deploy.0 = Release|x64
		{DB4EE33E-D6B0-4773-AD9C-ACC0E096BE8F}.Release|x86.ActiveCfg = Release|x86
		{DB4EE33E-D6B0-4773-AD9C-ACC0E096BE8F}.Release|x86.Build.0 = Release|x86
		{DB4EE33E-D6B0-4773-AD9C-ACC0E096BE8F}.Release|x86.Deploy.0 = Release|x86
		{A990658C-CE31-4BCC-976F-0FC6B1AF693D}.Debug|ARM64.ActiveCfg = Debug|ARM64
		{A990658C-CE31-4BCC-976F-0FC6B1AF693D}.Debug|ARM64.Build.0 = Debug|ARM64
		{A990658C-CE31-4BCC-976F-0FC6B1AF693D}.Debug|x64.ActiveCfg = Debug|x64
		{A990658C-CE31-4BCC-976F-0FC6B1AF693D}.Debug|x64.Build.0 = Debug|x64
		{A990658C-CE31-4BCC-976F-0FC6B1AF693D}.Debug|x86.ActiveCfg = Debug|Win32
		{A990658C-CE31-4BCC-976F-0FC6B1AF693D}.Debug|x86.Build.0 = Debug|Win32
		{A990658C-CE31-4BCC-976F-0FC6B1AF693D}.Release|ARM64.ActiveCfg = Release|ARM64
		{A990658C-CE31-4BCC-976F-0FC6B1AF693D}.Release|ARM64.Build.0 = Release|ARM64
		{A990658C-CE31-4BCC-976F-0FC6B1AF693D}.Release|x64.ActiveCfg = Release|x64
		{A990658C-CE31-4BCC-976F-0FC6B1AF693D}.Release|x64.Build.0 = Release|x64
		{A990658C-CE31-4BCC-976F-0FC6B1AF693D}.Release|x86.ActiveCfg = Release|Win32
		{A990658C-CE31-4BCC-976F-0FC6B1AF693D}.Release|x86.Build.0 = Release|Win32
		{A9D95A91-4DB7-4F72-BEB6-FE8A5C89BFBD}.Debug|ARM64.ActiveCfg = Debug|ARM64
		{A9D95A91-4DB7-4F72-BEB6-FE8A5C89BFBD}.Debug|ARM64.Build.0 = Debug|ARM64
		{A9D95A91-4DB7-4F72-BEB6-FE8A5C89BFBD}.Debug|x64.ActiveCfg = Debug|x64
		{A9D95A91-4DB7-4F72-BEB6-FE8A5C89BFBD}.Debug|x64.Build.0 = Debug|x64
		{A9D95A91-4DB7-4F72-BEB6-FE8A5C89BFBD}.Debug|x86.ActiveCfg = Debug|Win32
		{A9D95A91-4DB7-4F72-BEB6-FE8A5C89BFBD}.Debug|x86.Build.0 = Debug|Win32
		{A9D95A91-4DB7-4F72-BEB6-FE8A5C89BFBD}.Release|ARM64.ActiveCfg = Release|ARM64
		{A9D95A91-4DB7-4F72-BEB6-FE8A5C89BFBD}.Release|ARM64.Build.0 = Release|ARM64
		{A9D95A91-4DB7-4F72-BEB6-FE8A5C89BFBD}.Release|x64.ActiveCfg = Release|x64
		{A9D95A91-4DB7-4F72-BEB6-FE8A5C89BFBD}.Release|x64.Build.0 = Release|x64
		{A9D95A91-4DB7-4F72-BEB6-FE8A5C89BFBD}.Release|x86.ActiveCfg = Release|Win32
		{A9D95A91-4DB7-4F72-BEB6-FE8A5C89BFBD}.Release|x86.Build.0 = Release|Win32
		{F7D32BD0-2749-483E-9A0D-1635EF7E3136}.Debug|ARM64.ActiveCfg = Debug|ARM64
		{F7D32BD0-2749-483E-9A0D-1635EF7E3136}.Debug|ARM64.Build.0 = Debug|ARM64
		{F7D32BD0-2749-483E-9A0D-1635EF7E3136}.Debug|x64.ActiveCfg = Debug|x64
		{F7D32BD0-2749-483E-9A0D-1635EF7E3136}.Debug|x64.Build.0 = Debug|x64
		{F7D32BD0-2749-483E-9A0D-1635EF7E3136}.Debug|x86.ActiveCfg = Debug|Win32
		{F7D32BD0-2749-483E-9A0D-1635EF7E3136}.Debug|x86.Build.0 = Debug|Win32
		{F7D32BD0-2749-483E-9A0D-1635EF7E3136}.Release|ARM64.ActiveCfg = Release|ARM64
		{F7D32BD0-2749-483E-9A0D-1635EF7E3136}.Release|ARM64.Build.0 = Release|ARM64
		{F7D32BD0-2749-483E-9A0D-1635EF7E3136}.Release|x64.ActiveCfg = Release|x64
		{F7D32BD0-2749-483E-9A0D-1635EF7E3136}.Release|x64.Build.0 = Release|x64
		{F7D32BD0-2749-483E-9A0D-1635EF7E3136}.Release|x86.ActiveCfg = Release|Win32
		{F7D32BD0-2749-483E-9A0D-1635EF7E3136}.Release|x86.Build.0 = Release|Win32
		{FCA38F3C-7C73-4C47-BE4E-32F77FA8538D}.Debug|ARM64.ActiveCfg = Debug|ARM64
		{FCA38F3C-7C73-4C47-BE4E-32F77FA8538D}.Debug|ARM64.Build.0 = Debug|ARM64
		{FCA38F3C-7C73-4C47-BE4E-32F77FA8538D}.Debug|x64.ActiveCfg = Debug|x64
		{FCA38F3C-7C73-4C47-BE4E-32F77FA8538D}.Debug|x64.Build.0 = Debug|x64
		{FCA38F3C-7C73-4C47-BE4E-32F77FA8538D}.Debug|x86.ActiveCfg = Debug|Win32
		{FCA38F3C-7C73-4C47-BE4E-32F77FA8538D}.Debug|x86.Build.0 = Debug|Win32
		{FCA38F3C-7C73-4C47-BE4E-32F77FA8538D}.Release|ARM64.ActiveCfg = Release|ARM64
		{FCA38F3C-7C73-4C47-BE4E-32F77FA8538D}.Release|ARM64.Build.0 = Release|ARM64
		{FCA38F3C-7C73-4C47-BE4E-32F77FA8538D}.Release|x64.ActiveCfg = Release|x64
		{FCA38F3C-7C73-4C47-BE4E-32F77FA8538D}.Release|x64.Build.0 = Release|x64
		{FCA38F3C-7C73-4C47-BE4E-32F77FA8538D}.Release|x86.ActiveCfg = Release|Win32
		{FCA38F3C-7C73-4C47-BE4E-32F77FA8538D}.Release|x86.Build.0 = Release|Win32
		{F2824844-CE15-4242-9420-308923CD76C3}.Debug|ARM64.ActiveCfg = Debug|ARM64
		{F2824844-CE15-4242-9420-308923CD76C3}.Debug|ARM64.Build.0 = Debug|ARM64
		{F2824844-CE15-4242-9420-308923CD76C3}.Debug|x64.ActiveCfg = Debug|x64
		{F2824844-CE15-4242-9420-308923CD76C3}.Debug|x64.Build.0 = Debug|x64
		{F2824844-CE15-4242-9420-308923CD76C3}.Debug|x86.ActiveCfg = Debug|x86
		{F2824844-CE15-4242-9420-308923CD76C3}.Debug|x86.Build.0 = Debug|x86
		{F2824844-CE15-4242-9420-308923CD76C3}.Release|ARM64.ActiveCfg = Release|ARM64
		{F2824844-CE15-4242-9420-308923CD76C3}.Release|ARM64.Build.0 = Release|ARM64
		{F2824844-CE15-4242-9420-308923CD76C3}.Release|x64.ActiveCfg = Release|x64
		{F2824844-CE15-4242-9420-308923CD76C3}.Release|x64.Build.0 = Release|x64
		{F2824844-CE15-4242-9420-308923CD76C3}.Release|x86.ActiveCfg = Release|x86
		{F2824844-CE15-4242-9420-308923CD76C3}.Release|x86.Build.0 = Release|x86
		{ADED4FBE-887D-4271-AF24-F0823BCE7961}.Debug|ARM64.ActiveCfg = Debug|ARM64
		{ADED4FBE-887D-4271-AF24-F0823BCE7961}.Debug|ARM64.Build.0 = Debug|ARM64
		{ADED4FBE-887D-4271-AF24-F0823BCE7961}.Debug|x64.ActiveCfg = Debug|x64
		{ADED4FBE-887D-4271-AF24-F0823BCE7961}.Debug|x64.Build.0 = Debug|x64
		{ADED4FBE-887D-4271-AF24-F0823BCE7961}.Debug|x86.ActiveCfg = Debug|x86
		{ADED4FBE-887D-4271-AF24-F0823BCE7961}.Debug|x86.Build.0 = Debug|x86
		{ADED4FBE-887D-4271-AF24-F0823BCE7961}.Release|ARM64.ActiveCfg = Release|ARM64
		{ADED4FBE-887D-4271-AF24-F0823BCE7961}.Release|ARM64.Build.0 = Release|ARM64
		{ADED4FBE-887D-4271-AF24-F0823BCE7961}.Release|x64.ActiveCfg = Release|x64
		{ADED4FBE-887D-4271-AF24-F0823BCE7961}.Release|x64.Build.0 = Release|x64
		{ADED4FBE-887D-4271-AF24-F0823BCE7961}.Release|x86.ActiveCfg = Release|x86
		{ADED4FBE-887D-4271-AF24-F0823BCE7961}.Release|x86.Build.0 = Release|x86
		{14B93DC8-FD93-4A6D-81CB-8BC96644501C}.Debug|ARM64.ActiveCfg = Debug|ARM64
		{14B93DC8-FD93-4A6D-81CB-8BC96644501C}.Debug|ARM64.Build.0 = Debug|ARM64
		{14B93DC8-FD93-4A6D-81CB-8BC96644501C}.Debug|x64.ActiveCfg = Debug|x64
		{14B93DC8-FD93-4A6D-81CB-8BC96644501C}.Debug|x64.Build.0 = Debug|x64
		{14B93DC8-FD93-4A6D-81CB-8BC96644501C}.Debug|x86.ActiveCfg = Debug|Win32
		{14B93DC8-FD93-4A6D-81CB-8BC96644501C}.Debug|x86.Build.0 = Debug|Win32
		{14B93DC8-FD93-4A6D-81CB-8BC96644501C}.Debug|x86.Deploy.0 = Debug|Win32
		{14B93DC8-FD93-4A6D-81CB-8BC96644501C}.Release|ARM64.ActiveCfg = Release|ARM64
		{14B93DC8-FD93-4A6D-81CB-8BC96644501C}.Release|ARM64.Build.0 = Release|ARM64
		{14B93DC8-FD93-4A6D-81CB-8BC96644501C}.Release|x64.ActiveCfg = Release|x64
		{14B93DC8-FD93-4A6D-81CB-8BC96644501C}.Release|x64.Build.0 = Release|x64
		{14B93DC8-FD93-4A6D-81CB-8BC96644501C}.Release|x86.ActiveCfg = Release|Win32
		{14B93DC8-FD93-4A6D-81CB-8BC96644501C}.Release|x86.Build.0 = Release|Win32
		{14B93DC8-FD93-4A6D-81CB-8BC96644501C}.Release|x86.Deploy.0 = Release|Win32
	EndGlobalSection
	GlobalSection(SolutionProperties) = preSolution
		HideSolutionNode = FALSE
	EndGlobalSection
	GlobalSection(NestedProjects) = preSolution
		{A990658C-CE31-4BCC-976F-0FC6B1AF693D} = {5EA20F54-880A-49F3-99FA-4B3FE54E8AB1}
		{A9D95A91-4DB7-4F72-BEB6-FE8A5C89BFBD} = {5EA20F54-880A-49F3-99FA-4B3FE54E8AB1}
		{C38970C0-5FBF-4D69-90D8-CBAC225AE895} = {5EA20F54-880A-49F3-99FA-4B3FE54E8AB1}
		{F7D32BD0-2749-483E-9A0D-1635EF7E3136} = {5EA20F54-880A-49F3-99FA-4B3FE54E8AB1}
		{DA8B35B3-DA00-4B02-BDE6-6A397B3FD46B} = {5EA20F54-880A-49F3-99FA-4B3FE54E8AB1}
		{FCA38F3C-7C73-4C47-BE4E-32F77FA8538D} = {5EA20F54-880A-49F3-99FA-4B3FE54E8AB1}
		{2049DBE9-8D13-42C9-AE4B-413AE38FFFD0} = {5EA20F54-880A-49F3-99FA-4B3FE54E8AB1}
		{84E05BFA-CBAF-4F0D-BFB6-4CE85742A57E} = {5EA20F54-880A-49F3-99FA-4B3FE54E8AB1}
		{EF074BA1-2D54-4D49-A28E-5E040B47CD2E} = {5EA20F54-880A-49F3-99FA-4B3FE54E8AB1}
		{F2824844-CE15-4242-9420-308923CD76C3} = {5EA20F54-880A-49F3-99FA-4B3FE54E8AB1}
		{ADED4FBE-887D-4271-AF24-F0823BCE7961} = {5EA20F54-880A-49F3-99FA-4B3FE54E8AB1}
		{14B93DC8-FD93-4A6D-81CB-8BC96644501C} = {5EA20F54-880A-49F3-99FA-4B3FE54E8AB1}
	EndGlobalSection
	GlobalSection(ExtensibilityGlobals) = postSolution
		SolutionGuid = {D43FAD39-F619-437D-BB40-04A3982ACB6A}
	EndGlobalSection
EndGlobal
"
`;

exports[`C# WinUI3+Hermes Application: index.windows.bundle 1`] = `
"/**
 * 
 * Be sure to generate this file using the CLI:
 *
 * npx react-native bundle --platform windows --entry-file index.js 
 *   --bundle-output windows\\\\SnapshotApp\\\\Bundle\\\\index.windows.bundle
 *   --assets-dest windows\\\\SnapshotApp\\\\Bundle
 *
 */"
`;

exports[`C# WinUI3+Hermes Application: metro.config.js 1`] = `
"/**
 * Metro configuration for React Native
 * https://github.com/facebook/react-native
 *
 * @format
 */
const fs = require('fs');
const path = require('path');
const exclusionList = require('metro-config/src/defaults/exclusionList');

const rnwPath = fs.realpathSync(
  path.resolve(require.resolve('react-native-windows/package.json'), '..'),
);

module.exports = {
  resolver: {
    blockList: exclusionList([
      // This stops \\"react-native run-windows\\" from causing the metro server to crash if its already running
      new RegExp(
        \`\${path.resolve(__dirname, 'windows').replace(/[/\\\\\\\\]/g, '/')}.*\`,
      ),
      // This prevents \\"react-native run-windows\\" from hitting: EBUSY: resource busy or locked, open msbuild.ProjectImports.zip or other files produced by msbuild
      new RegExp(\`\${rnwPath}/build/.*\`),
      new RegExp(\`\${rnwPath}/target/.*\`),
      /.*\\\\.ProjectImports\\\\.zip/,
    ]),
  },
  transformer: {
    getTransformOptions: async () => ({
      transform: {
        experimentalImportSupport: false,
        inlineRequires: true,
      },
    }),
  },
};
"
`;

exports[`C# WinUI3+Hermes Library: AssemblyInfo.cs 1`] = `
"﻿using System.Reflection;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;

// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
[assembly: AssemblyTitle(\\"SnapshotApp\\")]
[assembly: AssemblyDescription(\\"\\")]
[assembly: AssemblyConfiguration(\\"\\")]
[assembly: AssemblyCompany(\\"\\")]
[assembly: AssemblyProduct(\\"SnapshotApp\\")]
[assembly: AssemblyCopyright(\\"Copyright ©  2019\\")]
[assembly: AssemblyTrademark(\\"\\")]
[assembly: AssemblyCulture(\\"\\")]

// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Build and Revision Numbers 
// by using the '*' as shown below:
// [assembly: AssemblyVersion(\\"1.0.*\\")]
[assembly: AssemblyVersion(\\"1.0.0.0\\")]
[assembly: AssemblyFileVersion(\\"1.0.0.0\\")]
[assembly: ComVisible(false)]"
`;

exports[`C# WinUI3+Hermes Library: Default.rd.xml 1`] = `
"<!--
    This file contains Runtime Directives used by .NET Native. The defaults here are suitable for most
    developers. However, you can modify these parameters to modify the behavior of the .NET Native
    optimizer.

    Runtime Directives are documented at https://go.microsoft.com/fwlink/?LinkID=391919

    To fully enable reflection for App1.MyClass and all of its public/private members
    <Type Name=\\"App1.MyClass\\" Dynamic=\\"Required All\\"/>

    To enable dynamic creation of the specific instantiation of AppClass<T> over System.Int32
    <TypeInstantiation Name=\\"App1.AppClass\\" Arguments=\\"System.Int32\\" Activate=\\"Required Public\\" />

    Using the Namespace directive to apply reflection policy to all the types in a particular namespace
    <Namespace Name=\\"DataClasses.ViewModels\\" Serialize=\\"All\\" />
-->

<Directives xmlns=\\"http://schemas.microsoft.com/netfx/2013/01/metadata\\">
  <Application>
    <!--
      An Assembly element with Name=\\"*Application*\\" applies to all assemblies in
      the application package. The asterisks are not wildcards.
    -->
    <Assembly Name=\\"*Application*\\" Dynamic=\\"Required All\\" />
    
    
    <!-- Add your application specific runtime directives here. -->
    <Namespace Name=\\"Microsoft.ReactNative\\" Dynamic=\\"Required All\\" MarshalObject=\\"Required All\\" />
    <Namespace Name=\\"Microsoft.ReactNative.Managed\\" Dynamic=\\"Required All\\" MarshalObject=\\"Required All\\" />

  </Application>
</Directives>"
`;

exports[`C# WinUI3+Hermes Library: ExperimentalFeatures.props 1`] = `
"<?xml version=\\"1.0\\" encoding=\\"utf-8\\"?>
<Project xmlns=\\"http://schemas.microsoft.com/developer/msbuild/2003\\">

  <!--
    Application projects contain a file with this name to specify some important settings
    that will apply globally for the app and *all* native modules the app consumes. These
    values are set by the app developer.
  -->

</Project>
"
`;

exports[`C# WinUI3+Hermes Library: NuGet.Config 1`] = `
"<?xml version=\\"1.0\\" encoding=\\"utf-8\\"?>
<configuration>
  <config>
    <add key=\\"repositoryPath\\" value=\\"packages\\" />
  </config>
  <packageSources>
    <clear />
    <add key=\\"react-native\\" value=\\"https://pkgs.dev.azure.com/ms/react-native/_packaging/react-native-public/nuget/v3/index.json\\" />
    <add key=\\"Nuget.org\\" value=\\"https://api.nuget.org/v3/index.json\\" />
  </packageSources>
  <disabledPackageSources>
    <clear />
  </disabledPackageSources>  
</configuration>
"
`;

exports[`C# WinUI3+Hermes Library: ReactNativeModule.cs 1`] = `
"﻿using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

using Microsoft.ReactNative;
using Microsoft.ReactNative.Managed;

namespace SnapshotApp
{
    [ReactModule(\\"SnapshotApp\\")]
    internal sealed class ReactNativeModule
    {
        // See https://microsoft.github.io/react-native-windows/docs/native-modules for details on writing native modules

        private ReactContext _reactContext;

        [ReactInitializer]
        public void Initialize(ReactContext reactContext)
        {
            _reactContext = reactContext;
        }

        [ReactMethod]
        public void sampleMethod(string stringArgument, int numberArgument, Action<string> callback)
        {
            // TODO: Implement some actually useful functionality
            callback(\\"Received numberArgument: \\" + numberArgument + \\" stringArgument: \\" + stringArgument);
        }
    }
}
"
`;

exports[`C# WinUI3+Hermes Library: ReactPackageProvider.cs 1`] = `
"using Microsoft.ReactNative;

namespace SnapshotApp
{
    public partial class ReactPackageProvider : IReactPackageProvider
    {
        public void CreatePackage(IReactPackageBuilder packageBuilder)
        {
            CreatePackageImplementation(packageBuilder);
        }

        /// <summary>
        /// This method is implemented by the C# code generator
        /// </summary>
        partial void CreatePackageImplementation(IReactPackageBuilder packageBuilder);
    }
}
"
`;

exports[`C# WinUI3+Hermes Library: SnapshotApp.csproj 1`] = `
"﻿<?xml version=\\"1.0\\" encoding=\\"utf-8\\"?>
<Project ToolsVersion=\\"Current\\" DefaultTargets=\\"Build\\" xmlns=\\"http://schemas.microsoft.com/developer/msbuild/2003\\">
  <Import Project=\\"$(MSBuildExtensionsPath)\\\\$(MSBuildToolsVersion)\\\\Microsoft.Common.props\\" Condition=\\"Exists('$(MSBuildExtensionsPath)\\\\$(MSBuildToolsVersion)\\\\Microsoft.Common.props')\\" />
  <Import Project=\\"$(SolutionDir)\\\\ExperimentalFeatures.props\\" Condition=\\"Exists('$(SolutionDir)\\\\ExperimentalFeatures.props')\\" />
  <PropertyGroup Label=\\"ReactNativeWindowsProps\\">
    <ReactNativeWindowsDir Condition=\\"'$(ReactNativeWindowsDir)' == ''\\">$([MSBuild]::GetDirectoryNameOfFileAbove($(SolutionDir), 'node_modules\\\\react-native-windows\\\\package.json'))\\\\node_modules\\\\react-native-windows\\\\</ReactNativeWindowsDir>
  </PropertyGroup>
  <PropertyGroup>
    <Configuration Condition=\\" '$(Configuration)' == '' \\">Debug</Configuration>
    <Platform Condition=\\" '$(Platform)' == '' \\">x86</Platform>
    <ProjectGuid>{A0673CE7-D78B-4166-AD56-E2E84169D748}</ProjectGuid>
    <OutputType>winmdobj</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>SnapshotApp</RootNamespace>
    <AssemblyName>SnapshotApp</AssemblyName>
    <DefaultLanguage>en-US</DefaultLanguage>
    <TargetPlatformIdentifier>UAP</TargetPlatformIdentifier>
    <TargetPlatformVersion Condition=\\" '$(TargetPlatformVersion)' == '' \\">10.0.19041.0</TargetPlatformVersion>
    <TargetPlatformMinVersion>10.0.16299.0</TargetPlatformMinVersion>
    <MinimumVisualStudioVersion>16.0</MinimumVisualStudioVersion>
    <FileAlignment>512</FileAlignment>
    <ProjectTypeGuids>{A5A43C5B-DE2A-4C0C-9213-0A381AF9435A};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <WindowsXamlEnableOverview>true</WindowsXamlEnableOverview>
    <LangVersion>7.3</LangVersion>
  </PropertyGroup>
  <PropertyGroup Condition=\\"'$(Configuration)|$(Platform)' == 'Debug|x86'\\">
    <DebugSymbols>true</DebugSymbols>
    <OutputPath>bin\\\\x86\\\\Debug\\\\</OutputPath>
    <DefineConstants>DEBUG;TRACE;NETFX_CORE;WINDOWS_UWP</DefineConstants>
    <NoWarn>;2008</NoWarn>
    <DebugType>full</DebugType>
    <PlatformTarget>x86</PlatformTarget>
    <UseVSHostingProcess>false</UseVSHostingProcess>
    <ErrorReport>prompt</ErrorReport>
    <Prefer32Bit>true</Prefer32Bit>
  </PropertyGroup>
  <PropertyGroup Condition=\\"'$(Configuration)|$(Platform)' == 'Release|x86'\\">
    <OutputPath>bin\\\\x86\\\\Release\\\\</OutputPath>
    <DefineConstants>TRACE;NETFX_CORE;WINDOWS_UWP</DefineConstants>
    <Optimize>true</Optimize>
    <NoWarn>;2008</NoWarn>
    <DebugType>pdbonly</DebugType>
    <PlatformTarget>x86</PlatformTarget>
    <UseVSHostingProcess>false</UseVSHostingProcess>
    <ErrorReport>prompt</ErrorReport>
    <Prefer32Bit>true</Prefer32Bit>
    <UseDotNetNativeToolchain>true</UseDotNetNativeToolchain>
  </PropertyGroup>
  <PropertyGroup Condition=\\"'$(Configuration)|$(Platform)' == 'Debug|ARM64'\\">
    <DebugSymbols>true</DebugSymbols>
    <OutputPath>bin\\\\ARM64\\\\Debug\\\\</OutputPath>
    <DefineConstants>DEBUG;TRACE;NETFX_CORE;WINDOWS_UWP</DefineConstants>
    <NoWarn>;2008</NoWarn>
    <DebugType>full</DebugType>
    <PlatformTarget>ARM64</PlatformTarget>
    <UseVSHostingProcess>false</UseVSHostingProcess>
    <ErrorReport>prompt</ErrorReport>
    <Prefer32Bit>true</Prefer32Bit>
  </PropertyGroup>
  <PropertyGroup Condition=\\"'$(Configuration)|$(Platform)' == 'Release|ARM64'\\">
    <OutputPath>bin\\\\ARM64\\\\Release\\\\</OutputPath>
    <DefineConstants>TRACE;NETFX_CORE;WINDOWS_UWP</DefineConstants>
    <Optimize>true</Optimize>
    <NoWarn>;2008</NoWarn>
    <DebugType>pdbonly</DebugType>
    <PlatformTarget>ARM64</PlatformTarget>
    <UseVSHostingProcess>false</UseVSHostingProcess>
    <ErrorReport>prompt</ErrorReport>
    <Prefer32Bit>true</Prefer32Bit>
    <UseDotNetNativeToolchain>true</UseDotNetNativeToolchain>
  </PropertyGroup>
  <PropertyGroup Condition=\\"'$(Configuration)|$(Platform)' == 'Debug|x64'\\">
    <DebugSymbols>true</DebugSymbols>
    <OutputPath>bin\\\\x64\\\\Debug\\\\</OutputPath>
    <DefineConstants>DEBUG;TRACE;NETFX_CORE;WINDOWS_UWP</DefineConstants>
    <NoWarn>;2008</NoWarn>
    <DebugType>full</DebugType>
    <PlatformTarget>x64</PlatformTarget>
    <UseVSHostingProcess>false</UseVSHostingProcess>
    <ErrorReport>prompt</ErrorReport>
    <Prefer32Bit>true</Prefer32Bit>
  </PropertyGroup>
  <PropertyGroup Condition=\\"'$(Configuration)|$(Platform)' == 'Release|x64'\\">
    <OutputPath>bin\\\\x64\\\\Release\\\\</OutputPath>
    <DefineConstants>TRACE;NETFX_CORE;WINDOWS_UWP</DefineConstants>
    <Optimize>true</Optimize>
    <NoWarn>;2008</NoWarn>
    <DebugType>pdbonly</DebugType>
    <PlatformTarget>x64</PlatformTarget>
    <UseVSHostingProcess>false</UseVSHostingProcess>
    <ErrorReport>prompt</ErrorReport>
    <Prefer32Bit>true</Prefer32Bit>
    <UseDotNetNativeToolchain>true</UseDotNetNativeToolchain>
  </PropertyGroup>
  <PropertyGroup>
    <RestoreProjectStyle>PackageReference</RestoreProjectStyle>
  </PropertyGroup>
  <ItemGroup>
    <Compile Include=\\"Properties\\\\AssemblyInfo.cs\\" />
    <Compile Include=\\"ReactNativeModule.cs\\" />
    <Compile Include=\\"ReactPackageProvider.cs\\" />
  </ItemGroup>
  <ItemGroup>
    <PackageReference Include=\\"Microsoft.NETCore.UniversalWindowsPlatform\\">
      <Version>6.2.9</Version>
    </PackageReference>
    <PackageReference Include=\\"ReactNative.Hermes.Windows\\">
      <Version>0.9.0-ms.6</Version>
    </PackageReference>
  </ItemGroup>
  <PropertyGroup Condition=\\" '$(VisualStudioVersion)' == '' or '$(VisualStudioVersion)' &lt; '16.0' \\">
    <VisualStudioVersion>16.0</VisualStudioVersion>
  </PropertyGroup>
  <Import Project=\\"$(MSBuildExtensionsPath)\\\\Microsoft\\\\WindowsXaml\\\\v$(VisualStudioVersion)\\\\Microsoft.Windows.UI.Xaml.CSharp.targets\\" />
  <ImportGroup Label=\\"ReactNativeWindowsPropertySheets\\">
    <Import Project=\\"$(ReactNativeWindowsDir)\\\\PropertySheets\\\\External\\\\Microsoft.ReactNative.Uwp.CSharpLib.props\\" Condition=\\"Exists('$(ReactNativeWindowsDir)\\\\PropertySheets\\\\External\\\\Microsoft.ReactNative.Uwp.CSharpLib.props')\\" />
  </ImportGroup>
  <ImportGroup Label=\\"ReactNativeWindowsTargets\\">
    <Import Project=\\"$(ReactNativeWindowsDir)\\\\PropertySheets\\\\External\\\\Microsoft.ReactNative.Uwp.CSharpLib.targets\\" Condition=\\"Exists('$(ReactNativeWindowsDir)\\\\PropertySheets\\\\External\\\\Microsoft.ReactNative.Uwp.CSharpLib.targets')\\" />
  </ImportGroup>
  <Target Name=\\"EnsureReactNativeWindowsTargets\\" BeforeTargets=\\"PrepareForBuild\\">
    <PropertyGroup>
      <ErrorText>This project references targets in your node_modules\\\\react-native-windows folder that are missing. The missing file is {0}.</ErrorText>
    </PropertyGroup>
    <Error Condition=\\"!Exists('$(ReactNativeWindowsDir)\\\\PropertySheets\\\\External\\\\Microsoft.ReactNative.Uwp.CSharpLib.props')\\" Text=\\"$([System.String]::Format('$(ErrorText)', '$(ReactNativeWindowsDir)\\\\PropertySheets\\\\External\\\\Microsoft.ReactNative.Uwp.CSharpLib.props'))\\" />
    <Error Condition=\\"!Exists('$(ReactNativeWindowsDir)\\\\PropertySheets\\\\External\\\\Microsoft.ReactNative.Uwp.CSharpLib.targets')\\" Text=\\"$([System.String]::Format('$(ErrorText)', '$(ReactNativeWindowsDir)\\\\PropertySheets\\\\External\\\\Microsoft.ReactNative.Uwp.CSharpLib.targets'))\\" />
  </Target>
</Project>
"
`;

exports[`C# WinUI3+Hermes Library: SnapshotApp.sln 1`] = `
"﻿
Microsoft Visual Studio Solution File, Format Version 12.00
# Visual Studio Version 16
VisualStudioVersion = 16.0.29215.179
MinimumVisualStudioVersion = 10.0.40219.1
Project(\\"{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}\\") = \\"SnapshotApp\\", \\"SnapshotApp\\\\SnapshotApp.csproj\\", \\"{A0673CE7-D78B-4166-AD56-E2E84169D748}\\"
EndProject
Project(\\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\\") = \\"Folly\\", \\"..\\\\node_modules\\\\react-native-windows\\\\Folly\\\\Folly.vcxproj\\", \\"{A990658C-CE31-4BCC-976F-0FC6B1AF693D}\\"
EndProject
Project(\\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\\") = \\"fmt\\", \\"..\\\\node_modules\\\\react-native-windows\\\\fmt\\\\fmt.vcxproj\\", \\"{14B93DC8-FD93-4A6D-81CB-8BC96644501C}\\"
EndProject
Project(\\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\\") = \\"ReactCommon\\", \\"..\\\\node_modules\\\\react-native-windows\\\\ReactCommon\\\\ReactCommon.vcxproj\\", \\"{A9D95A91-4DB7-4F72-BEB6-FE8A5C89BFBD}\\"
	ProjectSection(ProjectDependencies) = postProject
		{A990658C-CE31-4BCC-976F-0FC6B1AF693D} = {A990658C-CE31-4BCC-976F-0FC6B1AF693D}
	EndProjectSection
EndProject
Project(\\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\\") = \\"Chakra\\", \\"..\\\\node_modules\\\\react-native-windows\\\\Chakra\\\\Chakra.vcxitems\\", \\"{C38970C0-5FBF-4D69-90D8-CBAC225AE895}\\"
EndProject
Project(\\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\\") = \\"Microsoft.ReactNative\\", \\"..\\\\node_modules\\\\react-native-windows\\\\Microsoft.ReactNative\\\\Microsoft.ReactNative.vcxproj\\", \\"{F7D32BD0-2749-483E-9A0D-1635EF7E3136}\\"
EndProject
Project(\\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\\") = \\"Microsoft.ReactNative.Cxx\\", \\"..\\\\node_modules\\\\react-native-windows\\\\Microsoft.ReactNative.Cxx\\\\Microsoft.ReactNative.Cxx.vcxitems\\", \\"{DA8B35B3-DA00-4B02-BDE6-6A397B3FD46B}\\"
EndProject
Project(\\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\\") = \\"Common\\", \\"..\\\\node_modules\\\\react-native-windows\\\\Common\\\\Common.vcxproj\\", \\"{FCA38F3C-7C73-4C47-BE4E-32F77FA8538D}\\"
EndProject
Project(\\"{2150E333-8FDC-42A3-9474-1A3956D46DE8}\\") = \\"ReactNative\\", \\"ReactNative\\", \\"{5EA20F54-880A-49F3-99FA-4B3FE54E8AB1}\\"
EndProject
Project(\\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\\") = \\"Microsoft.ReactNative.Shared\\", \\"..\\\\node_modules\\\\react-native-windows\\\\Shared\\\\Shared.vcxitems\\", \\"{2049DBE9-8D13-42C9-AE4B-413AE38FFFD0}\\"
EndProject
Project(\\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\\") = \\"Mso\\", \\"..\\\\node_modules\\\\react-native-windows\\\\Mso\\\\Mso.vcxitems\\", \\"{84E05BFA-CBAF-4F0D-BFB6-4CE85742A57E}\\"
EndProject
Project(\\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\\") = \\"Include\\", \\"..\\\\node_modules\\\\react-native-windows\\\\include\\\\Include.vcxitems\\", \\"{EF074BA1-2D54-4D49-A28E-5E040B47CD2E}\\"
EndProject
Project(\\"{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}\\") = \\"Microsoft.ReactNative.Managed\\", \\"..\\\\node_modules\\\\react-native-windows\\\\Microsoft.ReactNative.Managed\\\\Microsoft.ReactNative.Managed.csproj\\", \\"{F2824844-CE15-4242-9420-308923CD76C3}\\"
EndProject
Project(\\"{9A19103F-16F7-4668-BE54-9A1E7A4F7556}\\") = \\"Microsoft.ReactNative.Managed.CodeGen\\", \\"..\\\\node_modules\\\\react-native-windows\\\\Microsoft.ReactNative.Managed.CodeGen\\\\Microsoft.ReactNative.Managed.CodeGen.csproj\\", \\"{ADED4FBE-887D-4271-AF24-F0823BCE7961}\\"
EndProject
Global
	GlobalSection(SharedMSBuildProjectFiles) = preSolution
		..\\\\node_modules\\\\react-native-windows\\\\Shared\\\\Shared.vcxitems*{2049dbe9-8d13-42c9-ae4b-413ae38fffd0}*SharedItemsImports = 9
		..\\\\node_modules\\\\react-native-windows\\\\Mso\\\\Mso.vcxitems*{84e05bfa-cbaf-4f0d-bfb6-4ce85742a57e}*SharedItemsImports = 9
		..\\\\node_modules\\\\react-native-windows\\\\Chakra\\\\Chakra.vcxitems*{c38970c0-5fbf-4d69-90d8-cbac225ae895}*SharedItemsImports = 9
		..\\\\node_modules\\\\react-native-windows\\\\Microsoft.ReactNative.Cxx\\\\Microsoft.ReactNative.Cxx.vcxitems*{da8b35b3-da00-4b02-bde6-6a397b3fd46b}*SharedItemsImports = 9
		..\\\\node_modules\\\\react-native-windows\\\\include\\\\Include.vcxitems*{ef074ba1-2d54-4d49-a28e-5e040b47cd2e}*SharedItemsImports = 9
		..\\\\node_modules\\\\react-native-windows\\\\Chakra\\\\Chakra.vcxitems*{f7d32bd0-2749-483e-9a0d-1635ef7e3136}*SharedItemsImports = 4
		..\\\\node_modules\\\\react-native-windows\\\\Microsoft.ReactNative.Cxx\\\\Microsoft.ReactNative.Cxx.vcxitems*{f7d32bd0-2749-483e-9a0d-1635ef7e3136}*SharedItemsImports = 4
		..\\\\node_modules\\\\react-native-windows\\\\Mso\\\\Mso.vcxitems*{f7d32bd0-2749-483e-9a0d-1635ef7e3136}*SharedItemsImports = 4
		..\\\\node_modules\\\\react-native-windows\\\\Shared\\\\Shared.vcxitems*{f7d32bd0-2749-483e-9a0d-1635ef7e3136}*SharedItemsImports = 4
	EndGlobalSection
	GlobalSection(SolutionConfigurationPlatforms) = preSolution
		Debug|ARM64 = Debug|ARM64
		Debug|x64 = Debug|x64
		Debug|x86 = Debug|x86
		Release|ARM64 = Release|ARM64
		Release|x64 = Release|x64
		Release|x86 = Release|x86
	EndGlobalSection
	GlobalSection(ProjectConfigurationPlatforms) = postSolution
		{A0673CE7-D78B-4166-AD56-E2E84169D748}.Debug|ARM64.ActiveCfg = Debug|ARM64
		{A0673CE7-D78B-4166-AD56-E2E84169D748}.Debug|ARM64.Build.0 = Debug|ARM64
		{A0673CE7-D78B-4166-AD56-E2E84169D748}.Debug|ARM64.Deploy.0 = Debug|ARM64
		{A0673CE7-D78B-4166-AD56-E2E84169D748}.Debug|x64.ActiveCfg = Debug|x64
		{A0673CE7-D78B-4166-AD56-E2E84169D748}.Debug|x64.Build.0 = Debug|x64
		{A0673CE7-D78B-4166-AD56-E2E84169D748}.Debug|x64.Deploy.0 = Debug|x64
		{A0673CE7-D78B-4166-AD56-E2E84169D748}.Debug|x86.ActiveCfg = Debug|x86
		{A0673CE7-D78B-4166-AD56-E2E84169D748}.Debug|x86.Build.0 = Debug|x86
		{A0673CE7-D78B-4166-AD56-E2E84169D748}.Debug|x86.Deploy.0 = Debug|x86
		{A0673CE7-D78B-4166-AD56-E2E84169D748}.Release|ARM64.ActiveCfg = Release|ARM64
		{A0673CE7-D78B-4166-AD56-E2E84169D748}.Release|ARM64.Build.0 = Release|ARM64
		{A0673CE7-D78B-4166-AD56-E2E84169D748}.Release|ARM64.Deploy.0 = Release|ARM64
		{A0673CE7-D78B-4166-AD56-E2E84169D748}.Release|x64.ActiveCfg = Release|x64
		{A0673CE7-D78B-4166-AD56-E2E84169D748}.Release|x64.Build.0 = Release|x64
		{A0673CE7-D78B-4166-AD56-E2E84169D748}.Release|x64.Deploy.0 = Release|x64
		{A0673CE7-D78B-4166-AD56-E2E84169D748}.Release|x86.ActiveCfg = Release|x86
		{A0673CE7-D78B-4166-AD56-E2E84169D748}.Release|x86.Build.0 = Release|x86
		{A0673CE7-D78B-4166-AD56-E2E84169D748}.Release|x86.Deploy.0 = Release|x86
		{A990658C-CE31-4BCC-976F-0FC6B1AF693D}.Debug|ARM64.ActiveCfg = Debug|ARM64
		{A990658C-CE31-4BCC-976F-0FC6B1AF693D}.Debug|ARM64.Build.0 = Debug|ARM64
		{A990658C-CE31-4BCC-976F-0FC6B1AF693D}.Debug|x64.ActiveCfg = Debug|x64
		{A990658C-CE31-4BCC-976F-0FC6B1AF693D}.Debug|x64.Build.0 = Debug|x64
		{A990658C-CE31-4BCC-976F-0FC6B1AF693D}.Debug|x86.ActiveCfg = Debug|Win32
		{A990658C-CE31-4BCC-976F-0FC6B1AF693D}.Debug|x86.Build.0 = Debug|Win32
		{A990658C-CE31-4BCC-976F-0FC6B1AF693D}.Release|ARM64.ActiveCfg = Release|ARM64
		{A990658C-CE31-4BCC-976F-0FC6B1AF693D}.Release|ARM64.Build.0 = Release|ARM64
		{A990658C-CE31-4BCC-976F-0FC6B1AF693D}.Release|x64.ActiveCfg = Release|x64
		{A990658C-CE31-4BCC-976F-0FC6B1AF693D}.Release|x64.Build.0 = Release|x64
		{A990658C-CE31-4BCC-976F-0FC6B1AF693D}.Release|x86.ActiveCfg = Release|Win32
		{A990658C-CE31-4BCC-976F-0FC6B1AF693D}.Release|x86.Build.0 = Release|Win32
		{A9D95A91-4DB7-4F72-BEB6-FE8A5C89BFBD}.Debug|ARM64.ActiveCfg = Debug|ARM64
		{A9D95A91-4DB7-4F72-BEB6-FE8A5C89BFBD}.Debug|ARM64.Build.0 = Debug|ARM64
		{A9D95A91-4DB7-4F72-BEB6-FE8A5C89BFBD}.Debug|x64.ActiveCfg = Debug|x64
		{A9D95A91-4DB7-4F72-BEB6-FE8A5C89BFBD}.Debug|x64.Build.0 = Debug|x64
		{A9D95A91-4DB7-4F72-BEB6-FE8A5C89BFBD}.Debug|x86.ActiveCfg = Debug|Win32
		{A9D95A91-4DB7-4F72-BEB6-FE8A5C89BFBD}.Debug|x86.Build.0 = Debug|Win32
		{A9D95A91-4DB7-4F72-BEB6-FE8A5C89BFBD}.Release|ARM64.ActiveCfg = Release|ARM64
		{A9D95A91-4DB7-4F72-BEB6-FE8A5C89BFBD}.Release|ARM64.Build.0 = Release|ARM64
		{A9D95A91-4DB7-4F72-BEB6-FE8A5C89BFBD}.Release|x64.ActiveCfg = Release|x64
		{A9D95A91-4DB7-4F72-BEB6-FE8A5C89BFBD}.Release|x64.Build.0 = Release|x64
		{A9D95A91-4DB7-4F72-BEB6-FE8A5C89BFBD}.Release|x86.ActiveCfg = Release|Win32
		{A9D95A91-4DB7-4F72-BEB6-FE8A5C89BFBD}.Release|x86.Build.0 = Release|Win32
		{F7D32BD0-2749-483E-9A0D-1635EF7E3136}.Debug|ARM64.ActiveCfg = Debug|ARM64
		{F7D32BD0-2749-483E-9A0D-1635EF7E3136}.Debug|ARM64.Build.0 = Debug|ARM64
		{F7D32BD0-2749-483E-9A0D-1635EF7E3136}.Debug|x64.ActiveCfg = Debug|x64
		{F7D32BD0-2749-483E-9A0D-1635EF7E3136}.Debug|x64.Build.0 = Debug|x64
		{F7D32BD0-2749-483E-9A0D-1635EF7E3136}.Debug|x86.ActiveCfg = Debug|Win32
		{F7D32BD0-2749-483E-9A0D-1635EF7E3136}.Debug|x86.Build.0 = Debug|Win32
		{F7D32BD0-2749-483E-9A0D-1635EF7E3136}.Release|ARM64.ActiveCfg = Release|ARM64
		{F7D32BD0-2749-483E-9A0D-1635EF7E3136}.Release|ARM64.Build.0 = Release|ARM64
		{F7D32BD0-2749-483E-9A0D-1635EF7E3136}.Release|x64.ActiveCfg = Release|x64
		{F7D32BD0-2749-483E-9A0D-1635EF7E3136}.Release|x64.Build.0 = Release|x64
		{F7D32BD0-2749-483E-9A0D-1635EF7E3136}.Release|x86.ActiveCfg = Release|Win32
		{F7D32BD0-2749-483E-9A0D-1635EF7E3136}.Release|x86.Build.0 = Release|Win32
		{FCA38F3C-7C73-4C47-BE4E-32F77FA8538D}.Debug|ARM64.ActiveCfg = Debug|ARM64
		{FCA38F3C-7C73-4C47-BE4E-32F77FA8538D}.Debug|ARM64.Build.0 = Debug|ARM64
		{FCA38F3C-7C73-4C47-BE4E-32F77FA8538D}.Debug|x64.ActiveCfg = Debug|x64
		{FCA38F3C-7C73-4C47-BE4E-32F77FA8538D}.Debug|x64.Build.0 = Debug|x64
		{FCA38F3C-7C73-4C47-BE4E-32F77FA8538D}.Debug|x86.ActiveCfg = Debug|Win32
		{FCA38F3C-7C73-4C47-BE4E-32F77FA8538D}.Debug|x86.Build.0 = Debug|Win32
		{FCA38F3C-7C73-4C47-BE4E-32F77FA8538D}.Release|ARM64.ActiveCfg = Release|ARM64
		{FCA38F3C-7C73-4C47-BE4E-32F77FA8538D}.Release|ARM64.Build.0 = Release|ARM64
		{FCA38F3C-7C73-4C47-BE4E-32F77FA8538D}.Release|x64.ActiveCfg = Release|x64
		{FCA38F3C-7C73-4C47-BE4E-32F77FA8538D}.Release|x64.Build.0 = Release|x64
		{FCA38F3C-7C73-4C47-BE4E-32F77FA8538D}.Release|x86.ActiveCfg = Release|Win32
		{FCA38F3C-7C73-4C47-BE4E-32F77FA8538D}.Release|x86.Build.0 = Release|Win32
		{F2824844-CE15-4242-9420-308923CD76C3}.Debug|ARM64.ActiveCfg = Debug|ARM64
		{F2824844-CE15-4242-9420-308923CD76C3}.Debug|ARM64.Build.0 = Debug|ARM64
		{F2824844-CE15-4242-9420-308923CD76C3}.Debug|x64.ActiveCfg = Debug|x64
		{F2824844-CE15-4242-9420-308923CD76C3}.Debug|x64.Build.0 = Debug|x64
		{F2824844-CE15-4242-9420-308923CD76C3}.Debug|x86.ActiveCfg = Debug|x86
		{F2824844-CE15-4242-9420-308923CD76C3}.Debug|x86.Build.0 = Debug|x86
		{F2824844-CE15-4242-9420-308923CD76C3}.Release|ARM64.ActiveCfg = Release|ARM64
		{F2824844-CE15-4242-9420-308923CD76C3}.Release|ARM64.Build.0 = Release|ARM64
		{F2824844-CE15-4242-9420-308923CD76C3}.Release|x64.ActiveCfg = Release|x64
		{F2824844-CE15-4242-9420-308923CD76C3}.Release|x64.Build.0 = Release|x64
		{F2824844-CE15-4242-9420-308923CD76C3}.Release|x86.ActiveCfg = Release|x86
		{F2824844-CE15-4242-9420-308923CD76C3}.Release|x86.Build.0 = Release|x86
		{ADED4FBE-887D-4271-AF24-F0823BCE7961}.Debug|ARM64.ActiveCfg = Debug|ARM64
		{ADED4FBE-887D-4271-AF24-F0823BCE7961}.Debug|ARM64.Build.0 = Debug|ARM64
		{ADED4FBE-887D-4271-AF24-F0823BCE7961}.Debug|x64.ActiveCfg = Debug|x64
		{ADED4FBE-887D-4271-AF24-F0823BCE7961}.Debug|x64.Build.0 = Debug|x64
		{ADED4FBE-887D-4271-AF24-F0823BCE7961}.Debug|x86.ActiveCfg = Debug|x86
		{ADED4FBE-887D-4271-AF24-F0823BCE7961}.Debug|x86.Build.0 = Debug|x86
		{ADED4FBE-887D-4271-AF24-F0823BCE7961}.Release|ARM64.ActiveCfg = Release|ARM64
		{ADED4FBE-887D-4271-AF24-F0823BCE7961}.Release|ARM64.Build.0 = Release|ARM64
		{ADED4FBE-887D-4271-AF24-F0823BCE7961}.Release|x64.ActiveCfg = Release|x64
		{ADED4FBE-887D-4271-AF24-F0823BCE7961}.Release|x64.Build.0 = Release|x64
		{ADED4FBE-887D-4271-AF24-F0823BCE7961}.Release|x86.ActiveCfg = Release|x86
		{ADED4FBE-887D-4271-AF24-F0823BCE7961}.Release|x86.Build.0 = Release|x86
		{14B93DC8-FD93-4A6D-81CB-8BC96644501C}.Debug|ARM64.ActiveCfg = Debug|ARM64
		{14B93DC8-FD93-4A6D-81CB-8BC96644501C}.Debug|ARM64.Build.0 = Debug|ARM64
		{14B93DC8-FD93-4A6D-81CB-8BC96644501C}.Debug|x64.ActiveCfg = Debug|x64
		{14B93DC8-FD93-4A6D-81CB-8BC96644501C}.Debug|x64.Build.0 = Debug|x64
		{14B93DC8-FD93-4A6D-81CB-8BC96644501C}.Debug|x86.ActiveCfg = Debug|Win32
		{14B93DC8-FD93-4A6D-81CB-8BC96644501C}.Debug|x86.Build.0 = Debug|Win32
		{14B93DC8-FD93-4A6D-81CB-8BC96644501C}.Debug|x86.Deploy.0 = Debug|Win32
		{14B93DC8-FD93-4A6D-81CB-8BC96644501C}.Release|ARM64.ActiveCfg = Release|ARM64
		{14B93DC8-FD93-4A6D-81CB-8BC96644501C}.Release|ARM64.Build.0 = Release|ARM64
		{14B93DC8-FD93-4A6D-81CB-8BC96644501C}.Release|x64.ActiveCfg = Release|x64
		{14B93DC8-FD93-4A6D-81CB-8BC96644501C}.Release|x64.Build.0 = Release|x64
		{14B93DC8-FD93-4A6D-81CB-8BC96644501C}.Release|x86.ActiveCfg = Release|Win32
		{14B93DC8-FD93-4A6D-81CB-8BC96644501C}.Release|x86.Build.0 = Release|Win32
		{14B93DC8-FD93-4A6D-81CB-8BC96644501C}.Release|x86.Deploy.0 = Release|Win32
	EndGlobalSection
	GlobalSection(SolutionProperties) = preSolution
		HideSolutionNode = FALSE
	EndGlobalSection
	GlobalSection(NestedProjects) = preSolution
		{A990658C-CE31-4BCC-976F-0FC6B1AF693D} = {5EA20F54-880A-49F3-99FA-4B3FE54E8AB1}
		{A9D95A91-4DB7-4F72-BEB6-FE8A5C89BFBD} = {5EA20F54-880A-49F3-99FA-4B3FE54E8AB1}
		{C38970C0-5FBF-4D69-90D8-CBAC225AE895} = {5EA20F54-880A-49F3-99FA-4B3FE54E8AB1}
		{F7D32BD0-2749-483E-9A0D-1635EF7E3136} = {5EA20F54-880A-49F3-99FA-4B3FE54E8AB1}
		{DA8B35B3-DA00-4B02-BDE6-6A397B3FD46B} = {5EA20F54-880A-49F3-99FA-4B3FE54E8AB1}
		{FCA38F3C-7C73-4C47-BE4E-32F77FA8538D} = {5EA20F54-880A-49F3-99FA-4B3FE54E8AB1}
		{2049DBE9-8D13-42C9-AE4B-413AE38FFFD0} = {5EA20F54-880A-49F3-99FA-4B3FE54E8AB1}
		{84E05BFA-CBAF-4F0D-BFB6-4CE85742A57E} = {5EA20F54-880A-49F3-99FA-4B3FE54E8AB1}
		{EF074BA1-2D54-4D49-A28E-5E040B47CD2E} = {5EA20F54-880A-49F3-99FA-4B3FE54E8AB1}
		{F2824844-CE15-4242-9420-308923CD76C3} = {5EA20F54-880A-49F3-99FA-4B3FE54E8AB1}
		{ADED4FBE-887D-4271-AF24-F0823BCE7961} = {5EA20F54-880A-49F3-99FA-4B3FE54E8AB1}
		{14B93DC8-FD93-4A6D-81CB-8BC96644501C} = {5EA20F54-880A-49F3-99FA-4B3FE54E8AB1}
	EndGlobalSection
	GlobalSection(ExtensibilityGlobals) = postSolution
		SolutionGuid = {D43FAD39-F619-437D-BB40-04A3982ACB6A}
	EndGlobalSection
EndGlobal
"
`;

exports[`C++  Application: App.cpp 1`] = `
"#include \\"pch.h\\"

#include \\"App.h\\"

#include \\"AutolinkedNativeModules.g.h\\"
#include \\"ReactPackageProvider.h\\"

using namespace winrt;
using namespace xaml;
using namespace xaml::Controls;
using namespace xaml::Navigation;

using namespace Windows::ApplicationModel;
namespace winrt::SnapshotApp::implementation
{
/// <summary>
/// Initializes the singleton application object.  This is the first line of
/// authored code executed, and as such is the logical equivalent of main() or
/// WinMain().
/// </summary>
App::App() noexcept
{
#if BUNDLE
    JavaScriptBundleFile(L\\"index.windows\\");
    InstanceSettings().UseWebDebugger(false);
    InstanceSettings().UseFastRefresh(false);
#else
    JavaScriptBundleFile(L\\"index\\");
    InstanceSettings().UseWebDebugger(true);
    InstanceSettings().UseFastRefresh(true);
#endif

#if _DEBUG
    InstanceSettings().UseDeveloperSupport(true);
#else
    InstanceSettings().UseDeveloperSupport(false);
#endif

    RegisterAutolinkedNativeModulePackages(PackageProviders()); // Includes any autolinked modules

    PackageProviders().Append(make<ReactPackageProvider>()); // Includes all modules in this project

    InitializeComponent();
}

/// <summary>
/// Invoked when the application is launched normally by the end user.  Other entry points
/// will be used such as when the application is launched to open a specific file.
/// </summary>
/// <param name=\\"e\\">Details about the launch request and process.</param>
void App::OnLaunched(activation::LaunchActivatedEventArgs const& e)
{
    super::OnLaunched(e);

    Frame rootFrame = Window::Current().Content().as<Frame>();
    rootFrame.Navigate(xaml_typename<MainPage>(), box_value(e.Arguments()));
}

/// <summary>
/// Invoked when the application is activated by some means other than normal launching.
/// </summary>
void App::OnActivated(Activation::IActivatedEventArgs const &e) {
  auto preActivationContent = Window::Current().Content();
  super::OnActivated(e);
  if (!preActivationContent && Window::Current()) {
    Frame rootFrame = Window::Current().Content().as<Frame>();
    rootFrame.Navigate(xaml_typename<MainPage>(), nullptr);
  }
}

/// <summary>
/// Invoked when application execution is being suspended.  Application state is saved
/// without knowing whether the application will be terminated or resumed with the contents
/// of memory still intact.
/// </summary>
/// <param name=\\"sender\\">The source of the suspend request.</param>
/// <param name=\\"e\\">Details about the suspend request.</param>
void App::OnSuspending([[maybe_unused]] IInspectable const& sender, [[maybe_unused]] SuspendingEventArgs const& e)
{
    // Save application state and stop any background activity
}

/// <summary>
/// Invoked when Navigation to a certain page fails
/// </summary>
/// <param name=\\"sender\\">The Frame which failed navigation</param>
/// <param name=\\"e\\">Details about the navigation failure</param>
void App::OnNavigationFailed(IInspectable const&, NavigationFailedEventArgs const& e)
{
    throw hresult_error(E_FAIL, hstring(L\\"Failed to load Page \\") + e.SourcePageType().Name);
}

} // namespace winrt::SnapshotApp::implementation
"
`;

exports[`C++  Application: App.h 1`] = `
"#pragma once

#include \\"App.xaml.g.h\\"

#include <CppWinRTIncludes.h>

#ifdef USE_WINUI3
namespace activation = winrt::Microsoft::UI::Xaml;
#else
namespace activation = winrt::Windows::ApplicationModel::Activation;
#endif

namespace winrt::SnapshotApp::implementation
{
    struct App : AppT<App>
    {
        App() noexcept;
        void OnLaunched(activation::LaunchActivatedEventArgs const&);
        void OnActivated(Windows::ApplicationModel::Activation::IActivatedEventArgs const &e);
        void OnSuspending(IInspectable const&, Windows::ApplicationModel::SuspendingEventArgs const&);
        void OnNavigationFailed(IInspectable const&, xaml::Navigation::NavigationFailedEventArgs const&);
      private:
        using super = AppT<App>;
    };
} // namespace winrt::SnapshotApp::implementation
"
`;

exports[`C++  Application: App.idl 1`] = `
"namespace SnapshotApp
{
}
"
`;

exports[`C++  Application: App.xaml 1`] = `
"﻿<react:ReactApplication
    x:Class=\\"SnapshotApp.App\\"
    xmlns=\\"http://schemas.microsoft.com/winfx/2006/xaml/presentation\\"
    xmlns:x=\\"http://schemas.microsoft.com/winfx/2006/xaml\\"
    xmlns:local=\\"using:SnapshotApp\\"
    xmlns:react=\\"using:Microsoft.ReactNative\\">
    <Application.Resources>
        <XamlControlsResources xmlns=\\"using:Microsoft.UI.Xaml.Controls\\" />
    </Application.Resources>
</react:ReactApplication>
"
`;

exports[`C++  Application: AutolinkedNativeModules.g.cpp 1`] = `
"// AutolinkedNativeModules.g.cpp contents generated by \\"react-native autolink-windows\\"
// clang-format off
#include \\"pch.h\\"
#include \\"AutolinkedNativeModules.g.h\\"

namespace winrt::Microsoft::ReactNative
{

void RegisterAutolinkedNativeModulePackages(winrt::Windows::Foundation::Collections::IVector<winrt::Microsoft::ReactNative::IReactPackageProvider> const& packageProviders)
{ 
    UNREFERENCED_PARAMETER(packageProviders);
}

}
"
`;

exports[`C++  Application: AutolinkedNativeModules.g.h 1`] = `
"// AutolinkedNativeModules.g.h contents generated by \\"react-native autolink-windows\\"
// clang-format off
#pragma once

namespace winrt::Microsoft::ReactNative
{

void RegisterAutolinkedNativeModulePackages(winrt::Windows::Foundation::Collections::IVector<winrt::Microsoft::ReactNative::IReactPackageProvider> const& packageProviders);

}
"
`;

exports[`C++  Application: AutolinkedNativeModules.g.props 1`] = `
"<?xml version=\\"1.0\\" encoding=\\"utf-8\\"?>
<Project xmlns=\\"http://schemas.microsoft.com/developer/msbuild/2003\\">
  <!-- AutolinkedNativeModules.g.props contents generated by \\"react-native autolink-windows\\" -->
  <PropertyGroup>
  </PropertyGroup>
</Project>
"
`;

exports[`C++  Application: AutolinkedNativeModules.g.targets 1`] = `
"<?xml version=\\"1.0\\" encoding=\\"utf-8\\"?>
<Project xmlns=\\"http://schemas.microsoft.com/developer/msbuild/2003\\">
  <!-- AutolinkedNativeModules.g.targets contents generated by \\"react-native autolink-windows\\" -->
  <ItemGroup>
  </ItemGroup>
</Project>
"
`;

exports[`C++  Application: ExperimentalFeatures.props 1`] = `
"<?xml version=\\"1.0\\" encoding=\\"utf-8\\"?>
<Project xmlns=\\"http://schemas.microsoft.com/developer/msbuild/2003\\">

  <!--
    This file contains some important settings that will apply globally for
    your app and *all* native modules your app consumes. These values were
    set when you created the app project, and in some cases cannot be
    simply changed here without recreating a new project.
  -->

  <PropertyGroup Label=\\"Microsoft.ReactNative Experimental Features\\">
    <!--
      Enables default usage of Hermes.
      
      See https://microsoft.github.io/react-native-windows/docs/hermes
    -->
    <UseHermes>false</UseHermes>

    <!--
      Changes compilation to assume use of WinUI 3 instead of System XAML.
      Requires creation of new project.

      See https://microsoft.github.io/react-native-windows/docs/winui3
    -->
    <UseWinUI3>false</UseWinUI3>

    <!--
      Changes compilation to assume use of Microsoft.ReactNative NuGet packages
      instead of building the framework from source.
      Requires creation of new project.

      See https://microsoft.github.io/react-native-windows/docs/nuget
    -->
    <UseExperimentalNuget>false</UseExperimentalNuget>
  
  </PropertyGroup>

</Project>
"
`;

exports[`C++  Application: MainPage.cpp 1`] = `
"﻿#include \\"pch.h\\"
#include \\"MainPage.h\\"
#if __has_include(\\"MainPage.g.cpp\\")
#include \\"MainPage.g.cpp\\"
#endif

#include \\"App.h\\"

using namespace winrt;
using namespace xaml;

namespace winrt::SnapshotApp::implementation
{
    MainPage::MainPage()
    {
        InitializeComponent();
        auto app = Application::Current().as<App>();
        ReactRootView().ReactNativeHost(app->Host());
    }
}
"
`;

exports[`C++  Application: MainPage.h 1`] = `
"﻿#pragma once
#include \\"MainPage.g.h\\"
#include <winrt/Microsoft.ReactNative.h>

namespace winrt::SnapshotApp::implementation
{
    struct MainPage : MainPageT<MainPage>
    {
        MainPage();
    };
}

namespace winrt::SnapshotApp::factory_implementation
{
    struct MainPage : MainPageT<MainPage, implementation::MainPage>
    {
    };
}

"
`;

exports[`C++  Application: MainPage.idl 1`] = `
"#include \\"NamespaceRedirect.h\\"

namespace SnapshotApp
{
    [default_interface]
    runtimeclass MainPage : XAML_NAMESPACE.Controls.Page
    {
        MainPage();
    }
}
"
`;

exports[`C++  Application: MainPage.xaml 1`] = `
"<Page
    x:Class=\\"SnapshotApp.MainPage\\"
    xmlns=\\"http://schemas.microsoft.com/winfx/2006/xaml/presentation\\"
    xmlns:x=\\"http://schemas.microsoft.com/winfx/2006/xaml\\"
    xmlns:local=\\"using:SnapshotApp\\"
    xmlns:react=\\"using:Microsoft.ReactNative\\"
    xmlns:d=\\"http://schemas.microsoft.com/expression/blend/2008\\"
    xmlns:mc=\\"http://schemas.openxmlformats.org/markup-compatibility/2006\\"
    mc:Ignorable=\\"d\\"
    Background=\\"{ThemeResource ApplicationPageBackgroundThemeBrush}\\">
    <react:ReactRootView 
        x:Name=\\"ReactRootView\\"
        ComponentName=\\"SnapshotApp\\"
        Background=\\"{ThemeResource ApplicationPageBackgroundThemeBrush}\\"
        MinHeight=\\"400\\"/>
</Page>
"
`;

exports[`C++  Application: NuGet.Config 1`] = `
"<?xml version=\\"1.0\\" encoding=\\"utf-8\\"?>
<configuration>
  <config>
    <add key=\\"repositoryPath\\" value=\\"packages\\" />
  </config>
  <packageSources>
    <clear />
    <add key=\\"react-native\\" value=\\"https://pkgs.dev.azure.com/ms/react-native/_packaging/react-native-public/nuget/v3/index.json\\" />
    <add key=\\"Nuget.org\\" value=\\"https://api.nuget.org/v3/index.json\\" />
  </packageSources>
  <disabledPackageSources>
    <clear />
  </disabledPackageSources>  
</configuration>
"
`;

exports[`C++  Application: Package.appxmanifest 1`] = `
"﻿<?xml version=\\"1.0\\" encoding=\\"utf-8\\"?>

<Package
  xmlns=\\"http://schemas.microsoft.com/appx/manifest/foundation/windows10\\"
  xmlns:mp=\\"http://schemas.microsoft.com/appx/2014/phone/manifest\\"
  xmlns:uap=\\"http://schemas.microsoft.com/appx/manifest/uap/windows10\\"
  IgnorableNamespaces=\\"uap mp\\">

  <Identity
    Name=\\"5b7570fa-bbba-44b5-b829-741da8d09603\\"
    Publisher=\\"CN=nickg\\"
    Version=\\"1.0.0.0\\" />

  <mp:PhoneIdentity PhoneProductId=\\"5b7570fa-bbba-44b5-b829-741da8d09603\\" PhonePublisherId=\\"00000000-0000-0000-0000-000000000000\\"/>

  <Properties>
    <DisplayName>SnapshotApp</DisplayName>
    <PublisherDisplayName>nickg</PublisherDisplayName>
    <Logo>Assets\\\\StoreLogo.png</Logo>
  </Properties>

  <Dependencies>
    <TargetDeviceFamily Name=\\"Windows.Universal\\" MinVersion=\\"10.0.0.0\\" MaxVersionTested=\\"10.0.0.0\\" />
  </Dependencies>

  <Resources>
    <Resource Language=\\"x-generate\\"/>
  </Resources>

  <Applications>
    <Application
      Id=\\"App\\"
      Executable=\\"$targetnametoken$.exe\\"
      EntryPoint=\\"SnapshotApp.App\\">
      <uap:VisualElements
        DisplayName=\\"SnapshotApp\\"
        Square150x150Logo=\\"Assets\\\\Square150x150Logo.png\\"
        Square44x44Logo=\\"Assets\\\\Square44x44Logo.png\\"
        Description=\\"SnapshotApp\\"
        BackgroundColor=\\"transparent\\">
        <uap:DefaultTile Wide310x150Logo=\\"Assets\\\\Wide310x150Logo.png\\"/>
        <uap:SplashScreen Image=\\"Assets\\\\SplashScreen.png\\" />
      </uap:VisualElements>
    </Application>
  </Applications>

  <Capabilities>
    <Capability Name=\\"internetClient\\" />
  </Capabilities>
</Package>"
`;

exports[`C++  Application: PropertySheet.props 1`] = `
"<?xml version=\\"1.0\\" encoding=\\"utf-8\\"?>
<Project ToolsVersion=\\"Current\\" xmlns=\\"http://schemas.microsoft.com/developer/msbuild/2003\\">
  <ImportGroup Label=\\"PropertySheets\\" />
  <PropertyGroup Label=\\"UserMacros\\" />
  <!--
    To customize common C++/WinRT project properties:
    * right-click the project node
    * expand the Common Properties item
    * select the C++/WinRT property page

    For more advanced scenarios, and complete documentation, please see:
    https://github.com/Microsoft/xlang/tree/master/src/package/cppwinrt/nuget
    -->
  <PropertyGroup />
  <ItemDefinitionGroup />
</Project>"
`;

exports[`C++  Application: ReactPackageProvider.cpp 1`] = `
"#include \\"pch.h\\"
#include \\"ReactPackageProvider.h\\"
#include \\"NativeModules.h\\"

using namespace winrt::Microsoft::ReactNative;

namespace winrt::SnapshotApp::implementation
{

void ReactPackageProvider::CreatePackage(IReactPackageBuilder const &packageBuilder) noexcept
{
    AddAttributedModules(packageBuilder);
}

} // namespace winrt::SnapshotApp::implementation
"
`;

exports[`C++  Application: ReactPackageProvider.h 1`] = `
"#pragma once

#include \\"winrt/Microsoft.ReactNative.h\\"

namespace winrt::SnapshotApp::implementation
{
    struct ReactPackageProvider : winrt::implements<ReactPackageProvider, winrt::Microsoft::ReactNative::IReactPackageProvider>
    {
    public: // IReactPackageProvider
        void CreatePackage(winrt::Microsoft::ReactNative::IReactPackageBuilder const &packageBuilder) noexcept;
    };
} // namespace winrt::SnapshotApp::implementation

"
`;

exports[`C++  Application: SnapshotApp.sln 1`] = `
"﻿
Microsoft Visual Studio Solution File, Format Version 12.00
# Visual Studio Version 16
VisualStudioVersion = 16.0.29215.179
MinimumVisualStudioVersion = 10.0.40219.1
Project(\\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\\") = \\"SnapshotApp\\", \\"SnapshotApp\\\\SnapshotApp.vcxproj\\", \\"{562EEE43-AA2C-4224-B631-65384E83B4F6}\\"
	ProjectSection(ProjectDependencies) = postProject
		{F7D32BD0-2749-483E-9A0D-1635EF7E3136} = {F7D32BD0-2749-483E-9A0D-1635EF7E3136}
	EndProjectSection
EndProject
Project(\\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\\") = \\"Folly\\", \\"..\\\\node_modules\\\\react-native-windows\\\\Folly\\\\Folly.vcxproj\\", \\"{A990658C-CE31-4BCC-976F-0FC6B1AF693D}\\"
EndProject
Project(\\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\\") = \\"fmt\\", \\"..\\\\node_modules\\\\react-native-windows\\\\fmt\\\\fmt.vcxproj\\", \\"{14B93DC8-FD93-4A6D-81CB-8BC96644501C}\\"
EndProject
Project(\\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\\") = \\"ReactCommon\\", \\"..\\\\node_modules\\\\react-native-windows\\\\ReactCommon\\\\ReactCommon.vcxproj\\", \\"{A9D95A91-4DB7-4F72-BEB6-FE8A5C89BFBD}\\"
	ProjectSection(ProjectDependencies) = postProject
		{A990658C-CE31-4BCC-976F-0FC6B1AF693D} = {A990658C-CE31-4BCC-976F-0FC6B1AF693D}
	EndProjectSection
EndProject
Project(\\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\\") = \\"Chakra\\", \\"..\\\\node_modules\\\\react-native-windows\\\\Chakra\\\\Chakra.vcxitems\\", \\"{C38970C0-5FBF-4D69-90D8-CBAC225AE895}\\"
EndProject
Project(\\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\\") = \\"Microsoft.ReactNative\\", \\"..\\\\node_modules\\\\react-native-windows\\\\Microsoft.ReactNative\\\\Microsoft.ReactNative.vcxproj\\", \\"{F7D32BD0-2749-483E-9A0D-1635EF7E3136}\\"
EndProject
Project(\\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\\") = \\"Microsoft.ReactNative.Cxx\\", \\"..\\\\node_modules\\\\react-native-windows\\\\Microsoft.ReactNative.Cxx\\\\Microsoft.ReactNative.Cxx.vcxitems\\", \\"{DA8B35B3-DA00-4B02-BDE6-6A397B3FD46B}\\"
EndProject
Project(\\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\\") = \\"Common\\", \\"..\\\\node_modules\\\\react-native-windows\\\\Common\\\\Common.vcxproj\\", \\"{FCA38F3C-7C73-4C47-BE4E-32F77FA8538D}\\"
EndProject
Project(\\"{2150E333-8FDC-42A3-9474-1A3956D46DE8}\\") = \\"ReactNative\\", \\"ReactNative\\", \\"{5EA20F54-880A-49F3-99FA-4B3FE54E8AB1}\\"
EndProject
Project(\\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\\") = \\"Microsoft.ReactNative.Shared\\", \\"..\\\\node_modules\\\\react-native-windows\\\\Shared\\\\Shared.vcxitems\\", \\"{2049DBE9-8D13-42C9-AE4B-413AE38FFFD0}\\"
EndProject
Project(\\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\\") = \\"Mso\\", \\"..\\\\node_modules\\\\react-native-windows\\\\Mso\\\\Mso.vcxitems\\", \\"{84E05BFA-CBAF-4F0D-BFB6-4CE85742A57E}\\"
EndProject
Project(\\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\\") = \\"Include\\", \\"..\\\\node_modules\\\\react-native-windows\\\\include\\\\Include.vcxitems\\", \\"{EF074BA1-2D54-4D49-A28E-5E040B47CD2E}\\"
EndProject
Global
	GlobalSection(SharedMSBuildProjectFiles) = preSolution
		..\\\\node_modules\\\\react-native-windows\\\\Shared\\\\Shared.vcxitems*{2049dbe9-8d13-42c9-ae4b-413ae38fffd0}*SharedItemsImports = 9
		..\\\\node_modules\\\\react-native-windows\\\\Mso\\\\Mso.vcxitems*{84e05bfa-cbaf-4f0d-bfb6-4ce85742a57e}*SharedItemsImports = 9
		..\\\\node_modules\\\\react-native-windows\\\\Chakra\\\\Chakra.vcxitems*{c38970c0-5fbf-4d69-90d8-cbac225ae895}*SharedItemsImports = 9
		..\\\\node_modules\\\\react-native-windows\\\\Microsoft.ReactNative.Cxx\\\\Microsoft.ReactNative.Cxx.vcxitems*{da8b35b3-da00-4b02-bde6-6a397b3fd46b}*SharedItemsImports = 9
		..\\\\node_modules\\\\react-native-windows\\\\include\\\\Include.vcxitems*{ef074ba1-2d54-4d49-a28e-5e040b47cd2e}*SharedItemsImports = 9
		..\\\\node_modules\\\\react-native-windows\\\\Chakra\\\\Chakra.vcxitems*{f7d32bd0-2749-483e-9a0d-1635ef7e3136}*SharedItemsImports = 4
		..\\\\node_modules\\\\react-native-windows\\\\Microsoft.ReactNative.Cxx\\\\Microsoft.ReactNative.Cxx.vcxitems*{f7d32bd0-2749-483e-9a0d-1635ef7e3136}*SharedItemsImports = 4
		..\\\\node_modules\\\\react-native-windows\\\\Mso\\\\Mso.vcxitems*{f7d32bd0-2749-483e-9a0d-1635ef7e3136}*SharedItemsImports = 4
		..\\\\node_modules\\\\react-native-windows\\\\Shared\\\\Shared.vcxitems*{f7d32bd0-2749-483e-9a0d-1635ef7e3136}*SharedItemsImports = 4
	EndGlobalSection
	GlobalSection(SolutionConfigurationPlatforms) = preSolution
		Debug|ARM64 = Debug|ARM64
		Debug|x64 = Debug|x64
		Debug|x86 = Debug|x86
		Release|ARM64 = Release|ARM64
		Release|x64 = Release|x64
		Release|x86 = Release|x86
	EndGlobalSection
	GlobalSection(ProjectConfigurationPlatforms) = postSolution
		{562EEE43-AA2C-4224-B631-65384E83B4F6}.Debug|ARM64.ActiveCfg = Debug|ARM64
		{562EEE43-AA2C-4224-B631-65384E83B4F6}.Debug|ARM64.Build.0 = Debug|ARM64
		{562EEE43-AA2C-4224-B631-65384E83B4F6}.Debug|ARM64.Deploy.0 = Debug|ARM64
		{562EEE43-AA2C-4224-B631-65384E83B4F6}.Debug|x64.ActiveCfg = Debug|x64
		{562EEE43-AA2C-4224-B631-65384E83B4F6}.Debug|x64.Build.0 = Debug|x64
		{562EEE43-AA2C-4224-B631-65384E83B4F6}.Debug|x64.Deploy.0 = Debug|x64
		{562EEE43-AA2C-4224-B631-65384E83B4F6}.Debug|x86.ActiveCfg = Debug|Win32
		{562EEE43-AA2C-4224-B631-65384E83B4F6}.Debug|x86.Build.0 = Debug|Win32
		{562EEE43-AA2C-4224-B631-65384E83B4F6}.Debug|x86.Deploy.0 = Debug|Win32
		{562EEE43-AA2C-4224-B631-65384E83B4F6}.Release|ARM64.ActiveCfg = Release|ARM64
		{562EEE43-AA2C-4224-B631-65384E83B4F6}.Release|ARM64.Build.0 = Release|ARM64
		{562EEE43-AA2C-4224-B631-65384E83B4F6}.Release|ARM64.Deploy.0 = Release|ARM64
		{562EEE43-AA2C-4224-B631-65384E83B4F6}.Release|x64.ActiveCfg = Release|x64
		{562EEE43-AA2C-4224-B631-65384E83B4F6}.Release|x64.Build.0 = Release|x64
		{562EEE43-AA2C-4224-B631-65384E83B4F6}.Release|x64.Deploy.0 = Release|x64
		{562EEE43-AA2C-4224-B631-65384E83B4F6}.Release|x86.ActiveCfg = Release|Win32
		{562EEE43-AA2C-4224-B631-65384E83B4F6}.Release|x86.Build.0 = Release|Win32
		{562EEE43-AA2C-4224-B631-65384E83B4F6}.Release|x86.Deploy.0 = Release|Win32
		{A990658C-CE31-4BCC-976F-0FC6B1AF693D}.Debug|ARM64.ActiveCfg = Debug|ARM64
		{A990658C-CE31-4BCC-976F-0FC6B1AF693D}.Debug|ARM64.Build.0 = Debug|ARM64
		{A990658C-CE31-4BCC-976F-0FC6B1AF693D}.Debug|x64.ActiveCfg = Debug|x64
		{A990658C-CE31-4BCC-976F-0FC6B1AF693D}.Debug|x64.Build.0 = Debug|x64
		{A990658C-CE31-4BCC-976F-0FC6B1AF693D}.Debug|x86.ActiveCfg = Debug|Win32
		{A990658C-CE31-4BCC-976F-0FC6B1AF693D}.Debug|x86.Build.0 = Debug|Win32
		{A990658C-CE31-4BCC-976F-0FC6B1AF693D}.Release|ARM64.ActiveCfg = Release|ARM64
		{A990658C-CE31-4BCC-976F-0FC6B1AF693D}.Release|ARM64.Build.0 = Release|ARM64
		{A990658C-CE31-4BCC-976F-0FC6B1AF693D}.Release|x64.ActiveCfg = Release|x64
		{A990658C-CE31-4BCC-976F-0FC6B1AF693D}.Release|x64.Build.0 = Release|x64
		{A990658C-CE31-4BCC-976F-0FC6B1AF693D}.Release|x86.ActiveCfg = Release|Win32
		{A990658C-CE31-4BCC-976F-0FC6B1AF693D}.Release|x86.Build.0 = Release|Win32
		{A9D95A91-4DB7-4F72-BEB6-FE8A5C89BFBD}.Debug|ARM64.ActiveCfg = Debug|ARM64
		{A9D95A91-4DB7-4F72-BEB6-FE8A5C89BFBD}.Debug|ARM64.Build.0 = Debug|ARM64
		{A9D95A91-4DB7-4F72-BEB6-FE8A5C89BFBD}.Debug|x64.ActiveCfg = Debug|x64
		{A9D95A91-4DB7-4F72-BEB6-FE8A5C89BFBD}.Debug|x64.Build.0 = Debug|x64
		{A9D95A91-4DB7-4F72-BEB6-FE8A5C89BFBD}.Debug|x86.ActiveCfg = Debug|Win32
		{A9D95A91-4DB7-4F72-BEB6-FE8A5C89BFBD}.Debug|x86.Build.0 = Debug|Win32
		{A9D95A91-4DB7-4F72-BEB6-FE8A5C89BFBD}.Release|ARM64.ActiveCfg = Release|ARM64
		{A9D95A91-4DB7-4F72-BEB6-FE8A5C89BFBD}.Release|ARM64.Build.0 = Release|ARM64
		{A9D95A91-4DB7-4F72-BEB6-FE8A5C89BFBD}.Release|x64.ActiveCfg = Release|x64
		{A9D95A91-4DB7-4F72-BEB6-FE8A5C89BFBD}.Release|x64.Build.0 = Release|x64
		{A9D95A91-4DB7-4F72-BEB6-FE8A5C89BFBD}.Release|x86.ActiveCfg = Release|Win32
		{A9D95A91-4DB7-4F72-BEB6-FE8A5C89BFBD}.Release|x86.Build.0 = Release|Win32
		{F7D32BD0-2749-483E-9A0D-1635EF7E3136}.Debug|ARM64.ActiveCfg = Debug|ARM64
		{F7D32BD0-2749-483E-9A0D-1635EF7E3136}.Debug|ARM64.Build.0 = Debug|ARM64
		{F7D32BD0-2749-483E-9A0D-1635EF7E3136}.Debug|x64.ActiveCfg = Debug|x64
		{F7D32BD0-2749-483E-9A0D-1635EF7E3136}.Debug|x64.Build.0 = Debug|x64
		{F7D32BD0-2749-483E-9A0D-1635EF7E3136}.Debug|x86.ActiveCfg = Debug|Win32
		{F7D32BD0-2749-483E-9A0D-1635EF7E3136}.Debug|x86.Build.0 = Debug|Win32
		{F7D32BD0-2749-483E-9A0D-1635EF7E3136}.Release|ARM64.ActiveCfg = Release|ARM64
		{F7D32BD0-2749-483E-9A0D-1635EF7E3136}.Release|ARM64.Build.0 = Release|ARM64
		{F7D32BD0-2749-483E-9A0D-1635EF7E3136}.Release|x64.ActiveCfg = Release|x64
		{F7D32BD0-2749-483E-9A0D-1635EF7E3136}.Release|x64.Build.0 = Release|x64
		{F7D32BD0-2749-483E-9A0D-1635EF7E3136}.Release|x86.ActiveCfg = Release|Win32
		{F7D32BD0-2749-483E-9A0D-1635EF7E3136}.Release|x86.Build.0 = Release|Win32
		{FCA38F3C-7C73-4C47-BE4E-32F77FA8538D}.Debug|ARM64.ActiveCfg = Debug|ARM64
		{FCA38F3C-7C73-4C47-BE4E-32F77FA8538D}.Debug|ARM64.Build.0 = Debug|ARM64
		{FCA38F3C-7C73-4C47-BE4E-32F77FA8538D}.Debug|x64.ActiveCfg = Debug|x64
		{FCA38F3C-7C73-4C47-BE4E-32F77FA8538D}.Debug|x64.Build.0 = Debug|x64
		{FCA38F3C-7C73-4C47-BE4E-32F77FA8538D}.Debug|x86.ActiveCfg = Debug|Win32
		{FCA38F3C-7C73-4C47-BE4E-32F77FA8538D}.Debug|x86.Build.0 = Debug|Win32
		{FCA38F3C-7C73-4C47-BE4E-32F77FA8538D}.Release|ARM64.ActiveCfg = Release|ARM64
		{FCA38F3C-7C73-4C47-BE4E-32F77FA8538D}.Release|ARM64.Build.0 = Release|ARM64
		{FCA38F3C-7C73-4C47-BE4E-32F77FA8538D}.Release|x64.ActiveCfg = Release|x64
		{FCA38F3C-7C73-4C47-BE4E-32F77FA8538D}.Release|x64.Build.0 = Release|x64
		{FCA38F3C-7C73-4C47-BE4E-32F77FA8538D}.Release|x86.ActiveCfg = Release|Win32
		{FCA38F3C-7C73-4C47-BE4E-32F77FA8538D}.Release|x86.Build.0 = Release|Win32
		{14B93DC8-FD93-4A6D-81CB-8BC96644501C}.Debug|ARM64.ActiveCfg = Debug|ARM64
		{14B93DC8-FD93-4A6D-81CB-8BC96644501C}.Debug|ARM64.Build.0 = Debug|ARM64
		{14B93DC8-FD93-4A6D-81CB-8BC96644501C}.Debug|x64.ActiveCfg = Debug|x64
		{14B93DC8-FD93-4A6D-81CB-8BC96644501C}.Debug|x64.Build.0 = Debug|x64
		{14B93DC8-FD93-4A6D-81CB-8BC96644501C}.Debug|x86.ActiveCfg = Debug|Win32
		{14B93DC8-FD93-4A6D-81CB-8BC96644501C}.Debug|x86.Build.0 = Debug|Win32
		{14B93DC8-FD93-4A6D-81CB-8BC96644501C}.Debug|x86.Deploy.0 = Debug|Win32
		{14B93DC8-FD93-4A6D-81CB-8BC96644501C}.Release|ARM64.ActiveCfg = Release|ARM64
		{14B93DC8-FD93-4A6D-81CB-8BC96644501C}.Release|ARM64.Build.0 = Release|ARM64
		{14B93DC8-FD93-4A6D-81CB-8BC96644501C}.Release|x64.ActiveCfg = Release|x64
		{14B93DC8-FD93-4A6D-81CB-8BC96644501C}.Release|x64.Build.0 = Release|x64
		{14B93DC8-FD93-4A6D-81CB-8BC96644501C}.Release|x86.ActiveCfg = Release|Win32
		{14B93DC8-FD93-4A6D-81CB-8BC96644501C}.Release|x86.Build.0 = Release|Win32
		{14B93DC8-FD93-4A6D-81CB-8BC96644501C}.Release|x86.Deploy.0 = Release|Win32
	EndGlobalSection
	GlobalSection(SolutionProperties) = preSolution
		HideSolutionNode = FALSE
	EndGlobalSection
	GlobalSection(NestedProjects) = preSolution
		{A990658C-CE31-4BCC-976F-0FC6B1AF693D} = {5EA20F54-880A-49F3-99FA-4B3FE54E8AB1}
		{A9D95A91-4DB7-4F72-BEB6-FE8A5C89BFBD} = {5EA20F54-880A-49F3-99FA-4B3FE54E8AB1}
		{C38970C0-5FBF-4D69-90D8-CBAC225AE895} = {5EA20F54-880A-49F3-99FA-4B3FE54E8AB1}
		{F7D32BD0-2749-483E-9A0D-1635EF7E3136} = {5EA20F54-880A-49F3-99FA-4B3FE54E8AB1}
		{DA8B35B3-DA00-4B02-BDE6-6A397B3FD46B} = {5EA20F54-880A-49F3-99FA-4B3FE54E8AB1}
		{FCA38F3C-7C73-4C47-BE4E-32F77FA8538D} = {5EA20F54-880A-49F3-99FA-4B3FE54E8AB1}
		{2049DBE9-8D13-42C9-AE4B-413AE38FFFD0} = {5EA20F54-880A-49F3-99FA-4B3FE54E8AB1}
		{84E05BFA-CBAF-4F0D-BFB6-4CE85742A57E} = {5EA20F54-880A-49F3-99FA-4B3FE54E8AB1}
		{EF074BA1-2D54-4D49-A28E-5E040B47CD2E} = {5EA20F54-880A-49F3-99FA-4B3FE54E8AB1}
		{14B93DC8-FD93-4A6D-81CB-8BC96644501C} = {5EA20F54-880A-49F3-99FA-4B3FE54E8AB1}
	EndGlobalSection
	GlobalSection(ExtensibilityGlobals) = postSolution
		SolutionGuid = {D43FAD39-F619-437D-BB40-04A3982ACB6A}
	EndGlobalSection
EndGlobal
"
`;

exports[`C++  Application: SnapshotApp.vcxproj 1`] = `
"<?xml version=\\"1.0\\" encoding=\\"utf-8\\"?>
<Project ToolsVersion=\\"Current\\" DefaultTargets=\\"Build\\" xmlns=\\"http://schemas.microsoft.com/developer/msbuild/2003\\">
  <Import Project=\\"$(SolutionDir)\\\\ExperimentalFeatures.props\\" Condition=\\"Exists('$(SolutionDir)\\\\ExperimentalFeatures.props')\\" />
  <Import Project=\\"..\\\\packages\\\\Microsoft.Windows.CppWinRT.2.0.210312.4\\\\build\\\\native\\\\Microsoft.Windows.CppWinRT.props\\" Condition=\\"Exists('..\\\\packages\\\\Microsoft.Windows.CppWinRT.2.0.210312.4\\\\build\\\\native\\\\Microsoft.Windows.CppWinRT.props')\\" />
  <PropertyGroup Label=\\"Globals\\">
    <CppWinRTOptimized>true</CppWinRTOptimized>
    <CppWinRTRootNamespaceAutoMerge>true</CppWinRTRootNamespaceAutoMerge>
    <MinimalCoreWin>true</MinimalCoreWin>
    <ProjectGuid>{562eee43-aa2c-4224-b631-65384e83b4f6}</ProjectGuid>
    <ProjectName>SnapshotApp</ProjectName>
    <RootNamespace>SnapshotApp</RootNamespace>
    <DefaultLanguage>en-US</DefaultLanguage>
    <MinimumVisualStudioVersion>16.0</MinimumVisualStudioVersion>
    <AppContainerApplication>true</AppContainerApplication>
    <ApplicationType>Windows Store</ApplicationType>
    <ApplicationTypeRevision>10.0</ApplicationTypeRevision>
  </PropertyGroup>
  <PropertyGroup Label=\\"ReactNativeWindowsProps\\">
    <ReactNativeWindowsDir Condition=\\"'$(ReactNativeWindowsDir)' == ''\\">$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), 'node_modules\\\\react-native-windows\\\\package.json'))\\\\node_modules\\\\react-native-windows\\\\</ReactNativeWindowsDir>
  </PropertyGroup>
  <Import Project=\\"$(ReactNativeWindowsDir)\\\\PropertySheets\\\\External\\\\Microsoft.ReactNative.WindowsSdk.Default.props\\" />
  <Import Project=\\"$(VCTargetsPath)\\\\Microsoft.Cpp.Default.props\\" />
  <ItemGroup Label=\\"ProjectConfigurations\\">
    <ProjectConfiguration Include=\\"Debug|ARM64\\">
      <Configuration>Debug</Configuration>
      <Platform>ARM64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include=\\"Debug|Win32\\">
      <Configuration>Debug</Configuration>
      <Platform>Win32</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include=\\"Debug|x64\\">
      <Configuration>Debug</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include=\\"Release|ARM64\\">
      <Configuration>Release</Configuration>
      <Platform>ARM64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include=\\"Release|Win32\\">
      <Configuration>Release</Configuration>
      <Platform>Win32</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include=\\"Release|x64\\">
      <Configuration>Release</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
  </ItemGroup>
  <PropertyGroup Label=\\"Configuration\\">
    <ConfigurationType>Application</ConfigurationType>
    <CharacterSet>Unicode</CharacterSet>
  </PropertyGroup>
  <PropertyGroup Condition=\\"'$(Configuration)'=='Debug'\\" Label=\\"Configuration\\">
    <UseDebugLibraries>true</UseDebugLibraries>
    <LinkIncremental>true</LinkIncremental>
  </PropertyGroup>
  <PropertyGroup Condition=\\"'$(Configuration)'=='Release'\\" Label=\\"Configuration\\">
    <UseDebugLibraries>false</UseDebugLibraries>
    <WholeProgramOptimization>true</WholeProgramOptimization>
    <LinkIncremental>false</LinkIncremental>
  </PropertyGroup>
  <Import Project=\\"$(VCTargetsPath)\\\\Microsoft.Cpp.props\\" />
  <ImportGroup Label=\\"ExtensionSettings\\"></ImportGroup>
  <ImportGroup Label=\\"PropertySheets\\">
    <Import Project=\\"$(UserRootDir)\\\\Microsoft.Cpp.$(Platform).user.props\\" Condition=\\"exists('$(UserRootDir)\\\\Microsoft.Cpp.$(Platform).user.props')\\" Label=\\"LocalAppDataPlatform\\" />
  </ImportGroup>
  <ImportGroup Label=\\"PropertySheets\\">
    <Import Project=\\"PropertySheet.props\\" />
  </ImportGroup>
  <ImportGroup Label=\\"ReactNativeWindowsPropertySheets\\">
    <Import Project=\\"$(ReactNativeWindowsDir)\\\\PropertySheets\\\\external\\\\Microsoft.ReactNative.Uwp.CppApp.props\\" Condition=\\"Exists('$(ReactNativeWindowsDir)\\\\PropertySheets\\\\External\\\\Microsoft.ReactNative.Uwp.CppApp.props')\\" />
    <Import Project=\\"..\\\\packages\\\\$(WinUIPackageProps)\\" Condition=\\"'$(WinUIPackageProps)'!='' And Exists('..\\\\packages\\\\$(WinUIPackageProps)')\\" />
  </ImportGroup>
  <PropertyGroup Label=\\"UserMacros\\" />
  <ItemDefinitionGroup>
    <ClCompile>
      <PrecompiledHeader>Use</PrecompiledHeader>
      <PrecompiledHeaderFile>pch.h</PrecompiledHeaderFile>
      <PrecompiledHeaderOutputFile>$(IntDir)pch.pch</PrecompiledHeaderOutputFile>
      <WarningLevel>Level4</WarningLevel>
      <AdditionalOptions>%(AdditionalOptions) /bigobj</AdditionalOptions>
      <DisableSpecificWarnings>4453;28204</DisableSpecificWarnings>
    </ClCompile>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition=\\"'$(Configuration)'=='Debug'\\">
    <ClCompile>
      <PreprocessorDefinitions>_DEBUG;%(PreprocessorDefinitions)</PreprocessorDefinitions>
    </ClCompile>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition=\\"'$(Configuration)'=='Release'\\">
    <ClCompile>
      <PreprocessorDefinitions>NDEBUG;%(PreprocessorDefinitions)</PreprocessorDefinitions>
    </ClCompile>
  </ItemDefinitionGroup>
  <ItemGroup>
    <ClInclude Include=\\"MainPage.h\\">
      <DependentUpon>MainPage.xaml</DependentUpon>
      <SubType>Code</SubType>
    </ClInclude>
    <ClInclude Include=\\"ReactPackageProvider.h\\" />
    <ClInclude Include=\\"AutolinkedNativeModules.g.h\\" />
    <ClInclude Include=\\"pch.h\\" />
    <ClInclude Include=\\"App.h\\">
      <DependentUpon>App.xaml</DependentUpon>
    </ClInclude>
  </ItemGroup>
  <ItemGroup>
    <ApplicationDefinition Include=\\"App.xaml\\">
      <SubType>Designer</SubType>
    </ApplicationDefinition>
  </ItemGroup>
  <ItemGroup>
    <AppxManifest Include=\\"Package.appxmanifest\\">
      <SubType>Designer</SubType>
    </AppxManifest>
  </ItemGroup>
  <ItemGroup>
    <Image Include=\\"Assets\\\\LockScreenLogo.scale-200.png\\" />
    <Image Include=\\"Assets\\\\SplashScreen.scale-200.png\\" />
    <Image Include=\\"Assets\\\\Square150x150Logo.scale-200.png\\" />
    <Image Include=\\"Assets\\\\Square44x44Logo.scale-200.png\\" />
    <Image Include=\\"Assets\\\\Square44x44Logo.targetsize-24_altform-unplated.png\\" />
    <Image Include=\\"Assets\\\\StoreLogo.png\\" />
    <Image Include=\\"Assets\\\\Wide310x150Logo.scale-200.png\\" />
  </ItemGroup>
  <ItemGroup>
    <ClCompile Include=\\"MainPage.cpp\\">
      <DependentUpon>MainPage.xaml</DependentUpon>
      <SubType>Code</SubType>
    </ClCompile>
    <ClCompile Include=\\"ReactPackageProvider.cpp\\" />
    <ClCompile Include=\\"AutolinkedNativeModules.g.cpp\\" />
    <ClCompile Include=\\"pch.cpp\\">
      <PrecompiledHeader>Create</PrecompiledHeader>
    </ClCompile>
    <ClCompile Include=\\"App.cpp\\">
      <DependentUpon>App.xaml</DependentUpon>
    </ClCompile>
    <ClCompile Include=\\"$(GeneratedFilesDir)module.g.cpp\\" />
  </ItemGroup>
  <ItemGroup>
    <Midl Include=\\"App.idl\\">
      <DependentUpon>App.xaml</DependentUpon>
    </Midl>
    <Midl Include=\\"MainPage.idl\\">
      <DependentUpon>MainPage.xaml</DependentUpon>
      <SubType>Code</SubType>
    </Midl>
  </ItemGroup>
  <ItemGroup>
    <None Include=\\"packages.config\\" />
    <None Include=\\"PropertySheet.props\\" />
    <Text Include=\\"readme.txt\\">
      <DeploymentContent>false</DeploymentContent>
    </Text>
  </ItemGroup>
  <ItemGroup>
    <Page Include=\\"MainPage.xaml\\">
      <SubType>Designer</SubType>
    </Page>
  </ItemGroup>
  <Import Project=\\"$(VCTargetsPath)\\\\Microsoft.Cpp.targets\\" />
  <ImportGroup Label=\\"ReactNativeWindowsTargets\\">
    <Import Project=\\"$(ReactNativeWindowsDir)\\\\PropertySheets\\\\External\\\\Microsoft.ReactNative.Uwp.CppApp.targets\\" Condition=\\"Exists('$(ReactNativeWindowsDir)\\\\PropertySheets\\\\External\\\\Microsoft.ReactNative.Uwp.CppApp.targets')\\" />
  </ImportGroup>
  <Target Name=\\"EnsureReactNativeWindowsTargets\\" BeforeTargets=\\"PrepareForBuild\\">
    <PropertyGroup>
      <ErrorText>This project references targets in your node_modules\\\\react-native-windows folder that are missing. The missing file is {0}.</ErrorText>
    </PropertyGroup>
    <Error Condition=\\"!Exists('$(ReactNativeWindowsDir)\\\\PropertySheets\\\\External\\\\Microsoft.ReactNative.Uwp.CppApp.props')\\" Text=\\"$([System.String]::Format('$(ErrorText)', '$(ReactNativeWindowsDir)\\\\PropertySheets\\\\External\\\\Microsoft.ReactNative.Uwp.CppApp.props'))\\" />
    <Error Condition=\\"!Exists('$(ReactNativeWindowsDir)\\\\PropertySheets\\\\External\\\\Microsoft.ReactNative.Uwp.CppApp.targets')\\" Text=\\"$([System.String]::Format('$(ErrorText)', '$(ReactNativeWindowsDir)\\\\PropertySheets\\\\External\\\\Microsoft.ReactNative.Uwp.CppApp.targets'))\\" />
  </Target>
  <ImportGroup Label=\\"ExtensionTargets\\">
    <Import Project=\\"..\\\\packages\\\\Microsoft.Windows.CppWinRT.2.0.210312.4\\\\build\\\\native\\\\Microsoft.Windows.CppWinRT.targets\\" Condition=\\"Exists('..\\\\packages\\\\Microsoft.Windows.CppWinRT.2.0.210312.4\\\\build\\\\native\\\\Microsoft.Windows.CppWinRT.targets')\\" />
    <Import Project=\\"..\\\\packages\\\\ReactNative.Hermes.Windows.0.9.0-ms.6\\\\build\\\\native\\\\ReactNative.Hermes.Windows.targets\\" Condition=\\"Exists('..\\\\packages\\\\ReactNative.Hermes.Windows.0.9.0-ms.6\\\\build\\\\native\\\\ReactNative.Hermes.Windows.targets')\\" />
    <Import Project=\\"..\\\\packages\\\\$(WinUIPackageName).$(WinUIPackageVersion)\\\\build\\\\native\\\\$(WinUIPackageName).targets\\" Condition=\\"Exists('..\\\\packages\\\\$(WinUIPackageName).$(WinUIPackageVersion)\\\\build\\\\native\\\\$(WinUIPackageName).targets')\\" />
  </ImportGroup>
  <Target Name=\\"EnsureNuGetPackageBuildImports\\" BeforeTargets=\\"PrepareForBuild\\">
    <PropertyGroup>
      <ErrorText>This project references NuGet package(s) that are missing on this computer. Use NuGet Package Restore to download them.  For more information, see http://go.microsoft.com/fwlink/?LinkID=322105. The missing file is {0}.</ErrorText>
    </PropertyGroup>
    <Error Condition=\\"!Exists('..\\\\packages\\\\Microsoft.Windows.CppWinRT.2.0.210312.4\\\\build\\\\native\\\\Microsoft.Windows.CppWinRT.props')\\" Text=\\"$([System.String]::Format('$(ErrorText)', '..\\\\packages\\\\Microsoft.Windows.CppWinRT.2.0.210312.4\\\\build\\\\native\\\\Microsoft.Windows.CppWinRT.props'))\\" />
    <Error Condition=\\"!Exists('..\\\\packages\\\\Microsoft.Windows.CppWinRT.2.0.210312.4\\\\build\\\\native\\\\Microsoft.Windows.CppWinRT.targets')\\" Text=\\"$([System.String]::Format('$(ErrorText)', '..\\\\packages\\\\Microsoft.Windows.CppWinRT.2.0.210312.4\\\\build\\\\native\\\\Microsoft.Windows.CppWinRT.targets'))\\" />
    <Error Condition=\\"!Exists('..\\\\packages\\\\ReactNative.Hermes.Windows.0.9.0-ms.6\\\\build\\\\native\\\\ReactNative.Hermes.Windows.targets')\\" Text=\\"$([System.String]::Format('$(ErrorText)', '..\\\\packages\\\\ReactNative.Hermes.Windows.0.9.0-ms.6\\\\build\\\\native\\\\ReactNative.Hermes.Windows.targets'))\\" />
    <Error Condition=\\"!Exists('..\\\\packages\\\\$(WinUIPackageName).$(WinUIPackageVersion)\\\\build\\\\native\\\\$(WinUIPackageName).targets')\\" Text=\\"$([System.String]::Format('$(ErrorText)', '..\\\\packages\\\\$(WinUIPackageName).$(WinUIPackageVersion)\\\\build\\\\native\\\\$(WinUIPackageName).targets'))\\" />
  </Target>
</Project>
"
`;

exports[`C++  Application: SnapshotApp.vcxproj.filters 1`] = `
"﻿<?xml version=\\"1.0\\" encoding=\\"utf-8\\"?>
<Project ToolsVersion=\\"Current\\" xmlns=\\"http://schemas.microsoft.com/developer/msbuild/2003\\">
  <ItemGroup>
    <ApplicationDefinition Include=\\"App.xaml\\" />
  </ItemGroup>
  <ItemGroup>
    <Midl Include=\\"App.idl\\" />
  </ItemGroup>
  <ItemGroup>
    <ClCompile Include=\\"pch.cpp\\" />
    <ClCompile Include=\\"App.cpp\\" />
    <ClCompile Include=\\"$(GeneratedFilesDir)module.g.cpp\\" />
    <ClCompile Include=\\"ReactPackageProvider.cpp\\" />
    <ClCompile Include=\\"AutolinkedNativeModules.g.cpp\\" />
  </ItemGroup>
  <ItemGroup>
    <ClInclude Include=\\"pch.h\\" />
    <ClInclude Include=\\"App.h\\" />
    <ClInclude Include=\\"ReactPackageProvider.h\\" />
    <ClInclude Include=\\"AutolinkedNativeModules.g.h\\" />
  </ItemGroup>
  <ItemGroup>
    <Image Include=\\"Assets\\\\Wide310x150Logo.scale-200.png\\">
      <Filter>Assets</Filter>
    </Image>
    <Image Include=\\"Assets\\\\StoreLogo.png\\">
      <Filter>Assets</Filter>
    </Image>
    <Image Include=\\"Assets\\\\Square150x150Logo.scale-200.png\\">
      <Filter>Assets</Filter>
    </Image>
    <Image Include=\\"Assets\\\\Square44x44Logo.targetsize-24_altform-unplated.png\\">
      <Filter>Assets</Filter>
    </Image>
    <Image Include=\\"Assets\\\\Square44x44Logo.scale-200.png\\">
      <Filter>Assets</Filter>
    </Image>
    <Image Include=\\"Assets\\\\SplashScreen.scale-200.png\\">
      <Filter>Assets</Filter>
    </Image>
    <Image Include=\\"Assets\\\\LockScreenLogo.scale-200.png\\">
      <Filter>Assets</Filter>
    </Image>
  </ItemGroup>
  <ItemGroup>
    <AppxManifest Include=\\"Package.appxmanifest\\" />
  </ItemGroup>
  <ItemGroup>
    <Filter Include=\\"Assets\\">
      <UniqueIdentifier>{e48dc53e-40b1-40cb-970a-f89935452892}</UniqueIdentifier>
    </Filter>
  </ItemGroup>
  <ItemGroup>
    <None Include=\\"PropertySheet.props\\" />
    <None Include=\\"packages.config\\" />
  </ItemGroup>
  <ItemGroup>
    <Text Include=\\"readme.txt\\" />
  </ItemGroup>
  <ItemGroup>
    <Page Include=\\"MainPage.xaml\\" />
  </ItemGroup>
</Project>"
`;

exports[`C++  Application: index.windows.bundle 1`] = `
"/**
 * 
 * Be sure to generate this file using the CLI:
 *
 * npx react-native bundle --platform windows --entry-file index.js 
 *   --bundle-output windows\\\\SnapshotApp\\\\Bundle\\\\index.windows.bundle
 *   --assets-dest windows\\\\SnapshotApp\\\\Bundle
 *
 */"
`;

exports[`C++  Application: metro.config.js 1`] = `
"/**
 * Metro configuration for React Native
 * https://github.com/facebook/react-native
 *
 * @format
 */
const fs = require('fs');
const path = require('path');
const exclusionList = require('metro-config/src/defaults/exclusionList');

const rnwPath = fs.realpathSync(
  path.resolve(require.resolve('react-native-windows/package.json'), '..'),
);

module.exports = {
  resolver: {
    blockList: exclusionList([
      // This stops \\"react-native run-windows\\" from causing the metro server to crash if its already running
      new RegExp(
        \`\${path.resolve(__dirname, 'windows').replace(/[/\\\\\\\\]/g, '/')}.*\`,
      ),
      // This prevents \\"react-native run-windows\\" from hitting: EBUSY: resource busy or locked, open msbuild.ProjectImports.zip or other files produced by msbuild
      new RegExp(\`\${rnwPath}/build/.*\`),
      new RegExp(\`\${rnwPath}/target/.*\`),
      /.*\\\\.ProjectImports\\\\.zip/,
    ]),
  },
  transformer: {
    getTransformOptions: async () => ({
      transform: {
        experimentalImportSupport: false,
        inlineRequires: true,
      },
    }),
  },
};
"
`;

exports[`C++  Application: packages.config 1`] = `
"﻿<?xml version=\\"1.0\\" encoding=\\"utf-8\\"?>
<packages>
  <package id=\\"Microsoft.Windows.CppWinRT\\" version=\\"2.0.210312.4\\" targetFramework=\\"native\\" />
  <package id=\\"ReactNative.Hermes.Windows\\" version=\\"0.9.0-ms.6\\" targetFramework=\\"native\\" />
  <package id=\\"Microsoft.UI.Xaml\\" version=\\"2.7.0\\" targetFramework=\\"native\\" />
</packages>"
`;

exports[`C++  Application: pch.cpp 1`] = `
"﻿#include \\"pch.h\\"
"
`;

exports[`C++  Application: pch.h 1`] = `
"#pragma once

#define NOMINMAX

#include <hstring.h>
#include <restrictederrorinfo.h>
#include <unknwn.h>
#include <windows.h>
#include <CppWinRTIncludes.h>
#include <VersionMacros.h>
#include <winrt/Windows.ApplicationModel.Activation.h>
#include <UI.Xaml.Controls.Primitives.h>
#include <UI.Xaml.Controls.h>
#include <UI.Xaml.Markup.h>
#include <UI.Xaml.Navigation.h>

#include <winrt/Microsoft.ReactNative.h>

#include <winrt/Microsoft.UI.Xaml.Automation.Peers.h>
#include <winrt/Microsoft.UI.Xaml.Controls.Primitives.h>
#include <winrt/Microsoft.UI.Xaml.Controls.h>
#include <winrt/Microsoft.UI.Xaml.Media.h>
#include <winrt/Microsoft.UI.Xaml.XamlTypeInfo.h>
using namespace winrt::Windows::Foundation;
"
`;

exports[`C++  Library: ExperimentalFeatures.props 1`] = `
"<?xml version=\\"1.0\\" encoding=\\"utf-8\\"?>
<Project xmlns=\\"http://schemas.microsoft.com/developer/msbuild/2003\\">

  <!--
    Application projects contain a file with this name to specify some important settings
    that will apply globally for the app and *all* native modules the app consumes. These
    values are set by the app developer.
  -->

</Project>
"
`;

exports[`C++  Library: NuGet.Config 1`] = `
"<?xml version=\\"1.0\\" encoding=\\"utf-8\\"?>
<configuration>
  <config>
    <add key=\\"repositoryPath\\" value=\\"packages\\" />
  </config>
  <packageSources>
    <clear />
    <add key=\\"react-native\\" value=\\"https://pkgs.dev.azure.com/ms/react-native/_packaging/react-native-public/nuget/v3/index.json\\" />
    <add key=\\"Nuget.org\\" value=\\"https://api.nuget.org/v3/index.json\\" />
  </packageSources>
  <disabledPackageSources>
    <clear />
  </disabledPackageSources>  
</configuration>
"
`;

exports[`C++  Library: PropertySheet.props 1`] = `
"<?xml version=\\"1.0\\" encoding=\\"utf-8\\"?>
<Project ToolsVersion=\\"Current\\" xmlns=\\"http://schemas.microsoft.com/developer/msbuild/2003\\">
  <ImportGroup Label=\\"PropertySheets\\" />
  <PropertyGroup Label=\\"UserMacros\\" />
  <!--
    To customize common C++/WinRT project properties:
    * right-click the project node
    * expand the Common Properties item
    * select the C++/WinRT property page

    For more advanced scenarios, and complete documentation, please see:
    https://github.com/Microsoft/xlang/tree/master/src/package/cppwinrt/nuget
    -->
  <PropertyGroup />
  <ItemDefinitionGroup />
</Project>"
`;

exports[`C++  Library: ReactNativeModule.h 1`] = `
"﻿#pragma once

#include \\"JSValue.h\\"
#include \\"NativeModules.h\\"

using namespace winrt::Microsoft::ReactNative;

namespace winrt::SnapshotApp
{

REACT_MODULE(ReactNativeModule, L\\"SnapshotApp\\")
struct ReactNativeModule
{
    // See https://microsoft.github.io/react-native-windows/docs/native-modules for details on writing native modules

    REACT_INIT(Initialize)
    void Initialize(ReactContext const &reactContext) noexcept
    {
        m_reactContext = reactContext;
    }
    
    REACT_METHOD(sampleMethod)
    void sampleMethod(std::string stringArgument, int numberArgument, std::function<void(std::string)> &&callback) noexcept
    {
        // TODO: Implement some actually useful functionality
        callback(\\"Received numberArgument: \\" + std::to_string(numberArgument) + \\" stringArgument: \\" + stringArgument);
    }

    private:
        ReactContext m_reactContext{nullptr};
};

} // namespace winrt::SnapshotApp
"
`;

exports[`C++  Library: ReactPackageProvider.cpp 1`] = `
"#include \\"pch.h\\"
#include \\"ReactPackageProvider.h\\"
#if __has_include(\\"ReactPackageProvider.g.cpp\\")
#include \\"ReactPackageProvider.g.cpp\\"
#endif

#include \\"ReactNativeModule.h\\"

using namespace winrt::Microsoft::ReactNative;

namespace winrt::SnapshotApp::implementation
{

void ReactPackageProvider::CreatePackage(IReactPackageBuilder const &packageBuilder) noexcept
{
    AddAttributedModules(packageBuilder);
}

} // namespace winrt::SnapshotApp::implementation
"
`;

exports[`C++  Library: ReactPackageProvider.h 1`] = `
"#pragma once
#include \\"ReactPackageProvider.g.h\\"

using namespace winrt::Microsoft::ReactNative;

namespace winrt::SnapshotApp::implementation
{
    struct ReactPackageProvider : ReactPackageProviderT<ReactPackageProvider>
    {
        ReactPackageProvider() = default;

        void CreatePackage(IReactPackageBuilder const &packageBuilder) noexcept;
    };
} // namespace winrt::SnapshotApp::implementation

namespace winrt::SnapshotApp::factory_implementation
{

struct ReactPackageProvider : ReactPackageProviderT<ReactPackageProvider, implementation::ReactPackageProvider> {};

} // namespace winrt::SnapshotApp::factory_implementation
"
`;

exports[`C++  Library: ReactPackageProvider.idl 1`] = `
"namespace SnapshotApp
{
    [webhosthidden]
    [default_interface]
    runtimeclass ReactPackageProvider : Microsoft.ReactNative.IReactPackageProvider
    {
        ReactPackageProvider();
    };
}
"
`;

exports[`C++  Library: SnapshotApp.def 1`] = `
"﻿EXPORTS
DllCanUnloadNow = WINRT_CanUnloadNow                    PRIVATE
DllGetActivationFactory = WINRT_GetActivationFactory    PRIVATE
"
`;

exports[`C++  Library: SnapshotApp.sln 1`] = `
"﻿
Microsoft Visual Studio Solution File, Format Version 12.00
# Visual Studio Version 16
VisualStudioVersion = 16.0.29215.179
MinimumVisualStudioVersion = 10.0.40219.1
Project(\\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\\") = \\"SnapshotApp\\", \\"SnapshotApp\\\\SnapshotApp.vcxproj\\", \\"{19F1844A-EF98-4CE0-BF70-32DA118AA17F}\\"
	ProjectSection(ProjectDependencies) = postProject
		{F7D32BD0-2749-483E-9A0D-1635EF7E3136} = {F7D32BD0-2749-483E-9A0D-1635EF7E3136}
	EndProjectSection
EndProject
Project(\\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\\") = \\"Folly\\", \\"..\\\\node_modules\\\\react-native-windows\\\\Folly\\\\Folly.vcxproj\\", \\"{A990658C-CE31-4BCC-976F-0FC6B1AF693D}\\"
EndProject
Project(\\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\\") = \\"fmt\\", \\"..\\\\node_modules\\\\react-native-windows\\\\fmt\\\\fmt.vcxproj\\", \\"{14B93DC8-FD93-4A6D-81CB-8BC96644501C}\\"
EndProject
Project(\\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\\") = \\"ReactCommon\\", \\"..\\\\node_modules\\\\react-native-windows\\\\ReactCommon\\\\ReactCommon.vcxproj\\", \\"{A9D95A91-4DB7-4F72-BEB6-FE8A5C89BFBD}\\"
	ProjectSection(ProjectDependencies) = postProject
		{A990658C-CE31-4BCC-976F-0FC6B1AF693D} = {A990658C-CE31-4BCC-976F-0FC6B1AF693D}
	EndProjectSection
EndProject
Project(\\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\\") = \\"Chakra\\", \\"..\\\\node_modules\\\\react-native-windows\\\\Chakra\\\\Chakra.vcxitems\\", \\"{C38970C0-5FBF-4D69-90D8-CBAC225AE895}\\"
EndProject
Project(\\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\\") = \\"Microsoft.ReactNative\\", \\"..\\\\node_modules\\\\react-native-windows\\\\Microsoft.ReactNative\\\\Microsoft.ReactNative.vcxproj\\", \\"{F7D32BD0-2749-483E-9A0D-1635EF7E3136}\\"
EndProject
Project(\\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\\") = \\"Microsoft.ReactNative.Cxx\\", \\"..\\\\node_modules\\\\react-native-windows\\\\Microsoft.ReactNative.Cxx\\\\Microsoft.ReactNative.Cxx.vcxitems\\", \\"{DA8B35B3-DA00-4B02-BDE6-6A397B3FD46B}\\"
EndProject
Project(\\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\\") = \\"Common\\", \\"..\\\\node_modules\\\\react-native-windows\\\\Common\\\\Common.vcxproj\\", \\"{FCA38F3C-7C73-4C47-BE4E-32F77FA8538D}\\"
EndProject
Project(\\"{2150E333-8FDC-42A3-9474-1A3956D46DE8}\\") = \\"ReactNative\\", \\"ReactNative\\", \\"{5EA20F54-880A-49F3-99FA-4B3FE54E8AB1}\\"
EndProject
Project(\\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\\") = \\"Microsoft.ReactNative.Shared\\", \\"..\\\\node_modules\\\\react-native-windows\\\\Shared\\\\Shared.vcxitems\\", \\"{2049DBE9-8D13-42C9-AE4B-413AE38FFFD0}\\"
EndProject
Project(\\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\\") = \\"Mso\\", \\"..\\\\node_modules\\\\react-native-windows\\\\Mso\\\\Mso.vcxitems\\", \\"{84E05BFA-CBAF-4F0D-BFB6-4CE85742A57E}\\"
EndProject
Project(\\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\\") = \\"Include\\", \\"..\\\\node_modules\\\\react-native-windows\\\\include\\\\Include.vcxitems\\", \\"{EF074BA1-2D54-4D49-A28E-5E040B47CD2E}\\"
EndProject
Global
	GlobalSection(SharedMSBuildProjectFiles) = preSolution
		..\\\\node_modules\\\\react-native-windows\\\\Shared\\\\Shared.vcxitems*{2049dbe9-8d13-42c9-ae4b-413ae38fffd0}*SharedItemsImports = 9
		..\\\\node_modules\\\\react-native-windows\\\\Mso\\\\Mso.vcxitems*{84e05bfa-cbaf-4f0d-bfb6-4ce85742a57e}*SharedItemsImports = 9
		..\\\\node_modules\\\\react-native-windows\\\\Chakra\\\\Chakra.vcxitems*{c38970c0-5fbf-4d69-90d8-cbac225ae895}*SharedItemsImports = 9
		..\\\\node_modules\\\\react-native-windows\\\\Microsoft.ReactNative.Cxx\\\\Microsoft.ReactNative.Cxx.vcxitems*{da8b35b3-da00-4b02-bde6-6a397b3fd46b}*SharedItemsImports = 9
		..\\\\node_modules\\\\react-native-windows\\\\include\\\\Include.vcxitems*{ef074ba1-2d54-4d49-a28e-5e040b47cd2e}*SharedItemsImports = 9
		..\\\\node_modules\\\\react-native-windows\\\\Chakra\\\\Chakra.vcxitems*{f7d32bd0-2749-483e-9a0d-1635ef7e3136}*SharedItemsImports = 4
		..\\\\node_modules\\\\react-native-windows\\\\Microsoft.ReactNative.Cxx\\\\Microsoft.ReactNative.Cxx.vcxitems*{f7d32bd0-2749-483e-9a0d-1635ef7e3136}*SharedItemsImports = 4
		..\\\\node_modules\\\\react-native-windows\\\\Mso\\\\Mso.vcxitems*{f7d32bd0-2749-483e-9a0d-1635ef7e3136}*SharedItemsImports = 4
		..\\\\node_modules\\\\react-native-windows\\\\Shared\\\\Shared.vcxitems*{f7d32bd0-2749-483e-9a0d-1635ef7e3136}*SharedItemsImports = 4
	EndGlobalSection
	GlobalSection(SolutionConfigurationPlatforms) = preSolution
		Debug|ARM64 = Debug|ARM64
		Debug|x64 = Debug|x64
		Debug|x86 = Debug|x86
		Release|ARM64 = Release|ARM64
		Release|x64 = Release|x64
		Release|x86 = Release|x86
	EndGlobalSection
	GlobalSection(ProjectConfigurationPlatforms) = postSolution
		{19F1844A-EF98-4CE0-BF70-32DA118AA17F}.Debug|ARM64.ActiveCfg = Debug|ARM64
		{19F1844A-EF98-4CE0-BF70-32DA118AA17F}.Debug|ARM64.Build.0 = Debug|ARM64
		{19F1844A-EF98-4CE0-BF70-32DA118AA17F}.Debug|ARM64.Deploy.0 = Debug|ARM64
		{19F1844A-EF98-4CE0-BF70-32DA118AA17F}.Debug|x64.ActiveCfg = Debug|x64
		{19F1844A-EF98-4CE0-BF70-32DA118AA17F}.Debug|x64.Build.0 = Debug|x64
		{19F1844A-EF98-4CE0-BF70-32DA118AA17F}.Debug|x64.Deploy.0 = Debug|x64
		{19F1844A-EF98-4CE0-BF70-32DA118AA17F}.Debug|x86.ActiveCfg = Debug|Win32
		{19F1844A-EF98-4CE0-BF70-32DA118AA17F}.Debug|x86.Build.0 = Debug|Win32
		{19F1844A-EF98-4CE0-BF70-32DA118AA17F}.Debug|x86.Deploy.0 = Debug|Win32
		{19F1844A-EF98-4CE0-BF70-32DA118AA17F}.Release|ARM64.ActiveCfg = Release|ARM64
		{19F1844A-EF98-4CE0-BF70-32DA118AA17F}.Release|ARM64.Build.0 = Release|ARM64
		{19F1844A-EF98-4CE0-BF70-32DA118AA17F}.Release|ARM64.Deploy.0 = Release|ARM64
		{19F1844A-EF98-4CE0-BF70-32DA118AA17F}.Release|x64.ActiveCfg = Release|x64
		{19F1844A-EF98-4CE0-BF70-32DA118AA17F}.Release|x64.Build.0 = Release|x64
		{19F1844A-EF98-4CE0-BF70-32DA118AA17F}.Release|x64.Deploy.0 = Release|x64
		{19F1844A-EF98-4CE0-BF70-32DA118AA17F}.Release|x86.ActiveCfg = Release|Win32
		{19F1844A-EF98-4CE0-BF70-32DA118AA17F}.Release|x86.Build.0 = Release|Win32
		{19F1844A-EF98-4CE0-BF70-32DA118AA17F}.Release|x86.Deploy.0 = Release|Win32
		{A990658C-CE31-4BCC-976F-0FC6B1AF693D}.Debug|ARM64.ActiveCfg = Debug|ARM64
		{A990658C-CE31-4BCC-976F-0FC6B1AF693D}.Debug|ARM64.Build.0 = Debug|ARM64
		{A990658C-CE31-4BCC-976F-0FC6B1AF693D}.Debug|x64.ActiveCfg = Debug|x64
		{A990658C-CE31-4BCC-976F-0FC6B1AF693D}.Debug|x64.Build.0 = Debug|x64
		{A990658C-CE31-4BCC-976F-0FC6B1AF693D}.Debug|x86.ActiveCfg = Debug|Win32
		{A990658C-CE31-4BCC-976F-0FC6B1AF693D}.Debug|x86.Build.0 = Debug|Win32
		{A990658C-CE31-4BCC-976F-0FC6B1AF693D}.Release|ARM64.ActiveCfg = Release|ARM64
		{A990658C-CE31-4BCC-976F-0FC6B1AF693D}.Release|ARM64.Build.0 = Release|ARM64
		{A990658C-CE31-4BCC-976F-0FC6B1AF693D}.Release|x64.ActiveCfg = Release|x64
		{A990658C-CE31-4BCC-976F-0FC6B1AF693D}.Release|x64.Build.0 = Release|x64
		{A990658C-CE31-4BCC-976F-0FC6B1AF693D}.Release|x86.ActiveCfg = Release|Win32
		{A990658C-CE31-4BCC-976F-0FC6B1AF693D}.Release|x86.Build.0 = Release|Win32
		{A9D95A91-4DB7-4F72-BEB6-FE8A5C89BFBD}.Debug|ARM64.ActiveCfg = Debug|ARM64
		{A9D95A91-4DB7-4F72-BEB6-FE8A5C89BFBD}.Debug|ARM64.Build.0 = Debug|ARM64
		{A9D95A91-4DB7-4F72-BEB6-FE8A5C89BFBD}.Debug|x64.ActiveCfg = Debug|x64
		{A9D95A91-4DB7-4F72-BEB6-FE8A5C89BFBD}.Debug|x64.Build.0 = Debug|x64
		{A9D95A91-4DB7-4F72-BEB6-FE8A5C89BFBD}.Debug|x86.ActiveCfg = Debug|Win32
		{A9D95A91-4DB7-4F72-BEB6-FE8A5C89BFBD}.Debug|x86.Build.0 = Debug|Win32
		{A9D95A91-4DB7-4F72-BEB6-FE8A5C89BFBD}.Release|ARM64.ActiveCfg = Release|ARM64
		{A9D95A91-4DB7-4F72-BEB6-FE8A5C89BFBD}.Release|ARM64.Build.0 = Release|ARM64
		{A9D95A91-4DB7-4F72-BEB6-FE8A5C89BFBD}.Release|x64.ActiveCfg = Release|x64
		{A9D95A91-4DB7-4F72-BEB6-FE8A5C89BFBD}.Release|x64.Build.0 = Release|x64
		{A9D95A91-4DB7-4F72-BEB6-FE8A5C89BFBD}.Release|x86.ActiveCfg = Release|Win32
		{A9D95A91-4DB7-4F72-BEB6-FE8A5C89BFBD}.Release|x86.Build.0 = Release|Win32
		{F7D32BD0-2749-483E-9A0D-1635EF7E3136}.Debug|ARM64.ActiveCfg = Debug|ARM64
		{F7D32BD0-2749-483E-9A0D-1635EF7E3136}.Debug|ARM64.Build.0 = Debug|ARM64
		{F7D32BD0-2749-483E-9A0D-1635EF7E3136}.Debug|x64.ActiveCfg = Debug|x64
		{F7D32BD0-2749-483E-9A0D-1635EF7E3136}.Debug|x64.Build.0 = Debug|x64
		{F7D32BD0-2749-483E-9A0D-1635EF7E3136}.Debug|x86.ActiveCfg = Debug|Win32
		{F7D32BD0-2749-483E-9A0D-1635EF7E3136}.Debug|x86.Build.0 = Debug|Win32
		{F7D32BD0-2749-483E-9A0D-1635EF7E3136}.Release|ARM64.ActiveCfg = Release|ARM64
		{F7D32BD0-2749-483E-9A0D-1635EF7E3136}.Release|ARM64.Build.0 = Release|ARM64
		{F7D32BD0-2749-483E-9A0D-1635EF7E3136}.Release|x64.ActiveCfg = Release|x64
		{F7D32BD0-2749-483E-9A0D-1635EF7E3136}.Release|x64.Build.0 = Release|x64
		{F7D32BD0-2749-483E-9A0D-1635EF7E3136}.Release|x86.ActiveCfg = Release|Win32
		{F7D32BD0-2749-483E-9A0D-1635EF7E3136}.Release|x86.Build.0 = Release|Win32
		{FCA38F3C-7C73-4C47-BE4E-32F77FA8538D}.Debug|ARM64.ActiveCfg = Debug|ARM64
		{FCA38F3C-7C73-4C47-BE4E-32F77FA8538D}.Debug|ARM64.Build.0 = Debug|ARM64
		{FCA38F3C-7C73-4C47-BE4E-32F77FA8538D}.Debug|x64.ActiveCfg = Debug|x64
		{FCA38F3C-7C73-4C47-BE4E-32F77FA8538D}.Debug|x64.Build.0 = Debug|x64
		{FCA38F3C-7C73-4C47-BE4E-32F77FA8538D}.Debug|x86.ActiveCfg = Debug|Win32
		{FCA38F3C-7C73-4C47-BE4E-32F77FA8538D}.Debug|x86.Build.0 = Debug|Win32
		{FCA38F3C-7C73-4C47-BE4E-32F77FA8538D}.Release|ARM64.ActiveCfg = Release|ARM64
		{FCA38F3C-7C73-4C47-BE4E-32F77FA8538D}.Release|ARM64.Build.0 = Release|ARM64
		{FCA38F3C-7C73-4C47-BE4E-32F77FA8538D}.Release|x64.ActiveCfg = Release|x64
		{FCA38F3C-7C73-4C47-BE4E-32F77FA8538D}.Release|x64.Build.0 = Release|x64
		{FCA38F3C-7C73-4C47-BE4E-32F77FA8538D}.Release|x86.ActiveCfg = Release|Win32
		{FCA38F3C-7C73-4C47-BE4E-32F77FA8538D}.Release|x86.Build.0 = Release|Win32
		{14B93DC8-FD93-4A6D-81CB-8BC96644501C}.Debug|ARM64.ActiveCfg = Debug|ARM64
		{14B93DC8-FD93-4A6D-81CB-8BC96644501C}.Debug|ARM64.Build.0 = Debug|ARM64
		{14B93DC8-FD93-4A6D-81CB-8BC96644501C}.Debug|x64.ActiveCfg = Debug|x64
		{14B93DC8-FD93-4A6D-81CB-8BC96644501C}.Debug|x64.Build.0 = Debug|x64
		{14B93DC8-FD93-4A6D-81CB-8BC96644501C}.Debug|x86.ActiveCfg = Debug|Win32
		{14B93DC8-FD93-4A6D-81CB-8BC96644501C}.Debug|x86.Build.0 = Debug|Win32
		{14B93DC8-FD93-4A6D-81CB-8BC96644501C}.Debug|x86.Deploy.0 = Debug|Win32
		{14B93DC8-FD93-4A6D-81CB-8BC96644501C}.Release|ARM64.ActiveCfg = Release|ARM64
		{14B93DC8-FD93-4A6D-81CB-8BC96644501C}.Release|ARM64.Build.0 = Release|ARM64
		{14B93DC8-FD93-4A6D-81CB-8BC96644501C}.Release|x64.ActiveCfg = Release|x64
		{14B93DC8-FD93-4A6D-81CB-8BC96644501C}.Release|x64.Build.0 = Release|x64
		{14B93DC8-FD93-4A6D-81CB-8BC96644501C}.Release|x86.ActiveCfg = Release|Win32
		{14B93DC8-FD93-4A6D-81CB-8BC96644501C}.Release|x86.Build.0 = Release|Win32
		{14B93DC8-FD93-4A6D-81CB-8BC96644501C}.Release|x86.Deploy.0 = Release|Win32
	EndGlobalSection
	GlobalSection(SolutionProperties) = preSolution
		HideSolutionNode = FALSE
	EndGlobalSection
	GlobalSection(NestedProjects) = preSolution
		{A990658C-CE31-4BCC-976F-0FC6B1AF693D} = {5EA20F54-880A-49F3-99FA-4B3FE54E8AB1}
		{A9D95A91-4DB7-4F72-BEB6-FE8A5C89BFBD} = {5EA20F54-880A-49F3-99FA-4B3FE54E8AB1}
		{C38970C0-5FBF-4D69-90D8-CBAC225AE895} = {5EA20F54-880A-49F3-99FA-4B3FE54E8AB1}
		{F7D32BD0-2749-483E-9A0D-1635EF7E3136} = {5EA20F54-880A-49F3-99FA-4B3FE54E8AB1}
		{DA8B35B3-DA00-4B02-BDE6-6A397B3FD46B} = {5EA20F54-880A-49F3-99FA-4B3FE54E8AB1}
		{FCA38F3C-7C73-4C47-BE4E-32F77FA8538D} = {5EA20F54-880A-49F3-99FA-4B3FE54E8AB1}
		{2049DBE9-8D13-42C9-AE4B-413AE38FFFD0} = {5EA20F54-880A-49F3-99FA-4B3FE54E8AB1}
		{84E05BFA-CBAF-4F0D-BFB6-4CE85742A57E} = {5EA20F54-880A-49F3-99FA-4B3FE54E8AB1}
		{EF074BA1-2D54-4D49-A28E-5E040B47CD2E} = {5EA20F54-880A-49F3-99FA-4B3FE54E8AB1}
		{14B93DC8-FD93-4A6D-81CB-8BC96644501C} = {5EA20F54-880A-49F3-99FA-4B3FE54E8AB1}
	EndGlobalSection
	GlobalSection(ExtensibilityGlobals) = postSolution
		SolutionGuid = {D43FAD39-F619-437D-BB40-04A3982ACB6A}
	EndGlobalSection
EndGlobal
"
`;

exports[`C++  Library: SnapshotApp.vcxproj 1`] = `
"<?xml version=\\"1.0\\" encoding=\\"utf-8\\"?>
<Project ToolsVersion=\\"Current\\" DefaultTargets=\\"Build\\" xmlns=\\"http://schemas.microsoft.com/developer/msbuild/2003\\">
  <Import Project=\\"$(SolutionDir)\\\\ExperimentalFeatures.props\\" Condition=\\"Exists('$(SolutionDir)\\\\ExperimentalFeatures.props')\\" />
  <Import Project=\\"$(SolutionDir)\\\\packages\\\\Microsoft.Windows.CppWinRT.2.0.210312.4\\\\build\\\\native\\\\Microsoft.Windows.CppWinRT.props\\" Condition=\\"Exists('$(SolutionDir)\\\\packages\\\\Microsoft.Windows.CppWinRT.2.0.210312.4\\\\build\\\\native\\\\Microsoft.Windows.CppWinRT.props')\\" />
  <PropertyGroup Label=\\"Globals\\">
    <CppWinRTOptimized>true</CppWinRTOptimized>
    <CppWinRTRootNamespaceAutoMerge>true</CppWinRTRootNamespaceAutoMerge>
    <MinimalCoreWin>true</MinimalCoreWin>
    <ProjectGuid>{19f1844a-ef98-4ce0-bf70-32da118aa17f}</ProjectGuid>
    <ProjectName>SnapshotApp</ProjectName>
    <RootNamespace>SnapshotApp</RootNamespace>
    <DefaultLanguage>en-US</DefaultLanguage>
    <MinimumVisualStudioVersion>16.0</MinimumVisualStudioVersion>
    <AppContainerApplication>true</AppContainerApplication>
    <ApplicationType>Windows Store</ApplicationType>
    <ApplicationTypeRevision>10.0</ApplicationTypeRevision>
  </PropertyGroup>
  <PropertyGroup Label=\\"ReactNativeWindowsProps\\">
    <ReactNativeWindowsDir Condition=\\"'$(ReactNativeWindowsDir)' == ''\\">$([MSBuild]::GetDirectoryNameOfFileAbove($(SolutionDir), 'node_modules\\\\react-native-windows\\\\package.json'))\\\\node_modules\\\\react-native-windows\\\\</ReactNativeWindowsDir>
  </PropertyGroup>
  <Import Project=\\"$(ReactNativeWindowsDir)\\\\PropertySheets\\\\External\\\\Microsoft.ReactNative.WindowsSdk.Default.props\\" Condition=\\"Exists('$(ReactNativeWindowsDir)\\\\PropertySheets\\\\External\\\\Microsoft.ReactNative.WindowsSdk.Default.props')\\" />
  <PropertyGroup Label=\\"Fallback Windows SDK Versions\\">
    <WindowsTargetPlatformVersion Condition=\\" '$(WindowsTargetPlatformVersion)' == '' \\">10.0.19041.0</WindowsTargetPlatformVersion>
    <WindowsTargetPlatformMinVersion Condition=\\" '$(WindowsTargetPlatformMinVersion)' == '' \\">10.0.15063.0</WindowsTargetPlatformMinVersion>
  </PropertyGroup>
  <Import Project=\\"$(VCTargetsPath)\\\\Microsoft.Cpp.Default.props\\" />
  <ItemGroup Label=\\"ProjectConfigurations\\">
    <ProjectConfiguration Include=\\"Debug|ARM64\\">
      <Configuration>Debug</Configuration>
      <Platform>ARM64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include=\\"Debug|Win32\\">
      <Configuration>Debug</Configuration>
      <Platform>Win32</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include=\\"Debug|x64\\">
      <Configuration>Debug</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include=\\"Release|ARM64\\">
      <Configuration>Release</Configuration>
      <Platform>ARM64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include=\\"Release|Win32\\">
      <Configuration>Release</Configuration>
      <Platform>Win32</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include=\\"Release|x64\\">
      <Configuration>Release</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
  </ItemGroup>
  <PropertyGroup Label=\\"Configuration\\">
    <ConfigurationType>DynamicLibrary</ConfigurationType>
    <CharacterSet>Unicode</CharacterSet>
    <GenerateManifest>false</GenerateManifest>
  </PropertyGroup>
  <PropertyGroup Condition=\\"'$(Configuration)'=='Debug'\\" Label=\\"Configuration\\">
    <UseDebugLibraries>true</UseDebugLibraries>
    <LinkIncremental>true</LinkIncremental>
  </PropertyGroup>
  <PropertyGroup Condition=\\"'$(Configuration)'=='Release'\\" Label=\\"Configuration\\">
    <UseDebugLibraries>false</UseDebugLibraries>
    <WholeProgramOptimization>true</WholeProgramOptimization>
    <LinkIncremental>false</LinkIncremental>
  </PropertyGroup>
  <Import Project=\\"$(VCTargetsPath)\\\\Microsoft.Cpp.props\\" />
  <ImportGroup Label=\\"ExtensionSettings\\"></ImportGroup>
  <ImportGroup Label=\\"PropertySheets\\">
    <Import Project=\\"$(UserRootDir)\\\\Microsoft.Cpp.$(Platform).user.props\\" Condition=\\"exists('$(UserRootDir)\\\\Microsoft.Cpp.$(Platform).user.props')\\" Label=\\"LocalAppDataPlatform\\" />
  </ImportGroup>
  <ImportGroup Label=\\"PropertySheets\\">
    <Import Project=\\"PropertySheet.props\\" />
  </ImportGroup>
  <ImportGroup Label=\\"ReactNativeWindowsPropertySheets\\">
    <Import Project=\\"$(ReactNativeWindowsDir)\\\\PropertySheets\\\\external\\\\Microsoft.ReactNative.Uwp.CppLib.props\\" Condition=\\"Exists('$(ReactNativeWindowsDir)\\\\PropertySheets\\\\External\\\\Microsoft.ReactNative.Uwp.CppLib.props')\\" />
    <Import Project=\\"$(SolutionDir)\\\\packages\\\\$(WinUIPackageProps)\\" Condition=\\"'$(WinUIPackageProps)'!='' And Exists('$(SolutionDir)\\\\packages\\\\$(WinUIPackageProps)')\\" />
  </ImportGroup>

  <PropertyGroup Label=\\"UserMacros\\" />
  <ItemDefinitionGroup>
    <ClCompile>
      <PrecompiledHeader>Use</PrecompiledHeader>
      <PrecompiledHeaderFile>pch.h</PrecompiledHeaderFile>
      <PrecompiledHeaderOutputFile>$(IntDir)pch.pch</PrecompiledHeaderOutputFile>
      <WarningLevel>Level4</WarningLevel>
      <AdditionalOptions>%(AdditionalOptions) /bigobj</AdditionalOptions>
      <DisableSpecificWarnings>4453;28204</DisableSpecificWarnings>
      <PreprocessorDefinitions>_WINRT_DLL;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <AdditionalUsingDirectories>$(WindowsSDK_WindowsMetadata);$(AdditionalUsingDirectories)</AdditionalUsingDirectories>
    </ClCompile>
    <Midl>
      <!-- This allows applications targetting older Windows SDKs (e.g. RNW 0.65 apps) to consume the library generated WinMD -->
      <AdditionalOptions>%(AdditionalOptions) /noattributename</AdditionalOptions>
    </Midl>
    <Link>
      <SubSystem>Console</SubSystem>
      <GenerateWindowsMetadata>true</GenerateWindowsMetadata>
      <ModuleDefinitionFile>SnapshotApp.def</ModuleDefinitionFile>
    </Link>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition=\\"'$(Configuration)'=='Debug'\\">
    <ClCompile>
      <PreprocessorDefinitions>_DEBUG;%(PreprocessorDefinitions)</PreprocessorDefinitions>
    </ClCompile>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition=\\"'$(Configuration)'=='Release'\\">
    <ClCompile>
      <PreprocessorDefinitions>NDEBUG;%(PreprocessorDefinitions)</PreprocessorDefinitions>
    </ClCompile>
  </ItemDefinitionGroup>
  <ItemGroup>
    <ClInclude Include=\\"ReactPackageProvider.h\\">
      <DependentUpon>ReactPackageProvider.idl</DependentUpon>
    </ClInclude>
    <ClInclude Include=\\"ReactNativeModule.h\\" />
    <ClInclude Include=\\"pch.h\\" />
  </ItemGroup>
  <ItemGroup>
    <ClCompile Include=\\"pch.cpp\\">
      <PrecompiledHeader>Create</PrecompiledHeader>
    </ClCompile>
    <ClCompile Include=\\"ReactPackageProvider.cpp\\">
      <DependentUpon>ReactPackageProvider.idl</DependentUpon>
    </ClCompile>
    <ClCompile Include=\\"$(GeneratedFilesDir)module.g.cpp\\" />
  </ItemGroup>
  <ItemGroup>
    <Midl Include=\\"ReactPackageProvider.idl\\" />
  </ItemGroup>
  <ItemGroup>
    <None Include=\\"packages.config\\" />
    <None Include=\\"PropertySheet.props\\" />
  </ItemGroup>
  <Import Project=\\"$(VCTargetsPath)\\\\Microsoft.Cpp.targets\\" />
  <ImportGroup Label=\\"ReactNativeWindowsTargets\\">
    <Import Project=\\"$(ReactNativeWindowsDir)\\\\PropertySheets\\\\External\\\\Microsoft.ReactNative.Uwp.CppLib.targets\\" Condition=\\"Exists('$(ReactNativeWindowsDir)\\\\PropertySheets\\\\External\\\\Microsoft.ReactNative.Uwp.CppLib.targets')\\" />
  </ImportGroup>
  <Target Name=\\"EnsureReactNativeWindowsTargets\\" BeforeTargets=\\"PrepareForBuild\\">
    <PropertyGroup>
      <ErrorText>This project references targets in your node_modules\\\\react-native-windows folder that are missing. The missing file is {0}.</ErrorText>
    </PropertyGroup>
    <Error Condition=\\"!Exists('$(ReactNativeWindowsDir)\\\\PropertySheets\\\\External\\\\Microsoft.ReactNative.Uwp.CppLib.props')\\" Text=\\"$([System.String]::Format('$(ErrorText)', '$(ReactNativeWindowsDir)\\\\PropertySheets\\\\External\\\\Microsoft.ReactNative.Uwp.CppLib.props'))\\" />
    <Error Condition=\\"!Exists('$(ReactNativeWindowsDir)\\\\PropertySheets\\\\External\\\\Microsoft.ReactNative.Uwp.CppLib.targets')\\" Text=\\"$([System.String]::Format('$(ErrorText)', '$(ReactNativeWindowsDir)\\\\PropertySheets\\\\External\\\\Microsoft.ReactNative.Uwp.CppLib.targets'))\\" />
  </Target>
  <ImportGroup Label=\\"ExtensionTargets\\">
    <Import Project=\\"$(SolutionDir)\\\\packages\\\\Microsoft.Windows.CppWinRT.2.0.210312.4\\\\build\\\\native\\\\Microsoft.Windows.CppWinRT.targets\\" Condition=\\"Exists('$(SolutionDir)\\\\packages\\\\Microsoft.Windows.CppWinRT.2.0.210312.4\\\\build\\\\native\\\\Microsoft.Windows.CppWinRT.targets')\\" />
    <Import Project=\\"$(SolutionDir)\\\\packages\\\\ReactNative.Hermes.Windows.0.9.0-ms.6\\\\build\\\\native\\\\ReactNative.Hermes.Windows.targets\\" Condition=\\"Exists('$(SolutionDir)\\\\packages\\\\ReactNative.Hermes.Windows.0.9.0-ms.6\\\\build\\\\native\\\\ReactNative.Hermes.Windows.targets')\\" />
    <Import Project=\\"$(SolutionDir)\\\\packages\\\\$(WinUIPackageName).$(WinUIPackageVersion)\\\\build\\\\native\\\\$(WinUIPackageName).targets\\" Condition=\\"Exists('$(SolutionDir)\\\\packages\\\\$(WinUIPackageName).$(WinUIPackageVersion)\\\\build\\\\native\\\\$(WinUIPackageName).targets')\\" />
  </ImportGroup>
  <Target Name=\\"EnsureNuGetPackageBuildImports\\" BeforeTargets=\\"PrepareForBuild\\">
    <PropertyGroup>
      <ErrorText>This project references NuGet package(s) that are missing on this computer. Use NuGet Package Restore to download them.  For more information, see http://go.microsoft.com/fwlink/?LinkID=322105. The missing file is {0}.</ErrorText>
    </PropertyGroup>
    <Error Condition=\\"!Exists('$(SolutionDir)\\\\packages\\\\Microsoft.Windows.CppWinRT.2.0.210312.4\\\\build\\\\native\\\\Microsoft.Windows.CppWinRT.props')\\" Text=\\"$([System.String]::Format('$(ErrorText)', '$(SolutionDir)\\\\packages\\\\Microsoft.Windows.CppWinRT.2.0.210312.4\\\\build\\\\native\\\\Microsoft.Windows.CppWinRT.props'))\\" />
    <Error Condition=\\"!Exists('$(SolutionDir)\\\\packages\\\\Microsoft.Windows.CppWinRT.2.0.210312.4\\\\build\\\\native\\\\Microsoft.Windows.CppWinRT.targets')\\" Text=\\"$([System.String]::Format('$(ErrorText)', '$(SolutionDir)\\\\packages\\\\Microsoft.Windows.CppWinRT.2.0.210312.4\\\\build\\\\native\\\\Microsoft.Windows.CppWinRT.targets'))\\" />
    <Error Condition=\\"!Exists('$(SolutionDir)\\\\packages\\\\ReactNative.Hermes.Windows.0.9.0-ms.6\\\\build\\\\native\\\\ReactNative.Hermes.Windows.targets')\\" Text=\\"$([System.String]::Format('$(ErrorText)', '$(SolutionDir)\\\\packages\\\\ReactNative.Hermes.Windows.0.9.0-ms.6\\\\build\\\\native\\\\ReactNative.Hermes.Windows.targets'))\\" />
    <Error Condition=\\"!Exists('$(SolutionDir)\\\\packages\\\\$(WinUIPackageName).$(WinUIPackageVersion)\\\\build\\\\native\\\\$(WinUIPackageName).targets')\\" Text=\\"$([System.String]::Format('$(ErrorText)', '$(SolutionDir)\\\\packages\\\\$(WinUIPackageName).$(WinUIPackageVersion)\\\\build\\\\native\\\\$(WinUIPackageName).targets'))\\" />
  </Target>
</Project>
"
`;

exports[`C++  Library: SnapshotApp.vcxproj.filters 1`] = `
"﻿<?xml version=\\"1.0\\" encoding=\\"utf-8\\"?>
<Project ToolsVersion=\\"Current\\" xmlns=\\"http://schemas.microsoft.com/developer/msbuild/2003\\">
  <ItemGroup>
    <Midl Include=\\"ReactPackageProvider.idl\\" />
  </ItemGroup>
  <ItemGroup>
    <ClCompile Include=\\"pch.cpp\\" />
    <ClCompile Include=\\"$(GeneratedFilesDir)module.g.cpp\\" />
    <ClCompile Include=\\"ReactPackageProvider.cpp\\" />
  </ItemGroup>
  <ItemGroup>
    <ClInclude Include=\\"pch.h\\" />
    <ClInclude Include=\\"ReactPackageProvider.h\\" />
    <ClInclude Include=\\"ReactNativeModule.h\\" />
  </ItemGroup>
  <ItemGroup>
    <None Include=\\"PropertySheet.props\\" />
    <None Include=\\"packages.config\\" />
  </ItemGroup>
</Project>"
`;

exports[`C++  Library: packages.config 1`] = `
"﻿<?xml version=\\"1.0\\" encoding=\\"utf-8\\"?>
<packages>
  <package id=\\"Microsoft.Windows.CppWinRT\\" version=\\"2.0.210312.4\\" targetFramework=\\"native\\" />
  <package id=\\"ReactNative.Hermes.Windows\\" version=\\"0.9.0-ms.6\\" targetFramework=\\"native\\" />
  <package id=\\"Microsoft.UI.Xaml\\" version=\\"2.7.0\\" targetFramework=\\"native\\" />
</packages>"
`;

exports[`C++  Library: pch.cpp 1`] = `
"﻿#include \\"pch.h\\"
"
`;

exports[`C++  Library: pch.h 1`] = `
"#pragma once

#define NOMINMAX

#include <hstring.h>
#include <restrictederrorinfo.h>
#include <unknwn.h>
#include <windows.h>
#include <CppWinRTIncludes.h>
#if __has_include(<VersionMacros.h>)
  #include <VersionMacros.h>
#endif

#include <winrt/Microsoft.ReactNative.h>

#include <winrt/Microsoft.UI.Xaml.Automation.Peers.h>
#include <winrt/Microsoft.UI.Xaml.Controls.Primitives.h>
#include <winrt/Microsoft.UI.Xaml.Controls.h>
#include <winrt/Microsoft.UI.Xaml.Media.h>
#include <winrt/Microsoft.UI.Xaml.XamlTypeInfo.h>
using namespace winrt::Windows::Foundation;
"
`;

exports[`C++ Hermes Application: App.cpp 1`] = `
"#include \\"pch.h\\"

#include \\"App.h\\"

#include \\"AutolinkedNativeModules.g.h\\"
#include \\"ReactPackageProvider.h\\"

using namespace winrt;
using namespace xaml;
using namespace xaml::Controls;
using namespace xaml::Navigation;

using namespace Windows::ApplicationModel;
namespace winrt::SnapshotApp::implementation
{
/// <summary>
/// Initializes the singleton application object.  This is the first line of
/// authored code executed, and as such is the logical equivalent of main() or
/// WinMain().
/// </summary>
App::App() noexcept
{
#if BUNDLE
    JavaScriptBundleFile(L\\"index.windows\\");
    InstanceSettings().UseWebDebugger(false);
    InstanceSettings().UseFastRefresh(false);
#else
    JavaScriptBundleFile(L\\"index\\");
    InstanceSettings().UseWebDebugger(true);
    InstanceSettings().UseFastRefresh(true);
#endif

#if _DEBUG
    InstanceSettings().UseDeveloperSupport(true);
#else
    InstanceSettings().UseDeveloperSupport(false);
#endif

    RegisterAutolinkedNativeModulePackages(PackageProviders()); // Includes any autolinked modules

    PackageProviders().Append(make<ReactPackageProvider>()); // Includes all modules in this project

    InitializeComponent();
}

/// <summary>
/// Invoked when the application is launched normally by the end user.  Other entry points
/// will be used such as when the application is launched to open a specific file.
/// </summary>
/// <param name=\\"e\\">Details about the launch request and process.</param>
void App::OnLaunched(activation::LaunchActivatedEventArgs const& e)
{
    super::OnLaunched(e);

    Frame rootFrame = Window::Current().Content().as<Frame>();
    rootFrame.Navigate(xaml_typename<MainPage>(), box_value(e.Arguments()));
}

/// <summary>
/// Invoked when the application is activated by some means other than normal launching.
/// </summary>
void App::OnActivated(Activation::IActivatedEventArgs const &e) {
  auto preActivationContent = Window::Current().Content();
  super::OnActivated(e);
  if (!preActivationContent && Window::Current()) {
    Frame rootFrame = Window::Current().Content().as<Frame>();
    rootFrame.Navigate(xaml_typename<MainPage>(), nullptr);
  }
}

/// <summary>
/// Invoked when application execution is being suspended.  Application state is saved
/// without knowing whether the application will be terminated or resumed with the contents
/// of memory still intact.
/// </summary>
/// <param name=\\"sender\\">The source of the suspend request.</param>
/// <param name=\\"e\\">Details about the suspend request.</param>
void App::OnSuspending([[maybe_unused]] IInspectable const& sender, [[maybe_unused]] SuspendingEventArgs const& e)
{
    // Save application state and stop any background activity
}

/// <summary>
/// Invoked when Navigation to a certain page fails
/// </summary>
/// <param name=\\"sender\\">The Frame which failed navigation</param>
/// <param name=\\"e\\">Details about the navigation failure</param>
void App::OnNavigationFailed(IInspectable const&, NavigationFailedEventArgs const& e)
{
    throw hresult_error(E_FAIL, hstring(L\\"Failed to load Page \\") + e.SourcePageType().Name);
}

} // namespace winrt::SnapshotApp::implementation
"
`;

exports[`C++ Hermes Application: App.h 1`] = `
"#pragma once

#include \\"App.xaml.g.h\\"

#include <CppWinRTIncludes.h>

#ifdef USE_WINUI3
namespace activation = winrt::Microsoft::UI::Xaml;
#else
namespace activation = winrt::Windows::ApplicationModel::Activation;
#endif

namespace winrt::SnapshotApp::implementation
{
    struct App : AppT<App>
    {
        App() noexcept;
        void OnLaunched(activation::LaunchActivatedEventArgs const&);
        void OnActivated(Windows::ApplicationModel::Activation::IActivatedEventArgs const &e);
        void OnSuspending(IInspectable const&, Windows::ApplicationModel::SuspendingEventArgs const&);
        void OnNavigationFailed(IInspectable const&, xaml::Navigation::NavigationFailedEventArgs const&);
      private:
        using super = AppT<App>;
    };
} // namespace winrt::SnapshotApp::implementation
"
`;

exports[`C++ Hermes Application: App.idl 1`] = `
"namespace SnapshotApp
{
}
"
`;

exports[`C++ Hermes Application: App.xaml 1`] = `
"﻿<react:ReactApplication
    x:Class=\\"SnapshotApp.App\\"
    xmlns=\\"http://schemas.microsoft.com/winfx/2006/xaml/presentation\\"
    xmlns:x=\\"http://schemas.microsoft.com/winfx/2006/xaml\\"
    xmlns:local=\\"using:SnapshotApp\\"
    xmlns:react=\\"using:Microsoft.ReactNative\\">
    <Application.Resources>
        <XamlControlsResources xmlns=\\"using:Microsoft.UI.Xaml.Controls\\" />
    </Application.Resources>
</react:ReactApplication>
"
`;

exports[`C++ Hermes Application: AutolinkedNativeModules.g.cpp 1`] = `
"// AutolinkedNativeModules.g.cpp contents generated by \\"react-native autolink-windows\\"
// clang-format off
#include \\"pch.h\\"
#include \\"AutolinkedNativeModules.g.h\\"

namespace winrt::Microsoft::ReactNative
{

void RegisterAutolinkedNativeModulePackages(winrt::Windows::Foundation::Collections::IVector<winrt::Microsoft::ReactNative::IReactPackageProvider> const& packageProviders)
{ 
    UNREFERENCED_PARAMETER(packageProviders);
}

}
"
`;

exports[`C++ Hermes Application: AutolinkedNativeModules.g.h 1`] = `
"// AutolinkedNativeModules.g.h contents generated by \\"react-native autolink-windows\\"
// clang-format off
#pragma once

namespace winrt::Microsoft::ReactNative
{

void RegisterAutolinkedNativeModulePackages(winrt::Windows::Foundation::Collections::IVector<winrt::Microsoft::ReactNative::IReactPackageProvider> const& packageProviders);

}
"
`;

exports[`C++ Hermes Application: AutolinkedNativeModules.g.props 1`] = `
"<?xml version=\\"1.0\\" encoding=\\"utf-8\\"?>
<Project xmlns=\\"http://schemas.microsoft.com/developer/msbuild/2003\\">
  <!-- AutolinkedNativeModules.g.props contents generated by \\"react-native autolink-windows\\" -->
  <PropertyGroup>
  </PropertyGroup>
</Project>
"
`;

exports[`C++ Hermes Application: AutolinkedNativeModules.g.targets 1`] = `
"<?xml version=\\"1.0\\" encoding=\\"utf-8\\"?>
<Project xmlns=\\"http://schemas.microsoft.com/developer/msbuild/2003\\">
  <!-- AutolinkedNativeModules.g.targets contents generated by \\"react-native autolink-windows\\" -->
  <ItemGroup>
  </ItemGroup>
</Project>
"
`;

exports[`C++ Hermes Application: ExperimentalFeatures.props 1`] = `
"<?xml version=\\"1.0\\" encoding=\\"utf-8\\"?>
<Project xmlns=\\"http://schemas.microsoft.com/developer/msbuild/2003\\">

  <!--
    This file contains some important settings that will apply globally for
    your app and *all* native modules your app consumes. These values were
    set when you created the app project, and in some cases cannot be
    simply changed here without recreating a new project.
  -->

  <PropertyGroup Label=\\"Microsoft.ReactNative Experimental Features\\">
    <!--
      Enables default usage of Hermes.
      
      See https://microsoft.github.io/react-native-windows/docs/hermes
    -->
    <UseHermes>true</UseHermes>

    <!--
      Changes compilation to assume use of WinUI 3 instead of System XAML.
      Requires creation of new project.

      See https://microsoft.github.io/react-native-windows/docs/winui3
    -->
    <UseWinUI3>false</UseWinUI3>

    <!--
      Changes compilation to assume use of Microsoft.ReactNative NuGet packages
      instead of building the framework from source.
      Requires creation of new project.

      See https://microsoft.github.io/react-native-windows/docs/nuget
    -->
    <UseExperimentalNuget>false</UseExperimentalNuget>
  
  </PropertyGroup>

</Project>
"
`;

exports[`C++ Hermes Application: MainPage.cpp 1`] = `
"﻿#include \\"pch.h\\"
#include \\"MainPage.h\\"
#if __has_include(\\"MainPage.g.cpp\\")
#include \\"MainPage.g.cpp\\"
#endif

#include \\"App.h\\"

using namespace winrt;
using namespace xaml;

namespace winrt::SnapshotApp::implementation
{
    MainPage::MainPage()
    {
        InitializeComponent();
        auto app = Application::Current().as<App>();
        ReactRootView().ReactNativeHost(app->Host());
    }
}
"
`;

exports[`C++ Hermes Application: MainPage.h 1`] = `
"﻿#pragma once
#include \\"MainPage.g.h\\"
#include <winrt/Microsoft.ReactNative.h>

namespace winrt::SnapshotApp::implementation
{
    struct MainPage : MainPageT<MainPage>
    {
        MainPage();
    };
}

namespace winrt::SnapshotApp::factory_implementation
{
    struct MainPage : MainPageT<MainPage, implementation::MainPage>
    {
    };
}

"
`;

exports[`C++ Hermes Application: MainPage.idl 1`] = `
"#include \\"NamespaceRedirect.h\\"

namespace SnapshotApp
{
    [default_interface]
    runtimeclass MainPage : XAML_NAMESPACE.Controls.Page
    {
        MainPage();
    }
}
"
`;

exports[`C++ Hermes Application: MainPage.xaml 1`] = `
"<Page
    x:Class=\\"SnapshotApp.MainPage\\"
    xmlns=\\"http://schemas.microsoft.com/winfx/2006/xaml/presentation\\"
    xmlns:x=\\"http://schemas.microsoft.com/winfx/2006/xaml\\"
    xmlns:local=\\"using:SnapshotApp\\"
    xmlns:react=\\"using:Microsoft.ReactNative\\"
    xmlns:d=\\"http://schemas.microsoft.com/expression/blend/2008\\"
    xmlns:mc=\\"http://schemas.openxmlformats.org/markup-compatibility/2006\\"
    mc:Ignorable=\\"d\\"
    Background=\\"{ThemeResource ApplicationPageBackgroundThemeBrush}\\">
    <react:ReactRootView 
        x:Name=\\"ReactRootView\\"
        ComponentName=\\"SnapshotApp\\"
        Background=\\"{ThemeResource ApplicationPageBackgroundThemeBrush}\\"
        MinHeight=\\"400\\"/>
</Page>
"
`;

exports[`C++ Hermes Application: NuGet.Config 1`] = `
"<?xml version=\\"1.0\\" encoding=\\"utf-8\\"?>
<configuration>
  <config>
    <add key=\\"repositoryPath\\" value=\\"packages\\" />
  </config>
  <packageSources>
    <clear />
    <add key=\\"react-native\\" value=\\"https://pkgs.dev.azure.com/ms/react-native/_packaging/react-native-public/nuget/v3/index.json\\" />
    <add key=\\"Nuget.org\\" value=\\"https://api.nuget.org/v3/index.json\\" />
  </packageSources>
  <disabledPackageSources>
    <clear />
  </disabledPackageSources>  
</configuration>
"
`;

exports[`C++ Hermes Application: Package.appxmanifest 1`] = `
"﻿<?xml version=\\"1.0\\" encoding=\\"utf-8\\"?>

<Package
  xmlns=\\"http://schemas.microsoft.com/appx/manifest/foundation/windows10\\"
  xmlns:mp=\\"http://schemas.microsoft.com/appx/2014/phone/manifest\\"
  xmlns:uap=\\"http://schemas.microsoft.com/appx/manifest/uap/windows10\\"
  IgnorableNamespaces=\\"uap mp\\">

  <Identity
    Name=\\"223ad877-fd1f-4d04-8de0-5b6f58d762a5\\"
    Publisher=\\"CN=nickg\\"
    Version=\\"1.0.0.0\\" />

  <mp:PhoneIdentity PhoneProductId=\\"223ad877-fd1f-4d04-8de0-5b6f58d762a5\\" PhonePublisherId=\\"00000000-0000-0000-0000-000000000000\\"/>

  <Properties>
    <DisplayName>SnapshotApp</DisplayName>
    <PublisherDisplayName>nickg</PublisherDisplayName>
    <Logo>Assets\\\\StoreLogo.png</Logo>
  </Properties>

  <Dependencies>
    <TargetDeviceFamily Name=\\"Windows.Universal\\" MinVersion=\\"10.0.0.0\\" MaxVersionTested=\\"10.0.0.0\\" />
  </Dependencies>

  <Resources>
    <Resource Language=\\"x-generate\\"/>
  </Resources>

  <Applications>
    <Application
      Id=\\"App\\"
      Executable=\\"$targetnametoken$.exe\\"
      EntryPoint=\\"SnapshotApp.App\\">
      <uap:VisualElements
        DisplayName=\\"SnapshotApp\\"
        Square150x150Logo=\\"Assets\\\\Square150x150Logo.png\\"
        Square44x44Logo=\\"Assets\\\\Square44x44Logo.png\\"
        Description=\\"SnapshotApp\\"
        BackgroundColor=\\"transparent\\">
        <uap:DefaultTile Wide310x150Logo=\\"Assets\\\\Wide310x150Logo.png\\"/>
        <uap:SplashScreen Image=\\"Assets\\\\SplashScreen.png\\" />
      </uap:VisualElements>
    </Application>
  </Applications>

  <Capabilities>
    <Capability Name=\\"internetClient\\" />
  </Capabilities>
</Package>"
`;

exports[`C++ Hermes Application: PropertySheet.props 1`] = `
"<?xml version=\\"1.0\\" encoding=\\"utf-8\\"?>
<Project ToolsVersion=\\"Current\\" xmlns=\\"http://schemas.microsoft.com/developer/msbuild/2003\\">
  <ImportGroup Label=\\"PropertySheets\\" />
  <PropertyGroup Label=\\"UserMacros\\" />
  <!--
    To customize common C++/WinRT project properties:
    * right-click the project node
    * expand the Common Properties item
    * select the C++/WinRT property page

    For more advanced scenarios, and complete documentation, please see:
    https://github.com/Microsoft/xlang/tree/master/src/package/cppwinrt/nuget
    -->
  <PropertyGroup />
  <ItemDefinitionGroup />
</Project>"
`;

exports[`C++ Hermes Application: ReactPackageProvider.cpp 1`] = `
"#include \\"pch.h\\"
#include \\"ReactPackageProvider.h\\"
#include \\"NativeModules.h\\"

using namespace winrt::Microsoft::ReactNative;

namespace winrt::SnapshotApp::implementation
{

void ReactPackageProvider::CreatePackage(IReactPackageBuilder const &packageBuilder) noexcept
{
    AddAttributedModules(packageBuilder);
}

} // namespace winrt::SnapshotApp::implementation
"
`;

exports[`C++ Hermes Application: ReactPackageProvider.h 1`] = `
"#pragma once

#include \\"winrt/Microsoft.ReactNative.h\\"

namespace winrt::SnapshotApp::implementation
{
    struct ReactPackageProvider : winrt::implements<ReactPackageProvider, winrt::Microsoft::ReactNative::IReactPackageProvider>
    {
    public: // IReactPackageProvider
        void CreatePackage(winrt::Microsoft::ReactNative::IReactPackageBuilder const &packageBuilder) noexcept;
    };
} // namespace winrt::SnapshotApp::implementation

"
`;

exports[`C++ Hermes Application: SnapshotApp.sln 1`] = `
"﻿
Microsoft Visual Studio Solution File, Format Version 12.00
# Visual Studio Version 16
VisualStudioVersion = 16.0.29215.179
MinimumVisualStudioVersion = 10.0.40219.1
Project(\\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\\") = \\"SnapshotApp\\", \\"SnapshotApp\\\\SnapshotApp.vcxproj\\", \\"{C93A7108-8A66-42D4-8F9F-ED70D4EAE7CF}\\"
	ProjectSection(ProjectDependencies) = postProject
		{F7D32BD0-2749-483E-9A0D-1635EF7E3136} = {F7D32BD0-2749-483E-9A0D-1635EF7E3136}
	EndProjectSection
EndProject
Project(\\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\\") = \\"Folly\\", \\"..\\\\node_modules\\\\react-native-windows\\\\Folly\\\\Folly.vcxproj\\", \\"{A990658C-CE31-4BCC-976F-0FC6B1AF693D}\\"
EndProject
Project(\\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\\") = \\"fmt\\", \\"..\\\\node_modules\\\\react-native-windows\\\\fmt\\\\fmt.vcxproj\\", \\"{14B93DC8-FD93-4A6D-81CB-8BC96644501C}\\"
EndProject
Project(\\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\\") = \\"ReactCommon\\", \\"..\\\\node_modules\\\\react-native-windows\\\\ReactCommon\\\\ReactCommon.vcxproj\\", \\"{A9D95A91-4DB7-4F72-BEB6-FE8A5C89BFBD}\\"
	ProjectSection(ProjectDependencies) = postProject
		{A990658C-CE31-4BCC-976F-0FC6B1AF693D} = {A990658C-CE31-4BCC-976F-0FC6B1AF693D}
	EndProjectSection
EndProject
Project(\\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\\") = \\"Chakra\\", \\"..\\\\node_modules\\\\react-native-windows\\\\Chakra\\\\Chakra.vcxitems\\", \\"{C38970C0-5FBF-4D69-90D8-CBAC225AE895}\\"
EndProject
Project(\\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\\") = \\"Microsoft.ReactNative\\", \\"..\\\\node_modules\\\\react-native-windows\\\\Microsoft.ReactNative\\\\Microsoft.ReactNative.vcxproj\\", \\"{F7D32BD0-2749-483E-9A0D-1635EF7E3136}\\"
EndProject
Project(\\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\\") = \\"Microsoft.ReactNative.Cxx\\", \\"..\\\\node_modules\\\\react-native-windows\\\\Microsoft.ReactNative.Cxx\\\\Microsoft.ReactNative.Cxx.vcxitems\\", \\"{DA8B35B3-DA00-4B02-BDE6-6A397B3FD46B}\\"
EndProject
Project(\\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\\") = \\"Common\\", \\"..\\\\node_modules\\\\react-native-windows\\\\Common\\\\Common.vcxproj\\", \\"{FCA38F3C-7C73-4C47-BE4E-32F77FA8538D}\\"
EndProject
Project(\\"{2150E333-8FDC-42A3-9474-1A3956D46DE8}\\") = \\"ReactNative\\", \\"ReactNative\\", \\"{5EA20F54-880A-49F3-99FA-4B3FE54E8AB1}\\"
EndProject
Project(\\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\\") = \\"Microsoft.ReactNative.Shared\\", \\"..\\\\node_modules\\\\react-native-windows\\\\Shared\\\\Shared.vcxitems\\", \\"{2049DBE9-8D13-42C9-AE4B-413AE38FFFD0}\\"
EndProject
Project(\\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\\") = \\"Mso\\", \\"..\\\\node_modules\\\\react-native-windows\\\\Mso\\\\Mso.vcxitems\\", \\"{84E05BFA-CBAF-4F0D-BFB6-4CE85742A57E}\\"
EndProject
Project(\\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\\") = \\"Include\\", \\"..\\\\node_modules\\\\react-native-windows\\\\include\\\\Include.vcxitems\\", \\"{EF074BA1-2D54-4D49-A28E-5E040B47CD2E}\\"
EndProject
Global
	GlobalSection(SharedMSBuildProjectFiles) = preSolution
		..\\\\node_modules\\\\react-native-windows\\\\Shared\\\\Shared.vcxitems*{2049dbe9-8d13-42c9-ae4b-413ae38fffd0}*SharedItemsImports = 9
		..\\\\node_modules\\\\react-native-windows\\\\Mso\\\\Mso.vcxitems*{84e05bfa-cbaf-4f0d-bfb6-4ce85742a57e}*SharedItemsImports = 9
		..\\\\node_modules\\\\react-native-windows\\\\Chakra\\\\Chakra.vcxitems*{c38970c0-5fbf-4d69-90d8-cbac225ae895}*SharedItemsImports = 9
		..\\\\node_modules\\\\react-native-windows\\\\Microsoft.ReactNative.Cxx\\\\Microsoft.ReactNative.Cxx.vcxitems*{da8b35b3-da00-4b02-bde6-6a397b3fd46b}*SharedItemsImports = 9
		..\\\\node_modules\\\\react-native-windows\\\\include\\\\Include.vcxitems*{ef074ba1-2d54-4d49-a28e-5e040b47cd2e}*SharedItemsImports = 9
		..\\\\node_modules\\\\react-native-windows\\\\Chakra\\\\Chakra.vcxitems*{f7d32bd0-2749-483e-9a0d-1635ef7e3136}*SharedItemsImports = 4
		..\\\\node_modules\\\\react-native-windows\\\\Microsoft.ReactNative.Cxx\\\\Microsoft.ReactNative.Cxx.vcxitems*{f7d32bd0-2749-483e-9a0d-1635ef7e3136}*SharedItemsImports = 4
		..\\\\node_modules\\\\react-native-windows\\\\Mso\\\\Mso.vcxitems*{f7d32bd0-2749-483e-9a0d-1635ef7e3136}*SharedItemsImports = 4
		..\\\\node_modules\\\\react-native-windows\\\\Shared\\\\Shared.vcxitems*{f7d32bd0-2749-483e-9a0d-1635ef7e3136}*SharedItemsImports = 4
	EndGlobalSection
	GlobalSection(SolutionConfigurationPlatforms) = preSolution
		Debug|ARM64 = Debug|ARM64
		Debug|x64 = Debug|x64
		Debug|x86 = Debug|x86
		Release|ARM64 = Release|ARM64
		Release|x64 = Release|x64
		Release|x86 = Release|x86
	EndGlobalSection
	GlobalSection(ProjectConfigurationPlatforms) = postSolution
		{C93A7108-8A66-42D4-8F9F-ED70D4EAE7CF}.Debug|ARM64.ActiveCfg = Debug|ARM64
		{C93A7108-8A66-42D4-8F9F-ED70D4EAE7CF}.Debug|ARM64.Build.0 = Debug|ARM64
		{C93A7108-8A66-42D4-8F9F-ED70D4EAE7CF}.Debug|ARM64.Deploy.0 = Debug|ARM64
		{C93A7108-8A66-42D4-8F9F-ED70D4EAE7CF}.Debug|x64.ActiveCfg = Debug|x64
		{C93A7108-8A66-42D4-8F9F-ED70D4EAE7CF}.Debug|x64.Build.0 = Debug|x64
		{C93A7108-8A66-42D4-8F9F-ED70D4EAE7CF}.Debug|x64.Deploy.0 = Debug|x64
		{C93A7108-8A66-42D4-8F9F-ED70D4EAE7CF}.Debug|x86.ActiveCfg = Debug|Win32
		{C93A7108-8A66-42D4-8F9F-ED70D4EAE7CF}.Debug|x86.Build.0 = Debug|Win32
		{C93A7108-8A66-42D4-8F9F-ED70D4EAE7CF}.Debug|x86.Deploy.0 = Debug|Win32
		{C93A7108-8A66-42D4-8F9F-ED70D4EAE7CF}.Release|ARM64.ActiveCfg = Release|ARM64
		{C93A7108-8A66-42D4-8F9F-ED70D4EAE7CF}.Release|ARM64.Build.0 = Release|ARM64
		{C93A7108-8A66-42D4-8F9F-ED70D4EAE7CF}.Release|ARM64.Deploy.0 = Release|ARM64
		{C93A7108-8A66-42D4-8F9F-ED70D4EAE7CF}.Release|x64.ActiveCfg = Release|x64
		{C93A7108-8A66-42D4-8F9F-ED70D4EAE7CF}.Release|x64.Build.0 = Release|x64
		{C93A7108-8A66-42D4-8F9F-ED70D4EAE7CF}.Release|x64.Deploy.0 = Release|x64
		{C93A7108-8A66-42D4-8F9F-ED70D4EAE7CF}.Release|x86.ActiveCfg = Release|Win32
		{C93A7108-8A66-42D4-8F9F-ED70D4EAE7CF}.Release|x86.Build.0 = Release|Win32
		{C93A7108-8A66-42D4-8F9F-ED70D4EAE7CF}.Release|x86.Deploy.0 = Release|Win32
		{A990658C-CE31-4BCC-976F-0FC6B1AF693D}.Debug|ARM64.ActiveCfg = Debug|ARM64
		{A990658C-CE31-4BCC-976F-0FC6B1AF693D}.Debug|ARM64.Build.0 = Debug|ARM64
		{A990658C-CE31-4BCC-976F-0FC6B1AF693D}.Debug|x64.ActiveCfg = Debug|x64
		{A990658C-CE31-4BCC-976F-0FC6B1AF693D}.Debug|x64.Build.0 = Debug|x64
		{A990658C-CE31-4BCC-976F-0FC6B1AF693D}.Debug|x86.ActiveCfg = Debug|Win32
		{A990658C-CE31-4BCC-976F-0FC6B1AF693D}.Debug|x86.Build.0 = Debug|Win32
		{A990658C-CE31-4BCC-976F-0FC6B1AF693D}.Release|ARM64.ActiveCfg = Release|ARM64
		{A990658C-CE31-4BCC-976F-0FC6B1AF693D}.Release|ARM64.Build.0 = Release|ARM64
		{A990658C-CE31-4BCC-976F-0FC6B1AF693D}.Release|x64.ActiveCfg = Release|x64
		{A990658C-CE31-4BCC-976F-0FC6B1AF693D}.Release|x64.Build.0 = Release|x64
		{A990658C-CE31-4BCC-976F-0FC6B1AF693D}.Release|x86.ActiveCfg = Release|Win32
		{A990658C-CE31-4BCC-976F-0FC6B1AF693D}.Release|x86.Build.0 = Release|Win32
		{A9D95A91-4DB7-4F72-BEB6-FE8A5C89BFBD}.Debug|ARM64.ActiveCfg = Debug|ARM64
		{A9D95A91-4DB7-4F72-BEB6-FE8A5C89BFBD}.Debug|ARM64.Build.0 = Debug|ARM64
		{A9D95A91-4DB7-4F72-BEB6-FE8A5C89BFBD}.Debug|x64.ActiveCfg = Debug|x64
		{A9D95A91-4DB7-4F72-BEB6-FE8A5C89BFBD}.Debug|x64.Build.0 = Debug|x64
		{A9D95A91-4DB7-4F72-BEB6-FE8A5C89BFBD}.Debug|x86.ActiveCfg = Debug|Win32
		{A9D95A91-4DB7-4F72-BEB6-FE8A5C89BFBD}.Debug|x86.Build.0 = Debug|Win32
		{A9D95A91-4DB7-4F72-BEB6-FE8A5C89BFBD}.Release|ARM64.ActiveCfg = Release|ARM64
		{A9D95A91-4DB7-4F72-BEB6-FE8A5C89BFBD}.Release|ARM64.Build.0 = Release|ARM64
		{A9D95A91-4DB7-4F72-BEB6-FE8A5C89BFBD}.Release|x64.ActiveCfg = Release|x64
		{A9D95A91-4DB7-4F72-BEB6-FE8A5C89BFBD}.Release|x64.Build.0 = Release|x64
		{A9D95A91-4DB7-4F72-BEB6-FE8A5C89BFBD}.Release|x86.ActiveCfg = Release|Win32
		{A9D95A91-4DB7-4F72-BEB6-FE8A5C89BFBD}.Release|x86.Build.0 = Release|Win32
		{F7D32BD0-2749-483E-9A0D-1635EF7E3136}.Debug|ARM64.ActiveCfg = Debug|ARM64
		{F7D32BD0-2749-483E-9A0D-1635EF7E3136}.Debug|ARM64.Build.0 = Debug|ARM64
		{F7D32BD0-2749-483E-9A0D-1635EF7E3136}.Debug|x64.ActiveCfg = Debug|x64
		{F7D32BD0-2749-483E-9A0D-1635EF7E3136}.Debug|x64.Build.0 = Debug|x64
		{F7D32BD0-2749-483E-9A0D-1635EF7E3136}.Debug|x86.ActiveCfg = Debug|Win32
		{F7D32BD0-2749-483E-9A0D-1635EF7E3136}.Debug|x86.Build.0 = Debug|Win32
		{F7D32BD0-2749-483E-9A0D-1635EF7E3136}.Release|ARM64.ActiveCfg = Release|ARM64
		{F7D32BD0-2749-483E-9A0D-1635EF7E3136}.Release|ARM64.Build.0 = Release|ARM64
		{F7D32BD0-2749-483E-9A0D-1635EF7E3136}.Release|x64.ActiveCfg = Release|x64
		{F7D32BD0-2749-483E-9A0D-1635EF7E3136}.Release|x64.Build.0 = Release|x64
		{F7D32BD0-2749-483E-9A0D-1635EF7E3136}.Release|x86.ActiveCfg = Release|Win32
		{F7D32BD0-2749-483E-9A0D-1635EF7E3136}.Release|x86.Build.0 = Release|Win32
		{FCA38F3C-7C73-4C47-BE4E-32F77FA8538D}.Debug|ARM64.ActiveCfg = Debug|ARM64
		{FCA38F3C-7C73-4C47-BE4E-32F77FA8538D}.Debug|ARM64.Build.0 = Debug|ARM64
		{FCA38F3C-7C73-4C47-BE4E-32F77FA8538D}.Debug|x64.ActiveCfg = Debug|x64
		{FCA38F3C-7C73-4C47-BE4E-32F77FA8538D}.Debug|x64.Build.0 = Debug|x64
		{FCA38F3C-7C73-4C47-BE4E-32F77FA8538D}.Debug|x86.ActiveCfg = Debug|Win32
		{FCA38F3C-7C73-4C47-BE4E-32F77FA8538D}.Debug|x86.Build.0 = Debug|Win32
		{FCA38F3C-7C73-4C47-BE4E-32F77FA8538D}.Release|ARM64.ActiveCfg = Release|ARM64
		{FCA38F3C-7C73-4C47-BE4E-32F77FA8538D}.Release|ARM64.Build.0 = Release|ARM64
		{FCA38F3C-7C73-4C47-BE4E-32F77FA8538D}.Release|x64.ActiveCfg = Release|x64
		{FCA38F3C-7C73-4C47-BE4E-32F77FA8538D}.Release|x64.Build.0 = Release|x64
		{FCA38F3C-7C73-4C47-BE4E-32F77FA8538D}.Release|x86.ActiveCfg = Release|Win32
		{FCA38F3C-7C73-4C47-BE4E-32F77FA8538D}.Release|x86.Build.0 = Release|Win32
		{14B93DC8-FD93-4A6D-81CB-8BC96644501C}.Debug|ARM64.ActiveCfg = Debug|ARM64
		{14B93DC8-FD93-4A6D-81CB-8BC96644501C}.Debug|ARM64.Build.0 = Debug|ARM64
		{14B93DC8-FD93-4A6D-81CB-8BC96644501C}.Debug|x64.ActiveCfg = Debug|x64
		{14B93DC8-FD93-4A6D-81CB-8BC96644501C}.Debug|x64.Build.0 = Debug|x64
		{14B93DC8-FD93-4A6D-81CB-8BC96644501C}.Debug|x86.ActiveCfg = Debug|Win32
		{14B93DC8-FD93-4A6D-81CB-8BC96644501C}.Debug|x86.Build.0 = Debug|Win32
		{14B93DC8-FD93-4A6D-81CB-8BC96644501C}.Debug|x86.Deploy.0 = Debug|Win32
		{14B93DC8-FD93-4A6D-81CB-8BC96644501C}.Release|ARM64.ActiveCfg = Release|ARM64
		{14B93DC8-FD93-4A6D-81CB-8BC96644501C}.Release|ARM64.Build.0 = Release|ARM64
		{14B93DC8-FD93-4A6D-81CB-8BC96644501C}.Release|x64.ActiveCfg = Release|x64
		{14B93DC8-FD93-4A6D-81CB-8BC96644501C}.Release|x64.Build.0 = Release|x64
		{14B93DC8-FD93-4A6D-81CB-8BC96644501C}.Release|x86.ActiveCfg = Release|Win32
		{14B93DC8-FD93-4A6D-81CB-8BC96644501C}.Release|x86.Build.0 = Release|Win32
		{14B93DC8-FD93-4A6D-81CB-8BC96644501C}.Release|x86.Deploy.0 = Release|Win32
	EndGlobalSection
	GlobalSection(SolutionProperties) = preSolution
		HideSolutionNode = FALSE
	EndGlobalSection
	GlobalSection(NestedProjects) = preSolution
		{A990658C-CE31-4BCC-976F-0FC6B1AF693D} = {5EA20F54-880A-49F3-99FA-4B3FE54E8AB1}
		{A9D95A91-4DB7-4F72-BEB6-FE8A5C89BFBD} = {5EA20F54-880A-49F3-99FA-4B3FE54E8AB1}
		{C38970C0-5FBF-4D69-90D8-CBAC225AE895} = {5EA20F54-880A-49F3-99FA-4B3FE54E8AB1}
		{F7D32BD0-2749-483E-9A0D-1635EF7E3136} = {5EA20F54-880A-49F3-99FA-4B3FE54E8AB1}
		{DA8B35B3-DA00-4B02-BDE6-6A397B3FD46B} = {5EA20F54-880A-49F3-99FA-4B3FE54E8AB1}
		{FCA38F3C-7C73-4C47-BE4E-32F77FA8538D} = {5EA20F54-880A-49F3-99FA-4B3FE54E8AB1}
		{2049DBE9-8D13-42C9-AE4B-413AE38FFFD0} = {5EA20F54-880A-49F3-99FA-4B3FE54E8AB1}
		{84E05BFA-CBAF-4F0D-BFB6-4CE85742A57E} = {5EA20F54-880A-49F3-99FA-4B3FE54E8AB1}
		{EF074BA1-2D54-4D49-A28E-5E040B47CD2E} = {5EA20F54-880A-49F3-99FA-4B3FE54E8AB1}
		{14B93DC8-FD93-4A6D-81CB-8BC96644501C} = {5EA20F54-880A-49F3-99FA-4B3FE54E8AB1}
	EndGlobalSection
	GlobalSection(ExtensibilityGlobals) = postSolution
		SolutionGuid = {D43FAD39-F619-437D-BB40-04A3982ACB6A}
	EndGlobalSection
EndGlobal
"
`;

exports[`C++ Hermes Application: SnapshotApp.vcxproj 1`] = `
"<?xml version=\\"1.0\\" encoding=\\"utf-8\\"?>
<Project ToolsVersion=\\"Current\\" DefaultTargets=\\"Build\\" xmlns=\\"http://schemas.microsoft.com/developer/msbuild/2003\\">
  <Import Project=\\"$(SolutionDir)\\\\ExperimentalFeatures.props\\" Condition=\\"Exists('$(SolutionDir)\\\\ExperimentalFeatures.props')\\" />
  <Import Project=\\"..\\\\packages\\\\Microsoft.Windows.CppWinRT.2.0.210312.4\\\\build\\\\native\\\\Microsoft.Windows.CppWinRT.props\\" Condition=\\"Exists('..\\\\packages\\\\Microsoft.Windows.CppWinRT.2.0.210312.4\\\\build\\\\native\\\\Microsoft.Windows.CppWinRT.props')\\" />
  <PropertyGroup Label=\\"Globals\\">
    <CppWinRTOptimized>true</CppWinRTOptimized>
    <CppWinRTRootNamespaceAutoMerge>true</CppWinRTRootNamespaceAutoMerge>
    <MinimalCoreWin>true</MinimalCoreWin>
    <ProjectGuid>{c93a7108-8a66-42d4-8f9f-ed70d4eae7cf}</ProjectGuid>
    <ProjectName>SnapshotApp</ProjectName>
    <RootNamespace>SnapshotApp</RootNamespace>
    <DefaultLanguage>en-US</DefaultLanguage>
    <MinimumVisualStudioVersion>16.0</MinimumVisualStudioVersion>
    <AppContainerApplication>true</AppContainerApplication>
    <ApplicationType>Windows Store</ApplicationType>
    <ApplicationTypeRevision>10.0</ApplicationTypeRevision>
  </PropertyGroup>
  <PropertyGroup Label=\\"ReactNativeWindowsProps\\">
    <ReactNativeWindowsDir Condition=\\"'$(ReactNativeWindowsDir)' == ''\\">$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), 'node_modules\\\\react-native-windows\\\\package.json'))\\\\node_modules\\\\react-native-windows\\\\</ReactNativeWindowsDir>
  </PropertyGroup>
  <Import Project=\\"$(ReactNativeWindowsDir)\\\\PropertySheets\\\\External\\\\Microsoft.ReactNative.WindowsSdk.Default.props\\" />
  <Import Project=\\"$(VCTargetsPath)\\\\Microsoft.Cpp.Default.props\\" />
  <ItemGroup Label=\\"ProjectConfigurations\\">
    <ProjectConfiguration Include=\\"Debug|ARM64\\">
      <Configuration>Debug</Configuration>
      <Platform>ARM64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include=\\"Debug|Win32\\">
      <Configuration>Debug</Configuration>
      <Platform>Win32</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include=\\"Debug|x64\\">
      <Configuration>Debug</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include=\\"Release|ARM64\\">
      <Configuration>Release</Configuration>
      <Platform>ARM64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include=\\"Release|Win32\\">
      <Configuration>Release</Configuration>
      <Platform>Win32</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include=\\"Release|x64\\">
      <Configuration>Release</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
  </ItemGroup>
  <PropertyGroup Label=\\"Configuration\\">
    <ConfigurationType>Application</ConfigurationType>
    <CharacterSet>Unicode</CharacterSet>
  </PropertyGroup>
  <PropertyGroup Condition=\\"'$(Configuration)'=='Debug'\\" Label=\\"Configuration\\">
    <UseDebugLibraries>true</UseDebugLibraries>
    <LinkIncremental>true</LinkIncremental>
  </PropertyGroup>
  <PropertyGroup Condition=\\"'$(Configuration)'=='Release'\\" Label=\\"Configuration\\">
    <UseDebugLibraries>false</UseDebugLibraries>
    <WholeProgramOptimization>true</WholeProgramOptimization>
    <LinkIncremental>false</LinkIncremental>
  </PropertyGroup>
  <Import Project=\\"$(VCTargetsPath)\\\\Microsoft.Cpp.props\\" />
  <ImportGroup Label=\\"ExtensionSettings\\"></ImportGroup>
  <ImportGroup Label=\\"PropertySheets\\">
    <Import Project=\\"$(UserRootDir)\\\\Microsoft.Cpp.$(Platform).user.props\\" Condition=\\"exists('$(UserRootDir)\\\\Microsoft.Cpp.$(Platform).user.props')\\" Label=\\"LocalAppDataPlatform\\" />
  </ImportGroup>
  <ImportGroup Label=\\"PropertySheets\\">
    <Import Project=\\"PropertySheet.props\\" />
  </ImportGroup>
  <ImportGroup Label=\\"ReactNativeWindowsPropertySheets\\">
    <Import Project=\\"$(ReactNativeWindowsDir)\\\\PropertySheets\\\\external\\\\Microsoft.ReactNative.Uwp.CppApp.props\\" Condition=\\"Exists('$(ReactNativeWindowsDir)\\\\PropertySheets\\\\External\\\\Microsoft.ReactNative.Uwp.CppApp.props')\\" />
    <Import Project=\\"..\\\\packages\\\\$(WinUIPackageProps)\\" Condition=\\"'$(WinUIPackageProps)'!='' And Exists('..\\\\packages\\\\$(WinUIPackageProps)')\\" />
  </ImportGroup>
  <PropertyGroup Label=\\"UserMacros\\" />
  <ItemDefinitionGroup>
    <ClCompile>
      <PrecompiledHeader>Use</PrecompiledHeader>
      <PrecompiledHeaderFile>pch.h</PrecompiledHeaderFile>
      <PrecompiledHeaderOutputFile>$(IntDir)pch.pch</PrecompiledHeaderOutputFile>
      <WarningLevel>Level4</WarningLevel>
      <AdditionalOptions>%(AdditionalOptions) /bigobj</AdditionalOptions>
      <DisableSpecificWarnings>4453;28204</DisableSpecificWarnings>
    </ClCompile>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition=\\"'$(Configuration)'=='Debug'\\">
    <ClCompile>
      <PreprocessorDefinitions>_DEBUG;%(PreprocessorDefinitions)</PreprocessorDefinitions>
    </ClCompile>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition=\\"'$(Configuration)'=='Release'\\">
    <ClCompile>
      <PreprocessorDefinitions>NDEBUG;%(PreprocessorDefinitions)</PreprocessorDefinitions>
    </ClCompile>
  </ItemDefinitionGroup>
  <ItemGroup>
    <ClInclude Include=\\"MainPage.h\\">
      <DependentUpon>MainPage.xaml</DependentUpon>
      <SubType>Code</SubType>
    </ClInclude>
    <ClInclude Include=\\"ReactPackageProvider.h\\" />
    <ClInclude Include=\\"AutolinkedNativeModules.g.h\\" />
    <ClInclude Include=\\"pch.h\\" />
    <ClInclude Include=\\"App.h\\">
      <DependentUpon>App.xaml</DependentUpon>
    </ClInclude>
  </ItemGroup>
  <ItemGroup>
    <ApplicationDefinition Include=\\"App.xaml\\">
      <SubType>Designer</SubType>
    </ApplicationDefinition>
  </ItemGroup>
  <ItemGroup>
    <AppxManifest Include=\\"Package.appxmanifest\\">
      <SubType>Designer</SubType>
    </AppxManifest>
  </ItemGroup>
  <ItemGroup>
    <Image Include=\\"Assets\\\\LockScreenLogo.scale-200.png\\" />
    <Image Include=\\"Assets\\\\SplashScreen.scale-200.png\\" />
    <Image Include=\\"Assets\\\\Square150x150Logo.scale-200.png\\" />
    <Image Include=\\"Assets\\\\Square44x44Logo.scale-200.png\\" />
    <Image Include=\\"Assets\\\\Square44x44Logo.targetsize-24_altform-unplated.png\\" />
    <Image Include=\\"Assets\\\\StoreLogo.png\\" />
    <Image Include=\\"Assets\\\\Wide310x150Logo.scale-200.png\\" />
  </ItemGroup>
  <ItemGroup>
    <ClCompile Include=\\"MainPage.cpp\\">
      <DependentUpon>MainPage.xaml</DependentUpon>
      <SubType>Code</SubType>
    </ClCompile>
    <ClCompile Include=\\"ReactPackageProvider.cpp\\" />
    <ClCompile Include=\\"AutolinkedNativeModules.g.cpp\\" />
    <ClCompile Include=\\"pch.cpp\\">
      <PrecompiledHeader>Create</PrecompiledHeader>
    </ClCompile>
    <ClCompile Include=\\"App.cpp\\">
      <DependentUpon>App.xaml</DependentUpon>
    </ClCompile>
    <ClCompile Include=\\"$(GeneratedFilesDir)module.g.cpp\\" />
  </ItemGroup>
  <ItemGroup>
    <Midl Include=\\"App.idl\\">
      <DependentUpon>App.xaml</DependentUpon>
    </Midl>
    <Midl Include=\\"MainPage.idl\\">
      <DependentUpon>MainPage.xaml</DependentUpon>
      <SubType>Code</SubType>
    </Midl>
  </ItemGroup>
  <ItemGroup>
    <None Include=\\"packages.config\\" />
    <None Include=\\"PropertySheet.props\\" />
    <Text Include=\\"readme.txt\\">
      <DeploymentContent>false</DeploymentContent>
    </Text>
  </ItemGroup>
  <ItemGroup>
    <Page Include=\\"MainPage.xaml\\">
      <SubType>Designer</SubType>
    </Page>
  </ItemGroup>
  <Import Project=\\"$(VCTargetsPath)\\\\Microsoft.Cpp.targets\\" />
  <ImportGroup Label=\\"ReactNativeWindowsTargets\\">
    <Import Project=\\"$(ReactNativeWindowsDir)\\\\PropertySheets\\\\External\\\\Microsoft.ReactNative.Uwp.CppApp.targets\\" Condition=\\"Exists('$(ReactNativeWindowsDir)\\\\PropertySheets\\\\External\\\\Microsoft.ReactNative.Uwp.CppApp.targets')\\" />
  </ImportGroup>
  <Target Name=\\"EnsureReactNativeWindowsTargets\\" BeforeTargets=\\"PrepareForBuild\\">
    <PropertyGroup>
      <ErrorText>This project references targets in your node_modules\\\\react-native-windows folder that are missing. The missing file is {0}.</ErrorText>
    </PropertyGroup>
    <Error Condition=\\"!Exists('$(ReactNativeWindowsDir)\\\\PropertySheets\\\\External\\\\Microsoft.ReactNative.Uwp.CppApp.props')\\" Text=\\"$([System.String]::Format('$(ErrorText)', '$(ReactNativeWindowsDir)\\\\PropertySheets\\\\External\\\\Microsoft.ReactNative.Uwp.CppApp.props'))\\" />
    <Error Condition=\\"!Exists('$(ReactNativeWindowsDir)\\\\PropertySheets\\\\External\\\\Microsoft.ReactNative.Uwp.CppApp.targets')\\" Text=\\"$([System.String]::Format('$(ErrorText)', '$(ReactNativeWindowsDir)\\\\PropertySheets\\\\External\\\\Microsoft.ReactNative.Uwp.CppApp.targets'))\\" />
  </Target>
  <ImportGroup Label=\\"ExtensionTargets\\">
    <Import Project=\\"..\\\\packages\\\\Microsoft.Windows.CppWinRT.2.0.210312.4\\\\build\\\\native\\\\Microsoft.Windows.CppWinRT.targets\\" Condition=\\"Exists('..\\\\packages\\\\Microsoft.Windows.CppWinRT.2.0.210312.4\\\\build\\\\native\\\\Microsoft.Windows.CppWinRT.targets')\\" />
    <Import Project=\\"..\\\\packages\\\\ReactNative.Hermes.Windows.0.9.0-ms.6\\\\build\\\\native\\\\ReactNative.Hermes.Windows.targets\\" Condition=\\"Exists('..\\\\packages\\\\ReactNative.Hermes.Windows.0.9.0-ms.6\\\\build\\\\native\\\\ReactNative.Hermes.Windows.targets')\\" />
    <Import Project=\\"..\\\\packages\\\\$(WinUIPackageName).$(WinUIPackageVersion)\\\\build\\\\native\\\\$(WinUIPackageName).targets\\" Condition=\\"Exists('..\\\\packages\\\\$(WinUIPackageName).$(WinUIPackageVersion)\\\\build\\\\native\\\\$(WinUIPackageName).targets')\\" />
  </ImportGroup>
  <Target Name=\\"EnsureNuGetPackageBuildImports\\" BeforeTargets=\\"PrepareForBuild\\">
    <PropertyGroup>
      <ErrorText>This project references NuGet package(s) that are missing on this computer. Use NuGet Package Restore to download them.  For more information, see http://go.microsoft.com/fwlink/?LinkID=322105. The missing file is {0}.</ErrorText>
    </PropertyGroup>
    <Error Condition=\\"!Exists('..\\\\packages\\\\Microsoft.Windows.CppWinRT.2.0.210312.4\\\\build\\\\native\\\\Microsoft.Windows.CppWinRT.props')\\" Text=\\"$([System.String]::Format('$(ErrorText)', '..\\\\packages\\\\Microsoft.Windows.CppWinRT.2.0.210312.4\\\\build\\\\native\\\\Microsoft.Windows.CppWinRT.props'))\\" />
    <Error Condition=\\"!Exists('..\\\\packages\\\\Microsoft.Windows.CppWinRT.2.0.210312.4\\\\build\\\\native\\\\Microsoft.Windows.CppWinRT.targets')\\" Text=\\"$([System.String]::Format('$(ErrorText)', '..\\\\packages\\\\Microsoft.Windows.CppWinRT.2.0.210312.4\\\\build\\\\native\\\\Microsoft.Windows.CppWinRT.targets'))\\" />
    <Error Condition=\\"!Exists('..\\\\packages\\\\ReactNative.Hermes.Windows.0.9.0-ms.6\\\\build\\\\native\\\\ReactNative.Hermes.Windows.targets')\\" Text=\\"$([System.String]::Format('$(ErrorText)', '..\\\\packages\\\\ReactNative.Hermes.Windows.0.9.0-ms.6\\\\build\\\\native\\\\ReactNative.Hermes.Windows.targets'))\\" />
    <Error Condition=\\"!Exists('..\\\\packages\\\\$(WinUIPackageName).$(WinUIPackageVersion)\\\\build\\\\native\\\\$(WinUIPackageName).targets')\\" Text=\\"$([System.String]::Format('$(ErrorText)', '..\\\\packages\\\\$(WinUIPackageName).$(WinUIPackageVersion)\\\\build\\\\native\\\\$(WinUIPackageName).targets'))\\" />
  </Target>
</Project>
"
`;

exports[`C++ Hermes Application: SnapshotApp.vcxproj.filters 1`] = `
"﻿<?xml version=\\"1.0\\" encoding=\\"utf-8\\"?>
<Project ToolsVersion=\\"Current\\" xmlns=\\"http://schemas.microsoft.com/developer/msbuild/2003\\">
  <ItemGroup>
    <ApplicationDefinition Include=\\"App.xaml\\" />
  </ItemGroup>
  <ItemGroup>
    <Midl Include=\\"App.idl\\" />
  </ItemGroup>
  <ItemGroup>
    <ClCompile Include=\\"pch.cpp\\" />
    <ClCompile Include=\\"App.cpp\\" />
    <ClCompile Include=\\"$(GeneratedFilesDir)module.g.cpp\\" />
    <ClCompile Include=\\"ReactPackageProvider.cpp\\" />
    <ClCompile Include=\\"AutolinkedNativeModules.g.cpp\\" />
  </ItemGroup>
  <ItemGroup>
    <ClInclude Include=\\"pch.h\\" />
    <ClInclude Include=\\"App.h\\" />
    <ClInclude Include=\\"ReactPackageProvider.h\\" />
    <ClInclude Include=\\"AutolinkedNativeModules.g.h\\" />
  </ItemGroup>
  <ItemGroup>
    <Image Include=\\"Assets\\\\Wide310x150Logo.scale-200.png\\">
      <Filter>Assets</Filter>
    </Image>
    <Image Include=\\"Assets\\\\StoreLogo.png\\">
      <Filter>Assets</Filter>
    </Image>
    <Image Include=\\"Assets\\\\Square150x150Logo.scale-200.png\\">
      <Filter>Assets</Filter>
    </Image>
    <Image Include=\\"Assets\\\\Square44x44Logo.targetsize-24_altform-unplated.png\\">
      <Filter>Assets</Filter>
    </Image>
    <Image Include=\\"Assets\\\\Square44x44Logo.scale-200.png\\">
      <Filter>Assets</Filter>
    </Image>
    <Image Include=\\"Assets\\\\SplashScreen.scale-200.png\\">
      <Filter>Assets</Filter>
    </Image>
    <Image Include=\\"Assets\\\\LockScreenLogo.scale-200.png\\">
      <Filter>Assets</Filter>
    </Image>
  </ItemGroup>
  <ItemGroup>
    <AppxManifest Include=\\"Package.appxmanifest\\" />
  </ItemGroup>
  <ItemGroup>
    <Filter Include=\\"Assets\\">
      <UniqueIdentifier>{e48dc53e-40b1-40cb-970a-f89935452892}</UniqueIdentifier>
    </Filter>
  </ItemGroup>
  <ItemGroup>
    <None Include=\\"PropertySheet.props\\" />
    <None Include=\\"packages.config\\" />
  </ItemGroup>
  <ItemGroup>
    <Text Include=\\"readme.txt\\" />
  </ItemGroup>
  <ItemGroup>
    <Page Include=\\"MainPage.xaml\\" />
  </ItemGroup>
</Project>"
`;

exports[`C++ Hermes Application: index.windows.bundle 1`] = `
"/**
 * 
 * Be sure to generate this file using the CLI:
 *
 * npx react-native bundle --platform windows --entry-file index.js 
 *   --bundle-output windows\\\\SnapshotApp\\\\Bundle\\\\index.windows.bundle
 *   --assets-dest windows\\\\SnapshotApp\\\\Bundle
 *
 */"
`;

exports[`C++ Hermes Application: metro.config.js 1`] = `
"/**
 * Metro configuration for React Native
 * https://github.com/facebook/react-native
 *
 * @format
 */
const fs = require('fs');
const path = require('path');
const exclusionList = require('metro-config/src/defaults/exclusionList');

const rnwPath = fs.realpathSync(
  path.resolve(require.resolve('react-native-windows/package.json'), '..'),
);

module.exports = {
  resolver: {
    blockList: exclusionList([
      // This stops \\"react-native run-windows\\" from causing the metro server to crash if its already running
      new RegExp(
        \`\${path.resolve(__dirname, 'windows').replace(/[/\\\\\\\\]/g, '/')}.*\`,
      ),
      // This prevents \\"react-native run-windows\\" from hitting: EBUSY: resource busy or locked, open msbuild.ProjectImports.zip or other files produced by msbuild
      new RegExp(\`\${rnwPath}/build/.*\`),
      new RegExp(\`\${rnwPath}/target/.*\`),
      /.*\\\\.ProjectImports\\\\.zip/,
    ]),
  },
  transformer: {
    getTransformOptions: async () => ({
      transform: {
        experimentalImportSupport: false,
        inlineRequires: true,
      },
    }),
  },
};
"
`;

exports[`C++ Hermes Application: packages.config 1`] = `
"﻿<?xml version=\\"1.0\\" encoding=\\"utf-8\\"?>
<packages>
  <package id=\\"Microsoft.Windows.CppWinRT\\" version=\\"2.0.210312.4\\" targetFramework=\\"native\\" />
  <package id=\\"ReactNative.Hermes.Windows\\" version=\\"0.9.0-ms.6\\" targetFramework=\\"native\\" />
  <package id=\\"Microsoft.UI.Xaml\\" version=\\"2.7.0\\" targetFramework=\\"native\\" />
</packages>"
`;

exports[`C++ Hermes Application: pch.cpp 1`] = `
"﻿#include \\"pch.h\\"
"
`;

exports[`C++ Hermes Application: pch.h 1`] = `
"#pragma once

#define NOMINMAX

#include <hstring.h>
#include <restrictederrorinfo.h>
#include <unknwn.h>
#include <windows.h>
#include <CppWinRTIncludes.h>
#include <VersionMacros.h>
#include <winrt/Windows.ApplicationModel.Activation.h>
#include <UI.Xaml.Controls.Primitives.h>
#include <UI.Xaml.Controls.h>
#include <UI.Xaml.Markup.h>
#include <UI.Xaml.Navigation.h>

#include <winrt/Microsoft.ReactNative.h>

#include <winrt/Microsoft.UI.Xaml.Automation.Peers.h>
#include <winrt/Microsoft.UI.Xaml.Controls.Primitives.h>
#include <winrt/Microsoft.UI.Xaml.Controls.h>
#include <winrt/Microsoft.UI.Xaml.Media.h>
#include <winrt/Microsoft.UI.Xaml.XamlTypeInfo.h>
using namespace winrt::Windows::Foundation;
"
`;

exports[`C++ Hermes Library: ExperimentalFeatures.props 1`] = `
"<?xml version=\\"1.0\\" encoding=\\"utf-8\\"?>
<Project xmlns=\\"http://schemas.microsoft.com/developer/msbuild/2003\\">

  <!--
    Application projects contain a file with this name to specify some important settings
    that will apply globally for the app and *all* native modules the app consumes. These
    values are set by the app developer.
  -->

</Project>
"
`;

exports[`C++ Hermes Library: NuGet.Config 1`] = `
"<?xml version=\\"1.0\\" encoding=\\"utf-8\\"?>
<configuration>
  <config>
    <add key=\\"repositoryPath\\" value=\\"packages\\" />
  </config>
  <packageSources>
    <clear />
    <add key=\\"react-native\\" value=\\"https://pkgs.dev.azure.com/ms/react-native/_packaging/react-native-public/nuget/v3/index.json\\" />
    <add key=\\"Nuget.org\\" value=\\"https://api.nuget.org/v3/index.json\\" />
  </packageSources>
  <disabledPackageSources>
    <clear />
  </disabledPackageSources>  
</configuration>
"
`;

exports[`C++ Hermes Library: PropertySheet.props 1`] = `
"<?xml version=\\"1.0\\" encoding=\\"utf-8\\"?>
<Project ToolsVersion=\\"Current\\" xmlns=\\"http://schemas.microsoft.com/developer/msbuild/2003\\">
  <ImportGroup Label=\\"PropertySheets\\" />
  <PropertyGroup Label=\\"UserMacros\\" />
  <!--
    To customize common C++/WinRT project properties:
    * right-click the project node
    * expand the Common Properties item
    * select the C++/WinRT property page

    For more advanced scenarios, and complete documentation, please see:
    https://github.com/Microsoft/xlang/tree/master/src/package/cppwinrt/nuget
    -->
  <PropertyGroup />
  <ItemDefinitionGroup />
</Project>"
`;

exports[`C++ Hermes Library: ReactNativeModule.h 1`] = `
"﻿#pragma once

#include \\"JSValue.h\\"
#include \\"NativeModules.h\\"

using namespace winrt::Microsoft::ReactNative;

namespace winrt::SnapshotApp
{

REACT_MODULE(ReactNativeModule, L\\"SnapshotApp\\")
struct ReactNativeModule
{
    // See https://microsoft.github.io/react-native-windows/docs/native-modules for details on writing native modules

    REACT_INIT(Initialize)
    void Initialize(ReactContext const &reactContext) noexcept
    {
        m_reactContext = reactContext;
    }
    
    REACT_METHOD(sampleMethod)
    void sampleMethod(std::string stringArgument, int numberArgument, std::function<void(std::string)> &&callback) noexcept
    {
        // TODO: Implement some actually useful functionality
        callback(\\"Received numberArgument: \\" + std::to_string(numberArgument) + \\" stringArgument: \\" + stringArgument);
    }

    private:
        ReactContext m_reactContext{nullptr};
};

} // namespace winrt::SnapshotApp
"
`;

exports[`C++ Hermes Library: ReactPackageProvider.cpp 1`] = `
"#include \\"pch.h\\"
#include \\"ReactPackageProvider.h\\"
#if __has_include(\\"ReactPackageProvider.g.cpp\\")
#include \\"ReactPackageProvider.g.cpp\\"
#endif

#include \\"ReactNativeModule.h\\"

using namespace winrt::Microsoft::ReactNative;

namespace winrt::SnapshotApp::implementation
{

void ReactPackageProvider::CreatePackage(IReactPackageBuilder const &packageBuilder) noexcept
{
    AddAttributedModules(packageBuilder);
}

} // namespace winrt::SnapshotApp::implementation
"
`;

exports[`C++ Hermes Library: ReactPackageProvider.h 1`] = `
"#pragma once
#include \\"ReactPackageProvider.g.h\\"

using namespace winrt::Microsoft::ReactNative;

namespace winrt::SnapshotApp::implementation
{
    struct ReactPackageProvider : ReactPackageProviderT<ReactPackageProvider>
    {
        ReactPackageProvider() = default;

        void CreatePackage(IReactPackageBuilder const &packageBuilder) noexcept;
    };
} // namespace winrt::SnapshotApp::implementation

namespace winrt::SnapshotApp::factory_implementation
{

struct ReactPackageProvider : ReactPackageProviderT<ReactPackageProvider, implementation::ReactPackageProvider> {};

} // namespace winrt::SnapshotApp::factory_implementation
"
`;

exports[`C++ Hermes Library: ReactPackageProvider.idl 1`] = `
"namespace SnapshotApp
{
    [webhosthidden]
    [default_interface]
    runtimeclass ReactPackageProvider : Microsoft.ReactNative.IReactPackageProvider
    {
        ReactPackageProvider();
    };
}
"
`;

exports[`C++ Hermes Library: SnapshotApp.def 1`] = `
"﻿EXPORTS
DllCanUnloadNow = WINRT_CanUnloadNow                    PRIVATE
DllGetActivationFactory = WINRT_GetActivationFactory    PRIVATE
"
`;

exports[`C++ Hermes Library: SnapshotApp.sln 1`] = `
"﻿
Microsoft Visual Studio Solution File, Format Version 12.00
# Visual Studio Version 16
VisualStudioVersion = 16.0.29215.179
MinimumVisualStudioVersion = 10.0.40219.1
Project(\\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\\") = \\"SnapshotApp\\", \\"SnapshotApp\\\\SnapshotApp.vcxproj\\", \\"{B8CF5724-DD2E-485C-83CA-34D1A17FE349}\\"
	ProjectSection(ProjectDependencies) = postProject
		{F7D32BD0-2749-483E-9A0D-1635EF7E3136} = {F7D32BD0-2749-483E-9A0D-1635EF7E3136}
	EndProjectSection
EndProject
Project(\\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\\") = \\"Folly\\", \\"..\\\\node_modules\\\\react-native-windows\\\\Folly\\\\Folly.vcxproj\\", \\"{A990658C-CE31-4BCC-976F-0FC6B1AF693D}\\"
EndProject
Project(\\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\\") = \\"fmt\\", \\"..\\\\node_modules\\\\react-native-windows\\\\fmt\\\\fmt.vcxproj\\", \\"{14B93DC8-FD93-4A6D-81CB-8BC96644501C}\\"
EndProject
Project(\\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\\") = \\"ReactCommon\\", \\"..\\\\node_modules\\\\react-native-windows\\\\ReactCommon\\\\ReactCommon.vcxproj\\", \\"{A9D95A91-4DB7-4F72-BEB6-FE8A5C89BFBD}\\"
	ProjectSection(ProjectDependencies) = postProject
		{A990658C-CE31-4BCC-976F-0FC6B1AF693D} = {A990658C-CE31-4BCC-976F-0FC6B1AF693D}
	EndProjectSection
EndProject
Project(\\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\\") = \\"Chakra\\", \\"..\\\\node_modules\\\\react-native-windows\\\\Chakra\\\\Chakra.vcxitems\\", \\"{C38970C0-5FBF-4D69-90D8-CBAC225AE895}\\"
EndProject
Project(\\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\\") = \\"Microsoft.ReactNative\\", \\"..\\\\node_modules\\\\react-native-windows\\\\Microsoft.ReactNative\\\\Microsoft.ReactNative.vcxproj\\", \\"{F7D32BD0-2749-483E-9A0D-1635EF7E3136}\\"
EndProject
Project(\\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\\") = \\"Microsoft.ReactNative.Cxx\\", \\"..\\\\node_modules\\\\react-native-windows\\\\Microsoft.ReactNative.Cxx\\\\Microsoft.ReactNative.Cxx.vcxitems\\", \\"{DA8B35B3-DA00-4B02-BDE6-6A397B3FD46B}\\"
EndProject
Project(\\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\\") = \\"Common\\", \\"..\\\\node_modules\\\\react-native-windows\\\\Common\\\\Common.vcxproj\\", \\"{FCA38F3C-7C73-4C47-BE4E-32F77FA8538D}\\"
EndProject
Project(\\"{2150E333-8FDC-42A3-9474-1A3956D46DE8}\\") = \\"ReactNative\\", \\"ReactNative\\", \\"{5EA20F54-880A-49F3-99FA-4B3FE54E8AB1}\\"
EndProject
Project(\\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\\") = \\"Microsoft.ReactNative.Shared\\", \\"..\\\\node_modules\\\\react-native-windows\\\\Shared\\\\Shared.vcxitems\\", \\"{2049DBE9-8D13-42C9-AE4B-413AE38FFFD0}\\"
EndProject
Project(\\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\\") = \\"Mso\\", \\"..\\\\node_modules\\\\react-native-windows\\\\Mso\\\\Mso.vcxitems\\", \\"{84E05BFA-CBAF-4F0D-BFB6-4CE85742A57E}\\"
EndProject
Project(\\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\\") = \\"Include\\", \\"..\\\\node_modules\\\\react-native-windows\\\\include\\\\Include.vcxitems\\", \\"{EF074BA1-2D54-4D49-A28E-5E040B47CD2E}\\"
EndProject
Global
	GlobalSection(SharedMSBuildProjectFiles) = preSolution
		..\\\\node_modules\\\\react-native-windows\\\\Shared\\\\Shared.vcxitems*{2049dbe9-8d13-42c9-ae4b-413ae38fffd0}*SharedItemsImports = 9
		..\\\\node_modules\\\\react-native-windows\\\\Mso\\\\Mso.vcxitems*{84e05bfa-cbaf-4f0d-bfb6-4ce85742a57e}*SharedItemsImports = 9
		..\\\\node_modules\\\\react-native-windows\\\\Chakra\\\\Chakra.vcxitems*{c38970c0-5fbf-4d69-90d8-cbac225ae895}*SharedItemsImports = 9
		..\\\\node_modules\\\\react-native-windows\\\\Microsoft.ReactNative.Cxx\\\\Microsoft.ReactNative.Cxx.vcxitems*{da8b35b3-da00-4b02-bde6-6a397b3fd46b}*SharedItemsImports = 9
		..\\\\node_modules\\\\react-native-windows\\\\include\\\\Include.vcxitems*{ef074ba1-2d54-4d49-a28e-5e040b47cd2e}*SharedItemsImports = 9
		..\\\\node_modules\\\\react-native-windows\\\\Chakra\\\\Chakra.vcxitems*{f7d32bd0-2749-483e-9a0d-1635ef7e3136}*SharedItemsImports = 4
		..\\\\node_modules\\\\react-native-windows\\\\Microsoft.ReactNative.Cxx\\\\Microsoft.ReactNative.Cxx.vcxitems*{f7d32bd0-2749-483e-9a0d-1635ef7e3136}*SharedItemsImports = 4
		..\\\\node_modules\\\\react-native-windows\\\\Mso\\\\Mso.vcxitems*{f7d32bd0-2749-483e-9a0d-1635ef7e3136}*SharedItemsImports = 4
		..\\\\node_modules\\\\react-native-windows\\\\Shared\\\\Shared.vcxitems*{f7d32bd0-2749-483e-9a0d-1635ef7e3136}*SharedItemsImports = 4
	EndGlobalSection
	GlobalSection(SolutionConfigurationPlatforms) = preSolution
		Debug|ARM64 = Debug|ARM64
		Debug|x64 = Debug|x64
		Debug|x86 = Debug|x86
		Release|ARM64 = Release|ARM64
		Release|x64 = Release|x64
		Release|x86 = Release|x86
	EndGlobalSection
	GlobalSection(ProjectConfigurationPlatforms) = postSolution
		{B8CF5724-DD2E-485C-83CA-34D1A17FE349}.Debug|ARM64.ActiveCfg = Debug|ARM64
		{B8CF5724-DD2E-485C-83CA-34D1A17FE349}.Debug|ARM64.Build.0 = Debug|ARM64
		{B8CF5724-DD2E-485C-83CA-34D1A17FE349}.Debug|ARM64.Deploy.0 = Debug|ARM64
		{B8CF5724-DD2E-485C-83CA-34D1A17FE349}.Debug|x64.ActiveCfg = Debug|x64
		{B8CF5724-DD2E-485C-83CA-34D1A17FE349}.Debug|x64.Build.0 = Debug|x64
		{B8CF5724-DD2E-485C-83CA-34D1A17FE349}.Debug|x64.Deploy.0 = Debug|x64
		{B8CF5724-DD2E-485C-83CA-34D1A17FE349}.Debug|x86.ActiveCfg = Debug|Win32
		{B8CF5724-DD2E-485C-83CA-34D1A17FE349}.Debug|x86.Build.0 = Debug|Win32
		{B8CF5724-DD2E-485C-83CA-34D1A17FE349}.Debug|x86.Deploy.0 = Debug|Win32
		{B8CF5724-DD2E-485C-83CA-34D1A17FE349}.Release|ARM64.ActiveCfg = Release|ARM64
		{B8CF5724-DD2E-485C-83CA-34D1A17FE349}.Release|ARM64.Build.0 = Release|ARM64
		{B8CF5724-DD2E-485C-83CA-34D1A17FE349}.Release|ARM64.Deploy.0 = Release|ARM64
		{B8CF5724-DD2E-485C-83CA-34D1A17FE349}.Release|x64.ActiveCfg = Release|x64
		{B8CF5724-DD2E-485C-83CA-34D1A17FE349}.Release|x64.Build.0 = Release|x64
		{B8CF5724-DD2E-485C-83CA-34D1A17FE349}.Release|x64.Deploy.0 = Release|x64
		{B8CF5724-DD2E-485C-83CA-34D1A17FE349}.Release|x86.ActiveCfg = Release|Win32
		{B8CF5724-DD2E-485C-83CA-34D1A17FE349}.Release|x86.Build.0 = Release|Win32
		{B8CF5724-DD2E-485C-83CA-34D1A17FE349}.Release|x86.Deploy.0 = Release|Win32
		{A990658C-CE31-4BCC-976F-0FC6B1AF693D}.Debug|ARM64.ActiveCfg = Debug|ARM64
		{A990658C-CE31-4BCC-976F-0FC6B1AF693D}.Debug|ARM64.Build.0 = Debug|ARM64
		{A990658C-CE31-4BCC-976F-0FC6B1AF693D}.Debug|x64.ActiveCfg = Debug|x64
		{A990658C-CE31-4BCC-976F-0FC6B1AF693D}.Debug|x64.Build.0 = Debug|x64
		{A990658C-CE31-4BCC-976F-0FC6B1AF693D}.Debug|x86.ActiveCfg = Debug|Win32
		{A990658C-CE31-4BCC-976F-0FC6B1AF693D}.Debug|x86.Build.0 = Debug|Win32
		{A990658C-CE31-4BCC-976F-0FC6B1AF693D}.Release|ARM64.ActiveCfg = Release|ARM64
		{A990658C-CE31-4BCC-976F-0FC6B1AF693D}.Release|ARM64.Build.0 = Release|ARM64
		{A990658C-CE31-4BCC-976F-0FC6B1AF693D}.Release|x64.ActiveCfg = Release|x64
		{A990658C-CE31-4BCC-976F-0FC6B1AF693D}.Release|x64.Build.0 = Release|x64
		{A990658C-CE31-4BCC-976F-0FC6B1AF693D}.Release|x86.ActiveCfg = Release|Win32
		{A990658C-CE31-4BCC-976F-0FC6B1AF693D}.Release|x86.Build.0 = Release|Win32
		{A9D95A91-4DB7-4F72-BEB6-FE8A5C89BFBD}.Debug|ARM64.ActiveCfg = Debug|ARM64
		{A9D95A91-4DB7-4F72-BEB6-FE8A5C89BFBD}.Debug|ARM64.Build.0 = Debug|ARM64
		{A9D95A91-4DB7-4F72-BEB6-FE8A5C89BFBD}.Debug|x64.ActiveCfg = Debug|x64
		{A9D95A91-4DB7-4F72-BEB6-FE8A5C89BFBD}.Debug|x64.Build.0 = Debug|x64
		{A9D95A91-4DB7-4F72-BEB6-FE8A5C89BFBD}.Debug|x86.ActiveCfg = Debug|Win32
		{A9D95A91-4DB7-4F72-BEB6-FE8A5C89BFBD}.Debug|x86.Build.0 = Debug|Win32
		{A9D95A91-4DB7-4F72-BEB6-FE8A5C89BFBD}.Release|ARM64.ActiveCfg = Release|ARM64
		{A9D95A91-4DB7-4F72-BEB6-FE8A5C89BFBD}.Release|ARM64.Build.0 = Release|ARM64
		{A9D95A91-4DB7-4F72-BEB6-FE8A5C89BFBD}.Release|x64.ActiveCfg = Release|x64
		{A9D95A91-4DB7-4F72-BEB6-FE8A5C89BFBD}.Release|x64.Build.0 = Release|x64
		{A9D95A91-4DB7-4F72-BEB6-FE8A5C89BFBD}.Release|x86.ActiveCfg = Release|Win32
		{A9D95A91-4DB7-4F72-BEB6-FE8A5C89BFBD}.Release|x86.Build.0 = Release|Win32
		{F7D32BD0-2749-483E-9A0D-1635EF7E3136}.Debug|ARM64.ActiveCfg = Debug|ARM64
		{F7D32BD0-2749-483E-9A0D-1635EF7E3136}.Debug|ARM64.Build.0 = Debug|ARM64
		{F7D32BD0-2749-483E-9A0D-1635EF7E3136}.Debug|x64.ActiveCfg = Debug|x64
		{F7D32BD0-2749-483E-9A0D-1635EF7E3136}.Debug|x64.Build.0 = Debug|x64
		{F7D32BD0-2749-483E-9A0D-1635EF7E3136}.Debug|x86.ActiveCfg = Debug|Win32
		{F7D32BD0-2749-483E-9A0D-1635EF7E3136}.Debug|x86.Build.0 = Debug|Win32
		{F7D32BD0-2749-483E-9A0D-1635EF7E3136}.Release|ARM64.ActiveCfg = Release|ARM64
		{F7D32BD0-2749-483E-9A0D-1635EF7E3136}.Release|ARM64.Build.0 = Release|ARM64
		{F7D32BD0-2749-483E-9A0D-1635EF7E3136}.Release|x64.ActiveCfg = Release|x64
		{F7D32BD0-2749-483E-9A0D-1635EF7E3136}.Release|x64.Build.0 = Release|x64
		{F7D32BD0-2749-483E-9A0D-1635EF7E3136}.Release|x86.ActiveCfg = Release|Win32
		{F7D32BD0-2749-483E-9A0D-1635EF7E3136}.Release|x86.Build.0 = Release|Win32
		{FCA38F3C-7C73-4C47-BE4E-32F77FA8538D}.Debug|ARM64.ActiveCfg = Debug|ARM64
		{FCA38F3C-7C73-4C47-BE4E-32F77FA8538D}.Debug|ARM64.Build.0 = Debug|ARM64
		{FCA38F3C-7C73-4C47-BE4E-32F77FA8538D}.Debug|x64.ActiveCfg = Debug|x64
		{FCA38F3C-7C73-4C47-BE4E-32F77FA8538D}.Debug|x64.Build.0 = Debug|x64
		{FCA38F3C-7C73-4C47-BE4E-32F77FA8538D}.Debug|x86.ActiveCfg = Debug|Win32
		{FCA38F3C-7C73-4C47-BE4E-32F77FA8538D}.Debug|x86.Build.0 = Debug|Win32
		{FCA38F3C-7C73-4C47-BE4E-32F77FA8538D}.Release|ARM64.ActiveCfg = Release|ARM64
		{FCA38F3C-7C73-4C47-BE4E-32F77FA8538D}.Release|ARM64.Build.0 = Release|ARM64
		{FCA38F3C-7C73-4C47-BE4E-32F77FA8538D}.Release|x64.ActiveCfg = Release|x64
		{FCA38F3C-7C73-4C47-BE4E-32F77FA8538D}.Release|x64.Build.0 = Release|x64
		{FCA38F3C-7C73-4C47-BE4E-32F77FA8538D}.Release|x86.ActiveCfg = Release|Win32
		{FCA38F3C-7C73-4C47-BE4E-32F77FA8538D}.Release|x86.Build.0 = Release|Win32
		{14B93DC8-FD93-4A6D-81CB-8BC96644501C}.Debug|ARM64.ActiveCfg = Debug|ARM64
		{14B93DC8-FD93-4A6D-81CB-8BC96644501C}.Debug|ARM64.Build.0 = Debug|ARM64
		{14B93DC8-FD93-4A6D-81CB-8BC96644501C}.Debug|x64.ActiveCfg = Debug|x64
		{14B93DC8-FD93-4A6D-81CB-8BC96644501C}.Debug|x64.Build.0 = Debug|x64
		{14B93DC8-FD93-4A6D-81CB-8BC96644501C}.Debug|x86.ActiveCfg = Debug|Win32
		{14B93DC8-FD93-4A6D-81CB-8BC96644501C}.Debug|x86.Build.0 = Debug|Win32
		{14B93DC8-FD93-4A6D-81CB-8BC96644501C}.Debug|x86.Deploy.0 = Debug|Win32
		{14B93DC8-FD93-4A6D-81CB-8BC96644501C}.Release|ARM64.ActiveCfg = Release|ARM64
		{14B93DC8-FD93-4A6D-81CB-8BC96644501C}.Release|ARM64.Build.0 = Release|ARM64
		{14B93DC8-FD93-4A6D-81CB-8BC96644501C}.Release|x64.ActiveCfg = Release|x64
		{14B93DC8-FD93-4A6D-81CB-8BC96644501C}.Release|x64.Build.0 = Release|x64
		{14B93DC8-FD93-4A6D-81CB-8BC96644501C}.Release|x86.ActiveCfg = Release|Win32
		{14B93DC8-FD93-4A6D-81CB-8BC96644501C}.Release|x86.Build.0 = Release|Win32
		{14B93DC8-FD93-4A6D-81CB-8BC96644501C}.Release|x86.Deploy.0 = Release|Win32
	EndGlobalSection
	GlobalSection(SolutionProperties) = preSolution
		HideSolutionNode = FALSE
	EndGlobalSection
	GlobalSection(NestedProjects) = preSolution
		{A990658C-CE31-4BCC-976F-0FC6B1AF693D} = {5EA20F54-880A-49F3-99FA-4B3FE54E8AB1}
		{A9D95A91-4DB7-4F72-BEB6-FE8A5C89BFBD} = {5EA20F54-880A-49F3-99FA-4B3FE54E8AB1}
		{C38970C0-5FBF-4D69-90D8-CBAC225AE895} = {5EA20F54-880A-49F3-99FA-4B3FE54E8AB1}
		{F7D32BD0-2749-483E-9A0D-1635EF7E3136} = {5EA20F54-880A-49F3-99FA-4B3FE54E8AB1}
		{DA8B35B3-DA00-4B02-BDE6-6A397B3FD46B} = {5EA20F54-880A-49F3-99FA-4B3FE54E8AB1}
		{FCA38F3C-7C73-4C47-BE4E-32F77FA8538D} = {5EA20F54-880A-49F3-99FA-4B3FE54E8AB1}
		{2049DBE9-8D13-42C9-AE4B-413AE38FFFD0} = {5EA20F54-880A-49F3-99FA-4B3FE54E8AB1}
		{84E05BFA-CBAF-4F0D-BFB6-4CE85742A57E} = {5EA20F54-880A-49F3-99FA-4B3FE54E8AB1}
		{EF074BA1-2D54-4D49-A28E-5E040B47CD2E} = {5EA20F54-880A-49F3-99FA-4B3FE54E8AB1}
		{14B93DC8-FD93-4A6D-81CB-8BC96644501C} = {5EA20F54-880A-49F3-99FA-4B3FE54E8AB1}
	EndGlobalSection
	GlobalSection(ExtensibilityGlobals) = postSolution
		SolutionGuid = {D43FAD39-F619-437D-BB40-04A3982ACB6A}
	EndGlobalSection
EndGlobal
"
`;

exports[`C++ Hermes Library: SnapshotApp.vcxproj 1`] = `
"<?xml version=\\"1.0\\" encoding=\\"utf-8\\"?>
<Project ToolsVersion=\\"Current\\" DefaultTargets=\\"Build\\" xmlns=\\"http://schemas.microsoft.com/developer/msbuild/2003\\">
  <Import Project=\\"$(SolutionDir)\\\\ExperimentalFeatures.props\\" Condition=\\"Exists('$(SolutionDir)\\\\ExperimentalFeatures.props')\\" />
  <Import Project=\\"$(SolutionDir)\\\\packages\\\\Microsoft.Windows.CppWinRT.2.0.210312.4\\\\build\\\\native\\\\Microsoft.Windows.CppWinRT.props\\" Condition=\\"Exists('$(SolutionDir)\\\\packages\\\\Microsoft.Windows.CppWinRT.2.0.210312.4\\\\build\\\\native\\\\Microsoft.Windows.CppWinRT.props')\\" />
  <PropertyGroup Label=\\"Globals\\">
    <CppWinRTOptimized>true</CppWinRTOptimized>
    <CppWinRTRootNamespaceAutoMerge>true</CppWinRTRootNamespaceAutoMerge>
    <MinimalCoreWin>true</MinimalCoreWin>
    <ProjectGuid>{b8cf5724-dd2e-485c-83ca-34d1a17fe349}</ProjectGuid>
    <ProjectName>SnapshotApp</ProjectName>
    <RootNamespace>SnapshotApp</RootNamespace>
    <DefaultLanguage>en-US</DefaultLanguage>
    <MinimumVisualStudioVersion>16.0</MinimumVisualStudioVersion>
    <AppContainerApplication>true</AppContainerApplication>
    <ApplicationType>Windows Store</ApplicationType>
    <ApplicationTypeRevision>10.0</ApplicationTypeRevision>
  </PropertyGroup>
  <PropertyGroup Label=\\"ReactNativeWindowsProps\\">
    <ReactNativeWindowsDir Condition=\\"'$(ReactNativeWindowsDir)' == ''\\">$([MSBuild]::GetDirectoryNameOfFileAbove($(SolutionDir), 'node_modules\\\\react-native-windows\\\\package.json'))\\\\node_modules\\\\react-native-windows\\\\</ReactNativeWindowsDir>
  </PropertyGroup>
  <Import Project=\\"$(ReactNativeWindowsDir)\\\\PropertySheets\\\\External\\\\Microsoft.ReactNative.WindowsSdk.Default.props\\" Condition=\\"Exists('$(ReactNativeWindowsDir)\\\\PropertySheets\\\\External\\\\Microsoft.ReactNative.WindowsSdk.Default.props')\\" />
  <PropertyGroup Label=\\"Fallback Windows SDK Versions\\">
    <WindowsTargetPlatformVersion Condition=\\" '$(WindowsTargetPlatformVersion)' == '' \\">10.0.19041.0</WindowsTargetPlatformVersion>
    <WindowsTargetPlatformMinVersion Condition=\\" '$(WindowsTargetPlatformMinVersion)' == '' \\">10.0.15063.0</WindowsTargetPlatformMinVersion>
  </PropertyGroup>
  <Import Project=\\"$(VCTargetsPath)\\\\Microsoft.Cpp.Default.props\\" />
  <ItemGroup Label=\\"ProjectConfigurations\\">
    <ProjectConfiguration Include=\\"Debug|ARM64\\">
      <Configuration>Debug</Configuration>
      <Platform>ARM64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include=\\"Debug|Win32\\">
      <Configuration>Debug</Configuration>
      <Platform>Win32</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include=\\"Debug|x64\\">
      <Configuration>Debug</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include=\\"Release|ARM64\\">
      <Configuration>Release</Configuration>
      <Platform>ARM64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include=\\"Release|Win32\\">
      <Configuration>Release</Configuration>
      <Platform>Win32</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include=\\"Release|x64\\">
      <Configuration>Release</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
  </ItemGroup>
  <PropertyGroup Label=\\"Configuration\\">
    <ConfigurationType>DynamicLibrary</ConfigurationType>
    <CharacterSet>Unicode</CharacterSet>
    <GenerateManifest>false</GenerateManifest>
  </PropertyGroup>
  <PropertyGroup Condition=\\"'$(Configuration)'=='Debug'\\" Label=\\"Configuration\\">
    <UseDebugLibraries>true</UseDebugLibraries>
    <LinkIncremental>true</LinkIncremental>
  </PropertyGroup>
  <PropertyGroup Condition=\\"'$(Configuration)'=='Release'\\" Label=\\"Configuration\\">
    <UseDebugLibraries>false</UseDebugLibraries>
    <WholeProgramOptimization>true</WholeProgramOptimization>
    <LinkIncremental>false</LinkIncremental>
  </PropertyGroup>
  <Import Project=\\"$(VCTargetsPath)\\\\Microsoft.Cpp.props\\" />
  <ImportGroup Label=\\"ExtensionSettings\\"></ImportGroup>
  <ImportGroup Label=\\"PropertySheets\\">
    <Import Project=\\"$(UserRootDir)\\\\Microsoft.Cpp.$(Platform).user.props\\" Condition=\\"exists('$(UserRootDir)\\\\Microsoft.Cpp.$(Platform).user.props')\\" Label=\\"LocalAppDataPlatform\\" />
  </ImportGroup>
  <ImportGroup Label=\\"PropertySheets\\">
    <Import Project=\\"PropertySheet.props\\" />
  </ImportGroup>
  <ImportGroup Label=\\"ReactNativeWindowsPropertySheets\\">
    <Import Project=\\"$(ReactNativeWindowsDir)\\\\PropertySheets\\\\external\\\\Microsoft.ReactNative.Uwp.CppLib.props\\" Condition=\\"Exists('$(ReactNativeWindowsDir)\\\\PropertySheets\\\\External\\\\Microsoft.ReactNative.Uwp.CppLib.props')\\" />
    <Import Project=\\"$(SolutionDir)\\\\packages\\\\$(WinUIPackageProps)\\" Condition=\\"'$(WinUIPackageProps)'!='' And Exists('$(SolutionDir)\\\\packages\\\\$(WinUIPackageProps)')\\" />
  </ImportGroup>

  <PropertyGroup Label=\\"UserMacros\\" />
  <ItemDefinitionGroup>
    <ClCompile>
      <PrecompiledHeader>Use</PrecompiledHeader>
      <PrecompiledHeaderFile>pch.h</PrecompiledHeaderFile>
      <PrecompiledHeaderOutputFile>$(IntDir)pch.pch</PrecompiledHeaderOutputFile>
      <WarningLevel>Level4</WarningLevel>
      <AdditionalOptions>%(AdditionalOptions) /bigobj</AdditionalOptions>
      <DisableSpecificWarnings>4453;28204</DisableSpecificWarnings>
      <PreprocessorDefinitions>_WINRT_DLL;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <AdditionalUsingDirectories>$(WindowsSDK_WindowsMetadata);$(AdditionalUsingDirectories)</AdditionalUsingDirectories>
    </ClCompile>
    <Midl>
      <!-- This allows applications targetting older Windows SDKs (e.g. RNW 0.65 apps) to consume the library generated WinMD -->
      <AdditionalOptions>%(AdditionalOptions) /noattributename</AdditionalOptions>
    </Midl>
    <Link>
      <SubSystem>Console</SubSystem>
      <GenerateWindowsMetadata>true</GenerateWindowsMetadata>
      <ModuleDefinitionFile>SnapshotApp.def</ModuleDefinitionFile>
    </Link>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition=\\"'$(Configuration)'=='Debug'\\">
    <ClCompile>
      <PreprocessorDefinitions>_DEBUG;%(PreprocessorDefinitions)</PreprocessorDefinitions>
    </ClCompile>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition=\\"'$(Configuration)'=='Release'\\">
    <ClCompile>
      <PreprocessorDefinitions>NDEBUG;%(PreprocessorDefinitions)</PreprocessorDefinitions>
    </ClCompile>
  </ItemDefinitionGroup>
  <ItemGroup>
    <ClInclude Include=\\"ReactPackageProvider.h\\">
      <DependentUpon>ReactPackageProvider.idl</DependentUpon>
    </ClInclude>
    <ClInclude Include=\\"ReactNativeModule.h\\" />
    <ClInclude Include=\\"pch.h\\" />
  </ItemGroup>
  <ItemGroup>
    <ClCompile Include=\\"pch.cpp\\">
      <PrecompiledHeader>Create</PrecompiledHeader>
    </ClCompile>
    <ClCompile Include=\\"ReactPackageProvider.cpp\\">
      <DependentUpon>ReactPackageProvider.idl</DependentUpon>
    </ClCompile>
    <ClCompile Include=\\"$(GeneratedFilesDir)module.g.cpp\\" />
  </ItemGroup>
  <ItemGroup>
    <Midl Include=\\"ReactPackageProvider.idl\\" />
  </ItemGroup>
  <ItemGroup>
    <None Include=\\"packages.config\\" />
    <None Include=\\"PropertySheet.props\\" />
  </ItemGroup>
  <Import Project=\\"$(VCTargetsPath)\\\\Microsoft.Cpp.targets\\" />
  <ImportGroup Label=\\"ReactNativeWindowsTargets\\">
    <Import Project=\\"$(ReactNativeWindowsDir)\\\\PropertySheets\\\\External\\\\Microsoft.ReactNative.Uwp.CppLib.targets\\" Condition=\\"Exists('$(ReactNativeWindowsDir)\\\\PropertySheets\\\\External\\\\Microsoft.ReactNative.Uwp.CppLib.targets')\\" />
  </ImportGroup>
  <Target Name=\\"EnsureReactNativeWindowsTargets\\" BeforeTargets=\\"PrepareForBuild\\">
    <PropertyGroup>
      <ErrorText>This project references targets in your node_modules\\\\react-native-windows folder that are missing. The missing file is {0}.</ErrorText>
    </PropertyGroup>
    <Error Condition=\\"!Exists('$(ReactNativeWindowsDir)\\\\PropertySheets\\\\External\\\\Microsoft.ReactNative.Uwp.CppLib.props')\\" Text=\\"$([System.String]::Format('$(ErrorText)', '$(ReactNativeWindowsDir)\\\\PropertySheets\\\\External\\\\Microsoft.ReactNative.Uwp.CppLib.props'))\\" />
    <Error Condition=\\"!Exists('$(ReactNativeWindowsDir)\\\\PropertySheets\\\\External\\\\Microsoft.ReactNative.Uwp.CppLib.targets')\\" Text=\\"$([System.String]::Format('$(ErrorText)', '$(ReactNativeWindowsDir)\\\\PropertySheets\\\\External\\\\Microsoft.ReactNative.Uwp.CppLib.targets'))\\" />
  </Target>
  <ImportGroup Label=\\"ExtensionTargets\\">
    <Import Project=\\"$(SolutionDir)\\\\packages\\\\Microsoft.Windows.CppWinRT.2.0.210312.4\\\\build\\\\native\\\\Microsoft.Windows.CppWinRT.targets\\" Condition=\\"Exists('$(SolutionDir)\\\\packages\\\\Microsoft.Windows.CppWinRT.2.0.210312.4\\\\build\\\\native\\\\Microsoft.Windows.CppWinRT.targets')\\" />
    <Import Project=\\"$(SolutionDir)\\\\packages\\\\ReactNative.Hermes.Windows.0.9.0-ms.6\\\\build\\\\native\\\\ReactNative.Hermes.Windows.targets\\" Condition=\\"Exists('$(SolutionDir)\\\\packages\\\\ReactNative.Hermes.Windows.0.9.0-ms.6\\\\build\\\\native\\\\ReactNative.Hermes.Windows.targets')\\" />
    <Import Project=\\"$(SolutionDir)\\\\packages\\\\$(WinUIPackageName).$(WinUIPackageVersion)\\\\build\\\\native\\\\$(WinUIPackageName).targets\\" Condition=\\"Exists('$(SolutionDir)\\\\packages\\\\$(WinUIPackageName).$(WinUIPackageVersion)\\\\build\\\\native\\\\$(WinUIPackageName).targets')\\" />
  </ImportGroup>
  <Target Name=\\"EnsureNuGetPackageBuildImports\\" BeforeTargets=\\"PrepareForBuild\\">
    <PropertyGroup>
      <ErrorText>This project references NuGet package(s) that are missing on this computer. Use NuGet Package Restore to download them.  For more information, see http://go.microsoft.com/fwlink/?LinkID=322105. The missing file is {0}.</ErrorText>
    </PropertyGroup>
    <Error Condition=\\"!Exists('$(SolutionDir)\\\\packages\\\\Microsoft.Windows.CppWinRT.2.0.210312.4\\\\build\\\\native\\\\Microsoft.Windows.CppWinRT.props')\\" Text=\\"$([System.String]::Format('$(ErrorText)', '$(SolutionDir)\\\\packages\\\\Microsoft.Windows.CppWinRT.2.0.210312.4\\\\build\\\\native\\\\Microsoft.Windows.CppWinRT.props'))\\" />
    <Error Condition=\\"!Exists('$(SolutionDir)\\\\packages\\\\Microsoft.Windows.CppWinRT.2.0.210312.4\\\\build\\\\native\\\\Microsoft.Windows.CppWinRT.targets')\\" Text=\\"$([System.String]::Format('$(ErrorText)', '$(SolutionDir)\\\\packages\\\\Microsoft.Windows.CppWinRT.2.0.210312.4\\\\build\\\\native\\\\Microsoft.Windows.CppWinRT.targets'))\\" />
    <Error Condition=\\"!Exists('$(SolutionDir)\\\\packages\\\\ReactNative.Hermes.Windows.0.9.0-ms.6\\\\build\\\\native\\\\ReactNative.Hermes.Windows.targets')\\" Text=\\"$([System.String]::Format('$(ErrorText)', '$(SolutionDir)\\\\packages\\\\ReactNative.Hermes.Windows.0.9.0-ms.6\\\\build\\\\native\\\\ReactNative.Hermes.Windows.targets'))\\" />
    <Error Condition=\\"!Exists('$(SolutionDir)\\\\packages\\\\$(WinUIPackageName).$(WinUIPackageVersion)\\\\build\\\\native\\\\$(WinUIPackageName).targets')\\" Text=\\"$([System.String]::Format('$(ErrorText)', '$(SolutionDir)\\\\packages\\\\$(WinUIPackageName).$(WinUIPackageVersion)\\\\build\\\\native\\\\$(WinUIPackageName).targets'))\\" />
  </Target>
</Project>
"
`;

exports[`C++ Hermes Library: SnapshotApp.vcxproj.filters 1`] = `
"﻿<?xml version=\\"1.0\\" encoding=\\"utf-8\\"?>
<Project ToolsVersion=\\"Current\\" xmlns=\\"http://schemas.microsoft.com/developer/msbuild/2003\\">
  <ItemGroup>
    <Midl Include=\\"ReactPackageProvider.idl\\" />
  </ItemGroup>
  <ItemGroup>
    <ClCompile Include=\\"pch.cpp\\" />
    <ClCompile Include=\\"$(GeneratedFilesDir)module.g.cpp\\" />
    <ClCompile Include=\\"ReactPackageProvider.cpp\\" />
  </ItemGroup>
  <ItemGroup>
    <ClInclude Include=\\"pch.h\\" />
    <ClInclude Include=\\"ReactPackageProvider.h\\" />
    <ClInclude Include=\\"ReactNativeModule.h\\" />
  </ItemGroup>
  <ItemGroup>
    <None Include=\\"PropertySheet.props\\" />
    <None Include=\\"packages.config\\" />
  </ItemGroup>
</Project>"
`;

exports[`C++ Hermes Library: packages.config 1`] = `
"﻿<?xml version=\\"1.0\\" encoding=\\"utf-8\\"?>
<packages>
  <package id=\\"Microsoft.Windows.CppWinRT\\" version=\\"2.0.210312.4\\" targetFramework=\\"native\\" />
  <package id=\\"ReactNative.Hermes.Windows\\" version=\\"0.9.0-ms.6\\" targetFramework=\\"native\\" />
  <package id=\\"Microsoft.UI.Xaml\\" version=\\"2.7.0\\" targetFramework=\\"native\\" />
</packages>"
`;

exports[`C++ Hermes Library: pch.cpp 1`] = `
"﻿#include \\"pch.h\\"
"
`;

exports[`C++ Hermes Library: pch.h 1`] = `
"#pragma once

#define NOMINMAX

#include <hstring.h>
#include <restrictederrorinfo.h>
#include <unknwn.h>
#include <windows.h>
#include <CppWinRTIncludes.h>
#if __has_include(<VersionMacros.h>)
  #include <VersionMacros.h>
#endif

#include <winrt/Microsoft.ReactNative.h>

#include <winrt/Microsoft.UI.Xaml.Automation.Peers.h>
#include <winrt/Microsoft.UI.Xaml.Controls.Primitives.h>
#include <winrt/Microsoft.UI.Xaml.Controls.h>
#include <winrt/Microsoft.UI.Xaml.Media.h>
#include <winrt/Microsoft.UI.Xaml.XamlTypeInfo.h>
using namespace winrt::Windows::Foundation;
"
`;

exports[`C++ NuGet Application: App.cpp 1`] = `
"#include \\"pch.h\\"

#include \\"App.h\\"

#include \\"AutolinkedNativeModules.g.h\\"
#include \\"ReactPackageProvider.h\\"

using namespace winrt;
using namespace xaml;
using namespace xaml::Controls;
using namespace xaml::Navigation;

using namespace Windows::ApplicationModel;
namespace winrt::SnapshotApp::implementation
{
/// <summary>
/// Initializes the singleton application object.  This is the first line of
/// authored code executed, and as such is the logical equivalent of main() or
/// WinMain().
/// </summary>
App::App() noexcept
{
#if BUNDLE
    JavaScriptBundleFile(L\\"index.windows\\");
    InstanceSettings().UseWebDebugger(false);
    InstanceSettings().UseFastRefresh(false);
#else
    JavaScriptBundleFile(L\\"index\\");
    InstanceSettings().UseWebDebugger(true);
    InstanceSettings().UseFastRefresh(true);
#endif

#if _DEBUG
    InstanceSettings().UseDeveloperSupport(true);
#else
    InstanceSettings().UseDeveloperSupport(false);
#endif

    RegisterAutolinkedNativeModulePackages(PackageProviders()); // Includes any autolinked modules

    PackageProviders().Append(make<ReactPackageProvider>()); // Includes all modules in this project

    InitializeComponent();
}

/// <summary>
/// Invoked when the application is launched normally by the end user.  Other entry points
/// will be used such as when the application is launched to open a specific file.
/// </summary>
/// <param name=\\"e\\">Details about the launch request and process.</param>
void App::OnLaunched(activation::LaunchActivatedEventArgs const& e)
{
    super::OnLaunched(e);

    Frame rootFrame = Window::Current().Content().as<Frame>();
    rootFrame.Navigate(xaml_typename<MainPage>(), box_value(e.Arguments()));
}

/// <summary>
/// Invoked when the application is activated by some means other than normal launching.
/// </summary>
void App::OnActivated(Activation::IActivatedEventArgs const &e) {
  auto preActivationContent = Window::Current().Content();
  super::OnActivated(e);
  if (!preActivationContent && Window::Current()) {
    Frame rootFrame = Window::Current().Content().as<Frame>();
    rootFrame.Navigate(xaml_typename<MainPage>(), nullptr);
  }
}

/// <summary>
/// Invoked when application execution is being suspended.  Application state is saved
/// without knowing whether the application will be terminated or resumed with the contents
/// of memory still intact.
/// </summary>
/// <param name=\\"sender\\">The source of the suspend request.</param>
/// <param name=\\"e\\">Details about the suspend request.</param>
void App::OnSuspending([[maybe_unused]] IInspectable const& sender, [[maybe_unused]] SuspendingEventArgs const& e)
{
    // Save application state and stop any background activity
}

/// <summary>
/// Invoked when Navigation to a certain page fails
/// </summary>
/// <param name=\\"sender\\">The Frame which failed navigation</param>
/// <param name=\\"e\\">Details about the navigation failure</param>
void App::OnNavigationFailed(IInspectable const&, NavigationFailedEventArgs const& e)
{
    throw hresult_error(E_FAIL, hstring(L\\"Failed to load Page \\") + e.SourcePageType().Name);
}

} // namespace winrt::SnapshotApp::implementation
"
`;

exports[`C++ NuGet Application: App.h 1`] = `
"#pragma once

#include \\"App.xaml.g.h\\"

#include <CppWinRTIncludes.h>

#ifdef USE_WINUI3
namespace activation = winrt::Microsoft::UI::Xaml;
#else
namespace activation = winrt::Windows::ApplicationModel::Activation;
#endif

namespace winrt::SnapshotApp::implementation
{
    struct App : AppT<App>
    {
        App() noexcept;
        void OnLaunched(activation::LaunchActivatedEventArgs const&);
        void OnActivated(Windows::ApplicationModel::Activation::IActivatedEventArgs const &e);
        void OnSuspending(IInspectable const&, Windows::ApplicationModel::SuspendingEventArgs const&);
        void OnNavigationFailed(IInspectable const&, xaml::Navigation::NavigationFailedEventArgs const&);
      private:
        using super = AppT<App>;
    };
} // namespace winrt::SnapshotApp::implementation
"
`;

exports[`C++ NuGet Application: App.idl 1`] = `
"namespace SnapshotApp
{
}
"
`;

exports[`C++ NuGet Application: App.xaml 1`] = `
"﻿<react:ReactApplication
    x:Class=\\"SnapshotApp.App\\"
    xmlns=\\"http://schemas.microsoft.com/winfx/2006/xaml/presentation\\"
    xmlns:x=\\"http://schemas.microsoft.com/winfx/2006/xaml\\"
    xmlns:local=\\"using:SnapshotApp\\"
    xmlns:react=\\"using:Microsoft.ReactNative\\">
    <Application.Resources>
        <XamlControlsResources xmlns=\\"using:Microsoft.UI.Xaml.Controls\\" />
    </Application.Resources>
</react:ReactApplication>
"
`;

exports[`C++ NuGet Application: AutolinkedNativeModules.g.cpp 1`] = `
"// AutolinkedNativeModules.g.cpp contents generated by \\"react-native autolink-windows\\"
// clang-format off
#include \\"pch.h\\"
#include \\"AutolinkedNativeModules.g.h\\"

namespace winrt::Microsoft::ReactNative
{

void RegisterAutolinkedNativeModulePackages(winrt::Windows::Foundation::Collections::IVector<winrt::Microsoft::ReactNative::IReactPackageProvider> const& packageProviders)
{ 
    UNREFERENCED_PARAMETER(packageProviders);
}

}
"
`;

exports[`C++ NuGet Application: AutolinkedNativeModules.g.h 1`] = `
"// AutolinkedNativeModules.g.h contents generated by \\"react-native autolink-windows\\"
// clang-format off
#pragma once

namespace winrt::Microsoft::ReactNative
{

void RegisterAutolinkedNativeModulePackages(winrt::Windows::Foundation::Collections::IVector<winrt::Microsoft::ReactNative::IReactPackageProvider> const& packageProviders);

}
"
`;

exports[`C++ NuGet Application: AutolinkedNativeModules.g.props 1`] = `
"<?xml version=\\"1.0\\" encoding=\\"utf-8\\"?>
<Project xmlns=\\"http://schemas.microsoft.com/developer/msbuild/2003\\">
  <!-- AutolinkedNativeModules.g.props contents generated by \\"react-native autolink-windows\\" -->
  <PropertyGroup>
  </PropertyGroup>
</Project>
"
`;

exports[`C++ NuGet Application: AutolinkedNativeModules.g.targets 1`] = `
"<?xml version=\\"1.0\\" encoding=\\"utf-8\\"?>
<Project xmlns=\\"http://schemas.microsoft.com/developer/msbuild/2003\\">
  <!-- AutolinkedNativeModules.g.targets contents generated by \\"react-native autolink-windows\\" -->
  <ItemGroup>
  </ItemGroup>
</Project>
"
`;

exports[`C++ NuGet Application: ExperimentalFeatures.props 1`] = `
"<?xml version=\\"1.0\\" encoding=\\"utf-8\\"?>
<Project xmlns=\\"http://schemas.microsoft.com/developer/msbuild/2003\\">

  <!--
    This file contains some important settings that will apply globally for
    your app and *all* native modules your app consumes. These values were
    set when you created the app project, and in some cases cannot be
    simply changed here without recreating a new project.
  -->

  <PropertyGroup Label=\\"Microsoft.ReactNative Experimental Features\\">
    <!--
      Enables default usage of Hermes.
      
      See https://microsoft.github.io/react-native-windows/docs/hermes
    -->
    <UseHermes>false</UseHermes>

    <!--
      Changes compilation to assume use of WinUI 3 instead of System XAML.
      Requires creation of new project.

      See https://microsoft.github.io/react-native-windows/docs/winui3
    -->
    <UseWinUI3>false</UseWinUI3>

    <!--
      Changes compilation to assume use of Microsoft.ReactNative NuGet packages
      instead of building the framework from source.
      Requires creation of new project.

      See https://microsoft.github.io/react-native-windows/docs/nuget
    -->
    <UseExperimentalNuget>true</UseExperimentalNuget>
  
  </PropertyGroup>

</Project>
"
`;

exports[`C++ NuGet Application: MainPage.cpp 1`] = `
"﻿#include \\"pch.h\\"
#include \\"MainPage.h\\"
#if __has_include(\\"MainPage.g.cpp\\")
#include \\"MainPage.g.cpp\\"
#endif

#include \\"App.h\\"

using namespace winrt;
using namespace xaml;

namespace winrt::SnapshotApp::implementation
{
    MainPage::MainPage()
    {
        InitializeComponent();
        auto app = Application::Current().as<App>();
        ReactRootView().ReactNativeHost(app->Host());
    }
}
"
`;

exports[`C++ NuGet Application: MainPage.h 1`] = `
"﻿#pragma once
#include \\"MainPage.g.h\\"
#include <winrt/Microsoft.ReactNative.h>

namespace winrt::SnapshotApp::implementation
{
    struct MainPage : MainPageT<MainPage>
    {
        MainPage();
    };
}

namespace winrt::SnapshotApp::factory_implementation
{
    struct MainPage : MainPageT<MainPage, implementation::MainPage>
    {
    };
}

"
`;

exports[`C++ NuGet Application: MainPage.idl 1`] = `
"#include \\"NamespaceRedirect.h\\"

namespace SnapshotApp
{
    [default_interface]
    runtimeclass MainPage : XAML_NAMESPACE.Controls.Page
    {
        MainPage();
    }
}
"
`;

exports[`C++ NuGet Application: MainPage.xaml 1`] = `
"<Page
    x:Class=\\"SnapshotApp.MainPage\\"
    xmlns=\\"http://schemas.microsoft.com/winfx/2006/xaml/presentation\\"
    xmlns:x=\\"http://schemas.microsoft.com/winfx/2006/xaml\\"
    xmlns:local=\\"using:SnapshotApp\\"
    xmlns:react=\\"using:Microsoft.ReactNative\\"
    xmlns:d=\\"http://schemas.microsoft.com/expression/blend/2008\\"
    xmlns:mc=\\"http://schemas.openxmlformats.org/markup-compatibility/2006\\"
    mc:Ignorable=\\"d\\"
    Background=\\"{ThemeResource ApplicationPageBackgroundThemeBrush}\\">
    <react:ReactRootView 
        x:Name=\\"ReactRootView\\"
        ComponentName=\\"SnapshotApp\\"
        Background=\\"{ThemeResource ApplicationPageBackgroundThemeBrush}\\"
        MinHeight=\\"400\\"/>
</Page>
"
`;

exports[`C++ NuGet Application: NuGet.Config 1`] = `
"<?xml version=\\"1.0\\" encoding=\\"utf-8\\"?>
<configuration>
  <config>
    <add key=\\"repositoryPath\\" value=\\"packages\\" />
  </config>
  <packageSources>
    <clear />
    <add key=\\"react-native\\" value=\\"https://pkgs.dev.azure.com/ms/react-native/_packaging/react-native-public/nuget/v3/index.json\\" />
    <add key=\\"Nuget.org\\" value=\\"https://api.nuget.org/v3/index.json\\" />
  </packageSources>
  <disabledPackageSources>
    <clear />
  </disabledPackageSources>  
</configuration>
"
`;

exports[`C++ NuGet Application: Package.appxmanifest 1`] = `
"﻿<?xml version=\\"1.0\\" encoding=\\"utf-8\\"?>

<Package
  xmlns=\\"http://schemas.microsoft.com/appx/manifest/foundation/windows10\\"
  xmlns:mp=\\"http://schemas.microsoft.com/appx/2014/phone/manifest\\"
  xmlns:uap=\\"http://schemas.microsoft.com/appx/manifest/uap/windows10\\"
  IgnorableNamespaces=\\"uap mp\\">

  <Identity
    Name=\\"3e84bf52-f378-4835-a929-57eb247be68a\\"
    Publisher=\\"CN=nickg\\"
    Version=\\"1.0.0.0\\" />

  <mp:PhoneIdentity PhoneProductId=\\"3e84bf52-f378-4835-a929-57eb247be68a\\" PhonePublisherId=\\"00000000-0000-0000-0000-000000000000\\"/>

  <Properties>
    <DisplayName>SnapshotApp</DisplayName>
    <PublisherDisplayName>nickg</PublisherDisplayName>
    <Logo>Assets\\\\StoreLogo.png</Logo>
  </Properties>

  <Dependencies>
    <TargetDeviceFamily Name=\\"Windows.Universal\\" MinVersion=\\"10.0.0.0\\" MaxVersionTested=\\"10.0.0.0\\" />
  </Dependencies>

  <Resources>
    <Resource Language=\\"x-generate\\"/>
  </Resources>

  <Applications>
    <Application
      Id=\\"App\\"
      Executable=\\"$targetnametoken$.exe\\"
      EntryPoint=\\"SnapshotApp.App\\">
      <uap:VisualElements
        DisplayName=\\"SnapshotApp\\"
        Square150x150Logo=\\"Assets\\\\Square150x150Logo.png\\"
        Square44x44Logo=\\"Assets\\\\Square44x44Logo.png\\"
        Description=\\"SnapshotApp\\"
        BackgroundColor=\\"transparent\\">
        <uap:DefaultTile Wide310x150Logo=\\"Assets\\\\Wide310x150Logo.png\\"/>
        <uap:SplashScreen Image=\\"Assets\\\\SplashScreen.png\\" />
      </uap:VisualElements>
    </Application>
  </Applications>

  <Capabilities>
    <Capability Name=\\"internetClient\\" />
  </Capabilities>
</Package>"
`;

exports[`C++ NuGet Application: PropertySheet.props 1`] = `
"<?xml version=\\"1.0\\" encoding=\\"utf-8\\"?>
<Project ToolsVersion=\\"Current\\" xmlns=\\"http://schemas.microsoft.com/developer/msbuild/2003\\">
  <ImportGroup Label=\\"PropertySheets\\" />
  <PropertyGroup Label=\\"UserMacros\\" />
  <!--
    To customize common C++/WinRT project properties:
    * right-click the project node
    * expand the Common Properties item
    * select the C++/WinRT property page

    For more advanced scenarios, and complete documentation, please see:
    https://github.com/Microsoft/xlang/tree/master/src/package/cppwinrt/nuget
    -->
  <PropertyGroup />
  <ItemDefinitionGroup />
</Project>"
`;

exports[`C++ NuGet Application: ReactPackageProvider.cpp 1`] = `
"#include \\"pch.h\\"
#include \\"ReactPackageProvider.h\\"
#include \\"NativeModules.h\\"

using namespace winrt::Microsoft::ReactNative;

namespace winrt::SnapshotApp::implementation
{

void ReactPackageProvider::CreatePackage(IReactPackageBuilder const &packageBuilder) noexcept
{
    AddAttributedModules(packageBuilder);
}

} // namespace winrt::SnapshotApp::implementation
"
`;

exports[`C++ NuGet Application: ReactPackageProvider.h 1`] = `
"#pragma once

#include \\"winrt/Microsoft.ReactNative.h\\"

namespace winrt::SnapshotApp::implementation
{
    struct ReactPackageProvider : winrt::implements<ReactPackageProvider, winrt::Microsoft::ReactNative::IReactPackageProvider>
    {
    public: // IReactPackageProvider
        void CreatePackage(winrt::Microsoft::ReactNative::IReactPackageBuilder const &packageBuilder) noexcept;
    };
} // namespace winrt::SnapshotApp::implementation

"
`;

exports[`C++ NuGet Application: SnapshotApp.sln 1`] = `
"﻿
Microsoft Visual Studio Solution File, Format Version 12.00
# Visual Studio Version 16
VisualStudioVersion = 16.0.29215.179
MinimumVisualStudioVersion = 10.0.40219.1
Project(\\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\\") = \\"SnapshotApp\\", \\"SnapshotApp\\\\SnapshotApp.vcxproj\\", \\"{D478835E-27E8-4F5A-8B90-930AF257684F}\\"
EndProject
Global
	GlobalSection(SolutionConfigurationPlatforms) = preSolution
		Debug|ARM64 = Debug|ARM64
		Debug|x64 = Debug|x64
		Debug|x86 = Debug|x86
		Release|ARM64 = Release|ARM64
		Release|x64 = Release|x64
		Release|x86 = Release|x86
	EndGlobalSection
	GlobalSection(ProjectConfigurationPlatforms) = postSolution
		{D478835E-27E8-4F5A-8B90-930AF257684F}.Debug|ARM64.ActiveCfg = Debug|ARM64
		{D478835E-27E8-4F5A-8B90-930AF257684F}.Debug|ARM64.Build.0 = Debug|ARM64
		{D478835E-27E8-4F5A-8B90-930AF257684F}.Debug|ARM64.Deploy.0 = Debug|ARM64
		{D478835E-27E8-4F5A-8B90-930AF257684F}.Debug|x64.ActiveCfg = Debug|x64
		{D478835E-27E8-4F5A-8B90-930AF257684F}.Debug|x64.Build.0 = Debug|x64
		{D478835E-27E8-4F5A-8B90-930AF257684F}.Debug|x64.Deploy.0 = Debug|x64
		{D478835E-27E8-4F5A-8B90-930AF257684F}.Debug|x86.ActiveCfg = Debug|Win32
		{D478835E-27E8-4F5A-8B90-930AF257684F}.Debug|x86.Build.0 = Debug|Win32
		{D478835E-27E8-4F5A-8B90-930AF257684F}.Debug|x86.Deploy.0 = Debug|Win32
		{D478835E-27E8-4F5A-8B90-930AF257684F}.Release|ARM64.ActiveCfg = Release|ARM64
		{D478835E-27E8-4F5A-8B90-930AF257684F}.Release|ARM64.Build.0 = Release|ARM64
		{D478835E-27E8-4F5A-8B90-930AF257684F}.Release|ARM64.Deploy.0 = Release|ARM64
		{D478835E-27E8-4F5A-8B90-930AF257684F}.Release|x64.ActiveCfg = Release|x64
		{D478835E-27E8-4F5A-8B90-930AF257684F}.Release|x64.Build.0 = Release|x64
		{D478835E-27E8-4F5A-8B90-930AF257684F}.Release|x64.Deploy.0 = Release|x64
		{D478835E-27E8-4F5A-8B90-930AF257684F}.Release|x86.ActiveCfg = Release|Win32
		{D478835E-27E8-4F5A-8B90-930AF257684F}.Release|x86.Build.0 = Release|Win32
		{D478835E-27E8-4F5A-8B90-930AF257684F}.Release|x86.Deploy.0 = Release|Win32
	EndGlobalSection
	GlobalSection(SolutionProperties) = preSolution
		HideSolutionNode = FALSE
	EndGlobalSection
	GlobalSection(ExtensibilityGlobals) = postSolution
		SolutionGuid = {D43FAD39-F619-437D-BB40-04A3982ACB6A}
	EndGlobalSection
EndGlobal
"
`;

exports[`C++ NuGet Application: SnapshotApp.vcxproj 1`] = `
"<?xml version=\\"1.0\\" encoding=\\"utf-8\\"?>
<Project ToolsVersion=\\"Current\\" DefaultTargets=\\"Build\\" xmlns=\\"http://schemas.microsoft.com/developer/msbuild/2003\\">
  <Import Project=\\"$(SolutionDir)\\\\ExperimentalFeatures.props\\" Condition=\\"Exists('$(SolutionDir)\\\\ExperimentalFeatures.props')\\" />
  <Import Project=\\"..\\\\packages\\\\Microsoft.Windows.CppWinRT.2.0.210312.4\\\\build\\\\native\\\\Microsoft.Windows.CppWinRT.props\\" Condition=\\"Exists('..\\\\packages\\\\Microsoft.Windows.CppWinRT.2.0.210312.4\\\\build\\\\native\\\\Microsoft.Windows.CppWinRT.props')\\" />
  <PropertyGroup Label=\\"Globals\\">
    <CppWinRTOptimized>true</CppWinRTOptimized>
    <CppWinRTRootNamespaceAutoMerge>true</CppWinRTRootNamespaceAutoMerge>
    <MinimalCoreWin>true</MinimalCoreWin>
    <ProjectGuid>{d478835e-27e8-4f5a-8b90-930af257684f}</ProjectGuid>
    <ProjectName>SnapshotApp</ProjectName>
    <RootNamespace>SnapshotApp</RootNamespace>
    <DefaultLanguage>en-US</DefaultLanguage>
    <MinimumVisualStudioVersion>16.0</MinimumVisualStudioVersion>
    <AppContainerApplication>true</AppContainerApplication>
    <ApplicationType>Windows Store</ApplicationType>
    <ApplicationTypeRevision>10.0</ApplicationTypeRevision>
  </PropertyGroup>
  <PropertyGroup Label=\\"ReactNativeWindowsProps\\">
    <ReactNativeWindowsDir Condition=\\"'$(ReactNativeWindowsDir)' == ''\\">$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), 'node_modules\\\\react-native-windows\\\\package.json'))\\\\node_modules\\\\react-native-windows\\\\</ReactNativeWindowsDir>
  </PropertyGroup>
  <Import Project=\\"$(ReactNativeWindowsDir)\\\\PropertySheets\\\\External\\\\Microsoft.ReactNative.WindowsSdk.Default.props\\" />
  <Import Project=\\"$(VCTargetsPath)\\\\Microsoft.Cpp.Default.props\\" />
  <ItemGroup Label=\\"ProjectConfigurations\\">
    <ProjectConfiguration Include=\\"Debug|ARM64\\">
      <Configuration>Debug</Configuration>
      <Platform>ARM64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include=\\"Debug|Win32\\">
      <Configuration>Debug</Configuration>
      <Platform>Win32</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include=\\"Debug|x64\\">
      <Configuration>Debug</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include=\\"Release|ARM64\\">
      <Configuration>Release</Configuration>
      <Platform>ARM64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include=\\"Release|Win32\\">
      <Configuration>Release</Configuration>
      <Platform>Win32</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include=\\"Release|x64\\">
      <Configuration>Release</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
  </ItemGroup>
  <PropertyGroup Label=\\"Configuration\\">
    <ConfigurationType>Application</ConfigurationType>
    <CharacterSet>Unicode</CharacterSet>
  </PropertyGroup>
  <PropertyGroup Condition=\\"'$(Configuration)'=='Debug'\\" Label=\\"Configuration\\">
    <UseDebugLibraries>true</UseDebugLibraries>
    <LinkIncremental>true</LinkIncremental>
  </PropertyGroup>
  <PropertyGroup Condition=\\"'$(Configuration)'=='Release'\\" Label=\\"Configuration\\">
    <UseDebugLibraries>false</UseDebugLibraries>
    <WholeProgramOptimization>true</WholeProgramOptimization>
    <LinkIncremental>false</LinkIncremental>
  </PropertyGroup>
  <Import Project=\\"$(VCTargetsPath)\\\\Microsoft.Cpp.props\\" />
  <ImportGroup Label=\\"ExtensionSettings\\"></ImportGroup>
  <ImportGroup Label=\\"PropertySheets\\">
    <Import Project=\\"$(UserRootDir)\\\\Microsoft.Cpp.$(Platform).user.props\\" Condition=\\"exists('$(UserRootDir)\\\\Microsoft.Cpp.$(Platform).user.props')\\" Label=\\"LocalAppDataPlatform\\" />
  </ImportGroup>
  <ImportGroup Label=\\"PropertySheets\\">
    <Import Project=\\"PropertySheet.props\\" />
  </ImportGroup>
  <ImportGroup Label=\\"ReactNativeWindowsPropertySheets\\">
    <Import Project=\\"$(ReactNativeWindowsDir)\\\\PropertySheets\\\\external\\\\Microsoft.ReactNative.Uwp.CppApp.props\\" Condition=\\"Exists('$(ReactNativeWindowsDir)\\\\PropertySheets\\\\External\\\\Microsoft.ReactNative.Uwp.CppApp.props')\\" />
    <Import Project=\\"..\\\\packages\\\\$(WinUIPackageProps)\\" Condition=\\"'$(WinUIPackageProps)'!='' And Exists('..\\\\packages\\\\$(WinUIPackageProps)')\\" />
  </ImportGroup>
  <PropertyGroup Label=\\"UserMacros\\" />
  <ItemDefinitionGroup>
    <ClCompile>
      <PrecompiledHeader>Use</PrecompiledHeader>
      <PrecompiledHeaderFile>pch.h</PrecompiledHeaderFile>
      <PrecompiledHeaderOutputFile>$(IntDir)pch.pch</PrecompiledHeaderOutputFile>
      <WarningLevel>Level4</WarningLevel>
      <AdditionalOptions>%(AdditionalOptions) /bigobj</AdditionalOptions>
      <DisableSpecificWarnings>4453;28204</DisableSpecificWarnings>
    </ClCompile>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition=\\"'$(Configuration)'=='Debug'\\">
    <ClCompile>
      <PreprocessorDefinitions>_DEBUG;%(PreprocessorDefinitions)</PreprocessorDefinitions>
    </ClCompile>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition=\\"'$(Configuration)'=='Release'\\">
    <ClCompile>
      <PreprocessorDefinitions>NDEBUG;%(PreprocessorDefinitions)</PreprocessorDefinitions>
    </ClCompile>
  </ItemDefinitionGroup>
  <ItemGroup>
    <ClInclude Include=\\"MainPage.h\\">
      <DependentUpon>MainPage.xaml</DependentUpon>
      <SubType>Code</SubType>
    </ClInclude>
    <ClInclude Include=\\"ReactPackageProvider.h\\" />
    <ClInclude Include=\\"AutolinkedNativeModules.g.h\\" />
    <ClInclude Include=\\"pch.h\\" />
    <ClInclude Include=\\"App.h\\">
      <DependentUpon>App.xaml</DependentUpon>
    </ClInclude>
  </ItemGroup>
  <ItemGroup>
    <ApplicationDefinition Include=\\"App.xaml\\">
      <SubType>Designer</SubType>
    </ApplicationDefinition>
  </ItemGroup>
  <ItemGroup>
    <AppxManifest Include=\\"Package.appxmanifest\\">
      <SubType>Designer</SubType>
    </AppxManifest>
  </ItemGroup>
  <ItemGroup>
    <Image Include=\\"Assets\\\\LockScreenLogo.scale-200.png\\" />
    <Image Include=\\"Assets\\\\SplashScreen.scale-200.png\\" />
    <Image Include=\\"Assets\\\\Square150x150Logo.scale-200.png\\" />
    <Image Include=\\"Assets\\\\Square44x44Logo.scale-200.png\\" />
    <Image Include=\\"Assets\\\\Square44x44Logo.targetsize-24_altform-unplated.png\\" />
    <Image Include=\\"Assets\\\\StoreLogo.png\\" />
    <Image Include=\\"Assets\\\\Wide310x150Logo.scale-200.png\\" />
  </ItemGroup>
  <ItemGroup>
    <ClCompile Include=\\"MainPage.cpp\\">
      <DependentUpon>MainPage.xaml</DependentUpon>
      <SubType>Code</SubType>
    </ClCompile>
    <ClCompile Include=\\"ReactPackageProvider.cpp\\" />
    <ClCompile Include=\\"AutolinkedNativeModules.g.cpp\\" />
    <ClCompile Include=\\"pch.cpp\\">
      <PrecompiledHeader>Create</PrecompiledHeader>
    </ClCompile>
    <ClCompile Include=\\"App.cpp\\">
      <DependentUpon>App.xaml</DependentUpon>
    </ClCompile>
    <ClCompile Include=\\"$(GeneratedFilesDir)module.g.cpp\\" />
  </ItemGroup>
  <ItemGroup>
    <Midl Include=\\"App.idl\\">
      <DependentUpon>App.xaml</DependentUpon>
    </Midl>
    <Midl Include=\\"MainPage.idl\\">
      <DependentUpon>MainPage.xaml</DependentUpon>
      <SubType>Code</SubType>
    </Midl>
  </ItemGroup>
  <ItemGroup>
    <None Include=\\"packages.config\\" />
    <None Include=\\"PropertySheet.props\\" />
    <Text Include=\\"readme.txt\\">
      <DeploymentContent>false</DeploymentContent>
    </Text>
  </ItemGroup>
  <ItemGroup>
    <Page Include=\\"MainPage.xaml\\">
      <SubType>Designer</SubType>
    </Page>
  </ItemGroup>
  <Import Project=\\"$(VCTargetsPath)\\\\Microsoft.Cpp.targets\\" />
  <ImportGroup Label=\\"ReactNativeWindowsTargets\\">
    <Import Project=\\"$(ReactNativeWindowsDir)\\\\PropertySheets\\\\External\\\\Microsoft.ReactNative.Uwp.CppApp.targets\\" Condition=\\"Exists('$(ReactNativeWindowsDir)\\\\PropertySheets\\\\External\\\\Microsoft.ReactNative.Uwp.CppApp.targets')\\" />
  </ImportGroup>
  <Target Name=\\"EnsureReactNativeWindowsTargets\\" BeforeTargets=\\"PrepareForBuild\\">
    <PropertyGroup>
      <ErrorText>This project references targets in your node_modules\\\\react-native-windows folder that are missing. The missing file is {0}.</ErrorText>
    </PropertyGroup>
    <Error Condition=\\"!Exists('$(ReactNativeWindowsDir)\\\\PropertySheets\\\\External\\\\Microsoft.ReactNative.Uwp.CppApp.props')\\" Text=\\"$([System.String]::Format('$(ErrorText)', '$(ReactNativeWindowsDir)\\\\PropertySheets\\\\External\\\\Microsoft.ReactNative.Uwp.CppApp.props'))\\" />
    <Error Condition=\\"!Exists('$(ReactNativeWindowsDir)\\\\PropertySheets\\\\External\\\\Microsoft.ReactNative.Uwp.CppApp.targets')\\" Text=\\"$([System.String]::Format('$(ErrorText)', '$(ReactNativeWindowsDir)\\\\PropertySheets\\\\External\\\\Microsoft.ReactNative.Uwp.CppApp.targets'))\\" />
  </Target>
  <ImportGroup Label=\\"ExtensionTargets\\">
    <Import Project=\\"..\\\\packages\\\\Microsoft.Windows.CppWinRT.2.0.210312.4\\\\build\\\\native\\\\Microsoft.Windows.CppWinRT.targets\\" Condition=\\"Exists('..\\\\packages\\\\Microsoft.Windows.CppWinRT.2.0.210312.4\\\\build\\\\native\\\\Microsoft.Windows.CppWinRT.targets')\\" />
    <Import Project=\\"..\\\\packages\\\\ReactNative.Hermes.Windows.0.9.0-ms.6\\\\build\\\\native\\\\ReactNative.Hermes.Windows.targets\\" Condition=\\"Exists('..\\\\packages\\\\ReactNative.Hermes.Windows.0.9.0-ms.6\\\\build\\\\native\\\\ReactNative.Hermes.Windows.targets')\\" />
    <Import Project=\\"..\\\\packages\\\\Microsoft.ReactNative.0.0.0-canary.409\\\\build\\\\native\\\\Microsoft.ReactNative.targets\\" Condition=\\"Exists('..\\\\packages\\\\Microsoft.ReactNative.0.0.0-canary.409\\\\build\\\\native\\\\Microsoft.ReactNative.targets')\\" />
    <Import Project=\\"..\\\\packages\\\\Microsoft.ReactNative.Cxx.0.0.0-canary.409\\\\build\\\\native\\\\Microsoft.ReactNative.Cxx.targets\\" Condition=\\"Exists('..\\\\packages\\\\Microsoft.ReactNative.Cxx.0.0.0-canary.409\\\\build\\\\native\\\\Microsoft.ReactNative.Cxx.targets')\\" />
    <Import Project=\\"..\\\\packages\\\\$(WinUIPackageName).$(WinUIPackageVersion)\\\\build\\\\native\\\\$(WinUIPackageName).targets\\" Condition=\\"Exists('..\\\\packages\\\\$(WinUIPackageName).$(WinUIPackageVersion)\\\\build\\\\native\\\\$(WinUIPackageName).targets')\\" />
  </ImportGroup>
  <Target Name=\\"EnsureNuGetPackageBuildImports\\" BeforeTargets=\\"PrepareForBuild\\">
    <PropertyGroup>
      <ErrorText>This project references NuGet package(s) that are missing on this computer. Use NuGet Package Restore to download them.  For more information, see http://go.microsoft.com/fwlink/?LinkID=322105. The missing file is {0}.</ErrorText>
    </PropertyGroup>
    <Error Condition=\\"!Exists('..\\\\packages\\\\Microsoft.Windows.CppWinRT.2.0.210312.4\\\\build\\\\native\\\\Microsoft.Windows.CppWinRT.props')\\" Text=\\"$([System.String]::Format('$(ErrorText)', '..\\\\packages\\\\Microsoft.Windows.CppWinRT.2.0.210312.4\\\\build\\\\native\\\\Microsoft.Windows.CppWinRT.props'))\\" />
    <Error Condition=\\"!Exists('..\\\\packages\\\\Microsoft.Windows.CppWinRT.2.0.210312.4\\\\build\\\\native\\\\Microsoft.Windows.CppWinRT.targets')\\" Text=\\"$([System.String]::Format('$(ErrorText)', '..\\\\packages\\\\Microsoft.Windows.CppWinRT.2.0.210312.4\\\\build\\\\native\\\\Microsoft.Windows.CppWinRT.targets'))\\" />
    <Error Condition=\\"!Exists('..\\\\packages\\\\ReactNative.Hermes.Windows.0.9.0-ms.6\\\\build\\\\native\\\\ReactNative.Hermes.Windows.targets')\\" Text=\\"$([System.String]::Format('$(ErrorText)', '..\\\\packages\\\\ReactNative.Hermes.Windows.0.9.0-ms.6\\\\build\\\\native\\\\ReactNative.Hermes.Windows.targets'))\\" />
    <Error Condition=\\"!Exists('..\\\\packages\\\\Microsoft.ReactNative.0.0.0-canary.409\\\\build\\\\native\\\\Microsoft.ReactNative.targets')\\" Text=\\"$([System.String]::Format('$(ErrorText)', '..\\\\packages\\\\Microsoft.ReactNative.0.0.0-canary.409\\\\build\\\\native\\\\Microsoft.ReactNative.targets'))\\" />
    <Error Condition=\\"!Exists('..\\\\packages\\\\Microsoft.ReactNative.Cxx.0.0.0-canary.409\\\\build\\\\native\\\\Microsoft.ReactNative.Cxx.targets')\\" Text=\\"$([System.String]::Format('$(ErrorText)', '..\\\\packages\\\\Microsoft.ReactNative.Cxx.0.0.0-canary.409\\\\build\\\\native\\\\Microsoft.ReactNative.Cxx.targets'))\\" />
    <Error Condition=\\"!Exists('..\\\\packages\\\\$(WinUIPackageName).$(WinUIPackageVersion)\\\\build\\\\native\\\\$(WinUIPackageName).targets')\\" Text=\\"$([System.String]::Format('$(ErrorText)', '..\\\\packages\\\\$(WinUIPackageName).$(WinUIPackageVersion)\\\\build\\\\native\\\\$(WinUIPackageName).targets'))\\" />
  </Target>
</Project>
"
`;

exports[`C++ NuGet Application: SnapshotApp.vcxproj.filters 1`] = `
"﻿<?xml version=\\"1.0\\" encoding=\\"utf-8\\"?>
<Project ToolsVersion=\\"Current\\" xmlns=\\"http://schemas.microsoft.com/developer/msbuild/2003\\">
  <ItemGroup>
    <ApplicationDefinition Include=\\"App.xaml\\" />
  </ItemGroup>
  <ItemGroup>
    <Midl Include=\\"App.idl\\" />
  </ItemGroup>
  <ItemGroup>
    <ClCompile Include=\\"pch.cpp\\" />
    <ClCompile Include=\\"App.cpp\\" />
    <ClCompile Include=\\"$(GeneratedFilesDir)module.g.cpp\\" />
    <ClCompile Include=\\"ReactPackageProvider.cpp\\" />
    <ClCompile Include=\\"AutolinkedNativeModules.g.cpp\\" />
  </ItemGroup>
  <ItemGroup>
    <ClInclude Include=\\"pch.h\\" />
    <ClInclude Include=\\"App.h\\" />
    <ClInclude Include=\\"ReactPackageProvider.h\\" />
    <ClInclude Include=\\"AutolinkedNativeModules.g.h\\" />
  </ItemGroup>
  <ItemGroup>
    <Image Include=\\"Assets\\\\Wide310x150Logo.scale-200.png\\">
      <Filter>Assets</Filter>
    </Image>
    <Image Include=\\"Assets\\\\StoreLogo.png\\">
      <Filter>Assets</Filter>
    </Image>
    <Image Include=\\"Assets\\\\Square150x150Logo.scale-200.png\\">
      <Filter>Assets</Filter>
    </Image>
    <Image Include=\\"Assets\\\\Square44x44Logo.targetsize-24_altform-unplated.png\\">
      <Filter>Assets</Filter>
    </Image>
    <Image Include=\\"Assets\\\\Square44x44Logo.scale-200.png\\">
      <Filter>Assets</Filter>
    </Image>
    <Image Include=\\"Assets\\\\SplashScreen.scale-200.png\\">
      <Filter>Assets</Filter>
    </Image>
    <Image Include=\\"Assets\\\\LockScreenLogo.scale-200.png\\">
      <Filter>Assets</Filter>
    </Image>
  </ItemGroup>
  <ItemGroup>
    <AppxManifest Include=\\"Package.appxmanifest\\" />
  </ItemGroup>
  <ItemGroup>
    <Filter Include=\\"Assets\\">
      <UniqueIdentifier>{e48dc53e-40b1-40cb-970a-f89935452892}</UniqueIdentifier>
    </Filter>
  </ItemGroup>
  <ItemGroup>
    <None Include=\\"PropertySheet.props\\" />
    <None Include=\\"packages.config\\" />
  </ItemGroup>
  <ItemGroup>
    <Text Include=\\"readme.txt\\" />
  </ItemGroup>
  <ItemGroup>
    <Page Include=\\"MainPage.xaml\\" />
  </ItemGroup>
</Project>"
`;

exports[`C++ NuGet Application: index.windows.bundle 1`] = `
"/**
 * 
 * Be sure to generate this file using the CLI:
 *
 * npx react-native bundle --platform windows --entry-file index.js 
 *   --bundle-output windows\\\\SnapshotApp\\\\Bundle\\\\index.windows.bundle
 *   --assets-dest windows\\\\SnapshotApp\\\\Bundle
 *
 */"
`;

exports[`C++ NuGet Application: metro.config.js 1`] = `
"/**
 * Metro configuration for React Native
 * https://github.com/facebook/react-native
 *
 * @format
 */
const fs = require('fs');
const path = require('path');
const exclusionList = require('metro-config/src/defaults/exclusionList');

const rnwPath = fs.realpathSync(
  path.resolve(require.resolve('react-native-windows/package.json'), '..'),
);

module.exports = {
  resolver: {
    blockList: exclusionList([
      // This stops \\"react-native run-windows\\" from causing the metro server to crash if its already running
      new RegExp(
        \`\${path.resolve(__dirname, 'windows').replace(/[/\\\\\\\\]/g, '/')}.*\`,
      ),
      // This prevents \\"react-native run-windows\\" from hitting: EBUSY: resource busy or locked, open msbuild.ProjectImports.zip or other files produced by msbuild
      new RegExp(\`\${rnwPath}/build/.*\`),
      new RegExp(\`\${rnwPath}/target/.*\`),
      /.*\\\\.ProjectImports\\\\.zip/,
    ]),
  },
  transformer: {
    getTransformOptions: async () => ({
      transform: {
        experimentalImportSupport: false,
        inlineRequires: true,
      },
    }),
  },
};
"
`;

exports[`C++ NuGet Application: packages.config 1`] = `
"﻿<?xml version=\\"1.0\\" encoding=\\"utf-8\\"?>
<packages>
  <package id=\\"Microsoft.Windows.CppWinRT\\" version=\\"2.0.210312.4\\" targetFramework=\\"native\\" />
  <package id=\\"ReactNative.Hermes.Windows\\" version=\\"0.9.0-ms.6\\" targetFramework=\\"native\\" />
  <package id=\\"Microsoft.ReactNative\\" version=\\"0.0.0-canary.409\\" targetFramework=\\"native\\" />
  <package id=\\"Microsoft.ReactNative.Cxx\\" version=\\"0.0.0-canary.409\\" targetFramework=\\"native\\" />
  <package id=\\"Microsoft.UI.Xaml\\" version=\\"2.7.0\\" targetFramework=\\"native\\" />
</packages>"
`;

exports[`C++ NuGet Application: pch.cpp 1`] = `
"﻿#include \\"pch.h\\"
"
`;

exports[`C++ NuGet Application: pch.h 1`] = `
"#pragma once

#define NOMINMAX

#include <hstring.h>
#include <restrictederrorinfo.h>
#include <unknwn.h>
#include <windows.h>
#include <CppWinRTIncludes.h>
#include <VersionMacros.h>
#include <winrt/Windows.ApplicationModel.Activation.h>
#include <UI.Xaml.Controls.Primitives.h>
#include <UI.Xaml.Controls.h>
#include <UI.Xaml.Markup.h>
#include <UI.Xaml.Navigation.h>

#include <winrt/Microsoft.ReactNative.h>

#include <winrt/Microsoft.UI.Xaml.Automation.Peers.h>
#include <winrt/Microsoft.UI.Xaml.Controls.Primitives.h>
#include <winrt/Microsoft.UI.Xaml.Controls.h>
#include <winrt/Microsoft.UI.Xaml.Media.h>
#include <winrt/Microsoft.UI.Xaml.XamlTypeInfo.h>
using namespace winrt::Windows::Foundation;
"
`;

exports[`C++ NuGet Library: ExperimentalFeatures.props 1`] = `
"<?xml version=\\"1.0\\" encoding=\\"utf-8\\"?>
<Project xmlns=\\"http://schemas.microsoft.com/developer/msbuild/2003\\">

  <!--
    Application projects contain a file with this name to specify some important settings
    that will apply globally for the app and *all* native modules the app consumes. These
    values are set by the app developer.
  -->

</Project>
"
`;

exports[`C++ NuGet Library: NuGet.Config 1`] = `
"<?xml version=\\"1.0\\" encoding=\\"utf-8\\"?>
<configuration>
  <config>
    <add key=\\"repositoryPath\\" value=\\"packages\\" />
  </config>
  <packageSources>
    <clear />
    <add key=\\"react-native\\" value=\\"https://pkgs.dev.azure.com/ms/react-native/_packaging/react-native-public/nuget/v3/index.json\\" />
    <add key=\\"Nuget.org\\" value=\\"https://api.nuget.org/v3/index.json\\" />
  </packageSources>
  <disabledPackageSources>
    <clear />
  </disabledPackageSources>  
</configuration>
"
`;

exports[`C++ NuGet Library: PropertySheet.props 1`] = `
"<?xml version=\\"1.0\\" encoding=\\"utf-8\\"?>
<Project ToolsVersion=\\"Current\\" xmlns=\\"http://schemas.microsoft.com/developer/msbuild/2003\\">
  <ImportGroup Label=\\"PropertySheets\\" />
  <PropertyGroup Label=\\"UserMacros\\" />
  <!--
    To customize common C++/WinRT project properties:
    * right-click the project node
    * expand the Common Properties item
    * select the C++/WinRT property page

    For more advanced scenarios, and complete documentation, please see:
    https://github.com/Microsoft/xlang/tree/master/src/package/cppwinrt/nuget
    -->
  <PropertyGroup />
  <ItemDefinitionGroup />
</Project>"
`;

exports[`C++ NuGet Library: ReactNativeModule.h 1`] = `
"﻿#pragma once

#include \\"JSValue.h\\"
#include \\"NativeModules.h\\"

using namespace winrt::Microsoft::ReactNative;

namespace winrt::SnapshotApp
{

REACT_MODULE(ReactNativeModule, L\\"SnapshotApp\\")
struct ReactNativeModule
{
    // See https://microsoft.github.io/react-native-windows/docs/native-modules for details on writing native modules

    REACT_INIT(Initialize)
    void Initialize(ReactContext const &reactContext) noexcept
    {
        m_reactContext = reactContext;
    }
    
    REACT_METHOD(sampleMethod)
    void sampleMethod(std::string stringArgument, int numberArgument, std::function<void(std::string)> &&callback) noexcept
    {
        // TODO: Implement some actually useful functionality
        callback(\\"Received numberArgument: \\" + std::to_string(numberArgument) + \\" stringArgument: \\" + stringArgument);
    }

    private:
        ReactContext m_reactContext{nullptr};
};

} // namespace winrt::SnapshotApp
"
`;

exports[`C++ NuGet Library: ReactPackageProvider.cpp 1`] = `
"#include \\"pch.h\\"
#include \\"ReactPackageProvider.h\\"
#if __has_include(\\"ReactPackageProvider.g.cpp\\")
#include \\"ReactPackageProvider.g.cpp\\"
#endif

#include \\"ReactNativeModule.h\\"

using namespace winrt::Microsoft::ReactNative;

namespace winrt::SnapshotApp::implementation
{

void ReactPackageProvider::CreatePackage(IReactPackageBuilder const &packageBuilder) noexcept
{
    AddAttributedModules(packageBuilder);
}

} // namespace winrt::SnapshotApp::implementation
"
`;

exports[`C++ NuGet Library: ReactPackageProvider.h 1`] = `
"#pragma once
#include \\"ReactPackageProvider.g.h\\"

using namespace winrt::Microsoft::ReactNative;

namespace winrt::SnapshotApp::implementation
{
    struct ReactPackageProvider : ReactPackageProviderT<ReactPackageProvider>
    {
        ReactPackageProvider() = default;

        void CreatePackage(IReactPackageBuilder const &packageBuilder) noexcept;
    };
} // namespace winrt::SnapshotApp::implementation

namespace winrt::SnapshotApp::factory_implementation
{

struct ReactPackageProvider : ReactPackageProviderT<ReactPackageProvider, implementation::ReactPackageProvider> {};

} // namespace winrt::SnapshotApp::factory_implementation
"
`;

exports[`C++ NuGet Library: ReactPackageProvider.idl 1`] = `
"namespace SnapshotApp
{
    [webhosthidden]
    [default_interface]
    runtimeclass ReactPackageProvider : Microsoft.ReactNative.IReactPackageProvider
    {
        ReactPackageProvider();
    };
}
"
`;

exports[`C++ NuGet Library: SnapshotApp.def 1`] = `
"﻿EXPORTS
DllCanUnloadNow = WINRT_CanUnloadNow                    PRIVATE
DllGetActivationFactory = WINRT_GetActivationFactory    PRIVATE
"
`;

exports[`C++ NuGet Library: SnapshotApp.sln 1`] = `
"﻿
Microsoft Visual Studio Solution File, Format Version 12.00
# Visual Studio Version 16
VisualStudioVersion = 16.0.29215.179
MinimumVisualStudioVersion = 10.0.40219.1
Project(\\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\\") = \\"SnapshotApp\\", \\"SnapshotApp\\\\SnapshotApp.vcxproj\\", \\"{39E79001-D11C-4BF9-8649-40FDD4ACD2B7}\\"
EndProject
Global
	GlobalSection(SolutionConfigurationPlatforms) = preSolution
		Debug|ARM64 = Debug|ARM64
		Debug|x64 = Debug|x64
		Debug|x86 = Debug|x86
		Release|ARM64 = Release|ARM64
		Release|x64 = Release|x64
		Release|x86 = Release|x86
	EndGlobalSection
	GlobalSection(ProjectConfigurationPlatforms) = postSolution
		{39E79001-D11C-4BF9-8649-40FDD4ACD2B7}.Debug|ARM64.ActiveCfg = Debug|ARM64
		{39E79001-D11C-4BF9-8649-40FDD4ACD2B7}.Debug|ARM64.Build.0 = Debug|ARM64
		{39E79001-D11C-4BF9-8649-40FDD4ACD2B7}.Debug|ARM64.Deploy.0 = Debug|ARM64
		{39E79001-D11C-4BF9-8649-40FDD4ACD2B7}.Debug|x64.ActiveCfg = Debug|x64
		{39E79001-D11C-4BF9-8649-40FDD4ACD2B7}.Debug|x64.Build.0 = Debug|x64
		{39E79001-D11C-4BF9-8649-40FDD4ACD2B7}.Debug|x64.Deploy.0 = Debug|x64
		{39E79001-D11C-4BF9-8649-40FDD4ACD2B7}.Debug|x86.ActiveCfg = Debug|Win32
		{39E79001-D11C-4BF9-8649-40FDD4ACD2B7}.Debug|x86.Build.0 = Debug|Win32
		{39E79001-D11C-4BF9-8649-40FDD4ACD2B7}.Debug|x86.Deploy.0 = Debug|Win32
		{39E79001-D11C-4BF9-8649-40FDD4ACD2B7}.Release|ARM64.ActiveCfg = Release|ARM64
		{39E79001-D11C-4BF9-8649-40FDD4ACD2B7}.Release|ARM64.Build.0 = Release|ARM64
		{39E79001-D11C-4BF9-8649-40FDD4ACD2B7}.Release|ARM64.Deploy.0 = Release|ARM64
		{39E79001-D11C-4BF9-8649-40FDD4ACD2B7}.Release|x64.ActiveCfg = Release|x64
		{39E79001-D11C-4BF9-8649-40FDD4ACD2B7}.Release|x64.Build.0 = Release|x64
		{39E79001-D11C-4BF9-8649-40FDD4ACD2B7}.Release|x64.Deploy.0 = Release|x64
		{39E79001-D11C-4BF9-8649-40FDD4ACD2B7}.Release|x86.ActiveCfg = Release|Win32
		{39E79001-D11C-4BF9-8649-40FDD4ACD2B7}.Release|x86.Build.0 = Release|Win32
		{39E79001-D11C-4BF9-8649-40FDD4ACD2B7}.Release|x86.Deploy.0 = Release|Win32
	EndGlobalSection
	GlobalSection(SolutionProperties) = preSolution
		HideSolutionNode = FALSE
	EndGlobalSection
	GlobalSection(ExtensibilityGlobals) = postSolution
		SolutionGuid = {D43FAD39-F619-437D-BB40-04A3982ACB6A}
	EndGlobalSection
EndGlobal
"
`;

exports[`C++ NuGet Library: SnapshotApp.vcxproj 1`] = `
"<?xml version=\\"1.0\\" encoding=\\"utf-8\\"?>
<Project ToolsVersion=\\"Current\\" DefaultTargets=\\"Build\\" xmlns=\\"http://schemas.microsoft.com/developer/msbuild/2003\\">
  <Import Project=\\"$(SolutionDir)\\\\ExperimentalFeatures.props\\" Condition=\\"Exists('$(SolutionDir)\\\\ExperimentalFeatures.props')\\" />
  <Import Project=\\"$(SolutionDir)\\\\packages\\\\Microsoft.Windows.CppWinRT.2.0.210312.4\\\\build\\\\native\\\\Microsoft.Windows.CppWinRT.props\\" Condition=\\"Exists('$(SolutionDir)\\\\packages\\\\Microsoft.Windows.CppWinRT.2.0.210312.4\\\\build\\\\native\\\\Microsoft.Windows.CppWinRT.props')\\" />
  <PropertyGroup Label=\\"Globals\\">
    <CppWinRTOptimized>true</CppWinRTOptimized>
    <CppWinRTRootNamespaceAutoMerge>true</CppWinRTRootNamespaceAutoMerge>
    <MinimalCoreWin>true</MinimalCoreWin>
    <ProjectGuid>{39e79001-d11c-4bf9-8649-40fdd4acd2b7}</ProjectGuid>
    <ProjectName>SnapshotApp</ProjectName>
    <RootNamespace>SnapshotApp</RootNamespace>
    <DefaultLanguage>en-US</DefaultLanguage>
    <MinimumVisualStudioVersion>16.0</MinimumVisualStudioVersion>
    <AppContainerApplication>true</AppContainerApplication>
    <ApplicationType>Windows Store</ApplicationType>
    <ApplicationTypeRevision>10.0</ApplicationTypeRevision>
  </PropertyGroup>
  <PropertyGroup Label=\\"ReactNativeWindowsProps\\">
    <ReactNativeWindowsDir Condition=\\"'$(ReactNativeWindowsDir)' == ''\\">$([MSBuild]::GetDirectoryNameOfFileAbove($(SolutionDir), 'node_modules\\\\react-native-windows\\\\package.json'))\\\\node_modules\\\\react-native-windows\\\\</ReactNativeWindowsDir>
  </PropertyGroup>
  <Import Project=\\"$(ReactNativeWindowsDir)\\\\PropertySheets\\\\External\\\\Microsoft.ReactNative.WindowsSdk.Default.props\\" Condition=\\"Exists('$(ReactNativeWindowsDir)\\\\PropertySheets\\\\External\\\\Microsoft.ReactNative.WindowsSdk.Default.props')\\" />
  <PropertyGroup Label=\\"Fallback Windows SDK Versions\\">
    <WindowsTargetPlatformVersion Condition=\\" '$(WindowsTargetPlatformVersion)' == '' \\">10.0.19041.0</WindowsTargetPlatformVersion>
    <WindowsTargetPlatformMinVersion Condition=\\" '$(WindowsTargetPlatformMinVersion)' == '' \\">10.0.15063.0</WindowsTargetPlatformMinVersion>
  </PropertyGroup>
  <Import Project=\\"$(VCTargetsPath)\\\\Microsoft.Cpp.Default.props\\" />
  <ItemGroup Label=\\"ProjectConfigurations\\">
    <ProjectConfiguration Include=\\"Debug|ARM64\\">
      <Configuration>Debug</Configuration>
      <Platform>ARM64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include=\\"Debug|Win32\\">
      <Configuration>Debug</Configuration>
      <Platform>Win32</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include=\\"Debug|x64\\">
      <Configuration>Debug</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include=\\"Release|ARM64\\">
      <Configuration>Release</Configuration>
      <Platform>ARM64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include=\\"Release|Win32\\">
      <Configuration>Release</Configuration>
      <Platform>Win32</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include=\\"Release|x64\\">
      <Configuration>Release</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
  </ItemGroup>
  <PropertyGroup Label=\\"Configuration\\">
    <ConfigurationType>DynamicLibrary</ConfigurationType>
    <CharacterSet>Unicode</CharacterSet>
    <GenerateManifest>false</GenerateManifest>
  </PropertyGroup>
  <PropertyGroup Condition=\\"'$(Configuration)'=='Debug'\\" Label=\\"Configuration\\">
    <UseDebugLibraries>true</UseDebugLibraries>
    <LinkIncremental>true</LinkIncremental>
  </PropertyGroup>
  <PropertyGroup Condition=\\"'$(Configuration)'=='Release'\\" Label=\\"Configuration\\">
    <UseDebugLibraries>false</UseDebugLibraries>
    <WholeProgramOptimization>true</WholeProgramOptimization>
    <LinkIncremental>false</LinkIncremental>
  </PropertyGroup>
  <Import Project=\\"$(VCTargetsPath)\\\\Microsoft.Cpp.props\\" />
  <ImportGroup Label=\\"ExtensionSettings\\"></ImportGroup>
  <ImportGroup Label=\\"PropertySheets\\">
    <Import Project=\\"$(UserRootDir)\\\\Microsoft.Cpp.$(Platform).user.props\\" Condition=\\"exists('$(UserRootDir)\\\\Microsoft.Cpp.$(Platform).user.props')\\" Label=\\"LocalAppDataPlatform\\" />
  </ImportGroup>
  <ImportGroup Label=\\"PropertySheets\\">
    <Import Project=\\"PropertySheet.props\\" />
  </ImportGroup>
  <ImportGroup Label=\\"ReactNativeWindowsPropertySheets\\">
    <Import Project=\\"$(ReactNativeWindowsDir)\\\\PropertySheets\\\\external\\\\Microsoft.ReactNative.Uwp.CppLib.props\\" Condition=\\"Exists('$(ReactNativeWindowsDir)\\\\PropertySheets\\\\External\\\\Microsoft.ReactNative.Uwp.CppLib.props')\\" />
    <Import Project=\\"$(SolutionDir)\\\\packages\\\\$(WinUIPackageProps)\\" Condition=\\"'$(WinUIPackageProps)'!='' And Exists('$(SolutionDir)\\\\packages\\\\$(WinUIPackageProps)')\\" />
  </ImportGroup>

  <PropertyGroup Label=\\"UserMacros\\" />
  <ItemDefinitionGroup>
    <ClCompile>
      <PrecompiledHeader>Use</PrecompiledHeader>
      <PrecompiledHeaderFile>pch.h</PrecompiledHeaderFile>
      <PrecompiledHeaderOutputFile>$(IntDir)pch.pch</PrecompiledHeaderOutputFile>
      <WarningLevel>Level4</WarningLevel>
      <AdditionalOptions>%(AdditionalOptions) /bigobj</AdditionalOptions>
      <DisableSpecificWarnings>4453;28204</DisableSpecificWarnings>
      <PreprocessorDefinitions>_WINRT_DLL;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <AdditionalUsingDirectories>$(WindowsSDK_WindowsMetadata);$(AdditionalUsingDirectories)</AdditionalUsingDirectories>
    </ClCompile>
    <Midl>
      <!-- This allows applications targetting older Windows SDKs (e.g. RNW 0.65 apps) to consume the library generated WinMD -->
      <AdditionalOptions>%(AdditionalOptions) /noattributename</AdditionalOptions>
    </Midl>
    <Link>
      <SubSystem>Console</SubSystem>
      <GenerateWindowsMetadata>true</GenerateWindowsMetadata>
      <ModuleDefinitionFile>SnapshotApp.def</ModuleDefinitionFile>
    </Link>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition=\\"'$(Configuration)'=='Debug'\\">
    <ClCompile>
      <PreprocessorDefinitions>_DEBUG;%(PreprocessorDefinitions)</PreprocessorDefinitions>
    </ClCompile>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition=\\"'$(Configuration)'=='Release'\\">
    <ClCompile>
      <PreprocessorDefinitions>NDEBUG;%(PreprocessorDefinitions)</PreprocessorDefinitions>
    </ClCompile>
  </ItemDefinitionGroup>
  <ItemGroup>
    <ClInclude Include=\\"ReactPackageProvider.h\\">
      <DependentUpon>ReactPackageProvider.idl</DependentUpon>
    </ClInclude>
    <ClInclude Include=\\"ReactNativeModule.h\\" />
    <ClInclude Include=\\"pch.h\\" />
  </ItemGroup>
  <ItemGroup>
    <ClCompile Include=\\"pch.cpp\\">
      <PrecompiledHeader>Create</PrecompiledHeader>
    </ClCompile>
    <ClCompile Include=\\"ReactPackageProvider.cpp\\">
      <DependentUpon>ReactPackageProvider.idl</DependentUpon>
    </ClCompile>
    <ClCompile Include=\\"$(GeneratedFilesDir)module.g.cpp\\" />
  </ItemGroup>
  <ItemGroup>
    <Midl Include=\\"ReactPackageProvider.idl\\" />
  </ItemGroup>
  <ItemGroup>
    <None Include=\\"packages.config\\" />
    <None Include=\\"PropertySheet.props\\" />
  </ItemGroup>
  <Import Project=\\"$(VCTargetsPath)\\\\Microsoft.Cpp.targets\\" />
  <ImportGroup Label=\\"ReactNativeWindowsTargets\\">
    <Import Project=\\"$(ReactNativeWindowsDir)\\\\PropertySheets\\\\External\\\\Microsoft.ReactNative.Uwp.CppLib.targets\\" Condition=\\"Exists('$(ReactNativeWindowsDir)\\\\PropertySheets\\\\External\\\\Microsoft.ReactNative.Uwp.CppLib.targets')\\" />
  </ImportGroup>
  <Target Name=\\"EnsureReactNativeWindowsTargets\\" BeforeTargets=\\"PrepareForBuild\\">
    <PropertyGroup>
      <ErrorText>This project references targets in your node_modules\\\\react-native-windows folder that are missing. The missing file is {0}.</ErrorText>
    </PropertyGroup>
    <Error Condition=\\"!Exists('$(ReactNativeWindowsDir)\\\\PropertySheets\\\\External\\\\Microsoft.ReactNative.Uwp.CppLib.props')\\" Text=\\"$([System.String]::Format('$(ErrorText)', '$(ReactNativeWindowsDir)\\\\PropertySheets\\\\External\\\\Microsoft.ReactNative.Uwp.CppLib.props'))\\" />
    <Error Condition=\\"!Exists('$(ReactNativeWindowsDir)\\\\PropertySheets\\\\External\\\\Microsoft.ReactNative.Uwp.CppLib.targets')\\" Text=\\"$([System.String]::Format('$(ErrorText)', '$(ReactNativeWindowsDir)\\\\PropertySheets\\\\External\\\\Microsoft.ReactNative.Uwp.CppLib.targets'))\\" />
  </Target>
  <ImportGroup Label=\\"ExtensionTargets\\">
    <Import Project=\\"$(SolutionDir)\\\\packages\\\\Microsoft.Windows.CppWinRT.2.0.210312.4\\\\build\\\\native\\\\Microsoft.Windows.CppWinRT.targets\\" Condition=\\"Exists('$(SolutionDir)\\\\packages\\\\Microsoft.Windows.CppWinRT.2.0.210312.4\\\\build\\\\native\\\\Microsoft.Windows.CppWinRT.targets')\\" />
    <Import Project=\\"$(SolutionDir)\\\\packages\\\\ReactNative.Hermes.Windows.0.9.0-ms.6\\\\build\\\\native\\\\ReactNative.Hermes.Windows.targets\\" Condition=\\"Exists('$(SolutionDir)\\\\packages\\\\ReactNative.Hermes.Windows.0.9.0-ms.6\\\\build\\\\native\\\\ReactNative.Hermes.Windows.targets')\\" />
    <Import Project=\\"$(SolutionDir)\\\\packages\\\\Microsoft.ReactNative.0.0.0-canary.409\\\\build\\\\native\\\\Microsoft.ReactNative.targets\\" Condition=\\"Exists('$(SolutionDir)\\\\packages\\\\Microsoft.ReactNative.0.0.0-canary.409\\\\build\\\\native\\\\Microsoft.ReactNative.targets')\\" />
    <Import Project=\\"$(SolutionDir)\\\\packages\\\\Microsoft.ReactNative.Cxx.0.0.0-canary.409\\\\build\\\\native\\\\Microsoft.ReactNative.Cxx.targets\\" Condition=\\"Exists('$(SolutionDir)\\\\packages\\\\Microsoft.ReactNative.Cxx.0.0.0-canary.409\\\\build\\\\native\\\\Microsoft.ReactNative.Cxx.targets')\\" />
    <Import Project=\\"$(SolutionDir)\\\\packages\\\\$(WinUIPackageName).$(WinUIPackageVersion)\\\\build\\\\native\\\\$(WinUIPackageName).targets\\" Condition=\\"Exists('$(SolutionDir)\\\\packages\\\\$(WinUIPackageName).$(WinUIPackageVersion)\\\\build\\\\native\\\\$(WinUIPackageName).targets')\\" />
  </ImportGroup>
  <Target Name=\\"EnsureNuGetPackageBuildImports\\" BeforeTargets=\\"PrepareForBuild\\">
    <PropertyGroup>
      <ErrorText>This project references NuGet package(s) that are missing on this computer. Use NuGet Package Restore to download them.  For more information, see http://go.microsoft.com/fwlink/?LinkID=322105. The missing file is {0}.</ErrorText>
    </PropertyGroup>
    <Error Condition=\\"!Exists('$(SolutionDir)\\\\packages\\\\Microsoft.Windows.CppWinRT.2.0.210312.4\\\\build\\\\native\\\\Microsoft.Windows.CppWinRT.props')\\" Text=\\"$([System.String]::Format('$(ErrorText)', '$(SolutionDir)\\\\packages\\\\Microsoft.Windows.CppWinRT.2.0.210312.4\\\\build\\\\native\\\\Microsoft.Windows.CppWinRT.props'))\\" />
    <Error Condition=\\"!Exists('$(SolutionDir)\\\\packages\\\\Microsoft.Windows.CppWinRT.2.0.210312.4\\\\build\\\\native\\\\Microsoft.Windows.CppWinRT.targets')\\" Text=\\"$([System.String]::Format('$(ErrorText)', '$(SolutionDir)\\\\packages\\\\Microsoft.Windows.CppWinRT.2.0.210312.4\\\\build\\\\native\\\\Microsoft.Windows.CppWinRT.targets'))\\" />
    <Error Condition=\\"!Exists('$(SolutionDir)\\\\packages\\\\ReactNative.Hermes.Windows.0.9.0-ms.6\\\\build\\\\native\\\\ReactNative.Hermes.Windows.targets')\\" Text=\\"$([System.String]::Format('$(ErrorText)', '$(SolutionDir)\\\\packages\\\\ReactNative.Hermes.Windows.0.9.0-ms.6\\\\build\\\\native\\\\ReactNative.Hermes.Windows.targets'))\\" />
    <Error Condition=\\"!Exists('$(SolutionDir)\\\\packages\\\\Microsoft.ReactNative.0.0.0-canary.409\\\\build\\\\native\\\\Microsoft.ReactNative.targets')\\" Text=\\"$([System.String]::Format('$(ErrorText)', '$(SolutionDir)\\\\packages\\\\Microsoft.ReactNative.0.0.0-canary.409\\\\build\\\\native\\\\Microsoft.ReactNative.targets'))\\" />
    <Error Condition=\\"!Exists('$(SolutionDir)\\\\packages\\\\Microsoft.ReactNative.Cxx.0.0.0-canary.409\\\\build\\\\native\\\\Microsoft.ReactNative.Cxx.targets')\\" Text=\\"$([System.String]::Format('$(ErrorText)', '$(SolutionDir)\\\\packages\\\\Microsoft.ReactNative.Cxx.0.0.0-canary.409\\\\build\\\\native\\\\Microsoft.ReactNative.Cxx.targets'))\\" />
    <Error Condition=\\"!Exists('$(SolutionDir)\\\\packages\\\\$(WinUIPackageName).$(WinUIPackageVersion)\\\\build\\\\native\\\\$(WinUIPackageName).targets')\\" Text=\\"$([System.String]::Format('$(ErrorText)', '$(SolutionDir)\\\\packages\\\\$(WinUIPackageName).$(WinUIPackageVersion)\\\\build\\\\native\\\\$(WinUIPackageName).targets'))\\" />
  </Target>
</Project>
"
`;

exports[`C++ NuGet Library: SnapshotApp.vcxproj.filters 1`] = `
"﻿<?xml version=\\"1.0\\" encoding=\\"utf-8\\"?>
<Project ToolsVersion=\\"Current\\" xmlns=\\"http://schemas.microsoft.com/developer/msbuild/2003\\">
  <ItemGroup>
    <Midl Include=\\"ReactPackageProvider.idl\\" />
  </ItemGroup>
  <ItemGroup>
    <ClCompile Include=\\"pch.cpp\\" />
    <ClCompile Include=\\"$(GeneratedFilesDir)module.g.cpp\\" />
    <ClCompile Include=\\"ReactPackageProvider.cpp\\" />
  </ItemGroup>
  <ItemGroup>
    <ClInclude Include=\\"pch.h\\" />
    <ClInclude Include=\\"ReactPackageProvider.h\\" />
    <ClInclude Include=\\"ReactNativeModule.h\\" />
  </ItemGroup>
  <ItemGroup>
    <None Include=\\"PropertySheet.props\\" />
    <None Include=\\"packages.config\\" />
  </ItemGroup>
</Project>"
`;

exports[`C++ NuGet Library: packages.config 1`] = `
"﻿<?xml version=\\"1.0\\" encoding=\\"utf-8\\"?>
<packages>
  <package id=\\"Microsoft.Windows.CppWinRT\\" version=\\"2.0.210312.4\\" targetFramework=\\"native\\" />
  <package id=\\"ReactNative.Hermes.Windows\\" version=\\"0.9.0-ms.6\\" targetFramework=\\"native\\" />
  <package id=\\"Microsoft.ReactNative\\" version=\\"0.0.0-canary.409\\" targetFramework=\\"native\\" />
  <package id=\\"Microsoft.ReactNative.Cxx\\" version=\\"0.0.0-canary.409\\" targetFramework=\\"native\\" />
  <package id=\\"Microsoft.UI.Xaml\\" version=\\"2.7.0\\" targetFramework=\\"native\\" />
</packages>"
`;

exports[`C++ NuGet Library: pch.cpp 1`] = `
"﻿#include \\"pch.h\\"
"
`;

exports[`C++ NuGet Library: pch.h 1`] = `
"#pragma once

#define NOMINMAX

#include <hstring.h>
#include <restrictederrorinfo.h>
#include <unknwn.h>
#include <windows.h>
#include <CppWinRTIncludes.h>
#if __has_include(<VersionMacros.h>)
  #include <VersionMacros.h>
#endif

#include <winrt/Microsoft.ReactNative.h>

#include <winrt/Microsoft.UI.Xaml.Automation.Peers.h>
#include <winrt/Microsoft.UI.Xaml.Controls.Primitives.h>
#include <winrt/Microsoft.UI.Xaml.Controls.h>
#include <winrt/Microsoft.UI.Xaml.Media.h>
#include <winrt/Microsoft.UI.Xaml.XamlTypeInfo.h>
using namespace winrt::Windows::Foundation;
"
`;

exports[`C++ NuGet+Hermes Application: App.cpp 1`] = `
"#include \\"pch.h\\"

#include \\"App.h\\"

#include \\"AutolinkedNativeModules.g.h\\"
#include \\"ReactPackageProvider.h\\"

using namespace winrt;
using namespace xaml;
using namespace xaml::Controls;
using namespace xaml::Navigation;

using namespace Windows::ApplicationModel;
namespace winrt::SnapshotApp::implementation
{
/// <summary>
/// Initializes the singleton application object.  This is the first line of
/// authored code executed, and as such is the logical equivalent of main() or
/// WinMain().
/// </summary>
App::App() noexcept
{
#if BUNDLE
    JavaScriptBundleFile(L\\"index.windows\\");
    InstanceSettings().UseWebDebugger(false);
    InstanceSettings().UseFastRefresh(false);
#else
    JavaScriptBundleFile(L\\"index\\");
    InstanceSettings().UseWebDebugger(true);
    InstanceSettings().UseFastRefresh(true);
#endif

#if _DEBUG
    InstanceSettings().UseDeveloperSupport(true);
#else
    InstanceSettings().UseDeveloperSupport(false);
#endif

    RegisterAutolinkedNativeModulePackages(PackageProviders()); // Includes any autolinked modules

    PackageProviders().Append(make<ReactPackageProvider>()); // Includes all modules in this project

    InitializeComponent();
}

/// <summary>
/// Invoked when the application is launched normally by the end user.  Other entry points
/// will be used such as when the application is launched to open a specific file.
/// </summary>
/// <param name=\\"e\\">Details about the launch request and process.</param>
void App::OnLaunched(activation::LaunchActivatedEventArgs const& e)
{
    super::OnLaunched(e);

    Frame rootFrame = Window::Current().Content().as<Frame>();
    rootFrame.Navigate(xaml_typename<MainPage>(), box_value(e.Arguments()));
}

/// <summary>
/// Invoked when the application is activated by some means other than normal launching.
/// </summary>
void App::OnActivated(Activation::IActivatedEventArgs const &e) {
  auto preActivationContent = Window::Current().Content();
  super::OnActivated(e);
  if (!preActivationContent && Window::Current()) {
    Frame rootFrame = Window::Current().Content().as<Frame>();
    rootFrame.Navigate(xaml_typename<MainPage>(), nullptr);
  }
}

/// <summary>
/// Invoked when application execution is being suspended.  Application state is saved
/// without knowing whether the application will be terminated or resumed with the contents
/// of memory still intact.
/// </summary>
/// <param name=\\"sender\\">The source of the suspend request.</param>
/// <param name=\\"e\\">Details about the suspend request.</param>
void App::OnSuspending([[maybe_unused]] IInspectable const& sender, [[maybe_unused]] SuspendingEventArgs const& e)
{
    // Save application state and stop any background activity
}

/// <summary>
/// Invoked when Navigation to a certain page fails
/// </summary>
/// <param name=\\"sender\\">The Frame which failed navigation</param>
/// <param name=\\"e\\">Details about the navigation failure</param>
void App::OnNavigationFailed(IInspectable const&, NavigationFailedEventArgs const& e)
{
    throw hresult_error(E_FAIL, hstring(L\\"Failed to load Page \\") + e.SourcePageType().Name);
}

} // namespace winrt::SnapshotApp::implementation
"
`;

exports[`C++ NuGet+Hermes Application: App.h 1`] = `
"#pragma once

#include \\"App.xaml.g.h\\"

#include <CppWinRTIncludes.h>

#ifdef USE_WINUI3
namespace activation = winrt::Microsoft::UI::Xaml;
#else
namespace activation = winrt::Windows::ApplicationModel::Activation;
#endif

namespace winrt::SnapshotApp::implementation
{
    struct App : AppT<App>
    {
        App() noexcept;
        void OnLaunched(activation::LaunchActivatedEventArgs const&);
        void OnActivated(Windows::ApplicationModel::Activation::IActivatedEventArgs const &e);
        void OnSuspending(IInspectable const&, Windows::ApplicationModel::SuspendingEventArgs const&);
        void OnNavigationFailed(IInspectable const&, xaml::Navigation::NavigationFailedEventArgs const&);
      private:
        using super = AppT<App>;
    };
} // namespace winrt::SnapshotApp::implementation
"
`;

exports[`C++ NuGet+Hermes Application: App.idl 1`] = `
"namespace SnapshotApp
{
}
"
`;

exports[`C++ NuGet+Hermes Application: App.xaml 1`] = `
"﻿<react:ReactApplication
    x:Class=\\"SnapshotApp.App\\"
    xmlns=\\"http://schemas.microsoft.com/winfx/2006/xaml/presentation\\"
    xmlns:x=\\"http://schemas.microsoft.com/winfx/2006/xaml\\"
    xmlns:local=\\"using:SnapshotApp\\"
    xmlns:react=\\"using:Microsoft.ReactNative\\">
    <Application.Resources>
        <XamlControlsResources xmlns=\\"using:Microsoft.UI.Xaml.Controls\\" />
    </Application.Resources>
</react:ReactApplication>
"
`;

exports[`C++ NuGet+Hermes Application: AutolinkedNativeModules.g.cpp 1`] = `
"// AutolinkedNativeModules.g.cpp contents generated by \\"react-native autolink-windows\\"
// clang-format off
#include \\"pch.h\\"
#include \\"AutolinkedNativeModules.g.h\\"

namespace winrt::Microsoft::ReactNative
{

void RegisterAutolinkedNativeModulePackages(winrt::Windows::Foundation::Collections::IVector<winrt::Microsoft::ReactNative::IReactPackageProvider> const& packageProviders)
{ 
    UNREFERENCED_PARAMETER(packageProviders);
}

}
"
`;

exports[`C++ NuGet+Hermes Application: AutolinkedNativeModules.g.h 1`] = `
"// AutolinkedNativeModules.g.h contents generated by \\"react-native autolink-windows\\"
// clang-format off
#pragma once

namespace winrt::Microsoft::ReactNative
{

void RegisterAutolinkedNativeModulePackages(winrt::Windows::Foundation::Collections::IVector<winrt::Microsoft::ReactNative::IReactPackageProvider> const& packageProviders);

}
"
`;

exports[`C++ NuGet+Hermes Application: AutolinkedNativeModules.g.props 1`] = `
"<?xml version=\\"1.0\\" encoding=\\"utf-8\\"?>
<Project xmlns=\\"http://schemas.microsoft.com/developer/msbuild/2003\\">
  <!-- AutolinkedNativeModules.g.props contents generated by \\"react-native autolink-windows\\" -->
  <PropertyGroup>
  </PropertyGroup>
</Project>
"
`;

exports[`C++ NuGet+Hermes Application: AutolinkedNativeModules.g.targets 1`] = `
"<?xml version=\\"1.0\\" encoding=\\"utf-8\\"?>
<Project xmlns=\\"http://schemas.microsoft.com/developer/msbuild/2003\\">
  <!-- AutolinkedNativeModules.g.targets contents generated by \\"react-native autolink-windows\\" -->
  <ItemGroup>
  </ItemGroup>
</Project>
"
`;

exports[`C++ NuGet+Hermes Application: ExperimentalFeatures.props 1`] = `
"<?xml version=\\"1.0\\" encoding=\\"utf-8\\"?>
<Project xmlns=\\"http://schemas.microsoft.com/developer/msbuild/2003\\">

  <!--
    This file contains some important settings that will apply globally for
    your app and *all* native modules your app consumes. These values were
    set when you created the app project, and in some cases cannot be
    simply changed here without recreating a new project.
  -->

  <PropertyGroup Label=\\"Microsoft.ReactNative Experimental Features\\">
    <!--
      Enables default usage of Hermes.
      
      See https://microsoft.github.io/react-native-windows/docs/hermes
    -->
    <UseHermes>true</UseHermes>

    <!--
      Changes compilation to assume use of WinUI 3 instead of System XAML.
      Requires creation of new project.

      See https://microsoft.github.io/react-native-windows/docs/winui3
    -->
    <UseWinUI3>false</UseWinUI3>

    <!--
      Changes compilation to assume use of Microsoft.ReactNative NuGet packages
      instead of building the framework from source.
      Requires creation of new project.

      See https://microsoft.github.io/react-native-windows/docs/nuget
    -->
    <UseExperimentalNuget>true</UseExperimentalNuget>
  
  </PropertyGroup>

</Project>
"
`;

exports[`C++ NuGet+Hermes Application: MainPage.cpp 1`] = `
"﻿#include \\"pch.h\\"
#include \\"MainPage.h\\"
#if __has_include(\\"MainPage.g.cpp\\")
#include \\"MainPage.g.cpp\\"
#endif

#include \\"App.h\\"

using namespace winrt;
using namespace xaml;

namespace winrt::SnapshotApp::implementation
{
    MainPage::MainPage()
    {
        InitializeComponent();
        auto app = Application::Current().as<App>();
        ReactRootView().ReactNativeHost(app->Host());
    }
}
"
`;

exports[`C++ NuGet+Hermes Application: MainPage.h 1`] = `
"﻿#pragma once
#include \\"MainPage.g.h\\"
#include <winrt/Microsoft.ReactNative.h>

namespace winrt::SnapshotApp::implementation
{
    struct MainPage : MainPageT<MainPage>
    {
        MainPage();
    };
}

namespace winrt::SnapshotApp::factory_implementation
{
    struct MainPage : MainPageT<MainPage, implementation::MainPage>
    {
    };
}

"
`;

exports[`C++ NuGet+Hermes Application: MainPage.idl 1`] = `
"#include \\"NamespaceRedirect.h\\"

namespace SnapshotApp
{
    [default_interface]
    runtimeclass MainPage : XAML_NAMESPACE.Controls.Page
    {
        MainPage();
    }
}
"
`;

exports[`C++ NuGet+Hermes Application: MainPage.xaml 1`] = `
"<Page
    x:Class=\\"SnapshotApp.MainPage\\"
    xmlns=\\"http://schemas.microsoft.com/winfx/2006/xaml/presentation\\"
    xmlns:x=\\"http://schemas.microsoft.com/winfx/2006/xaml\\"
    xmlns:local=\\"using:SnapshotApp\\"
    xmlns:react=\\"using:Microsoft.ReactNative\\"
    xmlns:d=\\"http://schemas.microsoft.com/expression/blend/2008\\"
    xmlns:mc=\\"http://schemas.openxmlformats.org/markup-compatibility/2006\\"
    mc:Ignorable=\\"d\\"
    Background=\\"{ThemeResource ApplicationPageBackgroundThemeBrush}\\">
    <react:ReactRootView 
        x:Name=\\"ReactRootView\\"
        ComponentName=\\"SnapshotApp\\"
        Background=\\"{ThemeResource ApplicationPageBackgroundThemeBrush}\\"
        MinHeight=\\"400\\"/>
</Page>
"
`;

exports[`C++ NuGet+Hermes Application: NuGet.Config 1`] = `
"<?xml version=\\"1.0\\" encoding=\\"utf-8\\"?>
<configuration>
  <config>
    <add key=\\"repositoryPath\\" value=\\"packages\\" />
  </config>
  <packageSources>
    <clear />
    <add key=\\"react-native\\" value=\\"https://pkgs.dev.azure.com/ms/react-native/_packaging/react-native-public/nuget/v3/index.json\\" />
    <add key=\\"Nuget.org\\" value=\\"https://api.nuget.org/v3/index.json\\" />
  </packageSources>
  <disabledPackageSources>
    <clear />
  </disabledPackageSources>  
</configuration>
"
`;

exports[`C++ NuGet+Hermes Application: Package.appxmanifest 1`] = `
"﻿<?xml version=\\"1.0\\" encoding=\\"utf-8\\"?>

<Package
  xmlns=\\"http://schemas.microsoft.com/appx/manifest/foundation/windows10\\"
  xmlns:mp=\\"http://schemas.microsoft.com/appx/2014/phone/manifest\\"
  xmlns:uap=\\"http://schemas.microsoft.com/appx/manifest/uap/windows10\\"
  IgnorableNamespaces=\\"uap mp\\">

  <Identity
    Name=\\"e96a4e22-9ead-41e3-9ba0-586c165e1754\\"
    Publisher=\\"CN=nickg\\"
    Version=\\"1.0.0.0\\" />

  <mp:PhoneIdentity PhoneProductId=\\"e96a4e22-9ead-41e3-9ba0-586c165e1754\\" PhonePublisherId=\\"00000000-0000-0000-0000-000000000000\\"/>

  <Properties>
    <DisplayName>SnapshotApp</DisplayName>
    <PublisherDisplayName>nickg</PublisherDisplayName>
    <Logo>Assets\\\\StoreLogo.png</Logo>
  </Properties>

  <Dependencies>
    <TargetDeviceFamily Name=\\"Windows.Universal\\" MinVersion=\\"10.0.0.0\\" MaxVersionTested=\\"10.0.0.0\\" />
  </Dependencies>

  <Resources>
    <Resource Language=\\"x-generate\\"/>
  </Resources>

  <Applications>
    <Application
      Id=\\"App\\"
      Executable=\\"$targetnametoken$.exe\\"
      EntryPoint=\\"SnapshotApp.App\\">
      <uap:VisualElements
        DisplayName=\\"SnapshotApp\\"
        Square150x150Logo=\\"Assets\\\\Square150x150Logo.png\\"
        Square44x44Logo=\\"Assets\\\\Square44x44Logo.png\\"
        Description=\\"SnapshotApp\\"
        BackgroundColor=\\"transparent\\">
        <uap:DefaultTile Wide310x150Logo=\\"Assets\\\\Wide310x150Logo.png\\"/>
        <uap:SplashScreen Image=\\"Assets\\\\SplashScreen.png\\" />
      </uap:VisualElements>
    </Application>
  </Applications>

  <Capabilities>
    <Capability Name=\\"internetClient\\" />
  </Capabilities>
</Package>"
`;

exports[`C++ NuGet+Hermes Application: PropertySheet.props 1`] = `
"<?xml version=\\"1.0\\" encoding=\\"utf-8\\"?>
<Project ToolsVersion=\\"Current\\" xmlns=\\"http://schemas.microsoft.com/developer/msbuild/2003\\">
  <ImportGroup Label=\\"PropertySheets\\" />
  <PropertyGroup Label=\\"UserMacros\\" />
  <!--
    To customize common C++/WinRT project properties:
    * right-click the project node
    * expand the Common Properties item
    * select the C++/WinRT property page

    For more advanced scenarios, and complete documentation, please see:
    https://github.com/Microsoft/xlang/tree/master/src/package/cppwinrt/nuget
    -->
  <PropertyGroup />
  <ItemDefinitionGroup />
</Project>"
`;

exports[`C++ NuGet+Hermes Application: ReactPackageProvider.cpp 1`] = `
"#include \\"pch.h\\"
#include \\"ReactPackageProvider.h\\"
#include \\"NativeModules.h\\"

using namespace winrt::Microsoft::ReactNative;

namespace winrt::SnapshotApp::implementation
{

void ReactPackageProvider::CreatePackage(IReactPackageBuilder const &packageBuilder) noexcept
{
    AddAttributedModules(packageBuilder);
}

} // namespace winrt::SnapshotApp::implementation
"
`;

exports[`C++ NuGet+Hermes Application: ReactPackageProvider.h 1`] = `
"#pragma once

#include \\"winrt/Microsoft.ReactNative.h\\"

namespace winrt::SnapshotApp::implementation
{
    struct ReactPackageProvider : winrt::implements<ReactPackageProvider, winrt::Microsoft::ReactNative::IReactPackageProvider>
    {
    public: // IReactPackageProvider
        void CreatePackage(winrt::Microsoft::ReactNative::IReactPackageBuilder const &packageBuilder) noexcept;
    };
} // namespace winrt::SnapshotApp::implementation

"
`;

exports[`C++ NuGet+Hermes Application: SnapshotApp.sln 1`] = `
"﻿
Microsoft Visual Studio Solution File, Format Version 12.00
# Visual Studio Version 16
VisualStudioVersion = 16.0.29215.179
MinimumVisualStudioVersion = 10.0.40219.1
Project(\\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\\") = \\"SnapshotApp\\", \\"SnapshotApp\\\\SnapshotApp.vcxproj\\", \\"{DD7B9A46-F48A-49A3-AF6C-FCE5E8A82E4C}\\"
EndProject
Global
	GlobalSection(SolutionConfigurationPlatforms) = preSolution
		Debug|ARM64 = Debug|ARM64
		Debug|x64 = Debug|x64
		Debug|x86 = Debug|x86
		Release|ARM64 = Release|ARM64
		Release|x64 = Release|x64
		Release|x86 = Release|x86
	EndGlobalSection
	GlobalSection(ProjectConfigurationPlatforms) = postSolution
		{DD7B9A46-F48A-49A3-AF6C-FCE5E8A82E4C}.Debug|ARM64.ActiveCfg = Debug|ARM64
		{DD7B9A46-F48A-49A3-AF6C-FCE5E8A82E4C}.Debug|ARM64.Build.0 = Debug|ARM64
		{DD7B9A46-F48A-49A3-AF6C-FCE5E8A82E4C}.Debug|ARM64.Deploy.0 = Debug|ARM64
		{DD7B9A46-F48A-49A3-AF6C-FCE5E8A82E4C}.Debug|x64.ActiveCfg = Debug|x64
		{DD7B9A46-F48A-49A3-AF6C-FCE5E8A82E4C}.Debug|x64.Build.0 = Debug|x64
		{DD7B9A46-F48A-49A3-AF6C-FCE5E8A82E4C}.Debug|x64.Deploy.0 = Debug|x64
		{DD7B9A46-F48A-49A3-AF6C-FCE5E8A82E4C}.Debug|x86.ActiveCfg = Debug|Win32
		{DD7B9A46-F48A-49A3-AF6C-FCE5E8A82E4C}.Debug|x86.Build.0 = Debug|Win32
		{DD7B9A46-F48A-49A3-AF6C-FCE5E8A82E4C}.Debug|x86.Deploy.0 = Debug|Win32
		{DD7B9A46-F48A-49A3-AF6C-FCE5E8A82E4C}.Release|ARM64.ActiveCfg = Release|ARM64
		{DD7B9A46-F48A-49A3-AF6C-FCE5E8A82E4C}.Release|ARM64.Build.0 = Release|ARM64
		{DD7B9A46-F48A-49A3-AF6C-FCE5E8A82E4C}.Release|ARM64.Deploy.0 = Release|ARM64
		{DD7B9A46-F48A-49A3-AF6C-FCE5E8A82E4C}.Release|x64.ActiveCfg = Release|x64
		{DD7B9A46-F48A-49A3-AF6C-FCE5E8A82E4C}.Release|x64.Build.0 = Release|x64
		{DD7B9A46-F48A-49A3-AF6C-FCE5E8A82E4C}.Release|x64.Deploy.0 = Release|x64
		{DD7B9A46-F48A-49A3-AF6C-FCE5E8A82E4C}.Release|x86.ActiveCfg = Release|Win32
		{DD7B9A46-F48A-49A3-AF6C-FCE5E8A82E4C}.Release|x86.Build.0 = Release|Win32
		{DD7B9A46-F48A-49A3-AF6C-FCE5E8A82E4C}.Release|x86.Deploy.0 = Release|Win32
	EndGlobalSection
	GlobalSection(SolutionProperties) = preSolution
		HideSolutionNode = FALSE
	EndGlobalSection
	GlobalSection(ExtensibilityGlobals) = postSolution
		SolutionGuid = {D43FAD39-F619-437D-BB40-04A3982ACB6A}
	EndGlobalSection
EndGlobal
"
`;

exports[`C++ NuGet+Hermes Application: SnapshotApp.vcxproj 1`] = `
"<?xml version=\\"1.0\\" encoding=\\"utf-8\\"?>
<Project ToolsVersion=\\"Current\\" DefaultTargets=\\"Build\\" xmlns=\\"http://schemas.microsoft.com/developer/msbuild/2003\\">
  <Import Project=\\"$(SolutionDir)\\\\ExperimentalFeatures.props\\" Condition=\\"Exists('$(SolutionDir)\\\\ExperimentalFeatures.props')\\" />
  <Import Project=\\"..\\\\packages\\\\Microsoft.Windows.CppWinRT.2.0.210312.4\\\\build\\\\native\\\\Microsoft.Windows.CppWinRT.props\\" Condition=\\"Exists('..\\\\packages\\\\Microsoft.Windows.CppWinRT.2.0.210312.4\\\\build\\\\native\\\\Microsoft.Windows.CppWinRT.props')\\" />
  <PropertyGroup Label=\\"Globals\\">
    <CppWinRTOptimized>true</CppWinRTOptimized>
    <CppWinRTRootNamespaceAutoMerge>true</CppWinRTRootNamespaceAutoMerge>
    <MinimalCoreWin>true</MinimalCoreWin>
    <ProjectGuid>{dd7b9a46-f48a-49a3-af6c-fce5e8a82e4c}</ProjectGuid>
    <ProjectName>SnapshotApp</ProjectName>
    <RootNamespace>SnapshotApp</RootNamespace>
    <DefaultLanguage>en-US</DefaultLanguage>
    <MinimumVisualStudioVersion>16.0</MinimumVisualStudioVersion>
    <AppContainerApplication>true</AppContainerApplication>
    <ApplicationType>Windows Store</ApplicationType>
    <ApplicationTypeRevision>10.0</ApplicationTypeRevision>
  </PropertyGroup>
  <PropertyGroup Label=\\"ReactNativeWindowsProps\\">
    <ReactNativeWindowsDir Condition=\\"'$(ReactNativeWindowsDir)' == ''\\">$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), 'node_modules\\\\react-native-windows\\\\package.json'))\\\\node_modules\\\\react-native-windows\\\\</ReactNativeWindowsDir>
  </PropertyGroup>
  <Import Project=\\"$(ReactNativeWindowsDir)\\\\PropertySheets\\\\External\\\\Microsoft.ReactNative.WindowsSdk.Default.props\\" />
  <Import Project=\\"$(VCTargetsPath)\\\\Microsoft.Cpp.Default.props\\" />
  <ItemGroup Label=\\"ProjectConfigurations\\">
    <ProjectConfiguration Include=\\"Debug|ARM64\\">
      <Configuration>Debug</Configuration>
      <Platform>ARM64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include=\\"Debug|Win32\\">
      <Configuration>Debug</Configuration>
      <Platform>Win32</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include=\\"Debug|x64\\">
      <Configuration>Debug</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include=\\"Release|ARM64\\">
      <Configuration>Release</Configuration>
      <Platform>ARM64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include=\\"Release|Win32\\">
      <Configuration>Release</Configuration>
      <Platform>Win32</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include=\\"Release|x64\\">
      <Configuration>Release</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
  </ItemGroup>
  <PropertyGroup Label=\\"Configuration\\">
    <ConfigurationType>Application</ConfigurationType>
    <CharacterSet>Unicode</CharacterSet>
  </PropertyGroup>
  <PropertyGroup Condition=\\"'$(Configuration)'=='Debug'\\" Label=\\"Configuration\\">
    <UseDebugLibraries>true</UseDebugLibraries>
    <LinkIncremental>true</LinkIncremental>
  </PropertyGroup>
  <PropertyGroup Condition=\\"'$(Configuration)'=='Release'\\" Label=\\"Configuration\\">
    <UseDebugLibraries>false</UseDebugLibraries>
    <WholeProgramOptimization>true</WholeProgramOptimization>
    <LinkIncremental>false</LinkIncremental>
  </PropertyGroup>
  <Import Project=\\"$(VCTargetsPath)\\\\Microsoft.Cpp.props\\" />
  <ImportGroup Label=\\"ExtensionSettings\\"></ImportGroup>
  <ImportGroup Label=\\"PropertySheets\\">
    <Import Project=\\"$(UserRootDir)\\\\Microsoft.Cpp.$(Platform).user.props\\" Condition=\\"exists('$(UserRootDir)\\\\Microsoft.Cpp.$(Platform).user.props')\\" Label=\\"LocalAppDataPlatform\\" />
  </ImportGroup>
  <ImportGroup Label=\\"PropertySheets\\">
    <Import Project=\\"PropertySheet.props\\" />
  </ImportGroup>
  <ImportGroup Label=\\"ReactNativeWindowsPropertySheets\\">
    <Import Project=\\"$(ReactNativeWindowsDir)\\\\PropertySheets\\\\external\\\\Microsoft.ReactNative.Uwp.CppApp.props\\" Condition=\\"Exists('$(ReactNativeWindowsDir)\\\\PropertySheets\\\\External\\\\Microsoft.ReactNative.Uwp.CppApp.props')\\" />
    <Import Project=\\"..\\\\packages\\\\$(WinUIPackageProps)\\" Condition=\\"'$(WinUIPackageProps)'!='' And Exists('..\\\\packages\\\\$(WinUIPackageProps)')\\" />
  </ImportGroup>
  <PropertyGroup Label=\\"UserMacros\\" />
  <ItemDefinitionGroup>
    <ClCompile>
      <PrecompiledHeader>Use</PrecompiledHeader>
      <PrecompiledHeaderFile>pch.h</PrecompiledHeaderFile>
      <PrecompiledHeaderOutputFile>$(IntDir)pch.pch</PrecompiledHeaderOutputFile>
      <WarningLevel>Level4</WarningLevel>
      <AdditionalOptions>%(AdditionalOptions) /bigobj</AdditionalOptions>
      <DisableSpecificWarnings>4453;28204</DisableSpecificWarnings>
    </ClCompile>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition=\\"'$(Configuration)'=='Debug'\\">
    <ClCompile>
      <PreprocessorDefinitions>_DEBUG;%(PreprocessorDefinitions)</PreprocessorDefinitions>
    </ClCompile>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition=\\"'$(Configuration)'=='Release'\\">
    <ClCompile>
      <PreprocessorDefinitions>NDEBUG;%(PreprocessorDefinitions)</PreprocessorDefinitions>
    </ClCompile>
  </ItemDefinitionGroup>
  <ItemGroup>
    <ClInclude Include=\\"MainPage.h\\">
      <DependentUpon>MainPage.xaml</DependentUpon>
      <SubType>Code</SubType>
    </ClInclude>
    <ClInclude Include=\\"ReactPackageProvider.h\\" />
    <ClInclude Include=\\"AutolinkedNativeModules.g.h\\" />
    <ClInclude Include=\\"pch.h\\" />
    <ClInclude Include=\\"App.h\\">
      <DependentUpon>App.xaml</DependentUpon>
    </ClInclude>
  </ItemGroup>
  <ItemGroup>
    <ApplicationDefinition Include=\\"App.xaml\\">
      <SubType>Designer</SubType>
    </ApplicationDefinition>
  </ItemGroup>
  <ItemGroup>
    <AppxManifest Include=\\"Package.appxmanifest\\">
      <SubType>Designer</SubType>
    </AppxManifest>
  </ItemGroup>
  <ItemGroup>
    <Image Include=\\"Assets\\\\LockScreenLogo.scale-200.png\\" />
    <Image Include=\\"Assets\\\\SplashScreen.scale-200.png\\" />
    <Image Include=\\"Assets\\\\Square150x150Logo.scale-200.png\\" />
    <Image Include=\\"Assets\\\\Square44x44Logo.scale-200.png\\" />
    <Image Include=\\"Assets\\\\Square44x44Logo.targetsize-24_altform-unplated.png\\" />
    <Image Include=\\"Assets\\\\StoreLogo.png\\" />
    <Image Include=\\"Assets\\\\Wide310x150Logo.scale-200.png\\" />
  </ItemGroup>
  <ItemGroup>
    <ClCompile Include=\\"MainPage.cpp\\">
      <DependentUpon>MainPage.xaml</DependentUpon>
      <SubType>Code</SubType>
    </ClCompile>
    <ClCompile Include=\\"ReactPackageProvider.cpp\\" />
    <ClCompile Include=\\"AutolinkedNativeModules.g.cpp\\" />
    <ClCompile Include=\\"pch.cpp\\">
      <PrecompiledHeader>Create</PrecompiledHeader>
    </ClCompile>
    <ClCompile Include=\\"App.cpp\\">
      <DependentUpon>App.xaml</DependentUpon>
    </ClCompile>
    <ClCompile Include=\\"$(GeneratedFilesDir)module.g.cpp\\" />
  </ItemGroup>
  <ItemGroup>
    <Midl Include=\\"App.idl\\">
      <DependentUpon>App.xaml</DependentUpon>
    </Midl>
    <Midl Include=\\"MainPage.idl\\">
      <DependentUpon>MainPage.xaml</DependentUpon>
      <SubType>Code</SubType>
    </Midl>
  </ItemGroup>
  <ItemGroup>
    <None Include=\\"packages.config\\" />
    <None Include=\\"PropertySheet.props\\" />
    <Text Include=\\"readme.txt\\">
      <DeploymentContent>false</DeploymentContent>
    </Text>
  </ItemGroup>
  <ItemGroup>
    <Page Include=\\"MainPage.xaml\\">
      <SubType>Designer</SubType>
    </Page>
  </ItemGroup>
  <Import Project=\\"$(VCTargetsPath)\\\\Microsoft.Cpp.targets\\" />
  <ImportGroup Label=\\"ReactNativeWindowsTargets\\">
    <Import Project=\\"$(ReactNativeWindowsDir)\\\\PropertySheets\\\\External\\\\Microsoft.ReactNative.Uwp.CppApp.targets\\" Condition=\\"Exists('$(ReactNativeWindowsDir)\\\\PropertySheets\\\\External\\\\Microsoft.ReactNative.Uwp.CppApp.targets')\\" />
  </ImportGroup>
  <Target Name=\\"EnsureReactNativeWindowsTargets\\" BeforeTargets=\\"PrepareForBuild\\">
    <PropertyGroup>
      <ErrorText>This project references targets in your node_modules\\\\react-native-windows folder that are missing. The missing file is {0}.</ErrorText>
    </PropertyGroup>
    <Error Condition=\\"!Exists('$(ReactNativeWindowsDir)\\\\PropertySheets\\\\External\\\\Microsoft.ReactNative.Uwp.CppApp.props')\\" Text=\\"$([System.String]::Format('$(ErrorText)', '$(ReactNativeWindowsDir)\\\\PropertySheets\\\\External\\\\Microsoft.ReactNative.Uwp.CppApp.props'))\\" />
    <Error Condition=\\"!Exists('$(ReactNativeWindowsDir)\\\\PropertySheets\\\\External\\\\Microsoft.ReactNative.Uwp.CppApp.targets')\\" Text=\\"$([System.String]::Format('$(ErrorText)', '$(ReactNativeWindowsDir)\\\\PropertySheets\\\\External\\\\Microsoft.ReactNative.Uwp.CppApp.targets'))\\" />
  </Target>
  <ImportGroup Label=\\"ExtensionTargets\\">
    <Import Project=\\"..\\\\packages\\\\Microsoft.Windows.CppWinRT.2.0.210312.4\\\\build\\\\native\\\\Microsoft.Windows.CppWinRT.targets\\" Condition=\\"Exists('..\\\\packages\\\\Microsoft.Windows.CppWinRT.2.0.210312.4\\\\build\\\\native\\\\Microsoft.Windows.CppWinRT.targets')\\" />
    <Import Project=\\"..\\\\packages\\\\ReactNative.Hermes.Windows.0.9.0-ms.6\\\\build\\\\native\\\\ReactNative.Hermes.Windows.targets\\" Condition=\\"Exists('..\\\\packages\\\\ReactNative.Hermes.Windows.0.9.0-ms.6\\\\build\\\\native\\\\ReactNative.Hermes.Windows.targets')\\" />
    <Import Project=\\"..\\\\packages\\\\Microsoft.ReactNative.0.0.0-canary.409\\\\build\\\\native\\\\Microsoft.ReactNative.targets\\" Condition=\\"Exists('..\\\\packages\\\\Microsoft.ReactNative.0.0.0-canary.409\\\\build\\\\native\\\\Microsoft.ReactNative.targets')\\" />
    <Import Project=\\"..\\\\packages\\\\Microsoft.ReactNative.Cxx.0.0.0-canary.409\\\\build\\\\native\\\\Microsoft.ReactNative.Cxx.targets\\" Condition=\\"Exists('..\\\\packages\\\\Microsoft.ReactNative.Cxx.0.0.0-canary.409\\\\build\\\\native\\\\Microsoft.ReactNative.Cxx.targets')\\" />
    <Import Project=\\"..\\\\packages\\\\$(WinUIPackageName).$(WinUIPackageVersion)\\\\build\\\\native\\\\$(WinUIPackageName).targets\\" Condition=\\"Exists('..\\\\packages\\\\$(WinUIPackageName).$(WinUIPackageVersion)\\\\build\\\\native\\\\$(WinUIPackageName).targets')\\" />
  </ImportGroup>
  <Target Name=\\"EnsureNuGetPackageBuildImports\\" BeforeTargets=\\"PrepareForBuild\\">
    <PropertyGroup>
      <ErrorText>This project references NuGet package(s) that are missing on this computer. Use NuGet Package Restore to download them.  For more information, see http://go.microsoft.com/fwlink/?LinkID=322105. The missing file is {0}.</ErrorText>
    </PropertyGroup>
    <Error Condition=\\"!Exists('..\\\\packages\\\\Microsoft.Windows.CppWinRT.2.0.210312.4\\\\build\\\\native\\\\Microsoft.Windows.CppWinRT.props')\\" Text=\\"$([System.String]::Format('$(ErrorText)', '..\\\\packages\\\\Microsoft.Windows.CppWinRT.2.0.210312.4\\\\build\\\\native\\\\Microsoft.Windows.CppWinRT.props'))\\" />
    <Error Condition=\\"!Exists('..\\\\packages\\\\Microsoft.Windows.CppWinRT.2.0.210312.4\\\\build\\\\native\\\\Microsoft.Windows.CppWinRT.targets')\\" Text=\\"$([System.String]::Format('$(ErrorText)', '..\\\\packages\\\\Microsoft.Windows.CppWinRT.2.0.210312.4\\\\build\\\\native\\\\Microsoft.Windows.CppWinRT.targets'))\\" />
    <Error Condition=\\"!Exists('..\\\\packages\\\\ReactNative.Hermes.Windows.0.9.0-ms.6\\\\build\\\\native\\\\ReactNative.Hermes.Windows.targets')\\" Text=\\"$([System.String]::Format('$(ErrorText)', '..\\\\packages\\\\ReactNative.Hermes.Windows.0.9.0-ms.6\\\\build\\\\native\\\\ReactNative.Hermes.Windows.targets'))\\" />
    <Error Condition=\\"!Exists('..\\\\packages\\\\Microsoft.ReactNative.0.0.0-canary.409\\\\build\\\\native\\\\Microsoft.ReactNative.targets')\\" Text=\\"$([System.String]::Format('$(ErrorText)', '..\\\\packages\\\\Microsoft.ReactNative.0.0.0-canary.409\\\\build\\\\native\\\\Microsoft.ReactNative.targets'))\\" />
    <Error Condition=\\"!Exists('..\\\\packages\\\\Microsoft.ReactNative.Cxx.0.0.0-canary.409\\\\build\\\\native\\\\Microsoft.ReactNative.Cxx.targets')\\" Text=\\"$([System.String]::Format('$(ErrorText)', '..\\\\packages\\\\Microsoft.ReactNative.Cxx.0.0.0-canary.409\\\\build\\\\native\\\\Microsoft.ReactNative.Cxx.targets'))\\" />
    <Error Condition=\\"!Exists('..\\\\packages\\\\$(WinUIPackageName).$(WinUIPackageVersion)\\\\build\\\\native\\\\$(WinUIPackageName).targets')\\" Text=\\"$([System.String]::Format('$(ErrorText)', '..\\\\packages\\\\$(WinUIPackageName).$(WinUIPackageVersion)\\\\build\\\\native\\\\$(WinUIPackageName).targets'))\\" />
  </Target>
</Project>
"
`;

exports[`C++ NuGet+Hermes Application: SnapshotApp.vcxproj.filters 1`] = `
"﻿<?xml version=\\"1.0\\" encoding=\\"utf-8\\"?>
<Project ToolsVersion=\\"Current\\" xmlns=\\"http://schemas.microsoft.com/developer/msbuild/2003\\">
  <ItemGroup>
    <ApplicationDefinition Include=\\"App.xaml\\" />
  </ItemGroup>
  <ItemGroup>
    <Midl Include=\\"App.idl\\" />
  </ItemGroup>
  <ItemGroup>
    <ClCompile Include=\\"pch.cpp\\" />
    <ClCompile Include=\\"App.cpp\\" />
    <ClCompile Include=\\"$(GeneratedFilesDir)module.g.cpp\\" />
    <ClCompile Include=\\"ReactPackageProvider.cpp\\" />
    <ClCompile Include=\\"AutolinkedNativeModules.g.cpp\\" />
  </ItemGroup>
  <ItemGroup>
    <ClInclude Include=\\"pch.h\\" />
    <ClInclude Include=\\"App.h\\" />
    <ClInclude Include=\\"ReactPackageProvider.h\\" />
    <ClInclude Include=\\"AutolinkedNativeModules.g.h\\" />
  </ItemGroup>
  <ItemGroup>
    <Image Include=\\"Assets\\\\Wide310x150Logo.scale-200.png\\">
      <Filter>Assets</Filter>
    </Image>
    <Image Include=\\"Assets\\\\StoreLogo.png\\">
      <Filter>Assets</Filter>
    </Image>
    <Image Include=\\"Assets\\\\Square150x150Logo.scale-200.png\\">
      <Filter>Assets</Filter>
    </Image>
    <Image Include=\\"Assets\\\\Square44x44Logo.targetsize-24_altform-unplated.png\\">
      <Filter>Assets</Filter>
    </Image>
    <Image Include=\\"Assets\\\\Square44x44Logo.scale-200.png\\">
      <Filter>Assets</Filter>
    </Image>
    <Image Include=\\"Assets\\\\SplashScreen.scale-200.png\\">
      <Filter>Assets</Filter>
    </Image>
    <Image Include=\\"Assets\\\\LockScreenLogo.scale-200.png\\">
      <Filter>Assets</Filter>
    </Image>
  </ItemGroup>
  <ItemGroup>
    <AppxManifest Include=\\"Package.appxmanifest\\" />
  </ItemGroup>
  <ItemGroup>
    <Filter Include=\\"Assets\\">
      <UniqueIdentifier>{e48dc53e-40b1-40cb-970a-f89935452892}</UniqueIdentifier>
    </Filter>
  </ItemGroup>
  <ItemGroup>
    <None Include=\\"PropertySheet.props\\" />
    <None Include=\\"packages.config\\" />
  </ItemGroup>
  <ItemGroup>
    <Text Include=\\"readme.txt\\" />
  </ItemGroup>
  <ItemGroup>
    <Page Include=\\"MainPage.xaml\\" />
  </ItemGroup>
</Project>"
`;

exports[`C++ NuGet+Hermes Application: index.windows.bundle 1`] = `
"/**
 * 
 * Be sure to generate this file using the CLI:
 *
 * npx react-native bundle --platform windows --entry-file index.js 
 *   --bundle-output windows\\\\SnapshotApp\\\\Bundle\\\\index.windows.bundle
 *   --assets-dest windows\\\\SnapshotApp\\\\Bundle
 *
 */"
`;

exports[`C++ NuGet+Hermes Application: metro.config.js 1`] = `
"/**
 * Metro configuration for React Native
 * https://github.com/facebook/react-native
 *
 * @format
 */
const fs = require('fs');
const path = require('path');
const exclusionList = require('metro-config/src/defaults/exclusionList');

const rnwPath = fs.realpathSync(
  path.resolve(require.resolve('react-native-windows/package.json'), '..'),
);

module.exports = {
  resolver: {
    blockList: exclusionList([
      // This stops \\"react-native run-windows\\" from causing the metro server to crash if its already running
      new RegExp(
        \`\${path.resolve(__dirname, 'windows').replace(/[/\\\\\\\\]/g, '/')}.*\`,
      ),
      // This prevents \\"react-native run-windows\\" from hitting: EBUSY: resource busy or locked, open msbuild.ProjectImports.zip or other files produced by msbuild
      new RegExp(\`\${rnwPath}/build/.*\`),
      new RegExp(\`\${rnwPath}/target/.*\`),
      /.*\\\\.ProjectImports\\\\.zip/,
    ]),
  },
  transformer: {
    getTransformOptions: async () => ({
      transform: {
        experimentalImportSupport: false,
        inlineRequires: true,
      },
    }),
  },
};
"
`;

exports[`C++ NuGet+Hermes Application: packages.config 1`] = `
"﻿<?xml version=\\"1.0\\" encoding=\\"utf-8\\"?>
<packages>
  <package id=\\"Microsoft.Windows.CppWinRT\\" version=\\"2.0.210312.4\\" targetFramework=\\"native\\" />
  <package id=\\"ReactNative.Hermes.Windows\\" version=\\"0.9.0-ms.6\\" targetFramework=\\"native\\" />
  <package id=\\"Microsoft.ReactNative\\" version=\\"0.0.0-canary.409\\" targetFramework=\\"native\\" />
  <package id=\\"Microsoft.ReactNative.Cxx\\" version=\\"0.0.0-canary.409\\" targetFramework=\\"native\\" />
  <package id=\\"Microsoft.UI.Xaml\\" version=\\"2.7.0\\" targetFramework=\\"native\\" />
</packages>"
`;

exports[`C++ NuGet+Hermes Application: pch.cpp 1`] = `
"﻿#include \\"pch.h\\"
"
`;

exports[`C++ NuGet+Hermes Application: pch.h 1`] = `
"#pragma once

#define NOMINMAX

#include <hstring.h>
#include <restrictederrorinfo.h>
#include <unknwn.h>
#include <windows.h>
#include <CppWinRTIncludes.h>
#include <VersionMacros.h>
#include <winrt/Windows.ApplicationModel.Activation.h>
#include <UI.Xaml.Controls.Primitives.h>
#include <UI.Xaml.Controls.h>
#include <UI.Xaml.Markup.h>
#include <UI.Xaml.Navigation.h>

#include <winrt/Microsoft.ReactNative.h>

#include <winrt/Microsoft.UI.Xaml.Automation.Peers.h>
#include <winrt/Microsoft.UI.Xaml.Controls.Primitives.h>
#include <winrt/Microsoft.UI.Xaml.Controls.h>
#include <winrt/Microsoft.UI.Xaml.Media.h>
#include <winrt/Microsoft.UI.Xaml.XamlTypeInfo.h>
using namespace winrt::Windows::Foundation;
"
`;

exports[`C++ NuGet+Hermes Library: ExperimentalFeatures.props 1`] = `
"<?xml version=\\"1.0\\" encoding=\\"utf-8\\"?>
<Project xmlns=\\"http://schemas.microsoft.com/developer/msbuild/2003\\">

  <!--
    Application projects contain a file with this name to specify some important settings
    that will apply globally for the app and *all* native modules the app consumes. These
    values are set by the app developer.
  -->

</Project>
"
`;

exports[`C++ NuGet+Hermes Library: NuGet.Config 1`] = `
"<?xml version=\\"1.0\\" encoding=\\"utf-8\\"?>
<configuration>
  <config>
    <add key=\\"repositoryPath\\" value=\\"packages\\" />
  </config>
  <packageSources>
    <clear />
    <add key=\\"react-native\\" value=\\"https://pkgs.dev.azure.com/ms/react-native/_packaging/react-native-public/nuget/v3/index.json\\" />
    <add key=\\"Nuget.org\\" value=\\"https://api.nuget.org/v3/index.json\\" />
  </packageSources>
  <disabledPackageSources>
    <clear />
  </disabledPackageSources>  
</configuration>
"
`;

exports[`C++ NuGet+Hermes Library: PropertySheet.props 1`] = `
"<?xml version=\\"1.0\\" encoding=\\"utf-8\\"?>
<Project ToolsVersion=\\"Current\\" xmlns=\\"http://schemas.microsoft.com/developer/msbuild/2003\\">
  <ImportGroup Label=\\"PropertySheets\\" />
  <PropertyGroup Label=\\"UserMacros\\" />
  <!--
    To customize common C++/WinRT project properties:
    * right-click the project node
    * expand the Common Properties item
    * select the C++/WinRT property page

    For more advanced scenarios, and complete documentation, please see:
    https://github.com/Microsoft/xlang/tree/master/src/package/cppwinrt/nuget
    -->
  <PropertyGroup />
  <ItemDefinitionGroup />
</Project>"
`;

exports[`C++ NuGet+Hermes Library: ReactNativeModule.h 1`] = `
"﻿#pragma once

#include \\"JSValue.h\\"
#include \\"NativeModules.h\\"

using namespace winrt::Microsoft::ReactNative;

namespace winrt::SnapshotApp
{

REACT_MODULE(ReactNativeModule, L\\"SnapshotApp\\")
struct ReactNativeModule
{
    // See https://microsoft.github.io/react-native-windows/docs/native-modules for details on writing native modules

    REACT_INIT(Initialize)
    void Initialize(ReactContext const &reactContext) noexcept
    {
        m_reactContext = reactContext;
    }
    
    REACT_METHOD(sampleMethod)
    void sampleMethod(std::string stringArgument, int numberArgument, std::function<void(std::string)> &&callback) noexcept
    {
        // TODO: Implement some actually useful functionality
        callback(\\"Received numberArgument: \\" + std::to_string(numberArgument) + \\" stringArgument: \\" + stringArgument);
    }

    private:
        ReactContext m_reactContext{nullptr};
};

} // namespace winrt::SnapshotApp
"
`;

exports[`C++ NuGet+Hermes Library: ReactPackageProvider.cpp 1`] = `
"#include \\"pch.h\\"
#include \\"ReactPackageProvider.h\\"
#if __has_include(\\"ReactPackageProvider.g.cpp\\")
#include \\"ReactPackageProvider.g.cpp\\"
#endif

#include \\"ReactNativeModule.h\\"

using namespace winrt::Microsoft::ReactNative;

namespace winrt::SnapshotApp::implementation
{

void ReactPackageProvider::CreatePackage(IReactPackageBuilder const &packageBuilder) noexcept
{
    AddAttributedModules(packageBuilder);
}

} // namespace winrt::SnapshotApp::implementation
"
`;

exports[`C++ NuGet+Hermes Library: ReactPackageProvider.h 1`] = `
"#pragma once
#include \\"ReactPackageProvider.g.h\\"

using namespace winrt::Microsoft::ReactNative;

namespace winrt::SnapshotApp::implementation
{
    struct ReactPackageProvider : ReactPackageProviderT<ReactPackageProvider>
    {
        ReactPackageProvider() = default;

        void CreatePackage(IReactPackageBuilder const &packageBuilder) noexcept;
    };
} // namespace winrt::SnapshotApp::implementation

namespace winrt::SnapshotApp::factory_implementation
{

struct ReactPackageProvider : ReactPackageProviderT<ReactPackageProvider, implementation::ReactPackageProvider> {};

} // namespace winrt::SnapshotApp::factory_implementation
"
`;

exports[`C++ NuGet+Hermes Library: ReactPackageProvider.idl 1`] = `
"namespace SnapshotApp
{
    [webhosthidden]
    [default_interface]
    runtimeclass ReactPackageProvider : Microsoft.ReactNative.IReactPackageProvider
    {
        ReactPackageProvider();
    };
}
"
`;

exports[`C++ NuGet+Hermes Library: SnapshotApp.def 1`] = `
"﻿EXPORTS
DllCanUnloadNow = WINRT_CanUnloadNow                    PRIVATE
DllGetActivationFactory = WINRT_GetActivationFactory    PRIVATE
"
`;

exports[`C++ NuGet+Hermes Library: SnapshotApp.sln 1`] = `
"﻿
Microsoft Visual Studio Solution File, Format Version 12.00
# Visual Studio Version 16
VisualStudioVersion = 16.0.29215.179
MinimumVisualStudioVersion = 10.0.40219.1
Project(\\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\\") = \\"SnapshotApp\\", \\"SnapshotApp\\\\SnapshotApp.vcxproj\\", \\"{F1A21D06-AAC4-4B56-ACAF-AC10F3D6A0E1}\\"
EndProject
Global
	GlobalSection(SolutionConfigurationPlatforms) = preSolution
		Debug|ARM64 = Debug|ARM64
		Debug|x64 = Debug|x64
		Debug|x86 = Debug|x86
		Release|ARM64 = Release|ARM64
		Release|x64 = Release|x64
		Release|x86 = Release|x86
	EndGlobalSection
	GlobalSection(ProjectConfigurationPlatforms) = postSolution
		{F1A21D06-AAC4-4B56-ACAF-AC10F3D6A0E1}.Debug|ARM64.ActiveCfg = Debug|ARM64
		{F1A21D06-AAC4-4B56-ACAF-AC10F3D6A0E1}.Debug|ARM64.Build.0 = Debug|ARM64
		{F1A21D06-AAC4-4B56-ACAF-AC10F3D6A0E1}.Debug|ARM64.Deploy.0 = Debug|ARM64
		{F1A21D06-AAC4-4B56-ACAF-AC10F3D6A0E1}.Debug|x64.ActiveCfg = Debug|x64
		{F1A21D06-AAC4-4B56-ACAF-AC10F3D6A0E1}.Debug|x64.Build.0 = Debug|x64
		{F1A21D06-AAC4-4B56-ACAF-AC10F3D6A0E1}.Debug|x64.Deploy.0 = Debug|x64
		{F1A21D06-AAC4-4B56-ACAF-AC10F3D6A0E1}.Debug|x86.ActiveCfg = Debug|Win32
		{F1A21D06-AAC4-4B56-ACAF-AC10F3D6A0E1}.Debug|x86.Build.0 = Debug|Win32
		{F1A21D06-AAC4-4B56-ACAF-AC10F3D6A0E1}.Debug|x86.Deploy.0 = Debug|Win32
		{F1A21D06-AAC4-4B56-ACAF-AC10F3D6A0E1}.Release|ARM64.ActiveCfg = Release|ARM64
		{F1A21D06-AAC4-4B56-ACAF-AC10F3D6A0E1}.Release|ARM64.Build.0 = Release|ARM64
		{F1A21D06-AAC4-4B56-ACAF-AC10F3D6A0E1}.Release|ARM64.Deploy.0 = Release|ARM64
		{F1A21D06-AAC4-4B56-ACAF-AC10F3D6A0E1}.Release|x64.ActiveCfg = Release|x64
		{F1A21D06-AAC4-4B56-ACAF-AC10F3D6A0E1}.Release|x64.Build.0 = Release|x64
		{F1A21D06-AAC4-4B56-ACAF-AC10F3D6A0E1}.Release|x64.Deploy.0 = Release|x64
		{F1A21D06-AAC4-4B56-ACAF-AC10F3D6A0E1}.Release|x86.ActiveCfg = Release|Win32
		{F1A21D06-AAC4-4B56-ACAF-AC10F3D6A0E1}.Release|x86.Build.0 = Release|Win32
		{F1A21D06-AAC4-4B56-ACAF-AC10F3D6A0E1}.Release|x86.Deploy.0 = Release|Win32
	EndGlobalSection
	GlobalSection(SolutionProperties) = preSolution
		HideSolutionNode = FALSE
	EndGlobalSection
	GlobalSection(ExtensibilityGlobals) = postSolution
		SolutionGuid = {D43FAD39-F619-437D-BB40-04A3982ACB6A}
	EndGlobalSection
EndGlobal
"
`;

exports[`C++ NuGet+Hermes Library: SnapshotApp.vcxproj 1`] = `
"<?xml version=\\"1.0\\" encoding=\\"utf-8\\"?>
<Project ToolsVersion=\\"Current\\" DefaultTargets=\\"Build\\" xmlns=\\"http://schemas.microsoft.com/developer/msbuild/2003\\">
  <Import Project=\\"$(SolutionDir)\\\\ExperimentalFeatures.props\\" Condition=\\"Exists('$(SolutionDir)\\\\ExperimentalFeatures.props')\\" />
  <Import Project=\\"$(SolutionDir)\\\\packages\\\\Microsoft.Windows.CppWinRT.2.0.210312.4\\\\build\\\\native\\\\Microsoft.Windows.CppWinRT.props\\" Condition=\\"Exists('$(SolutionDir)\\\\packages\\\\Microsoft.Windows.CppWinRT.2.0.210312.4\\\\build\\\\native\\\\Microsoft.Windows.CppWinRT.props')\\" />
  <PropertyGroup Label=\\"Globals\\">
    <CppWinRTOptimized>true</CppWinRTOptimized>
    <CppWinRTRootNamespaceAutoMerge>true</CppWinRTRootNamespaceAutoMerge>
    <MinimalCoreWin>true</MinimalCoreWin>
    <ProjectGuid>{f1a21d06-aac4-4b56-acaf-ac10f3d6a0e1}</ProjectGuid>
    <ProjectName>SnapshotApp</ProjectName>
    <RootNamespace>SnapshotApp</RootNamespace>
    <DefaultLanguage>en-US</DefaultLanguage>
    <MinimumVisualStudioVersion>16.0</MinimumVisualStudioVersion>
    <AppContainerApplication>true</AppContainerApplication>
    <ApplicationType>Windows Store</ApplicationType>
    <ApplicationTypeRevision>10.0</ApplicationTypeRevision>
  </PropertyGroup>
  <PropertyGroup Label=\\"ReactNativeWindowsProps\\">
    <ReactNativeWindowsDir Condition=\\"'$(ReactNativeWindowsDir)' == ''\\">$([MSBuild]::GetDirectoryNameOfFileAbove($(SolutionDir), 'node_modules\\\\react-native-windows\\\\package.json'))\\\\node_modules\\\\react-native-windows\\\\</ReactNativeWindowsDir>
  </PropertyGroup>
  <Import Project=\\"$(ReactNativeWindowsDir)\\\\PropertySheets\\\\External\\\\Microsoft.ReactNative.WindowsSdk.Default.props\\" Condition=\\"Exists('$(ReactNativeWindowsDir)\\\\PropertySheets\\\\External\\\\Microsoft.ReactNative.WindowsSdk.Default.props')\\" />
  <PropertyGroup Label=\\"Fallback Windows SDK Versions\\">
    <WindowsTargetPlatformVersion Condition=\\" '$(WindowsTargetPlatformVersion)' == '' \\">10.0.19041.0</WindowsTargetPlatformVersion>
    <WindowsTargetPlatformMinVersion Condition=\\" '$(WindowsTargetPlatformMinVersion)' == '' \\">10.0.15063.0</WindowsTargetPlatformMinVersion>
  </PropertyGroup>
  <Import Project=\\"$(VCTargetsPath)\\\\Microsoft.Cpp.Default.props\\" />
  <ItemGroup Label=\\"ProjectConfigurations\\">
    <ProjectConfiguration Include=\\"Debug|ARM64\\">
      <Configuration>Debug</Configuration>
      <Platform>ARM64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include=\\"Debug|Win32\\">
      <Configuration>Debug</Configuration>
      <Platform>Win32</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include=\\"Debug|x64\\">
      <Configuration>Debug</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include=\\"Release|ARM64\\">
      <Configuration>Release</Configuration>
      <Platform>ARM64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include=\\"Release|Win32\\">
      <Configuration>Release</Configuration>
      <Platform>Win32</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include=\\"Release|x64\\">
      <Configuration>Release</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
  </ItemGroup>
  <PropertyGroup Label=\\"Configuration\\">
    <ConfigurationType>DynamicLibrary</ConfigurationType>
    <CharacterSet>Unicode</CharacterSet>
    <GenerateManifest>false</GenerateManifest>
  </PropertyGroup>
  <PropertyGroup Condition=\\"'$(Configuration)'=='Debug'\\" Label=\\"Configuration\\">
    <UseDebugLibraries>true</UseDebugLibraries>
    <LinkIncremental>true</LinkIncremental>
  </PropertyGroup>
  <PropertyGroup Condition=\\"'$(Configuration)'=='Release'\\" Label=\\"Configuration\\">
    <UseDebugLibraries>false</UseDebugLibraries>
    <WholeProgramOptimization>true</WholeProgramOptimization>
    <LinkIncremental>false</LinkIncremental>
  </PropertyGroup>
  <Import Project=\\"$(VCTargetsPath)\\\\Microsoft.Cpp.props\\" />
  <ImportGroup Label=\\"ExtensionSettings\\"></ImportGroup>
  <ImportGroup Label=\\"PropertySheets\\">
    <Import Project=\\"$(UserRootDir)\\\\Microsoft.Cpp.$(Platform).user.props\\" Condition=\\"exists('$(UserRootDir)\\\\Microsoft.Cpp.$(Platform).user.props')\\" Label=\\"LocalAppDataPlatform\\" />
  </ImportGroup>
  <ImportGroup Label=\\"PropertySheets\\">
    <Import Project=\\"PropertySheet.props\\" />
  </ImportGroup>
  <ImportGroup Label=\\"ReactNativeWindowsPropertySheets\\">
    <Import Project=\\"$(ReactNativeWindowsDir)\\\\PropertySheets\\\\external\\\\Microsoft.ReactNative.Uwp.CppLib.props\\" Condition=\\"Exists('$(ReactNativeWindowsDir)\\\\PropertySheets\\\\External\\\\Microsoft.ReactNative.Uwp.CppLib.props')\\" />
    <Import Project=\\"$(SolutionDir)\\\\packages\\\\$(WinUIPackageProps)\\" Condition=\\"'$(WinUIPackageProps)'!='' And Exists('$(SolutionDir)\\\\packages\\\\$(WinUIPackageProps)')\\" />
  </ImportGroup>

  <PropertyGroup Label=\\"UserMacros\\" />
  <ItemDefinitionGroup>
    <ClCompile>
      <PrecompiledHeader>Use</PrecompiledHeader>
      <PrecompiledHeaderFile>pch.h</PrecompiledHeaderFile>
      <PrecompiledHeaderOutputFile>$(IntDir)pch.pch</PrecompiledHeaderOutputFile>
      <WarningLevel>Level4</WarningLevel>
      <AdditionalOptions>%(AdditionalOptions) /bigobj</AdditionalOptions>
      <DisableSpecificWarnings>4453;28204</DisableSpecificWarnings>
      <PreprocessorDefinitions>_WINRT_DLL;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <AdditionalUsingDirectories>$(WindowsSDK_WindowsMetadata);$(AdditionalUsingDirectories)</AdditionalUsingDirectories>
    </ClCompile>
    <Midl>
      <!-- This allows applications targetting older Windows SDKs (e.g. RNW 0.65 apps) to consume the library generated WinMD -->
      <AdditionalOptions>%(AdditionalOptions) /noattributename</AdditionalOptions>
    </Midl>
    <Link>
      <SubSystem>Console</SubSystem>
      <GenerateWindowsMetadata>true</GenerateWindowsMetadata>
      <ModuleDefinitionFile>SnapshotApp.def</ModuleDefinitionFile>
    </Link>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition=\\"'$(Configuration)'=='Debug'\\">
    <ClCompile>
      <PreprocessorDefinitions>_DEBUG;%(PreprocessorDefinitions)</PreprocessorDefinitions>
    </ClCompile>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition=\\"'$(Configuration)'=='Release'\\">
    <ClCompile>
      <PreprocessorDefinitions>NDEBUG;%(PreprocessorDefinitions)</PreprocessorDefinitions>
    </ClCompile>
  </ItemDefinitionGroup>
  <ItemGroup>
    <ClInclude Include=\\"ReactPackageProvider.h\\">
      <DependentUpon>ReactPackageProvider.idl</DependentUpon>
    </ClInclude>
    <ClInclude Include=\\"ReactNativeModule.h\\" />
    <ClInclude Include=\\"pch.h\\" />
  </ItemGroup>
  <ItemGroup>
    <ClCompile Include=\\"pch.cpp\\">
      <PrecompiledHeader>Create</PrecompiledHeader>
    </ClCompile>
    <ClCompile Include=\\"ReactPackageProvider.cpp\\">
      <DependentUpon>ReactPackageProvider.idl</DependentUpon>
    </ClCompile>
    <ClCompile Include=\\"$(GeneratedFilesDir)module.g.cpp\\" />
  </ItemGroup>
  <ItemGroup>
    <Midl Include=\\"ReactPackageProvider.idl\\" />
  </ItemGroup>
  <ItemGroup>
    <None Include=\\"packages.config\\" />
    <None Include=\\"PropertySheet.props\\" />
  </ItemGroup>
  <Import Project=\\"$(VCTargetsPath)\\\\Microsoft.Cpp.targets\\" />
  <ImportGroup Label=\\"ReactNativeWindowsTargets\\">
    <Import Project=\\"$(ReactNativeWindowsDir)\\\\PropertySheets\\\\External\\\\Microsoft.ReactNative.Uwp.CppLib.targets\\" Condition=\\"Exists('$(ReactNativeWindowsDir)\\\\PropertySheets\\\\External\\\\Microsoft.ReactNative.Uwp.CppLib.targets')\\" />
  </ImportGroup>
  <Target Name=\\"EnsureReactNativeWindowsTargets\\" BeforeTargets=\\"PrepareForBuild\\">
    <PropertyGroup>
      <ErrorText>This project references targets in your node_modules\\\\react-native-windows folder that are missing. The missing file is {0}.</ErrorText>
    </PropertyGroup>
    <Error Condition=\\"!Exists('$(ReactNativeWindowsDir)\\\\PropertySheets\\\\External\\\\Microsoft.ReactNative.Uwp.CppLib.props')\\" Text=\\"$([System.String]::Format('$(ErrorText)', '$(ReactNativeWindowsDir)\\\\PropertySheets\\\\External\\\\Microsoft.ReactNative.Uwp.CppLib.props'))\\" />
    <Error Condition=\\"!Exists('$(ReactNativeWindowsDir)\\\\PropertySheets\\\\External\\\\Microsoft.ReactNative.Uwp.CppLib.targets')\\" Text=\\"$([System.String]::Format('$(ErrorText)', '$(ReactNativeWindowsDir)\\\\PropertySheets\\\\External\\\\Microsoft.ReactNative.Uwp.CppLib.targets'))\\" />
  </Target>
  <ImportGroup Label=\\"ExtensionTargets\\">
    <Import Project=\\"$(SolutionDir)\\\\packages\\\\Microsoft.Windows.CppWinRT.2.0.210312.4\\\\build\\\\native\\\\Microsoft.Windows.CppWinRT.targets\\" Condition=\\"Exists('$(SolutionDir)\\\\packages\\\\Microsoft.Windows.CppWinRT.2.0.210312.4\\\\build\\\\native\\\\Microsoft.Windows.CppWinRT.targets')\\" />
    <Import Project=\\"$(SolutionDir)\\\\packages\\\\ReactNative.Hermes.Windows.0.9.0-ms.6\\\\build\\\\native\\\\ReactNative.Hermes.Windows.targets\\" Condition=\\"Exists('$(SolutionDir)\\\\packages\\\\ReactNative.Hermes.Windows.0.9.0-ms.6\\\\build\\\\native\\\\ReactNative.Hermes.Windows.targets')\\" />
    <Import Project=\\"$(SolutionDir)\\\\packages\\\\Microsoft.ReactNative.0.0.0-canary.409\\\\build\\\\native\\\\Microsoft.ReactNative.targets\\" Condition=\\"Exists('$(SolutionDir)\\\\packages\\\\Microsoft.ReactNative.0.0.0-canary.409\\\\build\\\\native\\\\Microsoft.ReactNative.targets')\\" />
    <Import Project=\\"$(SolutionDir)\\\\packages\\\\Microsoft.ReactNative.Cxx.0.0.0-canary.409\\\\build\\\\native\\\\Microsoft.ReactNative.Cxx.targets\\" Condition=\\"Exists('$(SolutionDir)\\\\packages\\\\Microsoft.ReactNative.Cxx.0.0.0-canary.409\\\\build\\\\native\\\\Microsoft.ReactNative.Cxx.targets')\\" />
    <Import Project=\\"$(SolutionDir)\\\\packages\\\\$(WinUIPackageName).$(WinUIPackageVersion)\\\\build\\\\native\\\\$(WinUIPackageName).targets\\" Condition=\\"Exists('$(SolutionDir)\\\\packages\\\\$(WinUIPackageName).$(WinUIPackageVersion)\\\\build\\\\native\\\\$(WinUIPackageName).targets')\\" />
  </ImportGroup>
  <Target Name=\\"EnsureNuGetPackageBuildImports\\" BeforeTargets=\\"PrepareForBuild\\">
    <PropertyGroup>
      <ErrorText>This project references NuGet package(s) that are missing on this computer. Use NuGet Package Restore to download them.  For more information, see http://go.microsoft.com/fwlink/?LinkID=322105. The missing file is {0}.</ErrorText>
    </PropertyGroup>
    <Error Condition=\\"!Exists('$(SolutionDir)\\\\packages\\\\Microsoft.Windows.CppWinRT.2.0.210312.4\\\\build\\\\native\\\\Microsoft.Windows.CppWinRT.props')\\" Text=\\"$([System.String]::Format('$(ErrorText)', '$(SolutionDir)\\\\packages\\\\Microsoft.Windows.CppWinRT.2.0.210312.4\\\\build\\\\native\\\\Microsoft.Windows.CppWinRT.props'))\\" />
    <Error Condition=\\"!Exists('$(SolutionDir)\\\\packages\\\\Microsoft.Windows.CppWinRT.2.0.210312.4\\\\build\\\\native\\\\Microsoft.Windows.CppWinRT.targets')\\" Text=\\"$([System.String]::Format('$(ErrorText)', '$(SolutionDir)\\\\packages\\\\Microsoft.Windows.CppWinRT.2.0.210312.4\\\\build\\\\native\\\\Microsoft.Windows.CppWinRT.targets'))\\" />
    <Error Condition=\\"!Exists('$(SolutionDir)\\\\packages\\\\ReactNative.Hermes.Windows.0.9.0-ms.6\\\\build\\\\native\\\\ReactNative.Hermes.Windows.targets')\\" Text=\\"$([System.String]::Format('$(ErrorText)', '$(SolutionDir)\\\\packages\\\\ReactNative.Hermes.Windows.0.9.0-ms.6\\\\build\\\\native\\\\ReactNative.Hermes.Windows.targets'))\\" />
    <Error Condition=\\"!Exists('$(SolutionDir)\\\\packages\\\\Microsoft.ReactNative.0.0.0-canary.409\\\\build\\\\native\\\\Microsoft.ReactNative.targets')\\" Text=\\"$([System.String]::Format('$(ErrorText)', '$(SolutionDir)\\\\packages\\\\Microsoft.ReactNative.0.0.0-canary.409\\\\build\\\\native\\\\Microsoft.ReactNative.targets'))\\" />
    <Error Condition=\\"!Exists('$(SolutionDir)\\\\packages\\\\Microsoft.ReactNative.Cxx.0.0.0-canary.409\\\\build\\\\native\\\\Microsoft.ReactNative.Cxx.targets')\\" Text=\\"$([System.String]::Format('$(ErrorText)', '$(SolutionDir)\\\\packages\\\\Microsoft.ReactNative.Cxx.0.0.0-canary.409\\\\build\\\\native\\\\Microsoft.ReactNative.Cxx.targets'))\\" />
    <Error Condition=\\"!Exists('$(SolutionDir)\\\\packages\\\\$(WinUIPackageName).$(WinUIPackageVersion)\\\\build\\\\native\\\\$(WinUIPackageName).targets')\\" Text=\\"$([System.String]::Format('$(ErrorText)', '$(SolutionDir)\\\\packages\\\\$(WinUIPackageName).$(WinUIPackageVersion)\\\\build\\\\native\\\\$(WinUIPackageName).targets'))\\" />
  </Target>
</Project>
"
`;

exports[`C++ NuGet+Hermes Library: SnapshotApp.vcxproj.filters 1`] = `
"﻿<?xml version=\\"1.0\\" encoding=\\"utf-8\\"?>
<Project ToolsVersion=\\"Current\\" xmlns=\\"http://schemas.microsoft.com/developer/msbuild/2003\\">
  <ItemGroup>
    <Midl Include=\\"ReactPackageProvider.idl\\" />
  </ItemGroup>
  <ItemGroup>
    <ClCompile Include=\\"pch.cpp\\" />
    <ClCompile Include=\\"$(GeneratedFilesDir)module.g.cpp\\" />
    <ClCompile Include=\\"ReactPackageProvider.cpp\\" />
  </ItemGroup>
  <ItemGroup>
    <ClInclude Include=\\"pch.h\\" />
    <ClInclude Include=\\"ReactPackageProvider.h\\" />
    <ClInclude Include=\\"ReactNativeModule.h\\" />
  </ItemGroup>
  <ItemGroup>
    <None Include=\\"PropertySheet.props\\" />
    <None Include=\\"packages.config\\" />
  </ItemGroup>
</Project>"
`;

exports[`C++ NuGet+Hermes Library: packages.config 1`] = `
"﻿<?xml version=\\"1.0\\" encoding=\\"utf-8\\"?>
<packages>
  <package id=\\"Microsoft.Windows.CppWinRT\\" version=\\"2.0.210312.4\\" targetFramework=\\"native\\" />
  <package id=\\"ReactNative.Hermes.Windows\\" version=\\"0.9.0-ms.6\\" targetFramework=\\"native\\" />
  <package id=\\"Microsoft.ReactNative\\" version=\\"0.0.0-canary.409\\" targetFramework=\\"native\\" />
  <package id=\\"Microsoft.ReactNative.Cxx\\" version=\\"0.0.0-canary.409\\" targetFramework=\\"native\\" />
  <package id=\\"Microsoft.UI.Xaml\\" version=\\"2.7.0\\" targetFramework=\\"native\\" />
</packages>"
`;

exports[`C++ NuGet+Hermes Library: pch.cpp 1`] = `
"﻿#include \\"pch.h\\"
"
`;

exports[`C++ NuGet+Hermes Library: pch.h 1`] = `
"#pragma once

#define NOMINMAX

#include <hstring.h>
#include <restrictederrorinfo.h>
#include <unknwn.h>
#include <windows.h>
#include <CppWinRTIncludes.h>
#if __has_include(<VersionMacros.h>)
  #include <VersionMacros.h>
#endif

#include <winrt/Microsoft.ReactNative.h>

#include <winrt/Microsoft.UI.Xaml.Automation.Peers.h>
#include <winrt/Microsoft.UI.Xaml.Controls.Primitives.h>
#include <winrt/Microsoft.UI.Xaml.Controls.h>
#include <winrt/Microsoft.UI.Xaml.Media.h>
#include <winrt/Microsoft.UI.Xaml.XamlTypeInfo.h>
using namespace winrt::Windows::Foundation;
"
`;

exports[`C++ NuGet+WinUI3 Application: App.cpp 1`] = `
"#include \\"pch.h\\"

#include \\"App.h\\"

#include \\"AutolinkedNativeModules.g.h\\"
#include \\"ReactPackageProvider.h\\"

using namespace winrt;
using namespace xaml;
using namespace xaml::Controls;
using namespace xaml::Navigation;

using namespace Windows::ApplicationModel;
namespace winrt::SnapshotApp::implementation
{
/// <summary>
/// Initializes the singleton application object.  This is the first line of
/// authored code executed, and as such is the logical equivalent of main() or
/// WinMain().
/// </summary>
App::App() noexcept
{
#if BUNDLE
    JavaScriptBundleFile(L\\"index.windows\\");
    InstanceSettings().UseWebDebugger(false);
    InstanceSettings().UseFastRefresh(false);
#else
    JavaScriptBundleFile(L\\"index\\");
    InstanceSettings().UseWebDebugger(true);
    InstanceSettings().UseFastRefresh(true);
#endif

#if _DEBUG
    InstanceSettings().UseDeveloperSupport(true);
#else
    InstanceSettings().UseDeveloperSupport(false);
#endif

    RegisterAutolinkedNativeModulePackages(PackageProviders()); // Includes any autolinked modules

    PackageProviders().Append(make<ReactPackageProvider>()); // Includes all modules in this project

    InitializeComponent();
}

/// <summary>
/// Invoked when the application is launched normally by the end user.  Other entry points
/// will be used such as when the application is launched to open a specific file.
/// </summary>
/// <param name=\\"e\\">Details about the launch request and process.</param>
void App::OnLaunched(activation::LaunchActivatedEventArgs const& e)
{
    super::OnLaunched(e);

    Frame rootFrame = Window::Current().Content().as<Frame>();
    rootFrame.Navigate(xaml_typename<MainPage>(), box_value(e.Arguments()));
}

/// <summary>
/// Invoked when the application is activated by some means other than normal launching.
/// </summary>
void App::OnActivated(Activation::IActivatedEventArgs const &e) {
  auto preActivationContent = Window::Current().Content();
  super::OnActivated(e);
  if (!preActivationContent && Window::Current()) {
    Frame rootFrame = Window::Current().Content().as<Frame>();
    rootFrame.Navigate(xaml_typename<MainPage>(), nullptr);
  }
}

/// <summary>
/// Invoked when application execution is being suspended.  Application state is saved
/// without knowing whether the application will be terminated or resumed with the contents
/// of memory still intact.
/// </summary>
/// <param name=\\"sender\\">The source of the suspend request.</param>
/// <param name=\\"e\\">Details about the suspend request.</param>
void App::OnSuspending([[maybe_unused]] IInspectable const& sender, [[maybe_unused]] SuspendingEventArgs const& e)
{
    // Save application state and stop any background activity
}

/// <summary>
/// Invoked when Navigation to a certain page fails
/// </summary>
/// <param name=\\"sender\\">The Frame which failed navigation</param>
/// <param name=\\"e\\">Details about the navigation failure</param>
void App::OnNavigationFailed(IInspectable const&, NavigationFailedEventArgs const& e)
{
    throw hresult_error(E_FAIL, hstring(L\\"Failed to load Page \\") + e.SourcePageType().Name);
}

} // namespace winrt::SnapshotApp::implementation
"
`;

exports[`C++ NuGet+WinUI3 Application: App.h 1`] = `
"#pragma once

#include \\"App.xaml.g.h\\"

#include <CppWinRTIncludes.h>

#ifdef USE_WINUI3
namespace activation = winrt::Microsoft::UI::Xaml;
#else
namespace activation = winrt::Windows::ApplicationModel::Activation;
#endif

namespace winrt::SnapshotApp::implementation
{
    struct App : AppT<App>
    {
        App() noexcept;
        void OnLaunched(activation::LaunchActivatedEventArgs const&);
        void OnActivated(Windows::ApplicationModel::Activation::IActivatedEventArgs const &e);
        void OnSuspending(IInspectable const&, Windows::ApplicationModel::SuspendingEventArgs const&);
        void OnNavigationFailed(IInspectable const&, xaml::Navigation::NavigationFailedEventArgs const&);
      private:
        using super = AppT<App>;
    };
} // namespace winrt::SnapshotApp::implementation
"
`;

exports[`C++ NuGet+WinUI3 Application: App.idl 1`] = `
"namespace SnapshotApp
{
}
"
`;

exports[`C++ NuGet+WinUI3 Application: App.xaml 1`] = `
"﻿<react:ReactApplication
    x:Class=\\"SnapshotApp.App\\"
    xmlns=\\"http://schemas.microsoft.com/winfx/2006/xaml/presentation\\"
    xmlns:x=\\"http://schemas.microsoft.com/winfx/2006/xaml\\"
    xmlns:local=\\"using:SnapshotApp\\"
    xmlns:react=\\"using:Microsoft.ReactNative\\">
    <Application.Resources>
        <XamlControlsResources xmlns=\\"using:Microsoft.UI.Xaml.Controls\\" />
    </Application.Resources>
</react:ReactApplication>
"
`;

exports[`C++ NuGet+WinUI3 Application: AutolinkedNativeModules.g.cpp 1`] = `
"// AutolinkedNativeModules.g.cpp contents generated by \\"react-native autolink-windows\\"
// clang-format off
#include \\"pch.h\\"
#include \\"AutolinkedNativeModules.g.h\\"

namespace winrt::Microsoft::ReactNative
{

void RegisterAutolinkedNativeModulePackages(winrt::Windows::Foundation::Collections::IVector<winrt::Microsoft::ReactNative::IReactPackageProvider> const& packageProviders)
{ 
    UNREFERENCED_PARAMETER(packageProviders);
}

}
"
`;

exports[`C++ NuGet+WinUI3 Application: AutolinkedNativeModules.g.h 1`] = `
"// AutolinkedNativeModules.g.h contents generated by \\"react-native autolink-windows\\"
// clang-format off
#pragma once

namespace winrt::Microsoft::ReactNative
{

void RegisterAutolinkedNativeModulePackages(winrt::Windows::Foundation::Collections::IVector<winrt::Microsoft::ReactNative::IReactPackageProvider> const& packageProviders);

}
"
`;

exports[`C++ NuGet+WinUI3 Application: AutolinkedNativeModules.g.props 1`] = `
"<?xml version=\\"1.0\\" encoding=\\"utf-8\\"?>
<Project xmlns=\\"http://schemas.microsoft.com/developer/msbuild/2003\\">
  <!-- AutolinkedNativeModules.g.props contents generated by \\"react-native autolink-windows\\" -->
  <PropertyGroup>
  </PropertyGroup>
</Project>
"
`;

exports[`C++ NuGet+WinUI3 Application: AutolinkedNativeModules.g.targets 1`] = `
"<?xml version=\\"1.0\\" encoding=\\"utf-8\\"?>
<Project xmlns=\\"http://schemas.microsoft.com/developer/msbuild/2003\\">
  <!-- AutolinkedNativeModules.g.targets contents generated by \\"react-native autolink-windows\\" -->
  <ItemGroup>
  </ItemGroup>
</Project>
"
`;

exports[`C++ NuGet+WinUI3 Application: ExperimentalFeatures.props 1`] = `
"<?xml version=\\"1.0\\" encoding=\\"utf-8\\"?>
<Project xmlns=\\"http://schemas.microsoft.com/developer/msbuild/2003\\">

  <!--
    This file contains some important settings that will apply globally for
    your app and *all* native modules your app consumes. These values were
    set when you created the app project, and in some cases cannot be
    simply changed here without recreating a new project.
  -->

  <PropertyGroup Label=\\"Microsoft.ReactNative Experimental Features\\">
    <!--
      Enables default usage of Hermes.
      
      See https://microsoft.github.io/react-native-windows/docs/hermes
    -->
    <UseHermes>false</UseHermes>

    <!--
      Changes compilation to assume use of WinUI 3 instead of System XAML.
      Requires creation of new project.

      See https://microsoft.github.io/react-native-windows/docs/winui3
    -->
    <UseWinUI3>true</UseWinUI3>

    <!--
      Changes compilation to assume use of Microsoft.ReactNative NuGet packages
      instead of building the framework from source.
      Requires creation of new project.

      See https://microsoft.github.io/react-native-windows/docs/nuget
    -->
    <UseExperimentalNuget>true</UseExperimentalNuget>
  
  </PropertyGroup>

</Project>
"
`;

exports[`C++ NuGet+WinUI3 Application: MainPage.cpp 1`] = `
"﻿#include \\"pch.h\\"
#include \\"MainPage.h\\"
#if __has_include(\\"MainPage.g.cpp\\")
#include \\"MainPage.g.cpp\\"
#endif

#include \\"App.h\\"

using namespace winrt;
using namespace xaml;

namespace winrt::SnapshotApp::implementation
{
    MainPage::MainPage()
    {
        InitializeComponent();
        auto app = Application::Current().as<App>();
        ReactRootView().ReactNativeHost(app->Host());
    }
}
"
`;

exports[`C++ NuGet+WinUI3 Application: MainPage.h 1`] = `
"﻿#pragma once
#include \\"MainPage.g.h\\"
#include <winrt/Microsoft.ReactNative.h>

namespace winrt::SnapshotApp::implementation
{
    struct MainPage : MainPageT<MainPage>
    {
        MainPage();
    };
}

namespace winrt::SnapshotApp::factory_implementation
{
    struct MainPage : MainPageT<MainPage, implementation::MainPage>
    {
    };
}

"
`;

exports[`C++ NuGet+WinUI3 Application: MainPage.idl 1`] = `
"#include \\"NamespaceRedirect.h\\"

namespace SnapshotApp
{
    [default_interface]
    runtimeclass MainPage : XAML_NAMESPACE.Controls.Page
    {
        MainPage();
    }
}
"
`;

exports[`C++ NuGet+WinUI3 Application: MainPage.xaml 1`] = `
"<Page
    x:Class=\\"SnapshotApp.MainPage\\"
    xmlns=\\"http://schemas.microsoft.com/winfx/2006/xaml/presentation\\"
    xmlns:x=\\"http://schemas.microsoft.com/winfx/2006/xaml\\"
    xmlns:local=\\"using:SnapshotApp\\"
    xmlns:react=\\"using:Microsoft.ReactNative\\"
    xmlns:d=\\"http://schemas.microsoft.com/expression/blend/2008\\"
    xmlns:mc=\\"http://schemas.openxmlformats.org/markup-compatibility/2006\\"
    mc:Ignorable=\\"d\\"
    Background=\\"{ThemeResource ApplicationPageBackgroundThemeBrush}\\">
    <react:ReactRootView 
        x:Name=\\"ReactRootView\\"
        ComponentName=\\"SnapshotApp\\"
        Background=\\"{ThemeResource ApplicationPageBackgroundThemeBrush}\\"
        MinHeight=\\"400\\"/>
</Page>
"
`;

exports[`C++ NuGet+WinUI3 Application: NuGet.Config 1`] = `
"<?xml version=\\"1.0\\" encoding=\\"utf-8\\"?>
<configuration>
  <config>
    <add key=\\"repositoryPath\\" value=\\"packages\\" />
  </config>
  <packageSources>
    <clear />
    <add key=\\"react-native\\" value=\\"https://pkgs.dev.azure.com/ms/react-native/_packaging/react-native-public/nuget/v3/index.json\\" />
    <add key=\\"Nuget.org\\" value=\\"https://api.nuget.org/v3/index.json\\" />
  </packageSources>
  <disabledPackageSources>
    <clear />
  </disabledPackageSources>  
</configuration>
"
`;

exports[`C++ NuGet+WinUI3 Application: Package.appxmanifest 1`] = `
"﻿<?xml version=\\"1.0\\" encoding=\\"utf-8\\"?>

<Package
  xmlns=\\"http://schemas.microsoft.com/appx/manifest/foundation/windows10\\"
  xmlns:mp=\\"http://schemas.microsoft.com/appx/2014/phone/manifest\\"
  xmlns:uap=\\"http://schemas.microsoft.com/appx/manifest/uap/windows10\\"
  IgnorableNamespaces=\\"uap mp\\">

  <Identity
    Name=\\"dca8ac9c-92bc-4af2-8732-88203ab2905a\\"
    Publisher=\\"CN=nickg\\"
    Version=\\"1.0.0.0\\" />

  <mp:PhoneIdentity PhoneProductId=\\"dca8ac9c-92bc-4af2-8732-88203ab2905a\\" PhonePublisherId=\\"00000000-0000-0000-0000-000000000000\\"/>

  <Properties>
    <DisplayName>SnapshotApp</DisplayName>
    <PublisherDisplayName>nickg</PublisherDisplayName>
    <Logo>Assets\\\\StoreLogo.png</Logo>
  </Properties>

  <Dependencies>
    <TargetDeviceFamily Name=\\"Windows.Universal\\" MinVersion=\\"10.0.0.0\\" MaxVersionTested=\\"10.0.0.0\\" />
  </Dependencies>

  <Resources>
    <Resource Language=\\"x-generate\\"/>
  </Resources>

  <Applications>
    <Application
      Id=\\"App\\"
      Executable=\\"$targetnametoken$.exe\\"
      EntryPoint=\\"SnapshotApp.App\\">
      <uap:VisualElements
        DisplayName=\\"SnapshotApp\\"
        Square150x150Logo=\\"Assets\\\\Square150x150Logo.png\\"
        Square44x44Logo=\\"Assets\\\\Square44x44Logo.png\\"
        Description=\\"SnapshotApp\\"
        BackgroundColor=\\"transparent\\">
        <uap:DefaultTile Wide310x150Logo=\\"Assets\\\\Wide310x150Logo.png\\"/>
        <uap:SplashScreen Image=\\"Assets\\\\SplashScreen.png\\" />
      </uap:VisualElements>
    </Application>
  </Applications>

  <Capabilities>
    <Capability Name=\\"internetClient\\" />
  </Capabilities>
</Package>"
`;

exports[`C++ NuGet+WinUI3 Application: PropertySheet.props 1`] = `
"<?xml version=\\"1.0\\" encoding=\\"utf-8\\"?>
<Project ToolsVersion=\\"Current\\" xmlns=\\"http://schemas.microsoft.com/developer/msbuild/2003\\">
  <ImportGroup Label=\\"PropertySheets\\" />
  <PropertyGroup Label=\\"UserMacros\\" />
  <!--
    To customize common C++/WinRT project properties:
    * right-click the project node
    * expand the Common Properties item
    * select the C++/WinRT property page

    For more advanced scenarios, and complete documentation, please see:
    https://github.com/Microsoft/xlang/tree/master/src/package/cppwinrt/nuget
    -->
  <PropertyGroup />
  <ItemDefinitionGroup />
</Project>"
`;

exports[`C++ NuGet+WinUI3 Application: ReactPackageProvider.cpp 1`] = `
"#include \\"pch.h\\"
#include \\"ReactPackageProvider.h\\"
#include \\"NativeModules.h\\"

using namespace winrt::Microsoft::ReactNative;

namespace winrt::SnapshotApp::implementation
{

void ReactPackageProvider::CreatePackage(IReactPackageBuilder const &packageBuilder) noexcept
{
    AddAttributedModules(packageBuilder);
}

} // namespace winrt::SnapshotApp::implementation
"
`;

exports[`C++ NuGet+WinUI3 Application: ReactPackageProvider.h 1`] = `
"#pragma once

#include \\"winrt/Microsoft.ReactNative.h\\"

namespace winrt::SnapshotApp::implementation
{
    struct ReactPackageProvider : winrt::implements<ReactPackageProvider, winrt::Microsoft::ReactNative::IReactPackageProvider>
    {
    public: // IReactPackageProvider
        void CreatePackage(winrt::Microsoft::ReactNative::IReactPackageBuilder const &packageBuilder) noexcept;
    };
} // namespace winrt::SnapshotApp::implementation

"
`;

exports[`C++ NuGet+WinUI3 Application: SnapshotApp.sln 1`] = `
"﻿
Microsoft Visual Studio Solution File, Format Version 12.00
# Visual Studio Version 16
VisualStudioVersion = 16.0.29215.179
MinimumVisualStudioVersion = 10.0.40219.1
Project(\\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\\") = \\"SnapshotApp\\", \\"SnapshotApp\\\\SnapshotApp.vcxproj\\", \\"{8E9847BF-E645-4E62-8117-6D9B5733E263}\\"
EndProject
Global
	GlobalSection(SolutionConfigurationPlatforms) = preSolution
		Debug|ARM64 = Debug|ARM64
		Debug|x64 = Debug|x64
		Debug|x86 = Debug|x86
		Release|ARM64 = Release|ARM64
		Release|x64 = Release|x64
		Release|x86 = Release|x86
	EndGlobalSection
	GlobalSection(ProjectConfigurationPlatforms) = postSolution
		{8E9847BF-E645-4E62-8117-6D9B5733E263}.Debug|ARM64.ActiveCfg = Debug|ARM64
		{8E9847BF-E645-4E62-8117-6D9B5733E263}.Debug|ARM64.Build.0 = Debug|ARM64
		{8E9847BF-E645-4E62-8117-6D9B5733E263}.Debug|ARM64.Deploy.0 = Debug|ARM64
		{8E9847BF-E645-4E62-8117-6D9B5733E263}.Debug|x64.ActiveCfg = Debug|x64
		{8E9847BF-E645-4E62-8117-6D9B5733E263}.Debug|x64.Build.0 = Debug|x64
		{8E9847BF-E645-4E62-8117-6D9B5733E263}.Debug|x64.Deploy.0 = Debug|x64
		{8E9847BF-E645-4E62-8117-6D9B5733E263}.Debug|x86.ActiveCfg = Debug|Win32
		{8E9847BF-E645-4E62-8117-6D9B5733E263}.Debug|x86.Build.0 = Debug|Win32
		{8E9847BF-E645-4E62-8117-6D9B5733E263}.Debug|x86.Deploy.0 = Debug|Win32
		{8E9847BF-E645-4E62-8117-6D9B5733E263}.Release|ARM64.ActiveCfg = Release|ARM64
		{8E9847BF-E645-4E62-8117-6D9B5733E263}.Release|ARM64.Build.0 = Release|ARM64
		{8E9847BF-E645-4E62-8117-6D9B5733E263}.Release|ARM64.Deploy.0 = Release|ARM64
		{8E9847BF-E645-4E62-8117-6D9B5733E263}.Release|x64.ActiveCfg = Release|x64
		{8E9847BF-E645-4E62-8117-6D9B5733E263}.Release|x64.Build.0 = Release|x64
		{8E9847BF-E645-4E62-8117-6D9B5733E263}.Release|x64.Deploy.0 = Release|x64
		{8E9847BF-E645-4E62-8117-6D9B5733E263}.Release|x86.ActiveCfg = Release|Win32
		{8E9847BF-E645-4E62-8117-6D9B5733E263}.Release|x86.Build.0 = Release|Win32
		{8E9847BF-E645-4E62-8117-6D9B5733E263}.Release|x86.Deploy.0 = Release|Win32
	EndGlobalSection
	GlobalSection(SolutionProperties) = preSolution
		HideSolutionNode = FALSE
	EndGlobalSection
	GlobalSection(ExtensibilityGlobals) = postSolution
		SolutionGuid = {D43FAD39-F619-437D-BB40-04A3982ACB6A}
	EndGlobalSection
EndGlobal
"
`;

exports[`C++ NuGet+WinUI3 Application: SnapshotApp.vcxproj 1`] = `
"<?xml version=\\"1.0\\" encoding=\\"utf-8\\"?>
<Project ToolsVersion=\\"Current\\" DefaultTargets=\\"Build\\" xmlns=\\"http://schemas.microsoft.com/developer/msbuild/2003\\">
  <Import Project=\\"$(SolutionDir)\\\\ExperimentalFeatures.props\\" Condition=\\"Exists('$(SolutionDir)\\\\ExperimentalFeatures.props')\\" />
  <Import Project=\\"..\\\\packages\\\\Microsoft.Windows.CppWinRT.2.0.210312.4\\\\build\\\\native\\\\Microsoft.Windows.CppWinRT.props\\" Condition=\\"Exists('..\\\\packages\\\\Microsoft.Windows.CppWinRT.2.0.210312.4\\\\build\\\\native\\\\Microsoft.Windows.CppWinRT.props')\\" />
  <PropertyGroup Label=\\"Globals\\">
    <CppWinRTOptimized>true</CppWinRTOptimized>
    <CppWinRTRootNamespaceAutoMerge>true</CppWinRTRootNamespaceAutoMerge>
    <MinimalCoreWin>true</MinimalCoreWin>
    <ProjectGuid>{8e9847bf-e645-4e62-8117-6d9b5733e263}</ProjectGuid>
    <ProjectName>SnapshotApp</ProjectName>
    <RootNamespace>SnapshotApp</RootNamespace>
    <DefaultLanguage>en-US</DefaultLanguage>
    <MinimumVisualStudioVersion>16.0</MinimumVisualStudioVersion>
    <AppContainerApplication>true</AppContainerApplication>
    <ApplicationType>Windows Store</ApplicationType>
    <ApplicationTypeRevision>10.0</ApplicationTypeRevision>
  </PropertyGroup>
  <PropertyGroup Label=\\"ReactNativeWindowsProps\\">
    <ReactNativeWindowsDir Condition=\\"'$(ReactNativeWindowsDir)' == ''\\">$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), 'node_modules\\\\react-native-windows\\\\package.json'))\\\\node_modules\\\\react-native-windows\\\\</ReactNativeWindowsDir>
  </PropertyGroup>
  <Import Project=\\"$(ReactNativeWindowsDir)\\\\PropertySheets\\\\External\\\\Microsoft.ReactNative.WindowsSdk.Default.props\\" />
  <Import Project=\\"$(VCTargetsPath)\\\\Microsoft.Cpp.Default.props\\" />
  <ItemGroup Label=\\"ProjectConfigurations\\">
    <ProjectConfiguration Include=\\"Debug|ARM64\\">
      <Configuration>Debug</Configuration>
      <Platform>ARM64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include=\\"Debug|Win32\\">
      <Configuration>Debug</Configuration>
      <Platform>Win32</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include=\\"Debug|x64\\">
      <Configuration>Debug</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include=\\"Release|ARM64\\">
      <Configuration>Release</Configuration>
      <Platform>ARM64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include=\\"Release|Win32\\">
      <Configuration>Release</Configuration>
      <Platform>Win32</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include=\\"Release|x64\\">
      <Configuration>Release</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
  </ItemGroup>
  <PropertyGroup Label=\\"Configuration\\">
    <ConfigurationType>Application</ConfigurationType>
    <CharacterSet>Unicode</CharacterSet>
  </PropertyGroup>
  <PropertyGroup Condition=\\"'$(Configuration)'=='Debug'\\" Label=\\"Configuration\\">
    <UseDebugLibraries>true</UseDebugLibraries>
    <LinkIncremental>true</LinkIncremental>
  </PropertyGroup>
  <PropertyGroup Condition=\\"'$(Configuration)'=='Release'\\" Label=\\"Configuration\\">
    <UseDebugLibraries>false</UseDebugLibraries>
    <WholeProgramOptimization>true</WholeProgramOptimization>
    <LinkIncremental>false</LinkIncremental>
  </PropertyGroup>
  <Import Project=\\"$(VCTargetsPath)\\\\Microsoft.Cpp.props\\" />
  <ImportGroup Label=\\"ExtensionSettings\\"></ImportGroup>
  <ImportGroup Label=\\"PropertySheets\\">
    <Import Project=\\"$(UserRootDir)\\\\Microsoft.Cpp.$(Platform).user.props\\" Condition=\\"exists('$(UserRootDir)\\\\Microsoft.Cpp.$(Platform).user.props')\\" Label=\\"LocalAppDataPlatform\\" />
  </ImportGroup>
  <ImportGroup Label=\\"PropertySheets\\">
    <Import Project=\\"PropertySheet.props\\" />
  </ImportGroup>
  <ImportGroup Label=\\"ReactNativeWindowsPropertySheets\\">
    <Import Project=\\"$(ReactNativeWindowsDir)\\\\PropertySheets\\\\external\\\\Microsoft.ReactNative.Uwp.CppApp.props\\" Condition=\\"Exists('$(ReactNativeWindowsDir)\\\\PropertySheets\\\\External\\\\Microsoft.ReactNative.Uwp.CppApp.props')\\" />
    <Import Project=\\"..\\\\packages\\\\$(WinUIPackageProps)\\" Condition=\\"'$(WinUIPackageProps)'!='' And Exists('..\\\\packages\\\\$(WinUIPackageProps)')\\" />
  </ImportGroup>
  <PropertyGroup Label=\\"UserMacros\\" />
  <ItemDefinitionGroup>
    <ClCompile>
      <PrecompiledHeader>Use</PrecompiledHeader>
      <PrecompiledHeaderFile>pch.h</PrecompiledHeaderFile>
      <PrecompiledHeaderOutputFile>$(IntDir)pch.pch</PrecompiledHeaderOutputFile>
      <WarningLevel>Level4</WarningLevel>
      <AdditionalOptions>%(AdditionalOptions) /bigobj</AdditionalOptions>
      <DisableSpecificWarnings>4453;28204</DisableSpecificWarnings>
    </ClCompile>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition=\\"'$(Configuration)'=='Debug'\\">
    <ClCompile>
      <PreprocessorDefinitions>_DEBUG;%(PreprocessorDefinitions)</PreprocessorDefinitions>
    </ClCompile>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition=\\"'$(Configuration)'=='Release'\\">
    <ClCompile>
      <PreprocessorDefinitions>NDEBUG;%(PreprocessorDefinitions)</PreprocessorDefinitions>
    </ClCompile>
  </ItemDefinitionGroup>
  <ItemGroup>
    <ClInclude Include=\\"MainPage.h\\">
      <DependentUpon>MainPage.xaml</DependentUpon>
      <SubType>Code</SubType>
    </ClInclude>
    <ClInclude Include=\\"ReactPackageProvider.h\\" />
    <ClInclude Include=\\"AutolinkedNativeModules.g.h\\" />
    <ClInclude Include=\\"pch.h\\" />
    <ClInclude Include=\\"App.h\\">
      <DependentUpon>App.xaml</DependentUpon>
    </ClInclude>
  </ItemGroup>
  <ItemGroup>
    <ApplicationDefinition Include=\\"App.xaml\\">
      <SubType>Designer</SubType>
    </ApplicationDefinition>
  </ItemGroup>
  <ItemGroup>
    <AppxManifest Include=\\"Package.appxmanifest\\">
      <SubType>Designer</SubType>
    </AppxManifest>
  </ItemGroup>
  <ItemGroup>
    <Image Include=\\"Assets\\\\LockScreenLogo.scale-200.png\\" />
    <Image Include=\\"Assets\\\\SplashScreen.scale-200.png\\" />
    <Image Include=\\"Assets\\\\Square150x150Logo.scale-200.png\\" />
    <Image Include=\\"Assets\\\\Square44x44Logo.scale-200.png\\" />
    <Image Include=\\"Assets\\\\Square44x44Logo.targetsize-24_altform-unplated.png\\" />
    <Image Include=\\"Assets\\\\StoreLogo.png\\" />
    <Image Include=\\"Assets\\\\Wide310x150Logo.scale-200.png\\" />
  </ItemGroup>
  <ItemGroup>
    <ClCompile Include=\\"MainPage.cpp\\">
      <DependentUpon>MainPage.xaml</DependentUpon>
      <SubType>Code</SubType>
    </ClCompile>
    <ClCompile Include=\\"ReactPackageProvider.cpp\\" />
    <ClCompile Include=\\"AutolinkedNativeModules.g.cpp\\" />
    <ClCompile Include=\\"pch.cpp\\">
      <PrecompiledHeader>Create</PrecompiledHeader>
    </ClCompile>
    <ClCompile Include=\\"App.cpp\\">
      <DependentUpon>App.xaml</DependentUpon>
    </ClCompile>
    <ClCompile Include=\\"$(GeneratedFilesDir)module.g.cpp\\" />
  </ItemGroup>
  <ItemGroup>
    <Midl Include=\\"App.idl\\">
      <DependentUpon>App.xaml</DependentUpon>
    </Midl>
    <Midl Include=\\"MainPage.idl\\">
      <DependentUpon>MainPage.xaml</DependentUpon>
      <SubType>Code</SubType>
    </Midl>
  </ItemGroup>
  <ItemGroup>
    <None Include=\\"packages.config\\" />
    <None Include=\\"PropertySheet.props\\" />
    <Text Include=\\"readme.txt\\">
      <DeploymentContent>false</DeploymentContent>
    </Text>
  </ItemGroup>
  <ItemGroup>
    <Page Include=\\"MainPage.xaml\\">
      <SubType>Designer</SubType>
    </Page>
  </ItemGroup>
  <Import Project=\\"$(VCTargetsPath)\\\\Microsoft.Cpp.targets\\" />
  <ImportGroup Label=\\"ReactNativeWindowsTargets\\">
    <Import Project=\\"$(ReactNativeWindowsDir)\\\\PropertySheets\\\\External\\\\Microsoft.ReactNative.Uwp.CppApp.targets\\" Condition=\\"Exists('$(ReactNativeWindowsDir)\\\\PropertySheets\\\\External\\\\Microsoft.ReactNative.Uwp.CppApp.targets')\\" />
  </ImportGroup>
  <Target Name=\\"EnsureReactNativeWindowsTargets\\" BeforeTargets=\\"PrepareForBuild\\">
    <PropertyGroup>
      <ErrorText>This project references targets in your node_modules\\\\react-native-windows folder that are missing. The missing file is {0}.</ErrorText>
    </PropertyGroup>
    <Error Condition=\\"!Exists('$(ReactNativeWindowsDir)\\\\PropertySheets\\\\External\\\\Microsoft.ReactNative.Uwp.CppApp.props')\\" Text=\\"$([System.String]::Format('$(ErrorText)', '$(ReactNativeWindowsDir)\\\\PropertySheets\\\\External\\\\Microsoft.ReactNative.Uwp.CppApp.props'))\\" />
    <Error Condition=\\"!Exists('$(ReactNativeWindowsDir)\\\\PropertySheets\\\\External\\\\Microsoft.ReactNative.Uwp.CppApp.targets')\\" Text=\\"$([System.String]::Format('$(ErrorText)', '$(ReactNativeWindowsDir)\\\\PropertySheets\\\\External\\\\Microsoft.ReactNative.Uwp.CppApp.targets'))\\" />
  </Target>
  <ImportGroup Label=\\"ExtensionTargets\\">
    <Import Project=\\"..\\\\packages\\\\Microsoft.Windows.CppWinRT.2.0.210312.4\\\\build\\\\native\\\\Microsoft.Windows.CppWinRT.targets\\" Condition=\\"Exists('..\\\\packages\\\\Microsoft.Windows.CppWinRT.2.0.210312.4\\\\build\\\\native\\\\Microsoft.Windows.CppWinRT.targets')\\" />
    <Import Project=\\"..\\\\packages\\\\ReactNative.Hermes.Windows.0.9.0-ms.6\\\\build\\\\native\\\\ReactNative.Hermes.Windows.targets\\" Condition=\\"Exists('..\\\\packages\\\\ReactNative.Hermes.Windows.0.9.0-ms.6\\\\build\\\\native\\\\ReactNative.Hermes.Windows.targets')\\" />
    <Import Project=\\"..\\\\packages\\\\Microsoft.ReactNative.0.0.0-canary.409\\\\build\\\\native\\\\Microsoft.ReactNative.targets\\" Condition=\\"Exists('..\\\\packages\\\\Microsoft.ReactNative.0.0.0-canary.409\\\\build\\\\native\\\\Microsoft.ReactNative.targets')\\" />
    <Import Project=\\"..\\\\packages\\\\Microsoft.ReactNative.Cxx.0.0.0-canary.409\\\\build\\\\native\\\\Microsoft.ReactNative.Cxx.targets\\" Condition=\\"Exists('..\\\\packages\\\\Microsoft.ReactNative.Cxx.0.0.0-canary.409\\\\build\\\\native\\\\Microsoft.ReactNative.Cxx.targets')\\" />
    <Import Project=\\"..\\\\packages\\\\$(WinUIPackageName).$(WinUIPackageVersion)\\\\build\\\\native\\\\$(WinUIPackageName).targets\\" Condition=\\"Exists('..\\\\packages\\\\$(WinUIPackageName).$(WinUIPackageVersion)\\\\build\\\\native\\\\$(WinUIPackageName).targets')\\" />
  </ImportGroup>
  <Target Name=\\"EnsureNuGetPackageBuildImports\\" BeforeTargets=\\"PrepareForBuild\\">
    <PropertyGroup>
      <ErrorText>This project references NuGet package(s) that are missing on this computer. Use NuGet Package Restore to download them.  For more information, see http://go.microsoft.com/fwlink/?LinkID=322105. The missing file is {0}.</ErrorText>
    </PropertyGroup>
    <Error Condition=\\"!Exists('..\\\\packages\\\\Microsoft.Windows.CppWinRT.2.0.210312.4\\\\build\\\\native\\\\Microsoft.Windows.CppWinRT.props')\\" Text=\\"$([System.String]::Format('$(ErrorText)', '..\\\\packages\\\\Microsoft.Windows.CppWinRT.2.0.210312.4\\\\build\\\\native\\\\Microsoft.Windows.CppWinRT.props'))\\" />
    <Error Condition=\\"!Exists('..\\\\packages\\\\Microsoft.Windows.CppWinRT.2.0.210312.4\\\\build\\\\native\\\\Microsoft.Windows.CppWinRT.targets')\\" Text=\\"$([System.String]::Format('$(ErrorText)', '..\\\\packages\\\\Microsoft.Windows.CppWinRT.2.0.210312.4\\\\build\\\\native\\\\Microsoft.Windows.CppWinRT.targets'))\\" />
    <Error Condition=\\"!Exists('..\\\\packages\\\\ReactNative.Hermes.Windows.0.9.0-ms.6\\\\build\\\\native\\\\ReactNative.Hermes.Windows.targets')\\" Text=\\"$([System.String]::Format('$(ErrorText)', '..\\\\packages\\\\ReactNative.Hermes.Windows.0.9.0-ms.6\\\\build\\\\native\\\\ReactNative.Hermes.Windows.targets'))\\" />
    <Error Condition=\\"!Exists('..\\\\packages\\\\Microsoft.ReactNative.0.0.0-canary.409\\\\build\\\\native\\\\Microsoft.ReactNative.targets')\\" Text=\\"$([System.String]::Format('$(ErrorText)', '..\\\\packages\\\\Microsoft.ReactNative.0.0.0-canary.409\\\\build\\\\native\\\\Microsoft.ReactNative.targets'))\\" />
    <Error Condition=\\"!Exists('..\\\\packages\\\\Microsoft.ReactNative.Cxx.0.0.0-canary.409\\\\build\\\\native\\\\Microsoft.ReactNative.Cxx.targets')\\" Text=\\"$([System.String]::Format('$(ErrorText)', '..\\\\packages\\\\Microsoft.ReactNative.Cxx.0.0.0-canary.409\\\\build\\\\native\\\\Microsoft.ReactNative.Cxx.targets'))\\" />
    <Error Condition=\\"!Exists('..\\\\packages\\\\$(WinUIPackageName).$(WinUIPackageVersion)\\\\build\\\\native\\\\$(WinUIPackageName).targets')\\" Text=\\"$([System.String]::Format('$(ErrorText)', '..\\\\packages\\\\$(WinUIPackageName).$(WinUIPackageVersion)\\\\build\\\\native\\\\$(WinUIPackageName).targets'))\\" />
  </Target>
</Project>
"
`;

exports[`C++ NuGet+WinUI3 Application: SnapshotApp.vcxproj.filters 1`] = `
"﻿<?xml version=\\"1.0\\" encoding=\\"utf-8\\"?>
<Project ToolsVersion=\\"Current\\" xmlns=\\"http://schemas.microsoft.com/developer/msbuild/2003\\">
  <ItemGroup>
    <ApplicationDefinition Include=\\"App.xaml\\" />
  </ItemGroup>
  <ItemGroup>
    <Midl Include=\\"App.idl\\" />
  </ItemGroup>
  <ItemGroup>
    <ClCompile Include=\\"pch.cpp\\" />
    <ClCompile Include=\\"App.cpp\\" />
    <ClCompile Include=\\"$(GeneratedFilesDir)module.g.cpp\\" />
    <ClCompile Include=\\"ReactPackageProvider.cpp\\" />
    <ClCompile Include=\\"AutolinkedNativeModules.g.cpp\\" />
  </ItemGroup>
  <ItemGroup>
    <ClInclude Include=\\"pch.h\\" />
    <ClInclude Include=\\"App.h\\" />
    <ClInclude Include=\\"ReactPackageProvider.h\\" />
    <ClInclude Include=\\"AutolinkedNativeModules.g.h\\" />
  </ItemGroup>
  <ItemGroup>
    <Image Include=\\"Assets\\\\Wide310x150Logo.scale-200.png\\">
      <Filter>Assets</Filter>
    </Image>
    <Image Include=\\"Assets\\\\StoreLogo.png\\">
      <Filter>Assets</Filter>
    </Image>
    <Image Include=\\"Assets\\\\Square150x150Logo.scale-200.png\\">
      <Filter>Assets</Filter>
    </Image>
    <Image Include=\\"Assets\\\\Square44x44Logo.targetsize-24_altform-unplated.png\\">
      <Filter>Assets</Filter>
    </Image>
    <Image Include=\\"Assets\\\\Square44x44Logo.scale-200.png\\">
      <Filter>Assets</Filter>
    </Image>
    <Image Include=\\"Assets\\\\SplashScreen.scale-200.png\\">
      <Filter>Assets</Filter>
    </Image>
    <Image Include=\\"Assets\\\\LockScreenLogo.scale-200.png\\">
      <Filter>Assets</Filter>
    </Image>
  </ItemGroup>
  <ItemGroup>
    <AppxManifest Include=\\"Package.appxmanifest\\" />
  </ItemGroup>
  <ItemGroup>
    <Filter Include=\\"Assets\\">
      <UniqueIdentifier>{e48dc53e-40b1-40cb-970a-f89935452892}</UniqueIdentifier>
    </Filter>
  </ItemGroup>
  <ItemGroup>
    <None Include=\\"PropertySheet.props\\" />
    <None Include=\\"packages.config\\" />
  </ItemGroup>
  <ItemGroup>
    <Text Include=\\"readme.txt\\" />
  </ItemGroup>
  <ItemGroup>
    <Page Include=\\"MainPage.xaml\\" />
  </ItemGroup>
</Project>"
`;

exports[`C++ NuGet+WinUI3 Application: index.windows.bundle 1`] = `
"/**
 * 
 * Be sure to generate this file using the CLI:
 *
 * npx react-native bundle --platform windows --entry-file index.js 
 *   --bundle-output windows\\\\SnapshotApp\\\\Bundle\\\\index.windows.bundle
 *   --assets-dest windows\\\\SnapshotApp\\\\Bundle
 *
 */"
`;

exports[`C++ NuGet+WinUI3 Application: metro.config.js 1`] = `
"/**
 * Metro configuration for React Native
 * https://github.com/facebook/react-native
 *
 * @format
 */
const fs = require('fs');
const path = require('path');
const exclusionList = require('metro-config/src/defaults/exclusionList');

const rnwPath = fs.realpathSync(
  path.resolve(require.resolve('react-native-windows/package.json'), '..'),
);

module.exports = {
  resolver: {
    blockList: exclusionList([
      // This stops \\"react-native run-windows\\" from causing the metro server to crash if its already running
      new RegExp(
        \`\${path.resolve(__dirname, 'windows').replace(/[/\\\\\\\\]/g, '/')}.*\`,
      ),
      // This prevents \\"react-native run-windows\\" from hitting: EBUSY: resource busy or locked, open msbuild.ProjectImports.zip or other files produced by msbuild
      new RegExp(\`\${rnwPath}/build/.*\`),
      new RegExp(\`\${rnwPath}/target/.*\`),
      /.*\\\\.ProjectImports\\\\.zip/,
    ]),
  },
  transformer: {
    getTransformOptions: async () => ({
      transform: {
        experimentalImportSupport: false,
        inlineRequires: true,
      },
    }),
  },
};
"
`;

exports[`C++ NuGet+WinUI3 Application: packages.config 1`] = `
"﻿<?xml version=\\"1.0\\" encoding=\\"utf-8\\"?>
<packages>
  <package id=\\"Microsoft.Windows.CppWinRT\\" version=\\"2.0.210312.4\\" targetFramework=\\"native\\" />
  <package id=\\"ReactNative.Hermes.Windows\\" version=\\"0.9.0-ms.6\\" targetFramework=\\"native\\" />
  <package id=\\"Microsoft.ReactNative\\" version=\\"0.0.0-canary.409\\" targetFramework=\\"native\\" />
  <package id=\\"Microsoft.ReactNative.Cxx\\" version=\\"0.0.0-canary.409\\" targetFramework=\\"native\\" />
  <package id=\\"Microsoft.WinUI\\" version=\\"3.0.0-preview4.210210.4\\" targetFramework=\\"native\\" />
</packages>"
`;

exports[`C++ NuGet+WinUI3 Application: pch.cpp 1`] = `
"﻿#include \\"pch.h\\"
"
`;

exports[`C++ NuGet+WinUI3 Application: pch.h 1`] = `
"#pragma once

#define NOMINMAX

#include <hstring.h>
#include <restrictederrorinfo.h>
#include <unknwn.h>
#include <windows.h>
#include <CppWinRTIncludes.h>
#include <VersionMacros.h>
#include <winrt/Windows.ApplicationModel.Activation.h>
#include <UI.Xaml.Controls.Primitives.h>
#include <UI.Xaml.Controls.h>
#include <UI.Xaml.Markup.h>
#include <UI.Xaml.Navigation.h>

#include <winrt/Microsoft.ReactNative.h>

#include <winrt/Microsoft.UI.Xaml.Automation.Peers.h>
#include <winrt/Microsoft.UI.Xaml.Controls.Primitives.h>
#include <winrt/Microsoft.UI.Xaml.Controls.h>
#include <winrt/Microsoft.UI.Xaml.Media.h>
#include <winrt/Microsoft.UI.Xaml.XamlTypeInfo.h>
using namespace winrt::Windows::Foundation;
"
`;

exports[`C++ NuGet+WinUI3 Library: ExperimentalFeatures.props 1`] = `
"<?xml version=\\"1.0\\" encoding=\\"utf-8\\"?>
<Project xmlns=\\"http://schemas.microsoft.com/developer/msbuild/2003\\">

  <!--
    Application projects contain a file with this name to specify some important settings
    that will apply globally for the app and *all* native modules the app consumes. These
    values are set by the app developer.
  -->

</Project>
"
`;

exports[`C++ NuGet+WinUI3 Library: NuGet.Config 1`] = `
"<?xml version=\\"1.0\\" encoding=\\"utf-8\\"?>
<configuration>
  <config>
    <add key=\\"repositoryPath\\" value=\\"packages\\" />
  </config>
  <packageSources>
    <clear />
    <add key=\\"react-native\\" value=\\"https://pkgs.dev.azure.com/ms/react-native/_packaging/react-native-public/nuget/v3/index.json\\" />
    <add key=\\"Nuget.org\\" value=\\"https://api.nuget.org/v3/index.json\\" />
  </packageSources>
  <disabledPackageSources>
    <clear />
  </disabledPackageSources>  
</configuration>
"
`;

exports[`C++ NuGet+WinUI3 Library: PropertySheet.props 1`] = `
"<?xml version=\\"1.0\\" encoding=\\"utf-8\\"?>
<Project ToolsVersion=\\"Current\\" xmlns=\\"http://schemas.microsoft.com/developer/msbuild/2003\\">
  <ImportGroup Label=\\"PropertySheets\\" />
  <PropertyGroup Label=\\"UserMacros\\" />
  <!--
    To customize common C++/WinRT project properties:
    * right-click the project node
    * expand the Common Properties item
    * select the C++/WinRT property page

    For more advanced scenarios, and complete documentation, please see:
    https://github.com/Microsoft/xlang/tree/master/src/package/cppwinrt/nuget
    -->
  <PropertyGroup />
  <ItemDefinitionGroup />
</Project>"
`;

exports[`C++ NuGet+WinUI3 Library: ReactNativeModule.h 1`] = `
"﻿#pragma once

#include \\"JSValue.h\\"
#include \\"NativeModules.h\\"

using namespace winrt::Microsoft::ReactNative;

namespace winrt::SnapshotApp
{

REACT_MODULE(ReactNativeModule, L\\"SnapshotApp\\")
struct ReactNativeModule
{
    // See https://microsoft.github.io/react-native-windows/docs/native-modules for details on writing native modules

    REACT_INIT(Initialize)
    void Initialize(ReactContext const &reactContext) noexcept
    {
        m_reactContext = reactContext;
    }
    
    REACT_METHOD(sampleMethod)
    void sampleMethod(std::string stringArgument, int numberArgument, std::function<void(std::string)> &&callback) noexcept
    {
        // TODO: Implement some actually useful functionality
        callback(\\"Received numberArgument: \\" + std::to_string(numberArgument) + \\" stringArgument: \\" + stringArgument);
    }

    private:
        ReactContext m_reactContext{nullptr};
};

} // namespace winrt::SnapshotApp
"
`;

exports[`C++ NuGet+WinUI3 Library: ReactPackageProvider.cpp 1`] = `
"#include \\"pch.h\\"
#include \\"ReactPackageProvider.h\\"
#if __has_include(\\"ReactPackageProvider.g.cpp\\")
#include \\"ReactPackageProvider.g.cpp\\"
#endif

#include \\"ReactNativeModule.h\\"

using namespace winrt::Microsoft::ReactNative;

namespace winrt::SnapshotApp::implementation
{

void ReactPackageProvider::CreatePackage(IReactPackageBuilder const &packageBuilder) noexcept
{
    AddAttributedModules(packageBuilder);
}

} // namespace winrt::SnapshotApp::implementation
"
`;

exports[`C++ NuGet+WinUI3 Library: ReactPackageProvider.h 1`] = `
"#pragma once
#include \\"ReactPackageProvider.g.h\\"

using namespace winrt::Microsoft::ReactNative;

namespace winrt::SnapshotApp::implementation
{
    struct ReactPackageProvider : ReactPackageProviderT<ReactPackageProvider>
    {
        ReactPackageProvider() = default;

        void CreatePackage(IReactPackageBuilder const &packageBuilder) noexcept;
    };
} // namespace winrt::SnapshotApp::implementation

namespace winrt::SnapshotApp::factory_implementation
{

struct ReactPackageProvider : ReactPackageProviderT<ReactPackageProvider, implementation::ReactPackageProvider> {};

} // namespace winrt::SnapshotApp::factory_implementation
"
`;

exports[`C++ NuGet+WinUI3 Library: ReactPackageProvider.idl 1`] = `
"namespace SnapshotApp
{
    [webhosthidden]
    [default_interface]
    runtimeclass ReactPackageProvider : Microsoft.ReactNative.IReactPackageProvider
    {
        ReactPackageProvider();
    };
}
"
`;

exports[`C++ NuGet+WinUI3 Library: SnapshotApp.def 1`] = `
"﻿EXPORTS
DllCanUnloadNow = WINRT_CanUnloadNow                    PRIVATE
DllGetActivationFactory = WINRT_GetActivationFactory    PRIVATE
"
`;

exports[`C++ NuGet+WinUI3 Library: SnapshotApp.sln 1`] = `
"﻿
Microsoft Visual Studio Solution File, Format Version 12.00
# Visual Studio Version 16
VisualStudioVersion = 16.0.29215.179
MinimumVisualStudioVersion = 10.0.40219.1
Project(\\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\\") = \\"SnapshotApp\\", \\"SnapshotApp\\\\SnapshotApp.vcxproj\\", \\"{B1588D45-6029-4116-8C41-F26C24229BFA}\\"
EndProject
Global
	GlobalSection(SolutionConfigurationPlatforms) = preSolution
		Debug|ARM64 = Debug|ARM64
		Debug|x64 = Debug|x64
		Debug|x86 = Debug|x86
		Release|ARM64 = Release|ARM64
		Release|x64 = Release|x64
		Release|x86 = Release|x86
	EndGlobalSection
	GlobalSection(ProjectConfigurationPlatforms) = postSolution
		{B1588D45-6029-4116-8C41-F26C24229BFA}.Debug|ARM64.ActiveCfg = Debug|ARM64
		{B1588D45-6029-4116-8C41-F26C24229BFA}.Debug|ARM64.Build.0 = Debug|ARM64
		{B1588D45-6029-4116-8C41-F26C24229BFA}.Debug|ARM64.Deploy.0 = Debug|ARM64
		{B1588D45-6029-4116-8C41-F26C24229BFA}.Debug|x64.ActiveCfg = Debug|x64
		{B1588D45-6029-4116-8C41-F26C24229BFA}.Debug|x64.Build.0 = Debug|x64
		{B1588D45-6029-4116-8C41-F26C24229BFA}.Debug|x64.Deploy.0 = Debug|x64
		{B1588D45-6029-4116-8C41-F26C24229BFA}.Debug|x86.ActiveCfg = Debug|Win32
		{B1588D45-6029-4116-8C41-F26C24229BFA}.Debug|x86.Build.0 = Debug|Win32
		{B1588D45-6029-4116-8C41-F26C24229BFA}.Debug|x86.Deploy.0 = Debug|Win32
		{B1588D45-6029-4116-8C41-F26C24229BFA}.Release|ARM64.ActiveCfg = Release|ARM64
		{B1588D45-6029-4116-8C41-F26C24229BFA}.Release|ARM64.Build.0 = Release|ARM64
		{B1588D45-6029-4116-8C41-F26C24229BFA}.Release|ARM64.Deploy.0 = Release|ARM64
		{B1588D45-6029-4116-8C41-F26C24229BFA}.Release|x64.ActiveCfg = Release|x64
		{B1588D45-6029-4116-8C41-F26C24229BFA}.Release|x64.Build.0 = Release|x64
		{B1588D45-6029-4116-8C41-F26C24229BFA}.Release|x64.Deploy.0 = Release|x64
		{B1588D45-6029-4116-8C41-F26C24229BFA}.Release|x86.ActiveCfg = Release|Win32
		{B1588D45-6029-4116-8C41-F26C24229BFA}.Release|x86.Build.0 = Release|Win32
		{B1588D45-6029-4116-8C41-F26C24229BFA}.Release|x86.Deploy.0 = Release|Win32
	EndGlobalSection
	GlobalSection(SolutionProperties) = preSolution
		HideSolutionNode = FALSE
	EndGlobalSection
	GlobalSection(ExtensibilityGlobals) = postSolution
		SolutionGuid = {D43FAD39-F619-437D-BB40-04A3982ACB6A}
	EndGlobalSection
EndGlobal
"
`;

exports[`C++ NuGet+WinUI3 Library: SnapshotApp.vcxproj 1`] = `
"<?xml version=\\"1.0\\" encoding=\\"utf-8\\"?>
<Project ToolsVersion=\\"Current\\" DefaultTargets=\\"Build\\" xmlns=\\"http://schemas.microsoft.com/developer/msbuild/2003\\">
  <Import Project=\\"$(SolutionDir)\\\\ExperimentalFeatures.props\\" Condition=\\"Exists('$(SolutionDir)\\\\ExperimentalFeatures.props')\\" />
  <Import Project=\\"$(SolutionDir)\\\\packages\\\\Microsoft.Windows.CppWinRT.2.0.210312.4\\\\build\\\\native\\\\Microsoft.Windows.CppWinRT.props\\" Condition=\\"Exists('$(SolutionDir)\\\\packages\\\\Microsoft.Windows.CppWinRT.2.0.210312.4\\\\build\\\\native\\\\Microsoft.Windows.CppWinRT.props')\\" />
  <PropertyGroup Label=\\"Globals\\">
    <CppWinRTOptimized>true</CppWinRTOptimized>
    <CppWinRTRootNamespaceAutoMerge>true</CppWinRTRootNamespaceAutoMerge>
    <MinimalCoreWin>true</MinimalCoreWin>
    <ProjectGuid>{b1588d45-6029-4116-8c41-f26c24229bfa}</ProjectGuid>
    <ProjectName>SnapshotApp</ProjectName>
    <RootNamespace>SnapshotApp</RootNamespace>
    <DefaultLanguage>en-US</DefaultLanguage>
    <MinimumVisualStudioVersion>16.0</MinimumVisualStudioVersion>
    <AppContainerApplication>true</AppContainerApplication>
    <ApplicationType>Windows Store</ApplicationType>
    <ApplicationTypeRevision>10.0</ApplicationTypeRevision>
  </PropertyGroup>
  <PropertyGroup Label=\\"ReactNativeWindowsProps\\">
    <ReactNativeWindowsDir Condition=\\"'$(ReactNativeWindowsDir)' == ''\\">$([MSBuild]::GetDirectoryNameOfFileAbove($(SolutionDir), 'node_modules\\\\react-native-windows\\\\package.json'))\\\\node_modules\\\\react-native-windows\\\\</ReactNativeWindowsDir>
  </PropertyGroup>
  <Import Project=\\"$(ReactNativeWindowsDir)\\\\PropertySheets\\\\External\\\\Microsoft.ReactNative.WindowsSdk.Default.props\\" Condition=\\"Exists('$(ReactNativeWindowsDir)\\\\PropertySheets\\\\External\\\\Microsoft.ReactNative.WindowsSdk.Default.props')\\" />
  <PropertyGroup Label=\\"Fallback Windows SDK Versions\\">
    <WindowsTargetPlatformVersion Condition=\\" '$(WindowsTargetPlatformVersion)' == '' \\">10.0.19041.0</WindowsTargetPlatformVersion>
    <WindowsTargetPlatformMinVersion Condition=\\" '$(WindowsTargetPlatformMinVersion)' == '' \\">10.0.15063.0</WindowsTargetPlatformMinVersion>
  </PropertyGroup>
  <Import Project=\\"$(VCTargetsPath)\\\\Microsoft.Cpp.Default.props\\" />
  <ItemGroup Label=\\"ProjectConfigurations\\">
    <ProjectConfiguration Include=\\"Debug|ARM64\\">
      <Configuration>Debug</Configuration>
      <Platform>ARM64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include=\\"Debug|Win32\\">
      <Configuration>Debug</Configuration>
      <Platform>Win32</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include=\\"Debug|x64\\">
      <Configuration>Debug</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include=\\"Release|ARM64\\">
      <Configuration>Release</Configuration>
      <Platform>ARM64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include=\\"Release|Win32\\">
      <Configuration>Release</Configuration>
      <Platform>Win32</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include=\\"Release|x64\\">
      <Configuration>Release</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
  </ItemGroup>
  <PropertyGroup Label=\\"Configuration\\">
    <ConfigurationType>DynamicLibrary</ConfigurationType>
    <CharacterSet>Unicode</CharacterSet>
    <GenerateManifest>false</GenerateManifest>
  </PropertyGroup>
  <PropertyGroup Condition=\\"'$(Configuration)'=='Debug'\\" Label=\\"Configuration\\">
    <UseDebugLibraries>true</UseDebugLibraries>
    <LinkIncremental>true</LinkIncremental>
  </PropertyGroup>
  <PropertyGroup Condition=\\"'$(Configuration)'=='Release'\\" Label=\\"Configuration\\">
    <UseDebugLibraries>false</UseDebugLibraries>
    <WholeProgramOptimization>true</WholeProgramOptimization>
    <LinkIncremental>false</LinkIncremental>
  </PropertyGroup>
  <Import Project=\\"$(VCTargetsPath)\\\\Microsoft.Cpp.props\\" />
  <ImportGroup Label=\\"ExtensionSettings\\"></ImportGroup>
  <ImportGroup Label=\\"PropertySheets\\">
    <Import Project=\\"$(UserRootDir)\\\\Microsoft.Cpp.$(Platform).user.props\\" Condition=\\"exists('$(UserRootDir)\\\\Microsoft.Cpp.$(Platform).user.props')\\" Label=\\"LocalAppDataPlatform\\" />
  </ImportGroup>
  <ImportGroup Label=\\"PropertySheets\\">
    <Import Project=\\"PropertySheet.props\\" />
  </ImportGroup>
  <ImportGroup Label=\\"ReactNativeWindowsPropertySheets\\">
    <Import Project=\\"$(ReactNativeWindowsDir)\\\\PropertySheets\\\\external\\\\Microsoft.ReactNative.Uwp.CppLib.props\\" Condition=\\"Exists('$(ReactNativeWindowsDir)\\\\PropertySheets\\\\External\\\\Microsoft.ReactNative.Uwp.CppLib.props')\\" />
    <Import Project=\\"$(SolutionDir)\\\\packages\\\\$(WinUIPackageProps)\\" Condition=\\"'$(WinUIPackageProps)'!='' And Exists('$(SolutionDir)\\\\packages\\\\$(WinUIPackageProps)')\\" />
  </ImportGroup>

  <PropertyGroup Label=\\"UserMacros\\" />
  <ItemDefinitionGroup>
    <ClCompile>
      <PrecompiledHeader>Use</PrecompiledHeader>
      <PrecompiledHeaderFile>pch.h</PrecompiledHeaderFile>
      <PrecompiledHeaderOutputFile>$(IntDir)pch.pch</PrecompiledHeaderOutputFile>
      <WarningLevel>Level4</WarningLevel>
      <AdditionalOptions>%(AdditionalOptions) /bigobj</AdditionalOptions>
      <DisableSpecificWarnings>4453;28204</DisableSpecificWarnings>
      <PreprocessorDefinitions>_WINRT_DLL;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <AdditionalUsingDirectories>$(WindowsSDK_WindowsMetadata);$(AdditionalUsingDirectories)</AdditionalUsingDirectories>
    </ClCompile>
    <Midl>
      <!-- This allows applications targetting older Windows SDKs (e.g. RNW 0.65 apps) to consume the library generated WinMD -->
      <AdditionalOptions>%(AdditionalOptions) /noattributename</AdditionalOptions>
    </Midl>
    <Link>
      <SubSystem>Console</SubSystem>
      <GenerateWindowsMetadata>true</GenerateWindowsMetadata>
      <ModuleDefinitionFile>SnapshotApp.def</ModuleDefinitionFile>
    </Link>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition=\\"'$(Configuration)'=='Debug'\\">
    <ClCompile>
      <PreprocessorDefinitions>_DEBUG;%(PreprocessorDefinitions)</PreprocessorDefinitions>
    </ClCompile>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition=\\"'$(Configuration)'=='Release'\\">
    <ClCompile>
      <PreprocessorDefinitions>NDEBUG;%(PreprocessorDefinitions)</PreprocessorDefinitions>
    </ClCompile>
  </ItemDefinitionGroup>
  <ItemGroup>
    <ClInclude Include=\\"ReactPackageProvider.h\\">
      <DependentUpon>ReactPackageProvider.idl</DependentUpon>
    </ClInclude>
    <ClInclude Include=\\"ReactNativeModule.h\\" />
    <ClInclude Include=\\"pch.h\\" />
  </ItemGroup>
  <ItemGroup>
    <ClCompile Include=\\"pch.cpp\\">
      <PrecompiledHeader>Create</PrecompiledHeader>
    </ClCompile>
    <ClCompile Include=\\"ReactPackageProvider.cpp\\">
      <DependentUpon>ReactPackageProvider.idl</DependentUpon>
    </ClCompile>
    <ClCompile Include=\\"$(GeneratedFilesDir)module.g.cpp\\" />
  </ItemGroup>
  <ItemGroup>
    <Midl Include=\\"ReactPackageProvider.idl\\" />
  </ItemGroup>
  <ItemGroup>
    <None Include=\\"packages.config\\" />
    <None Include=\\"PropertySheet.props\\" />
  </ItemGroup>
  <Import Project=\\"$(VCTargetsPath)\\\\Microsoft.Cpp.targets\\" />
  <ImportGroup Label=\\"ReactNativeWindowsTargets\\">
    <Import Project=\\"$(ReactNativeWindowsDir)\\\\PropertySheets\\\\External\\\\Microsoft.ReactNative.Uwp.CppLib.targets\\" Condition=\\"Exists('$(ReactNativeWindowsDir)\\\\PropertySheets\\\\External\\\\Microsoft.ReactNative.Uwp.CppLib.targets')\\" />
  </ImportGroup>
  <Target Name=\\"EnsureReactNativeWindowsTargets\\" BeforeTargets=\\"PrepareForBuild\\">
    <PropertyGroup>
      <ErrorText>This project references targets in your node_modules\\\\react-native-windows folder that are missing. The missing file is {0}.</ErrorText>
    </PropertyGroup>
    <Error Condition=\\"!Exists('$(ReactNativeWindowsDir)\\\\PropertySheets\\\\External\\\\Microsoft.ReactNative.Uwp.CppLib.props')\\" Text=\\"$([System.String]::Format('$(ErrorText)', '$(ReactNativeWindowsDir)\\\\PropertySheets\\\\External\\\\Microsoft.ReactNative.Uwp.CppLib.props'))\\" />
    <Error Condition=\\"!Exists('$(ReactNativeWindowsDir)\\\\PropertySheets\\\\External\\\\Microsoft.ReactNative.Uwp.CppLib.targets')\\" Text=\\"$([System.String]::Format('$(ErrorText)', '$(ReactNativeWindowsDir)\\\\PropertySheets\\\\External\\\\Microsoft.ReactNative.Uwp.CppLib.targets'))\\" />
  </Target>
  <ImportGroup Label=\\"ExtensionTargets\\">
    <Import Project=\\"$(SolutionDir)\\\\packages\\\\Microsoft.Windows.CppWinRT.2.0.210312.4\\\\build\\\\native\\\\Microsoft.Windows.CppWinRT.targets\\" Condition=\\"Exists('$(SolutionDir)\\\\packages\\\\Microsoft.Windows.CppWinRT.2.0.210312.4\\\\build\\\\native\\\\Microsoft.Windows.CppWinRT.targets')\\" />
    <Import Project=\\"$(SolutionDir)\\\\packages\\\\ReactNative.Hermes.Windows.0.9.0-ms.6\\\\build\\\\native\\\\ReactNative.Hermes.Windows.targets\\" Condition=\\"Exists('$(SolutionDir)\\\\packages\\\\ReactNative.Hermes.Windows.0.9.0-ms.6\\\\build\\\\native\\\\ReactNative.Hermes.Windows.targets')\\" />
    <Import Project=\\"$(SolutionDir)\\\\packages\\\\Microsoft.ReactNative.0.0.0-canary.409\\\\build\\\\native\\\\Microsoft.ReactNative.targets\\" Condition=\\"Exists('$(SolutionDir)\\\\packages\\\\Microsoft.ReactNative.0.0.0-canary.409\\\\build\\\\native\\\\Microsoft.ReactNative.targets')\\" />
    <Import Project=\\"$(SolutionDir)\\\\packages\\\\Microsoft.ReactNative.Cxx.0.0.0-canary.409\\\\build\\\\native\\\\Microsoft.ReactNative.Cxx.targets\\" Condition=\\"Exists('$(SolutionDir)\\\\packages\\\\Microsoft.ReactNative.Cxx.0.0.0-canary.409\\\\build\\\\native\\\\Microsoft.ReactNative.Cxx.targets')\\" />
    <Import Project=\\"$(SolutionDir)\\\\packages\\\\$(WinUIPackageName).$(WinUIPackageVersion)\\\\build\\\\native\\\\$(WinUIPackageName).targets\\" Condition=\\"Exists('$(SolutionDir)\\\\packages\\\\$(WinUIPackageName).$(WinUIPackageVersion)\\\\build\\\\native\\\\$(WinUIPackageName).targets')\\" />
  </ImportGroup>
  <Target Name=\\"EnsureNuGetPackageBuildImports\\" BeforeTargets=\\"PrepareForBuild\\">
    <PropertyGroup>
      <ErrorText>This project references NuGet package(s) that are missing on this computer. Use NuGet Package Restore to download them.  For more information, see http://go.microsoft.com/fwlink/?LinkID=322105. The missing file is {0}.</ErrorText>
    </PropertyGroup>
    <Error Condition=\\"!Exists('$(SolutionDir)\\\\packages\\\\Microsoft.Windows.CppWinRT.2.0.210312.4\\\\build\\\\native\\\\Microsoft.Windows.CppWinRT.props')\\" Text=\\"$([System.String]::Format('$(ErrorText)', '$(SolutionDir)\\\\packages\\\\Microsoft.Windows.CppWinRT.2.0.210312.4\\\\build\\\\native\\\\Microsoft.Windows.CppWinRT.props'))\\" />
    <Error Condition=\\"!Exists('$(SolutionDir)\\\\packages\\\\Microsoft.Windows.CppWinRT.2.0.210312.4\\\\build\\\\native\\\\Microsoft.Windows.CppWinRT.targets')\\" Text=\\"$([System.String]::Format('$(ErrorText)', '$(SolutionDir)\\\\packages\\\\Microsoft.Windows.CppWinRT.2.0.210312.4\\\\build\\\\native\\\\Microsoft.Windows.CppWinRT.targets'))\\" />
    <Error Condition=\\"!Exists('$(SolutionDir)\\\\packages\\\\ReactNative.Hermes.Windows.0.9.0-ms.6\\\\build\\\\native\\\\ReactNative.Hermes.Windows.targets')\\" Text=\\"$([System.String]::Format('$(ErrorText)', '$(SolutionDir)\\\\packages\\\\ReactNative.Hermes.Windows.0.9.0-ms.6\\\\build\\\\native\\\\ReactNative.Hermes.Windows.targets'))\\" />
    <Error Condition=\\"!Exists('$(SolutionDir)\\\\packages\\\\Microsoft.ReactNative.0.0.0-canary.409\\\\build\\\\native\\\\Microsoft.ReactNative.targets')\\" Text=\\"$([System.String]::Format('$(ErrorText)', '$(SolutionDir)\\\\packages\\\\Microsoft.ReactNative.0.0.0-canary.409\\\\build\\\\native\\\\Microsoft.ReactNative.targets'))\\" />
    <Error Condition=\\"!Exists('$(SolutionDir)\\\\packages\\\\Microsoft.ReactNative.Cxx.0.0.0-canary.409\\\\build\\\\native\\\\Microsoft.ReactNative.Cxx.targets')\\" Text=\\"$([System.String]::Format('$(ErrorText)', '$(SolutionDir)\\\\packages\\\\Microsoft.ReactNative.Cxx.0.0.0-canary.409\\\\build\\\\native\\\\Microsoft.ReactNative.Cxx.targets'))\\" />
    <Error Condition=\\"!Exists('$(SolutionDir)\\\\packages\\\\$(WinUIPackageName).$(WinUIPackageVersion)\\\\build\\\\native\\\\$(WinUIPackageName).targets')\\" Text=\\"$([System.String]::Format('$(ErrorText)', '$(SolutionDir)\\\\packages\\\\$(WinUIPackageName).$(WinUIPackageVersion)\\\\build\\\\native\\\\$(WinUIPackageName).targets'))\\" />
  </Target>
</Project>
"
`;

exports[`C++ NuGet+WinUI3 Library: SnapshotApp.vcxproj.filters 1`] = `
"﻿<?xml version=\\"1.0\\" encoding=\\"utf-8\\"?>
<Project ToolsVersion=\\"Current\\" xmlns=\\"http://schemas.microsoft.com/developer/msbuild/2003\\">
  <ItemGroup>
    <Midl Include=\\"ReactPackageProvider.idl\\" />
  </ItemGroup>
  <ItemGroup>
    <ClCompile Include=\\"pch.cpp\\" />
    <ClCompile Include=\\"$(GeneratedFilesDir)module.g.cpp\\" />
    <ClCompile Include=\\"ReactPackageProvider.cpp\\" />
  </ItemGroup>
  <ItemGroup>
    <ClInclude Include=\\"pch.h\\" />
    <ClInclude Include=\\"ReactPackageProvider.h\\" />
    <ClInclude Include=\\"ReactNativeModule.h\\" />
  </ItemGroup>
  <ItemGroup>
    <None Include=\\"PropertySheet.props\\" />
    <None Include=\\"packages.config\\" />
  </ItemGroup>
</Project>"
`;

exports[`C++ NuGet+WinUI3 Library: packages.config 1`] = `
"﻿<?xml version=\\"1.0\\" encoding=\\"utf-8\\"?>
<packages>
  <package id=\\"Microsoft.Windows.CppWinRT\\" version=\\"2.0.210312.4\\" targetFramework=\\"native\\" />
  <package id=\\"ReactNative.Hermes.Windows\\" version=\\"0.9.0-ms.6\\" targetFramework=\\"native\\" />
  <package id=\\"Microsoft.ReactNative\\" version=\\"0.0.0-canary.409\\" targetFramework=\\"native\\" />
  <package id=\\"Microsoft.ReactNative.Cxx\\" version=\\"0.0.0-canary.409\\" targetFramework=\\"native\\" />
  <package id=\\"Microsoft.WinUI\\" version=\\"3.0.0-preview4.210210.4\\" targetFramework=\\"native\\" />
</packages>"
`;

exports[`C++ NuGet+WinUI3 Library: pch.cpp 1`] = `
"﻿#include \\"pch.h\\"
"
`;

exports[`C++ NuGet+WinUI3 Library: pch.h 1`] = `
"#pragma once

#define NOMINMAX

#include <hstring.h>
#include <restrictederrorinfo.h>
#include <unknwn.h>
#include <windows.h>
#include <CppWinRTIncludes.h>
#if __has_include(<VersionMacros.h>)
  #include <VersionMacros.h>
#endif

#include <winrt/Microsoft.ReactNative.h>

#include <winrt/Microsoft.UI.Xaml.Automation.Peers.h>
#include <winrt/Microsoft.UI.Xaml.Controls.Primitives.h>
#include <winrt/Microsoft.UI.Xaml.Controls.h>
#include <winrt/Microsoft.UI.Xaml.Media.h>
#include <winrt/Microsoft.UI.Xaml.XamlTypeInfo.h>
using namespace winrt::Windows::Foundation;
"
`;

exports[`C++ NuGet+WinUI3+Hermes Application: App.cpp 1`] = `
"#include \\"pch.h\\"

#include \\"App.h\\"

#include \\"AutolinkedNativeModules.g.h\\"
#include \\"ReactPackageProvider.h\\"

using namespace winrt;
using namespace xaml;
using namespace xaml::Controls;
using namespace xaml::Navigation;

using namespace Windows::ApplicationModel;
namespace winrt::SnapshotApp::implementation
{
/// <summary>
/// Initializes the singleton application object.  This is the first line of
/// authored code executed, and as such is the logical equivalent of main() or
/// WinMain().
/// </summary>
App::App() noexcept
{
#if BUNDLE
    JavaScriptBundleFile(L\\"index.windows\\");
    InstanceSettings().UseWebDebugger(false);
    InstanceSettings().UseFastRefresh(false);
#else
    JavaScriptBundleFile(L\\"index\\");
    InstanceSettings().UseWebDebugger(true);
    InstanceSettings().UseFastRefresh(true);
#endif

#if _DEBUG
    InstanceSettings().UseDeveloperSupport(true);
#else
    InstanceSettings().UseDeveloperSupport(false);
#endif

    RegisterAutolinkedNativeModulePackages(PackageProviders()); // Includes any autolinked modules

    PackageProviders().Append(make<ReactPackageProvider>()); // Includes all modules in this project

    InitializeComponent();
}

/// <summary>
/// Invoked when the application is launched normally by the end user.  Other entry points
/// will be used such as when the application is launched to open a specific file.
/// </summary>
/// <param name=\\"e\\">Details about the launch request and process.</param>
void App::OnLaunched(activation::LaunchActivatedEventArgs const& e)
{
    super::OnLaunched(e);

    Frame rootFrame = Window::Current().Content().as<Frame>();
    rootFrame.Navigate(xaml_typename<MainPage>(), box_value(e.Arguments()));
}

/// <summary>
/// Invoked when the application is activated by some means other than normal launching.
/// </summary>
void App::OnActivated(Activation::IActivatedEventArgs const &e) {
  auto preActivationContent = Window::Current().Content();
  super::OnActivated(e);
  if (!preActivationContent && Window::Current()) {
    Frame rootFrame = Window::Current().Content().as<Frame>();
    rootFrame.Navigate(xaml_typename<MainPage>(), nullptr);
  }
}

/// <summary>
/// Invoked when application execution is being suspended.  Application state is saved
/// without knowing whether the application will be terminated or resumed with the contents
/// of memory still intact.
/// </summary>
/// <param name=\\"sender\\">The source of the suspend request.</param>
/// <param name=\\"e\\">Details about the suspend request.</param>
void App::OnSuspending([[maybe_unused]] IInspectable const& sender, [[maybe_unused]] SuspendingEventArgs const& e)
{
    // Save application state and stop any background activity
}

/// <summary>
/// Invoked when Navigation to a certain page fails
/// </summary>
/// <param name=\\"sender\\">The Frame which failed navigation</param>
/// <param name=\\"e\\">Details about the navigation failure</param>
void App::OnNavigationFailed(IInspectable const&, NavigationFailedEventArgs const& e)
{
    throw hresult_error(E_FAIL, hstring(L\\"Failed to load Page \\") + e.SourcePageType().Name);
}

} // namespace winrt::SnapshotApp::implementation
"
`;

exports[`C++ NuGet+WinUI3+Hermes Application: App.h 1`] = `
"#pragma once

#include \\"App.xaml.g.h\\"

#include <CppWinRTIncludes.h>

#ifdef USE_WINUI3
namespace activation = winrt::Microsoft::UI::Xaml;
#else
namespace activation = winrt::Windows::ApplicationModel::Activation;
#endif

namespace winrt::SnapshotApp::implementation
{
    struct App : AppT<App>
    {
        App() noexcept;
        void OnLaunched(activation::LaunchActivatedEventArgs const&);
        void OnActivated(Windows::ApplicationModel::Activation::IActivatedEventArgs const &e);
        void OnSuspending(IInspectable const&, Windows::ApplicationModel::SuspendingEventArgs const&);
        void OnNavigationFailed(IInspectable const&, xaml::Navigation::NavigationFailedEventArgs const&);
      private:
        using super = AppT<App>;
    };
} // namespace winrt::SnapshotApp::implementation
"
`;

exports[`C++ NuGet+WinUI3+Hermes Application: App.idl 1`] = `
"namespace SnapshotApp
{
}
"
`;

exports[`C++ NuGet+WinUI3+Hermes Application: App.xaml 1`] = `
"﻿<react:ReactApplication
    x:Class=\\"SnapshotApp.App\\"
    xmlns=\\"http://schemas.microsoft.com/winfx/2006/xaml/presentation\\"
    xmlns:x=\\"http://schemas.microsoft.com/winfx/2006/xaml\\"
    xmlns:local=\\"using:SnapshotApp\\"
    xmlns:react=\\"using:Microsoft.ReactNative\\">
    <Application.Resources>
        <XamlControlsResources xmlns=\\"using:Microsoft.UI.Xaml.Controls\\" />
    </Application.Resources>
</react:ReactApplication>
"
`;

exports[`C++ NuGet+WinUI3+Hermes Application: AutolinkedNativeModules.g.cpp 1`] = `
"// AutolinkedNativeModules.g.cpp contents generated by \\"react-native autolink-windows\\"
// clang-format off
#include \\"pch.h\\"
#include \\"AutolinkedNativeModules.g.h\\"

namespace winrt::Microsoft::ReactNative
{

void RegisterAutolinkedNativeModulePackages(winrt::Windows::Foundation::Collections::IVector<winrt::Microsoft::ReactNative::IReactPackageProvider> const& packageProviders)
{ 
    UNREFERENCED_PARAMETER(packageProviders);
}

}
"
`;

exports[`C++ NuGet+WinUI3+Hermes Application: AutolinkedNativeModules.g.h 1`] = `
"// AutolinkedNativeModules.g.h contents generated by \\"react-native autolink-windows\\"
// clang-format off
#pragma once

namespace winrt::Microsoft::ReactNative
{

void RegisterAutolinkedNativeModulePackages(winrt::Windows::Foundation::Collections::IVector<winrt::Microsoft::ReactNative::IReactPackageProvider> const& packageProviders);

}
"
`;

exports[`C++ NuGet+WinUI3+Hermes Application: AutolinkedNativeModules.g.props 1`] = `
"<?xml version=\\"1.0\\" encoding=\\"utf-8\\"?>
<Project xmlns=\\"http://schemas.microsoft.com/developer/msbuild/2003\\">
  <!-- AutolinkedNativeModules.g.props contents generated by \\"react-native autolink-windows\\" -->
  <PropertyGroup>
  </PropertyGroup>
</Project>
"
`;

exports[`C++ NuGet+WinUI3+Hermes Application: AutolinkedNativeModules.g.targets 1`] = `
"<?xml version=\\"1.0\\" encoding=\\"utf-8\\"?>
<Project xmlns=\\"http://schemas.microsoft.com/developer/msbuild/2003\\">
  <!-- AutolinkedNativeModules.g.targets contents generated by \\"react-native autolink-windows\\" -->
  <ItemGroup>
  </ItemGroup>
</Project>
"
`;

exports[`C++ NuGet+WinUI3+Hermes Application: ExperimentalFeatures.props 1`] = `
"<?xml version=\\"1.0\\" encoding=\\"utf-8\\"?>
<Project xmlns=\\"http://schemas.microsoft.com/developer/msbuild/2003\\">

  <!--
    This file contains some important settings that will apply globally for
    your app and *all* native modules your app consumes. These values were
    set when you created the app project, and in some cases cannot be
    simply changed here without recreating a new project.
  -->

  <PropertyGroup Label=\\"Microsoft.ReactNative Experimental Features\\">
    <!--
      Enables default usage of Hermes.
      
      See https://microsoft.github.io/react-native-windows/docs/hermes
    -->
    <UseHermes>true</UseHermes>

    <!--
      Changes compilation to assume use of WinUI 3 instead of System XAML.
      Requires creation of new project.

      See https://microsoft.github.io/react-native-windows/docs/winui3
    -->
    <UseWinUI3>true</UseWinUI3>

    <!--
      Changes compilation to assume use of Microsoft.ReactNative NuGet packages
      instead of building the framework from source.
      Requires creation of new project.

      See https://microsoft.github.io/react-native-windows/docs/nuget
    -->
    <UseExperimentalNuget>true</UseExperimentalNuget>
  
  </PropertyGroup>

</Project>
"
`;

exports[`C++ NuGet+WinUI3+Hermes Application: MainPage.cpp 1`] = `
"﻿#include \\"pch.h\\"
#include \\"MainPage.h\\"
#if __has_include(\\"MainPage.g.cpp\\")
#include \\"MainPage.g.cpp\\"
#endif

#include \\"App.h\\"

using namespace winrt;
using namespace xaml;

namespace winrt::SnapshotApp::implementation
{
    MainPage::MainPage()
    {
        InitializeComponent();
        auto app = Application::Current().as<App>();
        ReactRootView().ReactNativeHost(app->Host());
    }
}
"
`;

exports[`C++ NuGet+WinUI3+Hermes Application: MainPage.h 1`] = `
"﻿#pragma once
#include \\"MainPage.g.h\\"
#include <winrt/Microsoft.ReactNative.h>

namespace winrt::SnapshotApp::implementation
{
    struct MainPage : MainPageT<MainPage>
    {
        MainPage();
    };
}

namespace winrt::SnapshotApp::factory_implementation
{
    struct MainPage : MainPageT<MainPage, implementation::MainPage>
    {
    };
}

"
`;

exports[`C++ NuGet+WinUI3+Hermes Application: MainPage.idl 1`] = `
"#include \\"NamespaceRedirect.h\\"

namespace SnapshotApp
{
    [default_interface]
    runtimeclass MainPage : XAML_NAMESPACE.Controls.Page
    {
        MainPage();
    }
}
"
`;

exports[`C++ NuGet+WinUI3+Hermes Application: MainPage.xaml 1`] = `
"<Page
    x:Class=\\"SnapshotApp.MainPage\\"
    xmlns=\\"http://schemas.microsoft.com/winfx/2006/xaml/presentation\\"
    xmlns:x=\\"http://schemas.microsoft.com/winfx/2006/xaml\\"
    xmlns:local=\\"using:SnapshotApp\\"
    xmlns:react=\\"using:Microsoft.ReactNative\\"
    xmlns:d=\\"http://schemas.microsoft.com/expression/blend/2008\\"
    xmlns:mc=\\"http://schemas.openxmlformats.org/markup-compatibility/2006\\"
    mc:Ignorable=\\"d\\"
    Background=\\"{ThemeResource ApplicationPageBackgroundThemeBrush}\\">
    <react:ReactRootView 
        x:Name=\\"ReactRootView\\"
        ComponentName=\\"SnapshotApp\\"
        Background=\\"{ThemeResource ApplicationPageBackgroundThemeBrush}\\"
        MinHeight=\\"400\\"/>
</Page>
"
`;

exports[`C++ NuGet+WinUI3+Hermes Application: NuGet.Config 1`] = `
"<?xml version=\\"1.0\\" encoding=\\"utf-8\\"?>
<configuration>
  <config>
    <add key=\\"repositoryPath\\" value=\\"packages\\" />
  </config>
  <packageSources>
    <clear />
    <add key=\\"react-native\\" value=\\"https://pkgs.dev.azure.com/ms/react-native/_packaging/react-native-public/nuget/v3/index.json\\" />
    <add key=\\"Nuget.org\\" value=\\"https://api.nuget.org/v3/index.json\\" />
  </packageSources>
  <disabledPackageSources>
    <clear />
  </disabledPackageSources>  
</configuration>
"
`;

exports[`C++ NuGet+WinUI3+Hermes Application: Package.appxmanifest 1`] = `
"﻿<?xml version=\\"1.0\\" encoding=\\"utf-8\\"?>

<Package
  xmlns=\\"http://schemas.microsoft.com/appx/manifest/foundation/windows10\\"
  xmlns:mp=\\"http://schemas.microsoft.com/appx/2014/phone/manifest\\"
  xmlns:uap=\\"http://schemas.microsoft.com/appx/manifest/uap/windows10\\"
  IgnorableNamespaces=\\"uap mp\\">

  <Identity
    Name=\\"b3814364-e203-484a-927c-1ebe5c49e2c1\\"
    Publisher=\\"CN=nickg\\"
    Version=\\"1.0.0.0\\" />

  <mp:PhoneIdentity PhoneProductId=\\"b3814364-e203-484a-927c-1ebe5c49e2c1\\" PhonePublisherId=\\"00000000-0000-0000-0000-000000000000\\"/>

  <Properties>
    <DisplayName>SnapshotApp</DisplayName>
    <PublisherDisplayName>nickg</PublisherDisplayName>
    <Logo>Assets\\\\StoreLogo.png</Logo>
  </Properties>

  <Dependencies>
    <TargetDeviceFamily Name=\\"Windows.Universal\\" MinVersion=\\"10.0.0.0\\" MaxVersionTested=\\"10.0.0.0\\" />
  </Dependencies>

  <Resources>
    <Resource Language=\\"x-generate\\"/>
  </Resources>

  <Applications>
    <Application
      Id=\\"App\\"
      Executable=\\"$targetnametoken$.exe\\"
      EntryPoint=\\"SnapshotApp.App\\">
      <uap:VisualElements
        DisplayName=\\"SnapshotApp\\"
        Square150x150Logo=\\"Assets\\\\Square150x150Logo.png\\"
        Square44x44Logo=\\"Assets\\\\Square44x44Logo.png\\"
        Description=\\"SnapshotApp\\"
        BackgroundColor=\\"transparent\\">
        <uap:DefaultTile Wide310x150Logo=\\"Assets\\\\Wide310x150Logo.png\\"/>
        <uap:SplashScreen Image=\\"Assets\\\\SplashScreen.png\\" />
      </uap:VisualElements>
    </Application>
  </Applications>

  <Capabilities>
    <Capability Name=\\"internetClient\\" />
  </Capabilities>
</Package>"
`;

exports[`C++ NuGet+WinUI3+Hermes Application: PropertySheet.props 1`] = `
"<?xml version=\\"1.0\\" encoding=\\"utf-8\\"?>
<Project ToolsVersion=\\"Current\\" xmlns=\\"http://schemas.microsoft.com/developer/msbuild/2003\\">
  <ImportGroup Label=\\"PropertySheets\\" />
  <PropertyGroup Label=\\"UserMacros\\" />
  <!--
    To customize common C++/WinRT project properties:
    * right-click the project node
    * expand the Common Properties item
    * select the C++/WinRT property page

    For more advanced scenarios, and complete documentation, please see:
    https://github.com/Microsoft/xlang/tree/master/src/package/cppwinrt/nuget
    -->
  <PropertyGroup />
  <ItemDefinitionGroup />
</Project>"
`;

exports[`C++ NuGet+WinUI3+Hermes Application: ReactPackageProvider.cpp 1`] = `
"#include \\"pch.h\\"
#include \\"ReactPackageProvider.h\\"
#include \\"NativeModules.h\\"

using namespace winrt::Microsoft::ReactNative;

namespace winrt::SnapshotApp::implementation
{

void ReactPackageProvider::CreatePackage(IReactPackageBuilder const &packageBuilder) noexcept
{
    AddAttributedModules(packageBuilder);
}

} // namespace winrt::SnapshotApp::implementation
"
`;

exports[`C++ NuGet+WinUI3+Hermes Application: ReactPackageProvider.h 1`] = `
"#pragma once

#include \\"winrt/Microsoft.ReactNative.h\\"

namespace winrt::SnapshotApp::implementation
{
    struct ReactPackageProvider : winrt::implements<ReactPackageProvider, winrt::Microsoft::ReactNative::IReactPackageProvider>
    {
    public: // IReactPackageProvider
        void CreatePackage(winrt::Microsoft::ReactNative::IReactPackageBuilder const &packageBuilder) noexcept;
    };
} // namespace winrt::SnapshotApp::implementation

"
`;

exports[`C++ NuGet+WinUI3+Hermes Application: SnapshotApp.sln 1`] = `
"﻿
Microsoft Visual Studio Solution File, Format Version 12.00
# Visual Studio Version 16
VisualStudioVersion = 16.0.29215.179
MinimumVisualStudioVersion = 10.0.40219.1
Project(\\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\\") = \\"SnapshotApp\\", \\"SnapshotApp\\\\SnapshotApp.vcxproj\\", \\"{94A189AD-79C0-4752-B5E6-FE6D35F40000}\\"
EndProject
Global
	GlobalSection(SolutionConfigurationPlatforms) = preSolution
		Debug|ARM64 = Debug|ARM64
		Debug|x64 = Debug|x64
		Debug|x86 = Debug|x86
		Release|ARM64 = Release|ARM64
		Release|x64 = Release|x64
		Release|x86 = Release|x86
	EndGlobalSection
	GlobalSection(ProjectConfigurationPlatforms) = postSolution
		{94A189AD-79C0-4752-B5E6-FE6D35F40000}.Debug|ARM64.ActiveCfg = Debug|ARM64
		{94A189AD-79C0-4752-B5E6-FE6D35F40000}.Debug|ARM64.Build.0 = Debug|ARM64
		{94A189AD-79C0-4752-B5E6-FE6D35F40000}.Debug|ARM64.Deploy.0 = Debug|ARM64
		{94A189AD-79C0-4752-B5E6-FE6D35F40000}.Debug|x64.ActiveCfg = Debug|x64
		{94A189AD-79C0-4752-B5E6-FE6D35F40000}.Debug|x64.Build.0 = Debug|x64
		{94A189AD-79C0-4752-B5E6-FE6D35F40000}.Debug|x64.Deploy.0 = Debug|x64
		{94A189AD-79C0-4752-B5E6-FE6D35F40000}.Debug|x86.ActiveCfg = Debug|Win32
		{94A189AD-79C0-4752-B5E6-FE6D35F40000}.Debug|x86.Build.0 = Debug|Win32
		{94A189AD-79C0-4752-B5E6-FE6D35F40000}.Debug|x86.Deploy.0 = Debug|Win32
		{94A189AD-79C0-4752-B5E6-FE6D35F40000}.Release|ARM64.ActiveCfg = Release|ARM64
		{94A189AD-79C0-4752-B5E6-FE6D35F40000}.Release|ARM64.Build.0 = Release|ARM64
		{94A189AD-79C0-4752-B5E6-FE6D35F40000}.Release|ARM64.Deploy.0 = Release|ARM64
		{94A189AD-79C0-4752-B5E6-FE6D35F40000}.Release|x64.ActiveCfg = Release|x64
		{94A189AD-79C0-4752-B5E6-FE6D35F40000}.Release|x64.Build.0 = Release|x64
		{94A189AD-79C0-4752-B5E6-FE6D35F40000}.Release|x64.Deploy.0 = Release|x64
		{94A189AD-79C0-4752-B5E6-FE6D35F40000}.Release|x86.ActiveCfg = Release|Win32
		{94A189AD-79C0-4752-B5E6-FE6D35F40000}.Release|x86.Build.0 = Release|Win32
		{94A189AD-79C0-4752-B5E6-FE6D35F40000}.Release|x86.Deploy.0 = Release|Win32
	EndGlobalSection
	GlobalSection(SolutionProperties) = preSolution
		HideSolutionNode = FALSE
	EndGlobalSection
	GlobalSection(ExtensibilityGlobals) = postSolution
		SolutionGuid = {D43FAD39-F619-437D-BB40-04A3982ACB6A}
	EndGlobalSection
EndGlobal
"
`;

exports[`C++ NuGet+WinUI3+Hermes Application: SnapshotApp.vcxproj 1`] = `
"<?xml version=\\"1.0\\" encoding=\\"utf-8\\"?>
<Project ToolsVersion=\\"Current\\" DefaultTargets=\\"Build\\" xmlns=\\"http://schemas.microsoft.com/developer/msbuild/2003\\">
  <Import Project=\\"$(SolutionDir)\\\\ExperimentalFeatures.props\\" Condition=\\"Exists('$(SolutionDir)\\\\ExperimentalFeatures.props')\\" />
  <Import Project=\\"..\\\\packages\\\\Microsoft.Windows.CppWinRT.2.0.210312.4\\\\build\\\\native\\\\Microsoft.Windows.CppWinRT.props\\" Condition=\\"Exists('..\\\\packages\\\\Microsoft.Windows.CppWinRT.2.0.210312.4\\\\build\\\\native\\\\Microsoft.Windows.CppWinRT.props')\\" />
  <PropertyGroup Label=\\"Globals\\">
    <CppWinRTOptimized>true</CppWinRTOptimized>
    <CppWinRTRootNamespaceAutoMerge>true</CppWinRTRootNamespaceAutoMerge>
    <MinimalCoreWin>true</MinimalCoreWin>
    <ProjectGuid>{94a189ad-79c0-4752-b5e6-fe6d35f40000}</ProjectGuid>
    <ProjectName>SnapshotApp</ProjectName>
    <RootNamespace>SnapshotApp</RootNamespace>
    <DefaultLanguage>en-US</DefaultLanguage>
    <MinimumVisualStudioVersion>16.0</MinimumVisualStudioVersion>
    <AppContainerApplication>true</AppContainerApplication>
    <ApplicationType>Windows Store</ApplicationType>
    <ApplicationTypeRevision>10.0</ApplicationTypeRevision>
  </PropertyGroup>
  <PropertyGroup Label=\\"ReactNativeWindowsProps\\">
    <ReactNativeWindowsDir Condition=\\"'$(ReactNativeWindowsDir)' == ''\\">$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), 'node_modules\\\\react-native-windows\\\\package.json'))\\\\node_modules\\\\react-native-windows\\\\</ReactNativeWindowsDir>
  </PropertyGroup>
  <Import Project=\\"$(ReactNativeWindowsDir)\\\\PropertySheets\\\\External\\\\Microsoft.ReactNative.WindowsSdk.Default.props\\" />
  <Import Project=\\"$(VCTargetsPath)\\\\Microsoft.Cpp.Default.props\\" />
  <ItemGroup Label=\\"ProjectConfigurations\\">
    <ProjectConfiguration Include=\\"Debug|ARM64\\">
      <Configuration>Debug</Configuration>
      <Platform>ARM64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include=\\"Debug|Win32\\">
      <Configuration>Debug</Configuration>
      <Platform>Win32</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include=\\"Debug|x64\\">
      <Configuration>Debug</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include=\\"Release|ARM64\\">
      <Configuration>Release</Configuration>
      <Platform>ARM64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include=\\"Release|Win32\\">
      <Configuration>Release</Configuration>
      <Platform>Win32</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include=\\"Release|x64\\">
      <Configuration>Release</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
  </ItemGroup>
  <PropertyGroup Label=\\"Configuration\\">
    <ConfigurationType>Application</ConfigurationType>
    <CharacterSet>Unicode</CharacterSet>
  </PropertyGroup>
  <PropertyGroup Condition=\\"'$(Configuration)'=='Debug'\\" Label=\\"Configuration\\">
    <UseDebugLibraries>true</UseDebugLibraries>
    <LinkIncremental>true</LinkIncremental>
  </PropertyGroup>
  <PropertyGroup Condition=\\"'$(Configuration)'=='Release'\\" Label=\\"Configuration\\">
    <UseDebugLibraries>false</UseDebugLibraries>
    <WholeProgramOptimization>true</WholeProgramOptimization>
    <LinkIncremental>false</LinkIncremental>
  </PropertyGroup>
  <Import Project=\\"$(VCTargetsPath)\\\\Microsoft.Cpp.props\\" />
  <ImportGroup Label=\\"ExtensionSettings\\"></ImportGroup>
  <ImportGroup Label=\\"PropertySheets\\">
    <Import Project=\\"$(UserRootDir)\\\\Microsoft.Cpp.$(Platform).user.props\\" Condition=\\"exists('$(UserRootDir)\\\\Microsoft.Cpp.$(Platform).user.props')\\" Label=\\"LocalAppDataPlatform\\" />
  </ImportGroup>
  <ImportGroup Label=\\"PropertySheets\\">
    <Import Project=\\"PropertySheet.props\\" />
  </ImportGroup>
  <ImportGroup Label=\\"ReactNativeWindowsPropertySheets\\">
    <Import Project=\\"$(ReactNativeWindowsDir)\\\\PropertySheets\\\\external\\\\Microsoft.ReactNative.Uwp.CppApp.props\\" Condition=\\"Exists('$(ReactNativeWindowsDir)\\\\PropertySheets\\\\External\\\\Microsoft.ReactNative.Uwp.CppApp.props')\\" />
    <Import Project=\\"..\\\\packages\\\\$(WinUIPackageProps)\\" Condition=\\"'$(WinUIPackageProps)'!='' And Exists('..\\\\packages\\\\$(WinUIPackageProps)')\\" />
  </ImportGroup>
  <PropertyGroup Label=\\"UserMacros\\" />
  <ItemDefinitionGroup>
    <ClCompile>
      <PrecompiledHeader>Use</PrecompiledHeader>
      <PrecompiledHeaderFile>pch.h</PrecompiledHeaderFile>
      <PrecompiledHeaderOutputFile>$(IntDir)pch.pch</PrecompiledHeaderOutputFile>
      <WarningLevel>Level4</WarningLevel>
      <AdditionalOptions>%(AdditionalOptions) /bigobj</AdditionalOptions>
      <DisableSpecificWarnings>4453;28204</DisableSpecificWarnings>
    </ClCompile>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition=\\"'$(Configuration)'=='Debug'\\">
    <ClCompile>
      <PreprocessorDefinitions>_DEBUG;%(PreprocessorDefinitions)</PreprocessorDefinitions>
    </ClCompile>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition=\\"'$(Configuration)'=='Release'\\">
    <ClCompile>
      <PreprocessorDefinitions>NDEBUG;%(PreprocessorDefinitions)</PreprocessorDefinitions>
    </ClCompile>
  </ItemDefinitionGroup>
  <ItemGroup>
    <ClInclude Include=\\"MainPage.h\\">
      <DependentUpon>MainPage.xaml</DependentUpon>
      <SubType>Code</SubType>
    </ClInclude>
    <ClInclude Include=\\"ReactPackageProvider.h\\" />
    <ClInclude Include=\\"AutolinkedNativeModules.g.h\\" />
    <ClInclude Include=\\"pch.h\\" />
    <ClInclude Include=\\"App.h\\">
      <DependentUpon>App.xaml</DependentUpon>
    </ClInclude>
  </ItemGroup>
  <ItemGroup>
    <ApplicationDefinition Include=\\"App.xaml\\">
      <SubType>Designer</SubType>
    </ApplicationDefinition>
  </ItemGroup>
  <ItemGroup>
    <AppxManifest Include=\\"Package.appxmanifest\\">
      <SubType>Designer</SubType>
    </AppxManifest>
  </ItemGroup>
  <ItemGroup>
    <Image Include=\\"Assets\\\\LockScreenLogo.scale-200.png\\" />
    <Image Include=\\"Assets\\\\SplashScreen.scale-200.png\\" />
    <Image Include=\\"Assets\\\\Square150x150Logo.scale-200.png\\" />
    <Image Include=\\"Assets\\\\Square44x44Logo.scale-200.png\\" />
    <Image Include=\\"Assets\\\\Square44x44Logo.targetsize-24_altform-unplated.png\\" />
    <Image Include=\\"Assets\\\\StoreLogo.png\\" />
    <Image Include=\\"Assets\\\\Wide310x150Logo.scale-200.png\\" />
  </ItemGroup>
  <ItemGroup>
    <ClCompile Include=\\"MainPage.cpp\\">
      <DependentUpon>MainPage.xaml</DependentUpon>
      <SubType>Code</SubType>
    </ClCompile>
    <ClCompile Include=\\"ReactPackageProvider.cpp\\" />
    <ClCompile Include=\\"AutolinkedNativeModules.g.cpp\\" />
    <ClCompile Include=\\"pch.cpp\\">
      <PrecompiledHeader>Create</PrecompiledHeader>
    </ClCompile>
    <ClCompile Include=\\"App.cpp\\">
      <DependentUpon>App.xaml</DependentUpon>
    </ClCompile>
    <ClCompile Include=\\"$(GeneratedFilesDir)module.g.cpp\\" />
  </ItemGroup>
  <ItemGroup>
    <Midl Include=\\"App.idl\\">
      <DependentUpon>App.xaml</DependentUpon>
    </Midl>
    <Midl Include=\\"MainPage.idl\\">
      <DependentUpon>MainPage.xaml</DependentUpon>
      <SubType>Code</SubType>
    </Midl>
  </ItemGroup>
  <ItemGroup>
    <None Include=\\"packages.config\\" />
    <None Include=\\"PropertySheet.props\\" />
    <Text Include=\\"readme.txt\\">
      <DeploymentContent>false</DeploymentContent>
    </Text>
  </ItemGroup>
  <ItemGroup>
    <Page Include=\\"MainPage.xaml\\">
      <SubType>Designer</SubType>
    </Page>
  </ItemGroup>
  <Import Project=\\"$(VCTargetsPath)\\\\Microsoft.Cpp.targets\\" />
  <ImportGroup Label=\\"ReactNativeWindowsTargets\\">
    <Import Project=\\"$(ReactNativeWindowsDir)\\\\PropertySheets\\\\External\\\\Microsoft.ReactNative.Uwp.CppApp.targets\\" Condition=\\"Exists('$(ReactNativeWindowsDir)\\\\PropertySheets\\\\External\\\\Microsoft.ReactNative.Uwp.CppApp.targets')\\" />
  </ImportGroup>
  <Target Name=\\"EnsureReactNativeWindowsTargets\\" BeforeTargets=\\"PrepareForBuild\\">
    <PropertyGroup>
      <ErrorText>This project references targets in your node_modules\\\\react-native-windows folder that are missing. The missing file is {0}.</ErrorText>
    </PropertyGroup>
    <Error Condition=\\"!Exists('$(ReactNativeWindowsDir)\\\\PropertySheets\\\\External\\\\Microsoft.ReactNative.Uwp.CppApp.props')\\" Text=\\"$([System.String]::Format('$(ErrorText)', '$(ReactNativeWindowsDir)\\\\PropertySheets\\\\External\\\\Microsoft.ReactNative.Uwp.CppApp.props'))\\" />
    <Error Condition=\\"!Exists('$(ReactNativeWindowsDir)\\\\PropertySheets\\\\External\\\\Microsoft.ReactNative.Uwp.CppApp.targets')\\" Text=\\"$([System.String]::Format('$(ErrorText)', '$(ReactNativeWindowsDir)\\\\PropertySheets\\\\External\\\\Microsoft.ReactNative.Uwp.CppApp.targets'))\\" />
  </Target>
  <ImportGroup Label=\\"ExtensionTargets\\">
    <Import Project=\\"..\\\\packages\\\\Microsoft.Windows.CppWinRT.2.0.210312.4\\\\build\\\\native\\\\Microsoft.Windows.CppWinRT.targets\\" Condition=\\"Exists('..\\\\packages\\\\Microsoft.Windows.CppWinRT.2.0.210312.4\\\\build\\\\native\\\\Microsoft.Windows.CppWinRT.targets')\\" />
    <Import Project=\\"..\\\\packages\\\\ReactNative.Hermes.Windows.0.9.0-ms.6\\\\build\\\\native\\\\ReactNative.Hermes.Windows.targets\\" Condition=\\"Exists('..\\\\packages\\\\ReactNative.Hermes.Windows.0.9.0-ms.6\\\\build\\\\native\\\\ReactNative.Hermes.Windows.targets')\\" />
    <Import Project=\\"..\\\\packages\\\\Microsoft.ReactNative.0.0.0-canary.409\\\\build\\\\native\\\\Microsoft.ReactNative.targets\\" Condition=\\"Exists('..\\\\packages\\\\Microsoft.ReactNative.0.0.0-canary.409\\\\build\\\\native\\\\Microsoft.ReactNative.targets')\\" />
    <Import Project=\\"..\\\\packages\\\\Microsoft.ReactNative.Cxx.0.0.0-canary.409\\\\build\\\\native\\\\Microsoft.ReactNative.Cxx.targets\\" Condition=\\"Exists('..\\\\packages\\\\Microsoft.ReactNative.Cxx.0.0.0-canary.409\\\\build\\\\native\\\\Microsoft.ReactNative.Cxx.targets')\\" />
    <Import Project=\\"..\\\\packages\\\\$(WinUIPackageName).$(WinUIPackageVersion)\\\\build\\\\native\\\\$(WinUIPackageName).targets\\" Condition=\\"Exists('..\\\\packages\\\\$(WinUIPackageName).$(WinUIPackageVersion)\\\\build\\\\native\\\\$(WinUIPackageName).targets')\\" />
  </ImportGroup>
  <Target Name=\\"EnsureNuGetPackageBuildImports\\" BeforeTargets=\\"PrepareForBuild\\">
    <PropertyGroup>
      <ErrorText>This project references NuGet package(s) that are missing on this computer. Use NuGet Package Restore to download them.  For more information, see http://go.microsoft.com/fwlink/?LinkID=322105. The missing file is {0}.</ErrorText>
    </PropertyGroup>
    <Error Condition=\\"!Exists('..\\\\packages\\\\Microsoft.Windows.CppWinRT.2.0.210312.4\\\\build\\\\native\\\\Microsoft.Windows.CppWinRT.props')\\" Text=\\"$([System.String]::Format('$(ErrorText)', '..\\\\packages\\\\Microsoft.Windows.CppWinRT.2.0.210312.4\\\\build\\\\native\\\\Microsoft.Windows.CppWinRT.props'))\\" />
    <Error Condition=\\"!Exists('..\\\\packages\\\\Microsoft.Windows.CppWinRT.2.0.210312.4\\\\build\\\\native\\\\Microsoft.Windows.CppWinRT.targets')\\" Text=\\"$([System.String]::Format('$(ErrorText)', '..\\\\packages\\\\Microsoft.Windows.CppWinRT.2.0.210312.4\\\\build\\\\native\\\\Microsoft.Windows.CppWinRT.targets'))\\" />
    <Error Condition=\\"!Exists('..\\\\packages\\\\ReactNative.Hermes.Windows.0.9.0-ms.6\\\\build\\\\native\\\\ReactNative.Hermes.Windows.targets')\\" Text=\\"$([System.String]::Format('$(ErrorText)', '..\\\\packages\\\\ReactNative.Hermes.Windows.0.9.0-ms.6\\\\build\\\\native\\\\ReactNative.Hermes.Windows.targets'))\\" />
    <Error Condition=\\"!Exists('..\\\\packages\\\\Microsoft.ReactNative.0.0.0-canary.409\\\\build\\\\native\\\\Microsoft.ReactNative.targets')\\" Text=\\"$([System.String]::Format('$(ErrorText)', '..\\\\packages\\\\Microsoft.ReactNative.0.0.0-canary.409\\\\build\\\\native\\\\Microsoft.ReactNative.targets'))\\" />
    <Error Condition=\\"!Exists('..\\\\packages\\\\Microsoft.ReactNative.Cxx.0.0.0-canary.409\\\\build\\\\native\\\\Microsoft.ReactNative.Cxx.targets')\\" Text=\\"$([System.String]::Format('$(ErrorText)', '..\\\\packages\\\\Microsoft.ReactNative.Cxx.0.0.0-canary.409\\\\build\\\\native\\\\Microsoft.ReactNative.Cxx.targets'))\\" />
    <Error Condition=\\"!Exists('..\\\\packages\\\\$(WinUIPackageName).$(WinUIPackageVersion)\\\\build\\\\native\\\\$(WinUIPackageName).targets')\\" Text=\\"$([System.String]::Format('$(ErrorText)', '..\\\\packages\\\\$(WinUIPackageName).$(WinUIPackageVersion)\\\\build\\\\native\\\\$(WinUIPackageName).targets'))\\" />
  </Target>
</Project>
"
`;

exports[`C++ NuGet+WinUI3+Hermes Application: SnapshotApp.vcxproj.filters 1`] = `
"﻿<?xml version=\\"1.0\\" encoding=\\"utf-8\\"?>
<Project ToolsVersion=\\"Current\\" xmlns=\\"http://schemas.microsoft.com/developer/msbuild/2003\\">
  <ItemGroup>
    <ApplicationDefinition Include=\\"App.xaml\\" />
  </ItemGroup>
  <ItemGroup>
    <Midl Include=\\"App.idl\\" />
  </ItemGroup>
  <ItemGroup>
    <ClCompile Include=\\"pch.cpp\\" />
    <ClCompile Include=\\"App.cpp\\" />
    <ClCompile Include=\\"$(GeneratedFilesDir)module.g.cpp\\" />
    <ClCompile Include=\\"ReactPackageProvider.cpp\\" />
    <ClCompile Include=\\"AutolinkedNativeModules.g.cpp\\" />
  </ItemGroup>
  <ItemGroup>
    <ClInclude Include=\\"pch.h\\" />
    <ClInclude Include=\\"App.h\\" />
    <ClInclude Include=\\"ReactPackageProvider.h\\" />
    <ClInclude Include=\\"AutolinkedNativeModules.g.h\\" />
  </ItemGroup>
  <ItemGroup>
    <Image Include=\\"Assets\\\\Wide310x150Logo.scale-200.png\\">
      <Filter>Assets</Filter>
    </Image>
    <Image Include=\\"Assets\\\\StoreLogo.png\\">
      <Filter>Assets</Filter>
    </Image>
    <Image Include=\\"Assets\\\\Square150x150Logo.scale-200.png\\">
      <Filter>Assets</Filter>
    </Image>
    <Image Include=\\"Assets\\\\Square44x44Logo.targetsize-24_altform-unplated.png\\">
      <Filter>Assets</Filter>
    </Image>
    <Image Include=\\"Assets\\\\Square44x44Logo.scale-200.png\\">
      <Filter>Assets</Filter>
    </Image>
    <Image Include=\\"Assets\\\\SplashScreen.scale-200.png\\">
      <Filter>Assets</Filter>
    </Image>
    <Image Include=\\"Assets\\\\LockScreenLogo.scale-200.png\\">
      <Filter>Assets</Filter>
    </Image>
  </ItemGroup>
  <ItemGroup>
    <AppxManifest Include=\\"Package.appxmanifest\\" />
  </ItemGroup>
  <ItemGroup>
    <Filter Include=\\"Assets\\">
      <UniqueIdentifier>{e48dc53e-40b1-40cb-970a-f89935452892}</UniqueIdentifier>
    </Filter>
  </ItemGroup>
  <ItemGroup>
    <None Include=\\"PropertySheet.props\\" />
    <None Include=\\"packages.config\\" />
  </ItemGroup>
  <ItemGroup>
    <Text Include=\\"readme.txt\\" />
  </ItemGroup>
  <ItemGroup>
    <Page Include=\\"MainPage.xaml\\" />
  </ItemGroup>
</Project>"
`;

exports[`C++ NuGet+WinUI3+Hermes Application: index.windows.bundle 1`] = `
"/**
 * 
 * Be sure to generate this file using the CLI:
 *
 * npx react-native bundle --platform windows --entry-file index.js 
 *   --bundle-output windows\\\\SnapshotApp\\\\Bundle\\\\index.windows.bundle
 *   --assets-dest windows\\\\SnapshotApp\\\\Bundle
 *
 */"
`;

exports[`C++ NuGet+WinUI3+Hermes Application: metro.config.js 1`] = `
"/**
 * Metro configuration for React Native
 * https://github.com/facebook/react-native
 *
 * @format
 */
const fs = require('fs');
const path = require('path');
const exclusionList = require('metro-config/src/defaults/exclusionList');

const rnwPath = fs.realpathSync(
  path.resolve(require.resolve('react-native-windows/package.json'), '..'),
);

module.exports = {
  resolver: {
    blockList: exclusionList([
      // This stops \\"react-native run-windows\\" from causing the metro server to crash if its already running
      new RegExp(
        \`\${path.resolve(__dirname, 'windows').replace(/[/\\\\\\\\]/g, '/')}.*\`,
      ),
      // This prevents \\"react-native run-windows\\" from hitting: EBUSY: resource busy or locked, open msbuild.ProjectImports.zip or other files produced by msbuild
      new RegExp(\`\${rnwPath}/build/.*\`),
      new RegExp(\`\${rnwPath}/target/.*\`),
      /.*\\\\.ProjectImports\\\\.zip/,
    ]),
  },
  transformer: {
    getTransformOptions: async () => ({
      transform: {
        experimentalImportSupport: false,
        inlineRequires: true,
      },
    }),
  },
};
"
`;

exports[`C++ NuGet+WinUI3+Hermes Application: packages.config 1`] = `
"﻿<?xml version=\\"1.0\\" encoding=\\"utf-8\\"?>
<packages>
  <package id=\\"Microsoft.Windows.CppWinRT\\" version=\\"2.0.210312.4\\" targetFramework=\\"native\\" />
  <package id=\\"ReactNative.Hermes.Windows\\" version=\\"0.9.0-ms.6\\" targetFramework=\\"native\\" />
  <package id=\\"Microsoft.ReactNative\\" version=\\"0.0.0-canary.409\\" targetFramework=\\"native\\" />
  <package id=\\"Microsoft.ReactNative.Cxx\\" version=\\"0.0.0-canary.409\\" targetFramework=\\"native\\" />
  <package id=\\"Microsoft.WinUI\\" version=\\"3.0.0-preview4.210210.4\\" targetFramework=\\"native\\" />
</packages>"
`;

exports[`C++ NuGet+WinUI3+Hermes Application: pch.cpp 1`] = `
"﻿#include \\"pch.h\\"
"
`;

exports[`C++ NuGet+WinUI3+Hermes Application: pch.h 1`] = `
"#pragma once

#define NOMINMAX

#include <hstring.h>
#include <restrictederrorinfo.h>
#include <unknwn.h>
#include <windows.h>
#include <CppWinRTIncludes.h>
#include <VersionMacros.h>
#include <winrt/Windows.ApplicationModel.Activation.h>
#include <UI.Xaml.Controls.Primitives.h>
#include <UI.Xaml.Controls.h>
#include <UI.Xaml.Markup.h>
#include <UI.Xaml.Navigation.h>

#include <winrt/Microsoft.ReactNative.h>

#include <winrt/Microsoft.UI.Xaml.Automation.Peers.h>
#include <winrt/Microsoft.UI.Xaml.Controls.Primitives.h>
#include <winrt/Microsoft.UI.Xaml.Controls.h>
#include <winrt/Microsoft.UI.Xaml.Media.h>
#include <winrt/Microsoft.UI.Xaml.XamlTypeInfo.h>
using namespace winrt::Windows::Foundation;
"
`;

exports[`C++ NuGet+WinUI3+Hermes Library: ExperimentalFeatures.props 1`] = `
"<?xml version=\\"1.0\\" encoding=\\"utf-8\\"?>
<Project xmlns=\\"http://schemas.microsoft.com/developer/msbuild/2003\\">

  <!--
    Application projects contain a file with this name to specify some important settings
    that will apply globally for the app and *all* native modules the app consumes. These
    values are set by the app developer.
  -->

</Project>
"
`;

exports[`C++ NuGet+WinUI3+Hermes Library: NuGet.Config 1`] = `
"<?xml version=\\"1.0\\" encoding=\\"utf-8\\"?>
<configuration>
  <config>
    <add key=\\"repositoryPath\\" value=\\"packages\\" />
  </config>
  <packageSources>
    <clear />
    <add key=\\"react-native\\" value=\\"https://pkgs.dev.azure.com/ms/react-native/_packaging/react-native-public/nuget/v3/index.json\\" />
    <add key=\\"Nuget.org\\" value=\\"https://api.nuget.org/v3/index.json\\" />
  </packageSources>
  <disabledPackageSources>
    <clear />
  </disabledPackageSources>  
</configuration>
"
`;

exports[`C++ NuGet+WinUI3+Hermes Library: PropertySheet.props 1`] = `
"<?xml version=\\"1.0\\" encoding=\\"utf-8\\"?>
<Project ToolsVersion=\\"Current\\" xmlns=\\"http://schemas.microsoft.com/developer/msbuild/2003\\">
  <ImportGroup Label=\\"PropertySheets\\" />
  <PropertyGroup Label=\\"UserMacros\\" />
  <!--
    To customize common C++/WinRT project properties:
    * right-click the project node
    * expand the Common Properties item
    * select the C++/WinRT property page

    For more advanced scenarios, and complete documentation, please see:
    https://github.com/Microsoft/xlang/tree/master/src/package/cppwinrt/nuget
    -->
  <PropertyGroup />
  <ItemDefinitionGroup />
</Project>"
`;

exports[`C++ NuGet+WinUI3+Hermes Library: ReactNativeModule.h 1`] = `
"﻿#pragma once

#include \\"JSValue.h\\"
#include \\"NativeModules.h\\"

using namespace winrt::Microsoft::ReactNative;

namespace winrt::SnapshotApp
{

REACT_MODULE(ReactNativeModule, L\\"SnapshotApp\\")
struct ReactNativeModule
{
    // See https://microsoft.github.io/react-native-windows/docs/native-modules for details on writing native modules

    REACT_INIT(Initialize)
    void Initialize(ReactContext const &reactContext) noexcept
    {
        m_reactContext = reactContext;
    }
    
    REACT_METHOD(sampleMethod)
    void sampleMethod(std::string stringArgument, int numberArgument, std::function<void(std::string)> &&callback) noexcept
    {
        // TODO: Implement some actually useful functionality
        callback(\\"Received numberArgument: \\" + std::to_string(numberArgument) + \\" stringArgument: \\" + stringArgument);
    }

    private:
        ReactContext m_reactContext{nullptr};
};

} // namespace winrt::SnapshotApp
"
`;

exports[`C++ NuGet+WinUI3+Hermes Library: ReactPackageProvider.cpp 1`] = `
"#include \\"pch.h\\"
#include \\"ReactPackageProvider.h\\"
#if __has_include(\\"ReactPackageProvider.g.cpp\\")
#include \\"ReactPackageProvider.g.cpp\\"
#endif

#include \\"ReactNativeModule.h\\"

using namespace winrt::Microsoft::ReactNative;

namespace winrt::SnapshotApp::implementation
{

void ReactPackageProvider::CreatePackage(IReactPackageBuilder const &packageBuilder) noexcept
{
    AddAttributedModules(packageBuilder);
}

} // namespace winrt::SnapshotApp::implementation
"
`;

exports[`C++ NuGet+WinUI3+Hermes Library: ReactPackageProvider.h 1`] = `
"#pragma once
#include \\"ReactPackageProvider.g.h\\"

using namespace winrt::Microsoft::ReactNative;

namespace winrt::SnapshotApp::implementation
{
    struct ReactPackageProvider : ReactPackageProviderT<ReactPackageProvider>
    {
        ReactPackageProvider() = default;

        void CreatePackage(IReactPackageBuilder const &packageBuilder) noexcept;
    };
} // namespace winrt::SnapshotApp::implementation

namespace winrt::SnapshotApp::factory_implementation
{

struct ReactPackageProvider : ReactPackageProviderT<ReactPackageProvider, implementation::ReactPackageProvider> {};

} // namespace winrt::SnapshotApp::factory_implementation
"
`;

exports[`C++ NuGet+WinUI3+Hermes Library: ReactPackageProvider.idl 1`] = `
"namespace SnapshotApp
{
    [webhosthidden]
    [default_interface]
    runtimeclass ReactPackageProvider : Microsoft.ReactNative.IReactPackageProvider
    {
        ReactPackageProvider();
    };
}
"
`;

exports[`C++ NuGet+WinUI3+Hermes Library: SnapshotApp.def 1`] = `
"﻿EXPORTS
DllCanUnloadNow = WINRT_CanUnloadNow                    PRIVATE
DllGetActivationFactory = WINRT_GetActivationFactory    PRIVATE
"
`;

exports[`C++ NuGet+WinUI3+Hermes Library: SnapshotApp.sln 1`] = `
"﻿
Microsoft Visual Studio Solution File, Format Version 12.00
# Visual Studio Version 16
VisualStudioVersion = 16.0.29215.179
MinimumVisualStudioVersion = 10.0.40219.1
Project(\\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\\") = \\"SnapshotApp\\", \\"SnapshotApp\\\\SnapshotApp.vcxproj\\", \\"{538F735B-AD23-4637-B457-2C2643DA4275}\\"
EndProject
Global
	GlobalSection(SolutionConfigurationPlatforms) = preSolution
		Debug|ARM64 = Debug|ARM64
		Debug|x64 = Debug|x64
		Debug|x86 = Debug|x86
		Release|ARM64 = Release|ARM64
		Release|x64 = Release|x64
		Release|x86 = Release|x86
	EndGlobalSection
	GlobalSection(ProjectConfigurationPlatforms) = postSolution
		{538F735B-AD23-4637-B457-2C2643DA4275}.Debug|ARM64.ActiveCfg = Debug|ARM64
		{538F735B-AD23-4637-B457-2C2643DA4275}.Debug|ARM64.Build.0 = Debug|ARM64
		{538F735B-AD23-4637-B457-2C2643DA4275}.Debug|ARM64.Deploy.0 = Debug|ARM64
		{538F735B-AD23-4637-B457-2C2643DA4275}.Debug|x64.ActiveCfg = Debug|x64
		{538F735B-AD23-4637-B457-2C2643DA4275}.Debug|x64.Build.0 = Debug|x64
		{538F735B-AD23-4637-B457-2C2643DA4275}.Debug|x64.Deploy.0 = Debug|x64
		{538F735B-AD23-4637-B457-2C2643DA4275}.Debug|x86.ActiveCfg = Debug|Win32
		{538F735B-AD23-4637-B457-2C2643DA4275}.Debug|x86.Build.0 = Debug|Win32
		{538F735B-AD23-4637-B457-2C2643DA4275}.Debug|x86.Deploy.0 = Debug|Win32
		{538F735B-AD23-4637-B457-2C2643DA4275}.Release|ARM64.ActiveCfg = Release|ARM64
		{538F735B-AD23-4637-B457-2C2643DA4275}.Release|ARM64.Build.0 = Release|ARM64
		{538F735B-AD23-4637-B457-2C2643DA4275}.Release|ARM64.Deploy.0 = Release|ARM64
		{538F735B-AD23-4637-B457-2C2643DA4275}.Release|x64.ActiveCfg = Release|x64
		{538F735B-AD23-4637-B457-2C2643DA4275}.Release|x64.Build.0 = Release|x64
		{538F735B-AD23-4637-B457-2C2643DA4275}.Release|x64.Deploy.0 = Release|x64
		{538F735B-AD23-4637-B457-2C2643DA4275}.Release|x86.ActiveCfg = Release|Win32
		{538F735B-AD23-4637-B457-2C2643DA4275}.Release|x86.Build.0 = Release|Win32
		{538F735B-AD23-4637-B457-2C2643DA4275}.Release|x86.Deploy.0 = Release|Win32
	EndGlobalSection
	GlobalSection(SolutionProperties) = preSolution
		HideSolutionNode = FALSE
	EndGlobalSection
	GlobalSection(ExtensibilityGlobals) = postSolution
		SolutionGuid = {D43FAD39-F619-437D-BB40-04A3982ACB6A}
	EndGlobalSection
EndGlobal
"
`;

exports[`C++ NuGet+WinUI3+Hermes Library: SnapshotApp.vcxproj 1`] = `
"<?xml version=\\"1.0\\" encoding=\\"utf-8\\"?>
<Project ToolsVersion=\\"Current\\" DefaultTargets=\\"Build\\" xmlns=\\"http://schemas.microsoft.com/developer/msbuild/2003\\">
  <Import Project=\\"$(SolutionDir)\\\\ExperimentalFeatures.props\\" Condition=\\"Exists('$(SolutionDir)\\\\ExperimentalFeatures.props')\\" />
  <Import Project=\\"$(SolutionDir)\\\\packages\\\\Microsoft.Windows.CppWinRT.2.0.210312.4\\\\build\\\\native\\\\Microsoft.Windows.CppWinRT.props\\" Condition=\\"Exists('$(SolutionDir)\\\\packages\\\\Microsoft.Windows.CppWinRT.2.0.210312.4\\\\build\\\\native\\\\Microsoft.Windows.CppWinRT.props')\\" />
  <PropertyGroup Label=\\"Globals\\">
    <CppWinRTOptimized>true</CppWinRTOptimized>
    <CppWinRTRootNamespaceAutoMerge>true</CppWinRTRootNamespaceAutoMerge>
    <MinimalCoreWin>true</MinimalCoreWin>
    <ProjectGuid>{538f735b-ad23-4637-b457-2c2643da4275}</ProjectGuid>
    <ProjectName>SnapshotApp</ProjectName>
    <RootNamespace>SnapshotApp</RootNamespace>
    <DefaultLanguage>en-US</DefaultLanguage>
    <MinimumVisualStudioVersion>16.0</MinimumVisualStudioVersion>
    <AppContainerApplication>true</AppContainerApplication>
    <ApplicationType>Windows Store</ApplicationType>
    <ApplicationTypeRevision>10.0</ApplicationTypeRevision>
  </PropertyGroup>
  <PropertyGroup Label=\\"ReactNativeWindowsProps\\">
    <ReactNativeWindowsDir Condition=\\"'$(ReactNativeWindowsDir)' == ''\\">$([MSBuild]::GetDirectoryNameOfFileAbove($(SolutionDir), 'node_modules\\\\react-native-windows\\\\package.json'))\\\\node_modules\\\\react-native-windows\\\\</ReactNativeWindowsDir>
  </PropertyGroup>
  <Import Project=\\"$(ReactNativeWindowsDir)\\\\PropertySheets\\\\External\\\\Microsoft.ReactNative.WindowsSdk.Default.props\\" Condition=\\"Exists('$(ReactNativeWindowsDir)\\\\PropertySheets\\\\External\\\\Microsoft.ReactNative.WindowsSdk.Default.props')\\" />
  <PropertyGroup Label=\\"Fallback Windows SDK Versions\\">
    <WindowsTargetPlatformVersion Condition=\\" '$(WindowsTargetPlatformVersion)' == '' \\">10.0.19041.0</WindowsTargetPlatformVersion>
    <WindowsTargetPlatformMinVersion Condition=\\" '$(WindowsTargetPlatformMinVersion)' == '' \\">10.0.15063.0</WindowsTargetPlatformMinVersion>
  </PropertyGroup>
  <Import Project=\\"$(VCTargetsPath)\\\\Microsoft.Cpp.Default.props\\" />
  <ItemGroup Label=\\"ProjectConfigurations\\">
    <ProjectConfiguration Include=\\"Debug|ARM64\\">
      <Configuration>Debug</Configuration>
      <Platform>ARM64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include=\\"Debug|Win32\\">
      <Configuration>Debug</Configuration>
      <Platform>Win32</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include=\\"Debug|x64\\">
      <Configuration>Debug</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include=\\"Release|ARM64\\">
      <Configuration>Release</Configuration>
      <Platform>ARM64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include=\\"Release|Win32\\">
      <Configuration>Release</Configuration>
      <Platform>Win32</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include=\\"Release|x64\\">
      <Configuration>Release</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
  </ItemGroup>
  <PropertyGroup Label=\\"Configuration\\">
    <ConfigurationType>DynamicLibrary</ConfigurationType>
    <CharacterSet>Unicode</CharacterSet>
    <GenerateManifest>false</GenerateManifest>
  </PropertyGroup>
  <PropertyGroup Condition=\\"'$(Configuration)'=='Debug'\\" Label=\\"Configuration\\">
    <UseDebugLibraries>true</UseDebugLibraries>
    <LinkIncremental>true</LinkIncremental>
  </PropertyGroup>
  <PropertyGroup Condition=\\"'$(Configuration)'=='Release'\\" Label=\\"Configuration\\">
    <UseDebugLibraries>false</UseDebugLibraries>
    <WholeProgramOptimization>true</WholeProgramOptimization>
    <LinkIncremental>false</LinkIncremental>
  </PropertyGroup>
  <Import Project=\\"$(VCTargetsPath)\\\\Microsoft.Cpp.props\\" />
  <ImportGroup Label=\\"ExtensionSettings\\"></ImportGroup>
  <ImportGroup Label=\\"PropertySheets\\">
    <Import Project=\\"$(UserRootDir)\\\\Microsoft.Cpp.$(Platform).user.props\\" Condition=\\"exists('$(UserRootDir)\\\\Microsoft.Cpp.$(Platform).user.props')\\" Label=\\"LocalAppDataPlatform\\" />
  </ImportGroup>
  <ImportGroup Label=\\"PropertySheets\\">
    <Import Project=\\"PropertySheet.props\\" />
  </ImportGroup>
  <ImportGroup Label=\\"ReactNativeWindowsPropertySheets\\">
    <Import Project=\\"$(ReactNativeWindowsDir)\\\\PropertySheets\\\\external\\\\Microsoft.ReactNative.Uwp.CppLib.props\\" Condition=\\"Exists('$(ReactNativeWindowsDir)\\\\PropertySheets\\\\External\\\\Microsoft.ReactNative.Uwp.CppLib.props')\\" />
    <Import Project=\\"$(SolutionDir)\\\\packages\\\\$(WinUIPackageProps)\\" Condition=\\"'$(WinUIPackageProps)'!='' And Exists('$(SolutionDir)\\\\packages\\\\$(WinUIPackageProps)')\\" />
  </ImportGroup>

  <PropertyGroup Label=\\"UserMacros\\" />
  <ItemDefinitionGroup>
    <ClCompile>
      <PrecompiledHeader>Use</PrecompiledHeader>
      <PrecompiledHeaderFile>pch.h</PrecompiledHeaderFile>
      <PrecompiledHeaderOutputFile>$(IntDir)pch.pch</PrecompiledHeaderOutputFile>
      <WarningLevel>Level4</WarningLevel>
      <AdditionalOptions>%(AdditionalOptions) /bigobj</AdditionalOptions>
      <DisableSpecificWarnings>4453;28204</DisableSpecificWarnings>
      <PreprocessorDefinitions>_WINRT_DLL;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <AdditionalUsingDirectories>$(WindowsSDK_WindowsMetadata);$(AdditionalUsingDirectories)</AdditionalUsingDirectories>
    </ClCompile>
    <Midl>
      <!-- This allows applications targetting older Windows SDKs (e.g. RNW 0.65 apps) to consume the library generated WinMD -->
      <AdditionalOptions>%(AdditionalOptions) /noattributename</AdditionalOptions>
    </Midl>
    <Link>
      <SubSystem>Console</SubSystem>
      <GenerateWindowsMetadata>true</GenerateWindowsMetadata>
      <ModuleDefinitionFile>SnapshotApp.def</ModuleDefinitionFile>
    </Link>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition=\\"'$(Configuration)'=='Debug'\\">
    <ClCompile>
      <PreprocessorDefinitions>_DEBUG;%(PreprocessorDefinitions)</PreprocessorDefinitions>
    </ClCompile>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition=\\"'$(Configuration)'=='Release'\\">
    <ClCompile>
      <PreprocessorDefinitions>NDEBUG;%(PreprocessorDefinitions)</PreprocessorDefinitions>
    </ClCompile>
  </ItemDefinitionGroup>
  <ItemGroup>
    <ClInclude Include=\\"ReactPackageProvider.h\\">
      <DependentUpon>ReactPackageProvider.idl</DependentUpon>
    </ClInclude>
    <ClInclude Include=\\"ReactNativeModule.h\\" />
    <ClInclude Include=\\"pch.h\\" />
  </ItemGroup>
  <ItemGroup>
    <ClCompile Include=\\"pch.cpp\\">
      <PrecompiledHeader>Create</PrecompiledHeader>
    </ClCompile>
    <ClCompile Include=\\"ReactPackageProvider.cpp\\">
      <DependentUpon>ReactPackageProvider.idl</DependentUpon>
    </ClCompile>
    <ClCompile Include=\\"$(GeneratedFilesDir)module.g.cpp\\" />
  </ItemGroup>
  <ItemGroup>
    <Midl Include=\\"ReactPackageProvider.idl\\" />
  </ItemGroup>
  <ItemGroup>
    <None Include=\\"packages.config\\" />
    <None Include=\\"PropertySheet.props\\" />
  </ItemGroup>
  <Import Project=\\"$(VCTargetsPath)\\\\Microsoft.Cpp.targets\\" />
  <ImportGroup Label=\\"ReactNativeWindowsTargets\\">
    <Import Project=\\"$(ReactNativeWindowsDir)\\\\PropertySheets\\\\External\\\\Microsoft.ReactNative.Uwp.CppLib.targets\\" Condition=\\"Exists('$(ReactNativeWindowsDir)\\\\PropertySheets\\\\External\\\\Microsoft.ReactNative.Uwp.CppLib.targets')\\" />
  </ImportGroup>
  <Target Name=\\"EnsureReactNativeWindowsTargets\\" BeforeTargets=\\"PrepareForBuild\\">
    <PropertyGroup>
      <ErrorText>This project references targets in your node_modules\\\\react-native-windows folder that are missing. The missing file is {0}.</ErrorText>
    </PropertyGroup>
    <Error Condition=\\"!Exists('$(ReactNativeWindowsDir)\\\\PropertySheets\\\\External\\\\Microsoft.ReactNative.Uwp.CppLib.props')\\" Text=\\"$([System.String]::Format('$(ErrorText)', '$(ReactNativeWindowsDir)\\\\PropertySheets\\\\External\\\\Microsoft.ReactNative.Uwp.CppLib.props'))\\" />
    <Error Condition=\\"!Exists('$(ReactNativeWindowsDir)\\\\PropertySheets\\\\External\\\\Microsoft.ReactNative.Uwp.CppLib.targets')\\" Text=\\"$([System.String]::Format('$(ErrorText)', '$(ReactNativeWindowsDir)\\\\PropertySheets\\\\External\\\\Microsoft.ReactNative.Uwp.CppLib.targets'))\\" />
  </Target>
  <ImportGroup Label=\\"ExtensionTargets\\">
    <Import Project=\\"$(SolutionDir)\\\\packages\\\\Microsoft.Windows.CppWinRT.2.0.210312.4\\\\build\\\\native\\\\Microsoft.Windows.CppWinRT.targets\\" Condition=\\"Exists('$(SolutionDir)\\\\packages\\\\Microsoft.Windows.CppWinRT.2.0.210312.4\\\\build\\\\native\\\\Microsoft.Windows.CppWinRT.targets')\\" />
    <Import Project=\\"$(SolutionDir)\\\\packages\\\\ReactNative.Hermes.Windows.0.9.0-ms.6\\\\build\\\\native\\\\ReactNative.Hermes.Windows.targets\\" Condition=\\"Exists('$(SolutionDir)\\\\packages\\\\ReactNative.Hermes.Windows.0.9.0-ms.6\\\\build\\\\native\\\\ReactNative.Hermes.Windows.targets')\\" />
    <Import Project=\\"$(SolutionDir)\\\\packages\\\\Microsoft.ReactNative.0.0.0-canary.409\\\\build\\\\native\\\\Microsoft.ReactNative.targets\\" Condition=\\"Exists('$(SolutionDir)\\\\packages\\\\Microsoft.ReactNative.0.0.0-canary.409\\\\build\\\\native\\\\Microsoft.ReactNative.targets')\\" />
    <Import Project=\\"$(SolutionDir)\\\\packages\\\\Microsoft.ReactNative.Cxx.0.0.0-canary.409\\\\build\\\\native\\\\Microsoft.ReactNative.Cxx.targets\\" Condition=\\"Exists('$(SolutionDir)\\\\packages\\\\Microsoft.ReactNative.Cxx.0.0.0-canary.409\\\\build\\\\native\\\\Microsoft.ReactNative.Cxx.targets')\\" />
    <Import Project=\\"$(SolutionDir)\\\\packages\\\\$(WinUIPackageName).$(WinUIPackageVersion)\\\\build\\\\native\\\\$(WinUIPackageName).targets\\" Condition=\\"Exists('$(SolutionDir)\\\\packages\\\\$(WinUIPackageName).$(WinUIPackageVersion)\\\\build\\\\native\\\\$(WinUIPackageName).targets')\\" />
  </ImportGroup>
  <Target Name=\\"EnsureNuGetPackageBuildImports\\" BeforeTargets=\\"PrepareForBuild\\">
    <PropertyGroup>
      <ErrorText>This project references NuGet package(s) that are missing on this computer. Use NuGet Package Restore to download them.  For more information, see http://go.microsoft.com/fwlink/?LinkID=322105. The missing file is {0}.</ErrorText>
    </PropertyGroup>
    <Error Condition=\\"!Exists('$(SolutionDir)\\\\packages\\\\Microsoft.Windows.CppWinRT.2.0.210312.4\\\\build\\\\native\\\\Microsoft.Windows.CppWinRT.props')\\" Text=\\"$([System.String]::Format('$(ErrorText)', '$(SolutionDir)\\\\packages\\\\Microsoft.Windows.CppWinRT.2.0.210312.4\\\\build\\\\native\\\\Microsoft.Windows.CppWinRT.props'))\\" />
    <Error Condition=\\"!Exists('$(SolutionDir)\\\\packages\\\\Microsoft.Windows.CppWinRT.2.0.210312.4\\\\build\\\\native\\\\Microsoft.Windows.CppWinRT.targets')\\" Text=\\"$([System.String]::Format('$(ErrorText)', '$(SolutionDir)\\\\packages\\\\Microsoft.Windows.CppWinRT.2.0.210312.4\\\\build\\\\native\\\\Microsoft.Windows.CppWinRT.targets'))\\" />
    <Error Condition=\\"!Exists('$(SolutionDir)\\\\packages\\\\ReactNative.Hermes.Windows.0.9.0-ms.6\\\\build\\\\native\\\\ReactNative.Hermes.Windows.targets')\\" Text=\\"$([System.String]::Format('$(ErrorText)', '$(SolutionDir)\\\\packages\\\\ReactNative.Hermes.Windows.0.9.0-ms.6\\\\build\\\\native\\\\ReactNative.Hermes.Windows.targets'))\\" />
    <Error Condition=\\"!Exists('$(SolutionDir)\\\\packages\\\\Microsoft.ReactNative.0.0.0-canary.409\\\\build\\\\native\\\\Microsoft.ReactNative.targets')\\" Text=\\"$([System.String]::Format('$(ErrorText)', '$(SolutionDir)\\\\packages\\\\Microsoft.ReactNative.0.0.0-canary.409\\\\build\\\\native\\\\Microsoft.ReactNative.targets'))\\" />
    <Error Condition=\\"!Exists('$(SolutionDir)\\\\packages\\\\Microsoft.ReactNative.Cxx.0.0.0-canary.409\\\\build\\\\native\\\\Microsoft.ReactNative.Cxx.targets')\\" Text=\\"$([System.String]::Format('$(ErrorText)', '$(SolutionDir)\\\\packages\\\\Microsoft.ReactNative.Cxx.0.0.0-canary.409\\\\build\\\\native\\\\Microsoft.ReactNative.Cxx.targets'))\\" />
    <Error Condition=\\"!Exists('$(SolutionDir)\\\\packages\\\\$(WinUIPackageName).$(WinUIPackageVersion)\\\\build\\\\native\\\\$(WinUIPackageName).targets')\\" Text=\\"$([System.String]::Format('$(ErrorText)', '$(SolutionDir)\\\\packages\\\\$(WinUIPackageName).$(WinUIPackageVersion)\\\\build\\\\native\\\\$(WinUIPackageName).targets'))\\" />
  </Target>
</Project>
"
`;

exports[`C++ NuGet+WinUI3+Hermes Library: SnapshotApp.vcxproj.filters 1`] = `
"﻿<?xml version=\\"1.0\\" encoding=\\"utf-8\\"?>
<Project ToolsVersion=\\"Current\\" xmlns=\\"http://schemas.microsoft.com/developer/msbuild/2003\\">
  <ItemGroup>
    <Midl Include=\\"ReactPackageProvider.idl\\" />
  </ItemGroup>
  <ItemGroup>
    <ClCompile Include=\\"pch.cpp\\" />
    <ClCompile Include=\\"$(GeneratedFilesDir)module.g.cpp\\" />
    <ClCompile Include=\\"ReactPackageProvider.cpp\\" />
  </ItemGroup>
  <ItemGroup>
    <ClInclude Include=\\"pch.h\\" />
    <ClInclude Include=\\"ReactPackageProvider.h\\" />
    <ClInclude Include=\\"ReactNativeModule.h\\" />
  </ItemGroup>
  <ItemGroup>
    <None Include=\\"PropertySheet.props\\" />
    <None Include=\\"packages.config\\" />
  </ItemGroup>
</Project>"
`;

exports[`C++ NuGet+WinUI3+Hermes Library: packages.config 1`] = `
"﻿<?xml version=\\"1.0\\" encoding=\\"utf-8\\"?>
<packages>
  <package id=\\"Microsoft.Windows.CppWinRT\\" version=\\"2.0.210312.4\\" targetFramework=\\"native\\" />
  <package id=\\"ReactNative.Hermes.Windows\\" version=\\"0.9.0-ms.6\\" targetFramework=\\"native\\" />
  <package id=\\"Microsoft.ReactNative\\" version=\\"0.0.0-canary.409\\" targetFramework=\\"native\\" />
  <package id=\\"Microsoft.ReactNative.Cxx\\" version=\\"0.0.0-canary.409\\" targetFramework=\\"native\\" />
  <package id=\\"Microsoft.WinUI\\" version=\\"3.0.0-preview4.210210.4\\" targetFramework=\\"native\\" />
</packages>"
`;

exports[`C++ NuGet+WinUI3+Hermes Library: pch.cpp 1`] = `
"﻿#include \\"pch.h\\"
"
`;

exports[`C++ NuGet+WinUI3+Hermes Library: pch.h 1`] = `
"#pragma once

#define NOMINMAX

#include <hstring.h>
#include <restrictederrorinfo.h>
#include <unknwn.h>
#include <windows.h>
#include <CppWinRTIncludes.h>
#if __has_include(<VersionMacros.h>)
  #include <VersionMacros.h>
#endif

#include <winrt/Microsoft.ReactNative.h>

#include <winrt/Microsoft.UI.Xaml.Automation.Peers.h>
#include <winrt/Microsoft.UI.Xaml.Controls.Primitives.h>
#include <winrt/Microsoft.UI.Xaml.Controls.h>
#include <winrt/Microsoft.UI.Xaml.Media.h>
#include <winrt/Microsoft.UI.Xaml.XamlTypeInfo.h>
using namespace winrt::Windows::Foundation;
"
`;

exports[`C++ WinUI3 Application: App.cpp 1`] = `
"#include \\"pch.h\\"

#include \\"App.h\\"

#include \\"AutolinkedNativeModules.g.h\\"
#include \\"ReactPackageProvider.h\\"

using namespace winrt;
using namespace xaml;
using namespace xaml::Controls;
using namespace xaml::Navigation;

using namespace Windows::ApplicationModel;
namespace winrt::SnapshotApp::implementation
{
/// <summary>
/// Initializes the singleton application object.  This is the first line of
/// authored code executed, and as such is the logical equivalent of main() or
/// WinMain().
/// </summary>
App::App() noexcept
{
#if BUNDLE
    JavaScriptBundleFile(L\\"index.windows\\");
    InstanceSettings().UseWebDebugger(false);
    InstanceSettings().UseFastRefresh(false);
#else
    JavaScriptBundleFile(L\\"index\\");
    InstanceSettings().UseWebDebugger(true);
    InstanceSettings().UseFastRefresh(true);
#endif

#if _DEBUG
    InstanceSettings().UseDeveloperSupport(true);
#else
    InstanceSettings().UseDeveloperSupport(false);
#endif

    RegisterAutolinkedNativeModulePackages(PackageProviders()); // Includes any autolinked modules

    PackageProviders().Append(make<ReactPackageProvider>()); // Includes all modules in this project

    InitializeComponent();
}

/// <summary>
/// Invoked when the application is launched normally by the end user.  Other entry points
/// will be used such as when the application is launched to open a specific file.
/// </summary>
/// <param name=\\"e\\">Details about the launch request and process.</param>
void App::OnLaunched(activation::LaunchActivatedEventArgs const& e)
{
    super::OnLaunched(e);

    Frame rootFrame = Window::Current().Content().as<Frame>();
    rootFrame.Navigate(xaml_typename<MainPage>(), box_value(e.Arguments()));
}

/// <summary>
/// Invoked when the application is activated by some means other than normal launching.
/// </summary>
void App::OnActivated(Activation::IActivatedEventArgs const &e) {
  auto preActivationContent = Window::Current().Content();
  super::OnActivated(e);
  if (!preActivationContent && Window::Current()) {
    Frame rootFrame = Window::Current().Content().as<Frame>();
    rootFrame.Navigate(xaml_typename<MainPage>(), nullptr);
  }
}

/// <summary>
/// Invoked when application execution is being suspended.  Application state is saved
/// without knowing whether the application will be terminated or resumed with the contents
/// of memory still intact.
/// </summary>
/// <param name=\\"sender\\">The source of the suspend request.</param>
/// <param name=\\"e\\">Details about the suspend request.</param>
void App::OnSuspending([[maybe_unused]] IInspectable const& sender, [[maybe_unused]] SuspendingEventArgs const& e)
{
    // Save application state and stop any background activity
}

/// <summary>
/// Invoked when Navigation to a certain page fails
/// </summary>
/// <param name=\\"sender\\">The Frame which failed navigation</param>
/// <param name=\\"e\\">Details about the navigation failure</param>
void App::OnNavigationFailed(IInspectable const&, NavigationFailedEventArgs const& e)
{
    throw hresult_error(E_FAIL, hstring(L\\"Failed to load Page \\") + e.SourcePageType().Name);
}

} // namespace winrt::SnapshotApp::implementation
"
`;

exports[`C++ WinUI3 Application: App.h 1`] = `
"#pragma once

#include \\"App.xaml.g.h\\"

#include <CppWinRTIncludes.h>

#ifdef USE_WINUI3
namespace activation = winrt::Microsoft::UI::Xaml;
#else
namespace activation = winrt::Windows::ApplicationModel::Activation;
#endif

namespace winrt::SnapshotApp::implementation
{
    struct App : AppT<App>
    {
        App() noexcept;
        void OnLaunched(activation::LaunchActivatedEventArgs const&);
        void OnActivated(Windows::ApplicationModel::Activation::IActivatedEventArgs const &e);
        void OnSuspending(IInspectable const&, Windows::ApplicationModel::SuspendingEventArgs const&);
        void OnNavigationFailed(IInspectable const&, xaml::Navigation::NavigationFailedEventArgs const&);
      private:
        using super = AppT<App>;
    };
} // namespace winrt::SnapshotApp::implementation
"
`;

exports[`C++ WinUI3 Application: App.idl 1`] = `
"namespace SnapshotApp
{
}
"
`;

exports[`C++ WinUI3 Application: App.xaml 1`] = `
"﻿<react:ReactApplication
    x:Class=\\"SnapshotApp.App\\"
    xmlns=\\"http://schemas.microsoft.com/winfx/2006/xaml/presentation\\"
    xmlns:x=\\"http://schemas.microsoft.com/winfx/2006/xaml\\"
    xmlns:local=\\"using:SnapshotApp\\"
    xmlns:react=\\"using:Microsoft.ReactNative\\">
    <Application.Resources>
        <XamlControlsResources xmlns=\\"using:Microsoft.UI.Xaml.Controls\\" />
    </Application.Resources>
</react:ReactApplication>
"
`;

exports[`C++ WinUI3 Application: AutolinkedNativeModules.g.cpp 1`] = `
"// AutolinkedNativeModules.g.cpp contents generated by \\"react-native autolink-windows\\"
// clang-format off
#include \\"pch.h\\"
#include \\"AutolinkedNativeModules.g.h\\"

namespace winrt::Microsoft::ReactNative
{

void RegisterAutolinkedNativeModulePackages(winrt::Windows::Foundation::Collections::IVector<winrt::Microsoft::ReactNative::IReactPackageProvider> const& packageProviders)
{ 
    UNREFERENCED_PARAMETER(packageProviders);
}

}
"
`;

exports[`C++ WinUI3 Application: AutolinkedNativeModules.g.h 1`] = `
"// AutolinkedNativeModules.g.h contents generated by \\"react-native autolink-windows\\"
// clang-format off
#pragma once

namespace winrt::Microsoft::ReactNative
{

void RegisterAutolinkedNativeModulePackages(winrt::Windows::Foundation::Collections::IVector<winrt::Microsoft::ReactNative::IReactPackageProvider> const& packageProviders);

}
"
`;

exports[`C++ WinUI3 Application: AutolinkedNativeModules.g.props 1`] = `
"<?xml version=\\"1.0\\" encoding=\\"utf-8\\"?>
<Project xmlns=\\"http://schemas.microsoft.com/developer/msbuild/2003\\">
  <!-- AutolinkedNativeModules.g.props contents generated by \\"react-native autolink-windows\\" -->
  <PropertyGroup>
  </PropertyGroup>
</Project>
"
`;

exports[`C++ WinUI3 Application: AutolinkedNativeModules.g.targets 1`] = `
"<?xml version=\\"1.0\\" encoding=\\"utf-8\\"?>
<Project xmlns=\\"http://schemas.microsoft.com/developer/msbuild/2003\\">
  <!-- AutolinkedNativeModules.g.targets contents generated by \\"react-native autolink-windows\\" -->
  <ItemGroup>
  </ItemGroup>
</Project>
"
`;

exports[`C++ WinUI3 Application: ExperimentalFeatures.props 1`] = `
"<?xml version=\\"1.0\\" encoding=\\"utf-8\\"?>
<Project xmlns=\\"http://schemas.microsoft.com/developer/msbuild/2003\\">

  <!--
    This file contains some important settings that will apply globally for
    your app and *all* native modules your app consumes. These values were
    set when you created the app project, and in some cases cannot be
    simply changed here without recreating a new project.
  -->

  <PropertyGroup Label=\\"Microsoft.ReactNative Experimental Features\\">
    <!--
      Enables default usage of Hermes.
      
      See https://microsoft.github.io/react-native-windows/docs/hermes
    -->
    <UseHermes>false</UseHermes>

    <!--
      Changes compilation to assume use of WinUI 3 instead of System XAML.
      Requires creation of new project.

      See https://microsoft.github.io/react-native-windows/docs/winui3
    -->
    <UseWinUI3>true</UseWinUI3>

    <!--
      Changes compilation to assume use of Microsoft.ReactNative NuGet packages
      instead of building the framework from source.
      Requires creation of new project.

      See https://microsoft.github.io/react-native-windows/docs/nuget
    -->
    <UseExperimentalNuget>false</UseExperimentalNuget>
  
  </PropertyGroup>

</Project>
"
`;

exports[`C++ WinUI3 Application: MainPage.cpp 1`] = `
"﻿#include \\"pch.h\\"
#include \\"MainPage.h\\"
#if __has_include(\\"MainPage.g.cpp\\")
#include \\"MainPage.g.cpp\\"
#endif

#include \\"App.h\\"

using namespace winrt;
using namespace xaml;

namespace winrt::SnapshotApp::implementation
{
    MainPage::MainPage()
    {
        InitializeComponent();
        auto app = Application::Current().as<App>();
        ReactRootView().ReactNativeHost(app->Host());
    }
}
"
`;

exports[`C++ WinUI3 Application: MainPage.h 1`] = `
"﻿#pragma once
#include \\"MainPage.g.h\\"
#include <winrt/Microsoft.ReactNative.h>

namespace winrt::SnapshotApp::implementation
{
    struct MainPage : MainPageT<MainPage>
    {
        MainPage();
    };
}

namespace winrt::SnapshotApp::factory_implementation
{
    struct MainPage : MainPageT<MainPage, implementation::MainPage>
    {
    };
}

"
`;

exports[`C++ WinUI3 Application: MainPage.idl 1`] = `
"#include \\"NamespaceRedirect.h\\"

namespace SnapshotApp
{
    [default_interface]
    runtimeclass MainPage : XAML_NAMESPACE.Controls.Page
    {
        MainPage();
    }
}
"
`;

exports[`C++ WinUI3 Application: MainPage.xaml 1`] = `
"<Page
    x:Class=\\"SnapshotApp.MainPage\\"
    xmlns=\\"http://schemas.microsoft.com/winfx/2006/xaml/presentation\\"
    xmlns:x=\\"http://schemas.microsoft.com/winfx/2006/xaml\\"
    xmlns:local=\\"using:SnapshotApp\\"
    xmlns:react=\\"using:Microsoft.ReactNative\\"
    xmlns:d=\\"http://schemas.microsoft.com/expression/blend/2008\\"
    xmlns:mc=\\"http://schemas.openxmlformats.org/markup-compatibility/2006\\"
    mc:Ignorable=\\"d\\"
    Background=\\"{ThemeResource ApplicationPageBackgroundThemeBrush}\\">
    <react:ReactRootView 
        x:Name=\\"ReactRootView\\"
        ComponentName=\\"SnapshotApp\\"
        Background=\\"{ThemeResource ApplicationPageBackgroundThemeBrush}\\"
        MinHeight=\\"400\\"/>
</Page>
"
`;

exports[`C++ WinUI3 Application: NuGet.Config 1`] = `
"<?xml version=\\"1.0\\" encoding=\\"utf-8\\"?>
<configuration>
  <config>
    <add key=\\"repositoryPath\\" value=\\"packages\\" />
  </config>
  <packageSources>
    <clear />
    <add key=\\"react-native\\" value=\\"https://pkgs.dev.azure.com/ms/react-native/_packaging/react-native-public/nuget/v3/index.json\\" />
    <add key=\\"Nuget.org\\" value=\\"https://api.nuget.org/v3/index.json\\" />
  </packageSources>
  <disabledPackageSources>
    <clear />
  </disabledPackageSources>  
</configuration>
"
`;

exports[`C++ WinUI3 Application: Package.appxmanifest 1`] = `
"﻿<?xml version=\\"1.0\\" encoding=\\"utf-8\\"?>

<Package
  xmlns=\\"http://schemas.microsoft.com/appx/manifest/foundation/windows10\\"
  xmlns:mp=\\"http://schemas.microsoft.com/appx/2014/phone/manifest\\"
  xmlns:uap=\\"http://schemas.microsoft.com/appx/manifest/uap/windows10\\"
  IgnorableNamespaces=\\"uap mp\\">

  <Identity
    Name=\\"4a83732c-68e8-43a5-bcb6-de9257b234e5\\"
    Publisher=\\"CN=nickg\\"
    Version=\\"1.0.0.0\\" />

  <mp:PhoneIdentity PhoneProductId=\\"4a83732c-68e8-43a5-bcb6-de9257b234e5\\" PhonePublisherId=\\"00000000-0000-0000-0000-000000000000\\"/>

  <Properties>
    <DisplayName>SnapshotApp</DisplayName>
    <PublisherDisplayName>nickg</PublisherDisplayName>
    <Logo>Assets\\\\StoreLogo.png</Logo>
  </Properties>

  <Dependencies>
    <TargetDeviceFamily Name=\\"Windows.Universal\\" MinVersion=\\"10.0.0.0\\" MaxVersionTested=\\"10.0.0.0\\" />
  </Dependencies>

  <Resources>
    <Resource Language=\\"x-generate\\"/>
  </Resources>

  <Applications>
    <Application
      Id=\\"App\\"
      Executable=\\"$targetnametoken$.exe\\"
      EntryPoint=\\"SnapshotApp.App\\">
      <uap:VisualElements
        DisplayName=\\"SnapshotApp\\"
        Square150x150Logo=\\"Assets\\\\Square150x150Logo.png\\"
        Square44x44Logo=\\"Assets\\\\Square44x44Logo.png\\"
        Description=\\"SnapshotApp\\"
        BackgroundColor=\\"transparent\\">
        <uap:DefaultTile Wide310x150Logo=\\"Assets\\\\Wide310x150Logo.png\\"/>
        <uap:SplashScreen Image=\\"Assets\\\\SplashScreen.png\\" />
      </uap:VisualElements>
    </Application>
  </Applications>

  <Capabilities>
    <Capability Name=\\"internetClient\\" />
  </Capabilities>
</Package>"
`;

exports[`C++ WinUI3 Application: PropertySheet.props 1`] = `
"<?xml version=\\"1.0\\" encoding=\\"utf-8\\"?>
<Project ToolsVersion=\\"Current\\" xmlns=\\"http://schemas.microsoft.com/developer/msbuild/2003\\">
  <ImportGroup Label=\\"PropertySheets\\" />
  <PropertyGroup Label=\\"UserMacros\\" />
  <!--
    To customize common C++/WinRT project properties:
    * right-click the project node
    * expand the Common Properties item
    * select the C++/WinRT property page

    For more advanced scenarios, and complete documentation, please see:
    https://github.com/Microsoft/xlang/tree/master/src/package/cppwinrt/nuget
    -->
  <PropertyGroup />
  <ItemDefinitionGroup />
</Project>"
`;

exports[`C++ WinUI3 Application: ReactPackageProvider.cpp 1`] = `
"#include \\"pch.h\\"
#include \\"ReactPackageProvider.h\\"
#include \\"NativeModules.h\\"

using namespace winrt::Microsoft::ReactNative;

namespace winrt::SnapshotApp::implementation
{

void ReactPackageProvider::CreatePackage(IReactPackageBuilder const &packageBuilder) noexcept
{
    AddAttributedModules(packageBuilder);
}

} // namespace winrt::SnapshotApp::implementation
"
`;

exports[`C++ WinUI3 Application: ReactPackageProvider.h 1`] = `
"#pragma once

#include \\"winrt/Microsoft.ReactNative.h\\"

namespace winrt::SnapshotApp::implementation
{
    struct ReactPackageProvider : winrt::implements<ReactPackageProvider, winrt::Microsoft::ReactNative::IReactPackageProvider>
    {
    public: // IReactPackageProvider
        void CreatePackage(winrt::Microsoft::ReactNative::IReactPackageBuilder const &packageBuilder) noexcept;
    };
} // namespace winrt::SnapshotApp::implementation

"
`;

exports[`C++ WinUI3 Application: SnapshotApp.sln 1`] = `
"﻿
Microsoft Visual Studio Solution File, Format Version 12.00
# Visual Studio Version 16
VisualStudioVersion = 16.0.29215.179
MinimumVisualStudioVersion = 10.0.40219.1
Project(\\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\\") = \\"SnapshotApp\\", \\"SnapshotApp\\\\SnapshotApp.vcxproj\\", \\"{1212E1B8-3BE1-4D40-AB93-4A6B08AB0BEC}\\"
	ProjectSection(ProjectDependencies) = postProject
		{F7D32BD0-2749-483E-9A0D-1635EF7E3136} = {F7D32BD0-2749-483E-9A0D-1635EF7E3136}
	EndProjectSection
EndProject
Project(\\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\\") = \\"Folly\\", \\"..\\\\node_modules\\\\react-native-windows\\\\Folly\\\\Folly.vcxproj\\", \\"{A990658C-CE31-4BCC-976F-0FC6B1AF693D}\\"
EndProject
Project(\\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\\") = \\"fmt\\", \\"..\\\\node_modules\\\\react-native-windows\\\\fmt\\\\fmt.vcxproj\\", \\"{14B93DC8-FD93-4A6D-81CB-8BC96644501C}\\"
EndProject
Project(\\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\\") = \\"ReactCommon\\", \\"..\\\\node_modules\\\\react-native-windows\\\\ReactCommon\\\\ReactCommon.vcxproj\\", \\"{A9D95A91-4DB7-4F72-BEB6-FE8A5C89BFBD}\\"
	ProjectSection(ProjectDependencies) = postProject
		{A990658C-CE31-4BCC-976F-0FC6B1AF693D} = {A990658C-CE31-4BCC-976F-0FC6B1AF693D}
	EndProjectSection
EndProject
Project(\\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\\") = \\"Chakra\\", \\"..\\\\node_modules\\\\react-native-windows\\\\Chakra\\\\Chakra.vcxitems\\", \\"{C38970C0-5FBF-4D69-90D8-CBAC225AE895}\\"
EndProject
Project(\\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\\") = \\"Microsoft.ReactNative\\", \\"..\\\\node_modules\\\\react-native-windows\\\\Microsoft.ReactNative\\\\Microsoft.ReactNative.vcxproj\\", \\"{F7D32BD0-2749-483E-9A0D-1635EF7E3136}\\"
EndProject
Project(\\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\\") = \\"Microsoft.ReactNative.Cxx\\", \\"..\\\\node_modules\\\\react-native-windows\\\\Microsoft.ReactNative.Cxx\\\\Microsoft.ReactNative.Cxx.vcxitems\\", \\"{DA8B35B3-DA00-4B02-BDE6-6A397B3FD46B}\\"
EndProject
Project(\\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\\") = \\"Common\\", \\"..\\\\node_modules\\\\react-native-windows\\\\Common\\\\Common.vcxproj\\", \\"{FCA38F3C-7C73-4C47-BE4E-32F77FA8538D}\\"
EndProject
Project(\\"{2150E333-8FDC-42A3-9474-1A3956D46DE8}\\") = \\"ReactNative\\", \\"ReactNative\\", \\"{5EA20F54-880A-49F3-99FA-4B3FE54E8AB1}\\"
EndProject
Project(\\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\\") = \\"Microsoft.ReactNative.Shared\\", \\"..\\\\node_modules\\\\react-native-windows\\\\Shared\\\\Shared.vcxitems\\", \\"{2049DBE9-8D13-42C9-AE4B-413AE38FFFD0}\\"
EndProject
Project(\\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\\") = \\"Mso\\", \\"..\\\\node_modules\\\\react-native-windows\\\\Mso\\\\Mso.vcxitems\\", \\"{84E05BFA-CBAF-4F0D-BFB6-4CE85742A57E}\\"
EndProject
Project(\\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\\") = \\"Include\\", \\"..\\\\node_modules\\\\react-native-windows\\\\include\\\\Include.vcxitems\\", \\"{EF074BA1-2D54-4D49-A28E-5E040B47CD2E}\\"
EndProject
Global
	GlobalSection(SharedMSBuildProjectFiles) = preSolution
		..\\\\node_modules\\\\react-native-windows\\\\Shared\\\\Shared.vcxitems*{2049dbe9-8d13-42c9-ae4b-413ae38fffd0}*SharedItemsImports = 9
		..\\\\node_modules\\\\react-native-windows\\\\Mso\\\\Mso.vcxitems*{84e05bfa-cbaf-4f0d-bfb6-4ce85742a57e}*SharedItemsImports = 9
		..\\\\node_modules\\\\react-native-windows\\\\Chakra\\\\Chakra.vcxitems*{c38970c0-5fbf-4d69-90d8-cbac225ae895}*SharedItemsImports = 9
		..\\\\node_modules\\\\react-native-windows\\\\Microsoft.ReactNative.Cxx\\\\Microsoft.ReactNative.Cxx.vcxitems*{da8b35b3-da00-4b02-bde6-6a397b3fd46b}*SharedItemsImports = 9
		..\\\\node_modules\\\\react-native-windows\\\\include\\\\Include.vcxitems*{ef074ba1-2d54-4d49-a28e-5e040b47cd2e}*SharedItemsImports = 9
		..\\\\node_modules\\\\react-native-windows\\\\Chakra\\\\Chakra.vcxitems*{f7d32bd0-2749-483e-9a0d-1635ef7e3136}*SharedItemsImports = 4
		..\\\\node_modules\\\\react-native-windows\\\\Microsoft.ReactNative.Cxx\\\\Microsoft.ReactNative.Cxx.vcxitems*{f7d32bd0-2749-483e-9a0d-1635ef7e3136}*SharedItemsImports = 4
		..\\\\node_modules\\\\react-native-windows\\\\Mso\\\\Mso.vcxitems*{f7d32bd0-2749-483e-9a0d-1635ef7e3136}*SharedItemsImports = 4
		..\\\\node_modules\\\\react-native-windows\\\\Shared\\\\Shared.vcxitems*{f7d32bd0-2749-483e-9a0d-1635ef7e3136}*SharedItemsImports = 4
	EndGlobalSection
	GlobalSection(SolutionConfigurationPlatforms) = preSolution
		Debug|ARM64 = Debug|ARM64
		Debug|x64 = Debug|x64
		Debug|x86 = Debug|x86
		Release|ARM64 = Release|ARM64
		Release|x64 = Release|x64
		Release|x86 = Release|x86
	EndGlobalSection
	GlobalSection(ProjectConfigurationPlatforms) = postSolution
		{1212E1B8-3BE1-4D40-AB93-4A6B08AB0BEC}.Debug|ARM64.ActiveCfg = Debug|ARM64
		{1212E1B8-3BE1-4D40-AB93-4A6B08AB0BEC}.Debug|ARM64.Build.0 = Debug|ARM64
		{1212E1B8-3BE1-4D40-AB93-4A6B08AB0BEC}.Debug|ARM64.Deploy.0 = Debug|ARM64
		{1212E1B8-3BE1-4D40-AB93-4A6B08AB0BEC}.Debug|x64.ActiveCfg = Debug|x64
		{1212E1B8-3BE1-4D40-AB93-4A6B08AB0BEC}.Debug|x64.Build.0 = Debug|x64
		{1212E1B8-3BE1-4D40-AB93-4A6B08AB0BEC}.Debug|x64.Deploy.0 = Debug|x64
		{1212E1B8-3BE1-4D40-AB93-4A6B08AB0BEC}.Debug|x86.ActiveCfg = Debug|Win32
		{1212E1B8-3BE1-4D40-AB93-4A6B08AB0BEC}.Debug|x86.Build.0 = Debug|Win32
		{1212E1B8-3BE1-4D40-AB93-4A6B08AB0BEC}.Debug|x86.Deploy.0 = Debug|Win32
		{1212E1B8-3BE1-4D40-AB93-4A6B08AB0BEC}.Release|ARM64.ActiveCfg = Release|ARM64
		{1212E1B8-3BE1-4D40-AB93-4A6B08AB0BEC}.Release|ARM64.Build.0 = Release|ARM64
		{1212E1B8-3BE1-4D40-AB93-4A6B08AB0BEC}.Release|ARM64.Deploy.0 = Release|ARM64
		{1212E1B8-3BE1-4D40-AB93-4A6B08AB0BEC}.Release|x64.ActiveCfg = Release|x64
		{1212E1B8-3BE1-4D40-AB93-4A6B08AB0BEC}.Release|x64.Build.0 = Release|x64
		{1212E1B8-3BE1-4D40-AB93-4A6B08AB0BEC}.Release|x64.Deploy.0 = Release|x64
		{1212E1B8-3BE1-4D40-AB93-4A6B08AB0BEC}.Release|x86.ActiveCfg = Release|Win32
		{1212E1B8-3BE1-4D40-AB93-4A6B08AB0BEC}.Release|x86.Build.0 = Release|Win32
		{1212E1B8-3BE1-4D40-AB93-4A6B08AB0BEC}.Release|x86.Deploy.0 = Release|Win32
		{A990658C-CE31-4BCC-976F-0FC6B1AF693D}.Debug|ARM64.ActiveCfg = Debug|ARM64
		{A990658C-CE31-4BCC-976F-0FC6B1AF693D}.Debug|ARM64.Build.0 = Debug|ARM64
		{A990658C-CE31-4BCC-976F-0FC6B1AF693D}.Debug|x64.ActiveCfg = Debug|x64
		{A990658C-CE31-4BCC-976F-0FC6B1AF693D}.Debug|x64.Build.0 = Debug|x64
		{A990658C-CE31-4BCC-976F-0FC6B1AF693D}.Debug|x86.ActiveCfg = Debug|Win32
		{A990658C-CE31-4BCC-976F-0FC6B1AF693D}.Debug|x86.Build.0 = Debug|Win32
		{A990658C-CE31-4BCC-976F-0FC6B1AF693D}.Release|ARM64.ActiveCfg = Release|ARM64
		{A990658C-CE31-4BCC-976F-0FC6B1AF693D}.Release|ARM64.Build.0 = Release|ARM64
		{A990658C-CE31-4BCC-976F-0FC6B1AF693D}.Release|x64.ActiveCfg = Release|x64
		{A990658C-CE31-4BCC-976F-0FC6B1AF693D}.Release|x64.Build.0 = Release|x64
		{A990658C-CE31-4BCC-976F-0FC6B1AF693D}.Release|x86.ActiveCfg = Release|Win32
		{A990658C-CE31-4BCC-976F-0FC6B1AF693D}.Release|x86.Build.0 = Release|Win32
		{A9D95A91-4DB7-4F72-BEB6-FE8A5C89BFBD}.Debug|ARM64.ActiveCfg = Debug|ARM64
		{A9D95A91-4DB7-4F72-BEB6-FE8A5C89BFBD}.Debug|ARM64.Build.0 = Debug|ARM64
		{A9D95A91-4DB7-4F72-BEB6-FE8A5C89BFBD}.Debug|x64.ActiveCfg = Debug|x64
		{A9D95A91-4DB7-4F72-BEB6-FE8A5C89BFBD}.Debug|x64.Build.0 = Debug|x64
		{A9D95A91-4DB7-4F72-BEB6-FE8A5C89BFBD}.Debug|x86.ActiveCfg = Debug|Win32
		{A9D95A91-4DB7-4F72-BEB6-FE8A5C89BFBD}.Debug|x86.Build.0 = Debug|Win32
		{A9D95A91-4DB7-4F72-BEB6-FE8A5C89BFBD}.Release|ARM64.ActiveCfg = Release|ARM64
		{A9D95A91-4DB7-4F72-BEB6-FE8A5C89BFBD}.Release|ARM64.Build.0 = Release|ARM64
		{A9D95A91-4DB7-4F72-BEB6-FE8A5C89BFBD}.Release|x64.ActiveCfg = Release|x64
		{A9D95A91-4DB7-4F72-BEB6-FE8A5C89BFBD}.Release|x64.Build.0 = Release|x64
		{A9D95A91-4DB7-4F72-BEB6-FE8A5C89BFBD}.Release|x86.ActiveCfg = Release|Win32
		{A9D95A91-4DB7-4F72-BEB6-FE8A5C89BFBD}.Release|x86.Build.0 = Release|Win32
		{F7D32BD0-2749-483E-9A0D-1635EF7E3136}.Debug|ARM64.ActiveCfg = Debug|ARM64
		{F7D32BD0-2749-483E-9A0D-1635EF7E3136}.Debug|ARM64.Build.0 = Debug|ARM64
		{F7D32BD0-2749-483E-9A0D-1635EF7E3136}.Debug|x64.ActiveCfg = Debug|x64
		{F7D32BD0-2749-483E-9A0D-1635EF7E3136}.Debug|x64.Build.0 = Debug|x64
		{F7D32BD0-2749-483E-9A0D-1635EF7E3136}.Debug|x86.ActiveCfg = Debug|Win32
		{F7D32BD0-2749-483E-9A0D-1635EF7E3136}.Debug|x86.Build.0 = Debug|Win32
		{F7D32BD0-2749-483E-9A0D-1635EF7E3136}.Release|ARM64.ActiveCfg = Release|ARM64
		{F7D32BD0-2749-483E-9A0D-1635EF7E3136}.Release|ARM64.Build.0 = Release|ARM64
		{F7D32BD0-2749-483E-9A0D-1635EF7E3136}.Release|x64.ActiveCfg = Release|x64
		{F7D32BD0-2749-483E-9A0D-1635EF7E3136}.Release|x64.Build.0 = Release|x64
		{F7D32BD0-2749-483E-9A0D-1635EF7E3136}.Release|x86.ActiveCfg = Release|Win32
		{F7D32BD0-2749-483E-9A0D-1635EF7E3136}.Release|x86.Build.0 = Release|Win32
		{FCA38F3C-7C73-4C47-BE4E-32F77FA8538D}.Debug|ARM64.ActiveCfg = Debug|ARM64
		{FCA38F3C-7C73-4C47-BE4E-32F77FA8538D}.Debug|ARM64.Build.0 = Debug|ARM64
		{FCA38F3C-7C73-4C47-BE4E-32F77FA8538D}.Debug|x64.ActiveCfg = Debug|x64
		{FCA38F3C-7C73-4C47-BE4E-32F77FA8538D}.Debug|x64.Build.0 = Debug|x64
		{FCA38F3C-7C73-4C47-BE4E-32F77FA8538D}.Debug|x86.ActiveCfg = Debug|Win32
		{FCA38F3C-7C73-4C47-BE4E-32F77FA8538D}.Debug|x86.Build.0 = Debug|Win32
		{FCA38F3C-7C73-4C47-BE4E-32F77FA8538D}.Release|ARM64.ActiveCfg = Release|ARM64
		{FCA38F3C-7C73-4C47-BE4E-32F77FA8538D}.Release|ARM64.Build.0 = Release|ARM64
		{FCA38F3C-7C73-4C47-BE4E-32F77FA8538D}.Release|x64.ActiveCfg = Release|x64
		{FCA38F3C-7C73-4C47-BE4E-32F77FA8538D}.Release|x64.Build.0 = Release|x64
		{FCA38F3C-7C73-4C47-BE4E-32F77FA8538D}.Release|x86.ActiveCfg = Release|Win32
		{FCA38F3C-7C73-4C47-BE4E-32F77FA8538D}.Release|x86.Build.0 = Release|Win32
		{14B93DC8-FD93-4A6D-81CB-8BC96644501C}.Debug|ARM64.ActiveCfg = Debug|ARM64
		{14B93DC8-FD93-4A6D-81CB-8BC96644501C}.Debug|ARM64.Build.0 = Debug|ARM64
		{14B93DC8-FD93-4A6D-81CB-8BC96644501C}.Debug|x64.ActiveCfg = Debug|x64
		{14B93DC8-FD93-4A6D-81CB-8BC96644501C}.Debug|x64.Build.0 = Debug|x64
		{14B93DC8-FD93-4A6D-81CB-8BC96644501C}.Debug|x86.ActiveCfg = Debug|Win32
		{14B93DC8-FD93-4A6D-81CB-8BC96644501C}.Debug|x86.Build.0 = Debug|Win32
		{14B93DC8-FD93-4A6D-81CB-8BC96644501C}.Debug|x86.Deploy.0 = Debug|Win32
		{14B93DC8-FD93-4A6D-81CB-8BC96644501C}.Release|ARM64.ActiveCfg = Release|ARM64
		{14B93DC8-FD93-4A6D-81CB-8BC96644501C}.Release|ARM64.Build.0 = Release|ARM64
		{14B93DC8-FD93-4A6D-81CB-8BC96644501C}.Release|x64.ActiveCfg = Release|x64
		{14B93DC8-FD93-4A6D-81CB-8BC96644501C}.Release|x64.Build.0 = Release|x64
		{14B93DC8-FD93-4A6D-81CB-8BC96644501C}.Release|x86.ActiveCfg = Release|Win32
		{14B93DC8-FD93-4A6D-81CB-8BC96644501C}.Release|x86.Build.0 = Release|Win32
		{14B93DC8-FD93-4A6D-81CB-8BC96644501C}.Release|x86.Deploy.0 = Release|Win32
	EndGlobalSection
	GlobalSection(SolutionProperties) = preSolution
		HideSolutionNode = FALSE
	EndGlobalSection
	GlobalSection(NestedProjects) = preSolution
		{A990658C-CE31-4BCC-976F-0FC6B1AF693D} = {5EA20F54-880A-49F3-99FA-4B3FE54E8AB1}
		{A9D95A91-4DB7-4F72-BEB6-FE8A5C89BFBD} = {5EA20F54-880A-49F3-99FA-4B3FE54E8AB1}
		{C38970C0-5FBF-4D69-90D8-CBAC225AE895} = {5EA20F54-880A-49F3-99FA-4B3FE54E8AB1}
		{F7D32BD0-2749-483E-9A0D-1635EF7E3136} = {5EA20F54-880A-49F3-99FA-4B3FE54E8AB1}
		{DA8B35B3-DA00-4B02-BDE6-6A397B3FD46B} = {5EA20F54-880A-49F3-99FA-4B3FE54E8AB1}
		{FCA38F3C-7C73-4C47-BE4E-32F77FA8538D} = {5EA20F54-880A-49F3-99FA-4B3FE54E8AB1}
		{2049DBE9-8D13-42C9-AE4B-413AE38FFFD0} = {5EA20F54-880A-49F3-99FA-4B3FE54E8AB1}
		{84E05BFA-CBAF-4F0D-BFB6-4CE85742A57E} = {5EA20F54-880A-49F3-99FA-4B3FE54E8AB1}
		{EF074BA1-2D54-4D49-A28E-5E040B47CD2E} = {5EA20F54-880A-49F3-99FA-4B3FE54E8AB1}
		{14B93DC8-FD93-4A6D-81CB-8BC96644501C} = {5EA20F54-880A-49F3-99FA-4B3FE54E8AB1}
	EndGlobalSection
	GlobalSection(ExtensibilityGlobals) = postSolution
		SolutionGuid = {D43FAD39-F619-437D-BB40-04A3982ACB6A}
	EndGlobalSection
EndGlobal
"
`;

exports[`C++ WinUI3 Application: SnapshotApp.vcxproj 1`] = `
"<?xml version=\\"1.0\\" encoding=\\"utf-8\\"?>
<Project ToolsVersion=\\"Current\\" DefaultTargets=\\"Build\\" xmlns=\\"http://schemas.microsoft.com/developer/msbuild/2003\\">
  <Import Project=\\"$(SolutionDir)\\\\ExperimentalFeatures.props\\" Condition=\\"Exists('$(SolutionDir)\\\\ExperimentalFeatures.props')\\" />
  <Import Project=\\"..\\\\packages\\\\Microsoft.Windows.CppWinRT.2.0.210312.4\\\\build\\\\native\\\\Microsoft.Windows.CppWinRT.props\\" Condition=\\"Exists('..\\\\packages\\\\Microsoft.Windows.CppWinRT.2.0.210312.4\\\\build\\\\native\\\\Microsoft.Windows.CppWinRT.props')\\" />
  <PropertyGroup Label=\\"Globals\\">
    <CppWinRTOptimized>true</CppWinRTOptimized>
    <CppWinRTRootNamespaceAutoMerge>true</CppWinRTRootNamespaceAutoMerge>
    <MinimalCoreWin>true</MinimalCoreWin>
    <ProjectGuid>{1212e1b8-3be1-4d40-ab93-4a6b08ab0bec}</ProjectGuid>
    <ProjectName>SnapshotApp</ProjectName>
    <RootNamespace>SnapshotApp</RootNamespace>
    <DefaultLanguage>en-US</DefaultLanguage>
    <MinimumVisualStudioVersion>16.0</MinimumVisualStudioVersion>
    <AppContainerApplication>true</AppContainerApplication>
    <ApplicationType>Windows Store</ApplicationType>
    <ApplicationTypeRevision>10.0</ApplicationTypeRevision>
  </PropertyGroup>
  <PropertyGroup Label=\\"ReactNativeWindowsProps\\">
    <ReactNativeWindowsDir Condition=\\"'$(ReactNativeWindowsDir)' == ''\\">$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), 'node_modules\\\\react-native-windows\\\\package.json'))\\\\node_modules\\\\react-native-windows\\\\</ReactNativeWindowsDir>
  </PropertyGroup>
  <Import Project=\\"$(ReactNativeWindowsDir)\\\\PropertySheets\\\\External\\\\Microsoft.ReactNative.WindowsSdk.Default.props\\" />
  <Import Project=\\"$(VCTargetsPath)\\\\Microsoft.Cpp.Default.props\\" />
  <ItemGroup Label=\\"ProjectConfigurations\\">
    <ProjectConfiguration Include=\\"Debug|ARM64\\">
      <Configuration>Debug</Configuration>
      <Platform>ARM64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include=\\"Debug|Win32\\">
      <Configuration>Debug</Configuration>
      <Platform>Win32</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include=\\"Debug|x64\\">
      <Configuration>Debug</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include=\\"Release|ARM64\\">
      <Configuration>Release</Configuration>
      <Platform>ARM64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include=\\"Release|Win32\\">
      <Configuration>Release</Configuration>
      <Platform>Win32</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include=\\"Release|x64\\">
      <Configuration>Release</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
  </ItemGroup>
  <PropertyGroup Label=\\"Configuration\\">
    <ConfigurationType>Application</ConfigurationType>
    <CharacterSet>Unicode</CharacterSet>
  </PropertyGroup>
  <PropertyGroup Condition=\\"'$(Configuration)'=='Debug'\\" Label=\\"Configuration\\">
    <UseDebugLibraries>true</UseDebugLibraries>
    <LinkIncremental>true</LinkIncremental>
  </PropertyGroup>
  <PropertyGroup Condition=\\"'$(Configuration)'=='Release'\\" Label=\\"Configuration\\">
    <UseDebugLibraries>false</UseDebugLibraries>
    <WholeProgramOptimization>true</WholeProgramOptimization>
    <LinkIncremental>false</LinkIncremental>
  </PropertyGroup>
  <Import Project=\\"$(VCTargetsPath)\\\\Microsoft.Cpp.props\\" />
  <ImportGroup Label=\\"ExtensionSettings\\"></ImportGroup>
  <ImportGroup Label=\\"PropertySheets\\">
    <Import Project=\\"$(UserRootDir)\\\\Microsoft.Cpp.$(Platform).user.props\\" Condition=\\"exists('$(UserRootDir)\\\\Microsoft.Cpp.$(Platform).user.props')\\" Label=\\"LocalAppDataPlatform\\" />
  </ImportGroup>
  <ImportGroup Label=\\"PropertySheets\\">
    <Import Project=\\"PropertySheet.props\\" />
  </ImportGroup>
  <ImportGroup Label=\\"ReactNativeWindowsPropertySheets\\">
    <Import Project=\\"$(ReactNativeWindowsDir)\\\\PropertySheets\\\\external\\\\Microsoft.ReactNative.Uwp.CppApp.props\\" Condition=\\"Exists('$(ReactNativeWindowsDir)\\\\PropertySheets\\\\External\\\\Microsoft.ReactNative.Uwp.CppApp.props')\\" />
    <Import Project=\\"..\\\\packages\\\\$(WinUIPackageProps)\\" Condition=\\"'$(WinUIPackageProps)'!='' And Exists('..\\\\packages\\\\$(WinUIPackageProps)')\\" />
  </ImportGroup>
  <PropertyGroup Label=\\"UserMacros\\" />
  <ItemDefinitionGroup>
    <ClCompile>
      <PrecompiledHeader>Use</PrecompiledHeader>
      <PrecompiledHeaderFile>pch.h</PrecompiledHeaderFile>
      <PrecompiledHeaderOutputFile>$(IntDir)pch.pch</PrecompiledHeaderOutputFile>
      <WarningLevel>Level4</WarningLevel>
      <AdditionalOptions>%(AdditionalOptions) /bigobj</AdditionalOptions>
      <DisableSpecificWarnings>4453;28204</DisableSpecificWarnings>
    </ClCompile>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition=\\"'$(Configuration)'=='Debug'\\">
    <ClCompile>
      <PreprocessorDefinitions>_DEBUG;%(PreprocessorDefinitions)</PreprocessorDefinitions>
    </ClCompile>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition=\\"'$(Configuration)'=='Release'\\">
    <ClCompile>
      <PreprocessorDefinitions>NDEBUG;%(PreprocessorDefinitions)</PreprocessorDefinitions>
    </ClCompile>
  </ItemDefinitionGroup>
  <ItemGroup>
    <ClInclude Include=\\"MainPage.h\\">
      <DependentUpon>MainPage.xaml</DependentUpon>
      <SubType>Code</SubType>
    </ClInclude>
    <ClInclude Include=\\"ReactPackageProvider.h\\" />
    <ClInclude Include=\\"AutolinkedNativeModules.g.h\\" />
    <ClInclude Include=\\"pch.h\\" />
    <ClInclude Include=\\"App.h\\">
      <DependentUpon>App.xaml</DependentUpon>
    </ClInclude>
  </ItemGroup>
  <ItemGroup>
    <ApplicationDefinition Include=\\"App.xaml\\">
      <SubType>Designer</SubType>
    </ApplicationDefinition>
  </ItemGroup>
  <ItemGroup>
    <AppxManifest Include=\\"Package.appxmanifest\\">
      <SubType>Designer</SubType>
    </AppxManifest>
  </ItemGroup>
  <ItemGroup>
    <Image Include=\\"Assets\\\\LockScreenLogo.scale-200.png\\" />
    <Image Include=\\"Assets\\\\SplashScreen.scale-200.png\\" />
    <Image Include=\\"Assets\\\\Square150x150Logo.scale-200.png\\" />
    <Image Include=\\"Assets\\\\Square44x44Logo.scale-200.png\\" />
    <Image Include=\\"Assets\\\\Square44x44Logo.targetsize-24_altform-unplated.png\\" />
    <Image Include=\\"Assets\\\\StoreLogo.png\\" />
    <Image Include=\\"Assets\\\\Wide310x150Logo.scale-200.png\\" />
  </ItemGroup>
  <ItemGroup>
    <ClCompile Include=\\"MainPage.cpp\\">
      <DependentUpon>MainPage.xaml</DependentUpon>
      <SubType>Code</SubType>
    </ClCompile>
    <ClCompile Include=\\"ReactPackageProvider.cpp\\" />
    <ClCompile Include=\\"AutolinkedNativeModules.g.cpp\\" />
    <ClCompile Include=\\"pch.cpp\\">
      <PrecompiledHeader>Create</PrecompiledHeader>
    </ClCompile>
    <ClCompile Include=\\"App.cpp\\">
      <DependentUpon>App.xaml</DependentUpon>
    </ClCompile>
    <ClCompile Include=\\"$(GeneratedFilesDir)module.g.cpp\\" />
  </ItemGroup>
  <ItemGroup>
    <Midl Include=\\"App.idl\\">
      <DependentUpon>App.xaml</DependentUpon>
    </Midl>
    <Midl Include=\\"MainPage.idl\\">
      <DependentUpon>MainPage.xaml</DependentUpon>
      <SubType>Code</SubType>
    </Midl>
  </ItemGroup>
  <ItemGroup>
    <None Include=\\"packages.config\\" />
    <None Include=\\"PropertySheet.props\\" />
    <Text Include=\\"readme.txt\\">
      <DeploymentContent>false</DeploymentContent>
    </Text>
  </ItemGroup>
  <ItemGroup>
    <Page Include=\\"MainPage.xaml\\">
      <SubType>Designer</SubType>
    </Page>
  </ItemGroup>
  <Import Project=\\"$(VCTargetsPath)\\\\Microsoft.Cpp.targets\\" />
  <ImportGroup Label=\\"ReactNativeWindowsTargets\\">
    <Import Project=\\"$(ReactNativeWindowsDir)\\\\PropertySheets\\\\External\\\\Microsoft.ReactNative.Uwp.CppApp.targets\\" Condition=\\"Exists('$(ReactNativeWindowsDir)\\\\PropertySheets\\\\External\\\\Microsoft.ReactNative.Uwp.CppApp.targets')\\" />
  </ImportGroup>
  <Target Name=\\"EnsureReactNativeWindowsTargets\\" BeforeTargets=\\"PrepareForBuild\\">
    <PropertyGroup>
      <ErrorText>This project references targets in your node_modules\\\\react-native-windows folder that are missing. The missing file is {0}.</ErrorText>
    </PropertyGroup>
    <Error Condition=\\"!Exists('$(ReactNativeWindowsDir)\\\\PropertySheets\\\\External\\\\Microsoft.ReactNative.Uwp.CppApp.props')\\" Text=\\"$([System.String]::Format('$(ErrorText)', '$(ReactNativeWindowsDir)\\\\PropertySheets\\\\External\\\\Microsoft.ReactNative.Uwp.CppApp.props'))\\" />
    <Error Condition=\\"!Exists('$(ReactNativeWindowsDir)\\\\PropertySheets\\\\External\\\\Microsoft.ReactNative.Uwp.CppApp.targets')\\" Text=\\"$([System.String]::Format('$(ErrorText)', '$(ReactNativeWindowsDir)\\\\PropertySheets\\\\External\\\\Microsoft.ReactNative.Uwp.CppApp.targets'))\\" />
  </Target>
  <ImportGroup Label=\\"ExtensionTargets\\">
    <Import Project=\\"..\\\\packages\\\\Microsoft.Windows.CppWinRT.2.0.210312.4\\\\build\\\\native\\\\Microsoft.Windows.CppWinRT.targets\\" Condition=\\"Exists('..\\\\packages\\\\Microsoft.Windows.CppWinRT.2.0.210312.4\\\\build\\\\native\\\\Microsoft.Windows.CppWinRT.targets')\\" />
    <Import Project=\\"..\\\\packages\\\\ReactNative.Hermes.Windows.0.9.0-ms.6\\\\build\\\\native\\\\ReactNative.Hermes.Windows.targets\\" Condition=\\"Exists('..\\\\packages\\\\ReactNative.Hermes.Windows.0.9.0-ms.6\\\\build\\\\native\\\\ReactNative.Hermes.Windows.targets')\\" />
    <Import Project=\\"..\\\\packages\\\\$(WinUIPackageName).$(WinUIPackageVersion)\\\\build\\\\native\\\\$(WinUIPackageName).targets\\" Condition=\\"Exists('..\\\\packages\\\\$(WinUIPackageName).$(WinUIPackageVersion)\\\\build\\\\native\\\\$(WinUIPackageName).targets')\\" />
  </ImportGroup>
  <Target Name=\\"EnsureNuGetPackageBuildImports\\" BeforeTargets=\\"PrepareForBuild\\">
    <PropertyGroup>
      <ErrorText>This project references NuGet package(s) that are missing on this computer. Use NuGet Package Restore to download them.  For more information, see http://go.microsoft.com/fwlink/?LinkID=322105. The missing file is {0}.</ErrorText>
    </PropertyGroup>
    <Error Condition=\\"!Exists('..\\\\packages\\\\Microsoft.Windows.CppWinRT.2.0.210312.4\\\\build\\\\native\\\\Microsoft.Windows.CppWinRT.props')\\" Text=\\"$([System.String]::Format('$(ErrorText)', '..\\\\packages\\\\Microsoft.Windows.CppWinRT.2.0.210312.4\\\\build\\\\native\\\\Microsoft.Windows.CppWinRT.props'))\\" />
    <Error Condition=\\"!Exists('..\\\\packages\\\\Microsoft.Windows.CppWinRT.2.0.210312.4\\\\build\\\\native\\\\Microsoft.Windows.CppWinRT.targets')\\" Text=\\"$([System.String]::Format('$(ErrorText)', '..\\\\packages\\\\Microsoft.Windows.CppWinRT.2.0.210312.4\\\\build\\\\native\\\\Microsoft.Windows.CppWinRT.targets'))\\" />
    <Error Condition=\\"!Exists('..\\\\packages\\\\ReactNative.Hermes.Windows.0.9.0-ms.6\\\\build\\\\native\\\\ReactNative.Hermes.Windows.targets')\\" Text=\\"$([System.String]::Format('$(ErrorText)', '..\\\\packages\\\\ReactNative.Hermes.Windows.0.9.0-ms.6\\\\build\\\\native\\\\ReactNative.Hermes.Windows.targets'))\\" />
    <Error Condition=\\"!Exists('..\\\\packages\\\\$(WinUIPackageName).$(WinUIPackageVersion)\\\\build\\\\native\\\\$(WinUIPackageName).targets')\\" Text=\\"$([System.String]::Format('$(ErrorText)', '..\\\\packages\\\\$(WinUIPackageName).$(WinUIPackageVersion)\\\\build\\\\native\\\\$(WinUIPackageName).targets'))\\" />
  </Target>
</Project>
"
`;

exports[`C++ WinUI3 Application: SnapshotApp.vcxproj.filters 1`] = `
"﻿<?xml version=\\"1.0\\" encoding=\\"utf-8\\"?>
<Project ToolsVersion=\\"Current\\" xmlns=\\"http://schemas.microsoft.com/developer/msbuild/2003\\">
  <ItemGroup>
    <ApplicationDefinition Include=\\"App.xaml\\" />
  </ItemGroup>
  <ItemGroup>
    <Midl Include=\\"App.idl\\" />
  </ItemGroup>
  <ItemGroup>
    <ClCompile Include=\\"pch.cpp\\" />
    <ClCompile Include=\\"App.cpp\\" />
    <ClCompile Include=\\"$(GeneratedFilesDir)module.g.cpp\\" />
    <ClCompile Include=\\"ReactPackageProvider.cpp\\" />
    <ClCompile Include=\\"AutolinkedNativeModules.g.cpp\\" />
  </ItemGroup>
  <ItemGroup>
    <ClInclude Include=\\"pch.h\\" />
    <ClInclude Include=\\"App.h\\" />
    <ClInclude Include=\\"ReactPackageProvider.h\\" />
    <ClInclude Include=\\"AutolinkedNativeModules.g.h\\" />
  </ItemGroup>
  <ItemGroup>
    <Image Include=\\"Assets\\\\Wide310x150Logo.scale-200.png\\">
      <Filter>Assets</Filter>
    </Image>
    <Image Include=\\"Assets\\\\StoreLogo.png\\">
      <Filter>Assets</Filter>
    </Image>
    <Image Include=\\"Assets\\\\Square150x150Logo.scale-200.png\\">
      <Filter>Assets</Filter>
    </Image>
    <Image Include=\\"Assets\\\\Square44x44Logo.targetsize-24_altform-unplated.png\\">
      <Filter>Assets</Filter>
    </Image>
    <Image Include=\\"Assets\\\\Square44x44Logo.scale-200.png\\">
      <Filter>Assets</Filter>
    </Image>
    <Image Include=\\"Assets\\\\SplashScreen.scale-200.png\\">
      <Filter>Assets</Filter>
    </Image>
    <Image Include=\\"Assets\\\\LockScreenLogo.scale-200.png\\">
      <Filter>Assets</Filter>
    </Image>
  </ItemGroup>
  <ItemGroup>
    <AppxManifest Include=\\"Package.appxmanifest\\" />
  </ItemGroup>
  <ItemGroup>
    <Filter Include=\\"Assets\\">
      <UniqueIdentifier>{e48dc53e-40b1-40cb-970a-f89935452892}</UniqueIdentifier>
    </Filter>
  </ItemGroup>
  <ItemGroup>
    <None Include=\\"PropertySheet.props\\" />
    <None Include=\\"packages.config\\" />
  </ItemGroup>
  <ItemGroup>
    <Text Include=\\"readme.txt\\" />
  </ItemGroup>
  <ItemGroup>
    <Page Include=\\"MainPage.xaml\\" />
  </ItemGroup>
</Project>"
`;

exports[`C++ WinUI3 Application: index.windows.bundle 1`] = `
"/**
 * 
 * Be sure to generate this file using the CLI:
 *
 * npx react-native bundle --platform windows --entry-file index.js 
 *   --bundle-output windows\\\\SnapshotApp\\\\Bundle\\\\index.windows.bundle
 *   --assets-dest windows\\\\SnapshotApp\\\\Bundle
 *
 */"
`;

exports[`C++ WinUI3 Application: metro.config.js 1`] = `
"/**
 * Metro configuration for React Native
 * https://github.com/facebook/react-native
 *
 * @format
 */
const fs = require('fs');
const path = require('path');
const exclusionList = require('metro-config/src/defaults/exclusionList');

const rnwPath = fs.realpathSync(
  path.resolve(require.resolve('react-native-windows/package.json'), '..'),
);

module.exports = {
  resolver: {
    blockList: exclusionList([
      // This stops \\"react-native run-windows\\" from causing the metro server to crash if its already running
      new RegExp(
        \`\${path.resolve(__dirname, 'windows').replace(/[/\\\\\\\\]/g, '/')}.*\`,
      ),
      // This prevents \\"react-native run-windows\\" from hitting: EBUSY: resource busy or locked, open msbuild.ProjectImports.zip or other files produced by msbuild
      new RegExp(\`\${rnwPath}/build/.*\`),
      new RegExp(\`\${rnwPath}/target/.*\`),
      /.*\\\\.ProjectImports\\\\.zip/,
    ]),
  },
  transformer: {
    getTransformOptions: async () => ({
      transform: {
        experimentalImportSupport: false,
        inlineRequires: true,
      },
    }),
  },
};
"
`;

exports[`C++ WinUI3 Application: packages.config 1`] = `
"﻿<?xml version=\\"1.0\\" encoding=\\"utf-8\\"?>
<packages>
  <package id=\\"Microsoft.Windows.CppWinRT\\" version=\\"2.0.210312.4\\" targetFramework=\\"native\\" />
  <package id=\\"ReactNative.Hermes.Windows\\" version=\\"0.9.0-ms.6\\" targetFramework=\\"native\\" />
  <package id=\\"Microsoft.WinUI\\" version=\\"3.0.0-preview4.210210.4\\" targetFramework=\\"native\\" />
</packages>"
`;

exports[`C++ WinUI3 Application: pch.cpp 1`] = `
"﻿#include \\"pch.h\\"
"
`;

exports[`C++ WinUI3 Application: pch.h 1`] = `
"#pragma once

#define NOMINMAX

#include <hstring.h>
#include <restrictederrorinfo.h>
#include <unknwn.h>
#include <windows.h>
#include <CppWinRTIncludes.h>
#include <VersionMacros.h>
#include <winrt/Windows.ApplicationModel.Activation.h>
#include <UI.Xaml.Controls.Primitives.h>
#include <UI.Xaml.Controls.h>
#include <UI.Xaml.Markup.h>
#include <UI.Xaml.Navigation.h>

#include <winrt/Microsoft.ReactNative.h>

#include <winrt/Microsoft.UI.Xaml.Automation.Peers.h>
#include <winrt/Microsoft.UI.Xaml.Controls.Primitives.h>
#include <winrt/Microsoft.UI.Xaml.Controls.h>
#include <winrt/Microsoft.UI.Xaml.Media.h>
#include <winrt/Microsoft.UI.Xaml.XamlTypeInfo.h>
using namespace winrt::Windows::Foundation;
"
`;

exports[`C++ WinUI3 Library: ExperimentalFeatures.props 1`] = `
"<?xml version=\\"1.0\\" encoding=\\"utf-8\\"?>
<Project xmlns=\\"http://schemas.microsoft.com/developer/msbuild/2003\\">

  <!--
    Application projects contain a file with this name to specify some important settings
    that will apply globally for the app and *all* native modules the app consumes. These
    values are set by the app developer.
  -->

</Project>
"
`;

exports[`C++ WinUI3 Library: NuGet.Config 1`] = `
"<?xml version=\\"1.0\\" encoding=\\"utf-8\\"?>
<configuration>
  <config>
    <add key=\\"repositoryPath\\" value=\\"packages\\" />
  </config>
  <packageSources>
    <clear />
    <add key=\\"react-native\\" value=\\"https://pkgs.dev.azure.com/ms/react-native/_packaging/react-native-public/nuget/v3/index.json\\" />
    <add key=\\"Nuget.org\\" value=\\"https://api.nuget.org/v3/index.json\\" />
  </packageSources>
  <disabledPackageSources>
    <clear />
  </disabledPackageSources>  
</configuration>
"
`;

exports[`C++ WinUI3 Library: PropertySheet.props 1`] = `
"<?xml version=\\"1.0\\" encoding=\\"utf-8\\"?>
<Project ToolsVersion=\\"Current\\" xmlns=\\"http://schemas.microsoft.com/developer/msbuild/2003\\">
  <ImportGroup Label=\\"PropertySheets\\" />
  <PropertyGroup Label=\\"UserMacros\\" />
  <!--
    To customize common C++/WinRT project properties:
    * right-click the project node
    * expand the Common Properties item
    * select the C++/WinRT property page

    For more advanced scenarios, and complete documentation, please see:
    https://github.com/Microsoft/xlang/tree/master/src/package/cppwinrt/nuget
    -->
  <PropertyGroup />
  <ItemDefinitionGroup />
</Project>"
`;

exports[`C++ WinUI3 Library: ReactNativeModule.h 1`] = `
"﻿#pragma once

#include \\"JSValue.h\\"
#include \\"NativeModules.h\\"

using namespace winrt::Microsoft::ReactNative;

namespace winrt::SnapshotApp
{

REACT_MODULE(ReactNativeModule, L\\"SnapshotApp\\")
struct ReactNativeModule
{
    // See https://microsoft.github.io/react-native-windows/docs/native-modules for details on writing native modules

    REACT_INIT(Initialize)
    void Initialize(ReactContext const &reactContext) noexcept
    {
        m_reactContext = reactContext;
    }
    
    REACT_METHOD(sampleMethod)
    void sampleMethod(std::string stringArgument, int numberArgument, std::function<void(std::string)> &&callback) noexcept
    {
        // TODO: Implement some actually useful functionality
        callback(\\"Received numberArgument: \\" + std::to_string(numberArgument) + \\" stringArgument: \\" + stringArgument);
    }

    private:
        ReactContext m_reactContext{nullptr};
};

} // namespace winrt::SnapshotApp
"
`;

exports[`C++ WinUI3 Library: ReactPackageProvider.cpp 1`] = `
"#include \\"pch.h\\"
#include \\"ReactPackageProvider.h\\"
#if __has_include(\\"ReactPackageProvider.g.cpp\\")
#include \\"ReactPackageProvider.g.cpp\\"
#endif

#include \\"ReactNativeModule.h\\"

using namespace winrt::Microsoft::ReactNative;

namespace winrt::SnapshotApp::implementation
{

void ReactPackageProvider::CreatePackage(IReactPackageBuilder const &packageBuilder) noexcept
{
    AddAttributedModules(packageBuilder);
}

} // namespace winrt::SnapshotApp::implementation
"
`;

exports[`C++ WinUI3 Library: ReactPackageProvider.h 1`] = `
"#pragma once
#include \\"ReactPackageProvider.g.h\\"

using namespace winrt::Microsoft::ReactNative;

namespace winrt::SnapshotApp::implementation
{
    struct ReactPackageProvider : ReactPackageProviderT<ReactPackageProvider>
    {
        ReactPackageProvider() = default;

        void CreatePackage(IReactPackageBuilder const &packageBuilder) noexcept;
    };
} // namespace winrt::SnapshotApp::implementation

namespace winrt::SnapshotApp::factory_implementation
{

struct ReactPackageProvider : ReactPackageProviderT<ReactPackageProvider, implementation::ReactPackageProvider> {};

} // namespace winrt::SnapshotApp::factory_implementation
"
`;

exports[`C++ WinUI3 Library: ReactPackageProvider.idl 1`] = `
"namespace SnapshotApp
{
    [webhosthidden]
    [default_interface]
    runtimeclass ReactPackageProvider : Microsoft.ReactNative.IReactPackageProvider
    {
        ReactPackageProvider();
    };
}
"
`;

exports[`C++ WinUI3 Library: SnapshotApp.def 1`] = `
"﻿EXPORTS
DllCanUnloadNow = WINRT_CanUnloadNow                    PRIVATE
DllGetActivationFactory = WINRT_GetActivationFactory    PRIVATE
"
`;

exports[`C++ WinUI3 Library: SnapshotApp.sln 1`] = `
"﻿
Microsoft Visual Studio Solution File, Format Version 12.00
# Visual Studio Version 16
VisualStudioVersion = 16.0.29215.179
MinimumVisualStudioVersion = 10.0.40219.1
Project(\\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\\") = \\"SnapshotApp\\", \\"SnapshotApp\\\\SnapshotApp.vcxproj\\", \\"{F486D393-6A66-4586-A814-CE78AAD63BC0}\\"
	ProjectSection(ProjectDependencies) = postProject
		{F7D32BD0-2749-483E-9A0D-1635EF7E3136} = {F7D32BD0-2749-483E-9A0D-1635EF7E3136}
	EndProjectSection
EndProject
Project(\\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\\") = \\"Folly\\", \\"..\\\\node_modules\\\\react-native-windows\\\\Folly\\\\Folly.vcxproj\\", \\"{A990658C-CE31-4BCC-976F-0FC6B1AF693D}\\"
EndProject
Project(\\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\\") = \\"fmt\\", \\"..\\\\node_modules\\\\react-native-windows\\\\fmt\\\\fmt.vcxproj\\", \\"{14B93DC8-FD93-4A6D-81CB-8BC96644501C}\\"
EndProject
Project(\\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\\") = \\"ReactCommon\\", \\"..\\\\node_modules\\\\react-native-windows\\\\ReactCommon\\\\ReactCommon.vcxproj\\", \\"{A9D95A91-4DB7-4F72-BEB6-FE8A5C89BFBD}\\"
	ProjectSection(ProjectDependencies) = postProject
		{A990658C-CE31-4BCC-976F-0FC6B1AF693D} = {A990658C-CE31-4BCC-976F-0FC6B1AF693D}
	EndProjectSection
EndProject
Project(\\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\\") = \\"Chakra\\", \\"..\\\\node_modules\\\\react-native-windows\\\\Chakra\\\\Chakra.vcxitems\\", \\"{C38970C0-5FBF-4D69-90D8-CBAC225AE895}\\"
EndProject
Project(\\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\\") = \\"Microsoft.ReactNative\\", \\"..\\\\node_modules\\\\react-native-windows\\\\Microsoft.ReactNative\\\\Microsoft.ReactNative.vcxproj\\", \\"{F7D32BD0-2749-483E-9A0D-1635EF7E3136}\\"
EndProject
Project(\\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\\") = \\"Microsoft.ReactNative.Cxx\\", \\"..\\\\node_modules\\\\react-native-windows\\\\Microsoft.ReactNative.Cxx\\\\Microsoft.ReactNative.Cxx.vcxitems\\", \\"{DA8B35B3-DA00-4B02-BDE6-6A397B3FD46B}\\"
EndProject
Project(\\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\\") = \\"Common\\", \\"..\\\\node_modules\\\\react-native-windows\\\\Common\\\\Common.vcxproj\\", \\"{FCA38F3C-7C73-4C47-BE4E-32F77FA8538D}\\"
EndProject
Project(\\"{2150E333-8FDC-42A3-9474-1A3956D46DE8}\\") = \\"ReactNative\\", \\"ReactNative\\", \\"{5EA20F54-880A-49F3-99FA-4B3FE54E8AB1}\\"
EndProject
Project(\\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\\") = \\"Microsoft.ReactNative.Shared\\", \\"..\\\\node_modules\\\\react-native-windows\\\\Shared\\\\Shared.vcxitems\\", \\"{2049DBE9-8D13-42C9-AE4B-413AE38FFFD0}\\"
EndProject
Project(\\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\\") = \\"Mso\\", \\"..\\\\node_modules\\\\react-native-windows\\\\Mso\\\\Mso.vcxitems\\", \\"{84E05BFA-CBAF-4F0D-BFB6-4CE85742A57E}\\"
EndProject
Project(\\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\\") = \\"Include\\", \\"..\\\\node_modules\\\\react-native-windows\\\\include\\\\Include.vcxitems\\", \\"{EF074BA1-2D54-4D49-A28E-5E040B47CD2E}\\"
EndProject
Global
	GlobalSection(SharedMSBuildProjectFiles) = preSolution
		..\\\\node_modules\\\\react-native-windows\\\\Shared\\\\Shared.vcxitems*{2049dbe9-8d13-42c9-ae4b-413ae38fffd0}*SharedItemsImports = 9
		..\\\\node_modules\\\\react-native-windows\\\\Mso\\\\Mso.vcxitems*{84e05bfa-cbaf-4f0d-bfb6-4ce85742a57e}*SharedItemsImports = 9
		..\\\\node_modules\\\\react-native-windows\\\\Chakra\\\\Chakra.vcxitems*{c38970c0-5fbf-4d69-90d8-cbac225ae895}*SharedItemsImports = 9
		..\\\\node_modules\\\\react-native-windows\\\\Microsoft.ReactNative.Cxx\\\\Microsoft.ReactNative.Cxx.vcxitems*{da8b35b3-da00-4b02-bde6-6a397b3fd46b}*SharedItemsImports = 9
		..\\\\node_modules\\\\react-native-windows\\\\include\\\\Include.vcxitems*{ef074ba1-2d54-4d49-a28e-5e040b47cd2e}*SharedItemsImports = 9
		..\\\\node_modules\\\\react-native-windows\\\\Chakra\\\\Chakra.vcxitems*{f7d32bd0-2749-483e-9a0d-1635ef7e3136}*SharedItemsImports = 4
		..\\\\node_modules\\\\react-native-windows\\\\Microsoft.ReactNative.Cxx\\\\Microsoft.ReactNative.Cxx.vcxitems*{f7d32bd0-2749-483e-9a0d-1635ef7e3136}*SharedItemsImports = 4
		..\\\\node_modules\\\\react-native-windows\\\\Mso\\\\Mso.vcxitems*{f7d32bd0-2749-483e-9a0d-1635ef7e3136}*SharedItemsImports = 4
		..\\\\node_modules\\\\react-native-windows\\\\Shared\\\\Shared.vcxitems*{f7d32bd0-2749-483e-9a0d-1635ef7e3136}*SharedItemsImports = 4
	EndGlobalSection
	GlobalSection(SolutionConfigurationPlatforms) = preSolution
		Debug|ARM64 = Debug|ARM64
		Debug|x64 = Debug|x64
		Debug|x86 = Debug|x86
		Release|ARM64 = Release|ARM64
		Release|x64 = Release|x64
		Release|x86 = Release|x86
	EndGlobalSection
	GlobalSection(ProjectConfigurationPlatforms) = postSolution
		{F486D393-6A66-4586-A814-CE78AAD63BC0}.Debug|ARM64.ActiveCfg = Debug|ARM64
		{F486D393-6A66-4586-A814-CE78AAD63BC0}.Debug|ARM64.Build.0 = Debug|ARM64
		{F486D393-6A66-4586-A814-CE78AAD63BC0}.Debug|ARM64.Deploy.0 = Debug|ARM64
		{F486D393-6A66-4586-A814-CE78AAD63BC0}.Debug|x64.ActiveCfg = Debug|x64
		{F486D393-6A66-4586-A814-CE78AAD63BC0}.Debug|x64.Build.0 = Debug|x64
		{F486D393-6A66-4586-A814-CE78AAD63BC0}.Debug|x64.Deploy.0 = Debug|x64
		{F486D393-6A66-4586-A814-CE78AAD63BC0}.Debug|x86.ActiveCfg = Debug|Win32
		{F486D393-6A66-4586-A814-CE78AAD63BC0}.Debug|x86.Build.0 = Debug|Win32
		{F486D393-6A66-4586-A814-CE78AAD63BC0}.Debug|x86.Deploy.0 = Debug|Win32
		{F486D393-6A66-4586-A814-CE78AAD63BC0}.Release|ARM64.ActiveCfg = Release|ARM64
		{F486D393-6A66-4586-A814-CE78AAD63BC0}.Release|ARM64.Build.0 = Release|ARM64
		{F486D393-6A66-4586-A814-CE78AAD63BC0}.Release|ARM64.Deploy.0 = Release|ARM64
		{F486D393-6A66-4586-A814-CE78AAD63BC0}.Release|x64.ActiveCfg = Release|x64
		{F486D393-6A66-4586-A814-CE78AAD63BC0}.Release|x64.Build.0 = Release|x64
		{F486D393-6A66-4586-A814-CE78AAD63BC0}.Release|x64.Deploy.0 = Release|x64
		{F486D393-6A66-4586-A814-CE78AAD63BC0}.Release|x86.ActiveCfg = Release|Win32
		{F486D393-6A66-4586-A814-CE78AAD63BC0}.Release|x86.Build.0 = Release|Win32
		{F486D393-6A66-4586-A814-CE78AAD63BC0}.Release|x86.Deploy.0 = Release|Win32
		{A990658C-CE31-4BCC-976F-0FC6B1AF693D}.Debug|ARM64.ActiveCfg = Debug|ARM64
		{A990658C-CE31-4BCC-976F-0FC6B1AF693D}.Debug|ARM64.Build.0 = Debug|ARM64
		{A990658C-CE31-4BCC-976F-0FC6B1AF693D}.Debug|x64.ActiveCfg = Debug|x64
		{A990658C-CE31-4BCC-976F-0FC6B1AF693D}.Debug|x64.Build.0 = Debug|x64
		{A990658C-CE31-4BCC-976F-0FC6B1AF693D}.Debug|x86.ActiveCfg = Debug|Win32
		{A990658C-CE31-4BCC-976F-0FC6B1AF693D}.Debug|x86.Build.0 = Debug|Win32
		{A990658C-CE31-4BCC-976F-0FC6B1AF693D}.Release|ARM64.ActiveCfg = Release|ARM64
		{A990658C-CE31-4BCC-976F-0FC6B1AF693D}.Release|ARM64.Build.0 = Release|ARM64
		{A990658C-CE31-4BCC-976F-0FC6B1AF693D}.Release|x64.ActiveCfg = Release|x64
		{A990658C-CE31-4BCC-976F-0FC6B1AF693D}.Release|x64.Build.0 = Release|x64
		{A990658C-CE31-4BCC-976F-0FC6B1AF693D}.Release|x86.ActiveCfg = Release|Win32
		{A990658C-CE31-4BCC-976F-0FC6B1AF693D}.Release|x86.Build.0 = Release|Win32
		{A9D95A91-4DB7-4F72-BEB6-FE8A5C89BFBD}.Debug|ARM64.ActiveCfg = Debug|ARM64
		{A9D95A91-4DB7-4F72-BEB6-FE8A5C89BFBD}.Debug|ARM64.Build.0 = Debug|ARM64
		{A9D95A91-4DB7-4F72-BEB6-FE8A5C89BFBD}.Debug|x64.ActiveCfg = Debug|x64
		{A9D95A91-4DB7-4F72-BEB6-FE8A5C89BFBD}.Debug|x64.Build.0 = Debug|x64
		{A9D95A91-4DB7-4F72-BEB6-FE8A5C89BFBD}.Debug|x86.ActiveCfg = Debug|Win32
		{A9D95A91-4DB7-4F72-BEB6-FE8A5C89BFBD}.Debug|x86.Build.0 = Debug|Win32
		{A9D95A91-4DB7-4F72-BEB6-FE8A5C89BFBD}.Release|ARM64.ActiveCfg = Release|ARM64
		{A9D95A91-4DB7-4F72-BEB6-FE8A5C89BFBD}.Release|ARM64.Build.0 = Release|ARM64
		{A9D95A91-4DB7-4F72-BEB6-FE8A5C89BFBD}.Release|x64.ActiveCfg = Release|x64
		{A9D95A91-4DB7-4F72-BEB6-FE8A5C89BFBD}.Release|x64.Build.0 = Release|x64
		{A9D95A91-4DB7-4F72-BEB6-FE8A5C89BFBD}.Release|x86.ActiveCfg = Release|Win32
		{A9D95A91-4DB7-4F72-BEB6-FE8A5C89BFBD}.Release|x86.Build.0 = Release|Win32
		{F7D32BD0-2749-483E-9A0D-1635EF7E3136}.Debug|ARM64.ActiveCfg = Debug|ARM64
		{F7D32BD0-2749-483E-9A0D-1635EF7E3136}.Debug|ARM64.Build.0 = Debug|ARM64
		{F7D32BD0-2749-483E-9A0D-1635EF7E3136}.Debug|x64.ActiveCfg = Debug|x64
		{F7D32BD0-2749-483E-9A0D-1635EF7E3136}.Debug|x64.Build.0 = Debug|x64
		{F7D32BD0-2749-483E-9A0D-1635EF7E3136}.Debug|x86.ActiveCfg = Debug|Win32
		{F7D32BD0-2749-483E-9A0D-1635EF7E3136}.Debug|x86.Build.0 = Debug|Win32
		{F7D32BD0-2749-483E-9A0D-1635EF7E3136}.Release|ARM64.ActiveCfg = Release|ARM64
		{F7D32BD0-2749-483E-9A0D-1635EF7E3136}.Release|ARM64.Build.0 = Release|ARM64
		{F7D32BD0-2749-483E-9A0D-1635EF7E3136}.Release|x64.ActiveCfg = Release|x64
		{F7D32BD0-2749-483E-9A0D-1635EF7E3136}.Release|x64.Build.0 = Release|x64
		{F7D32BD0-2749-483E-9A0D-1635EF7E3136}.Release|x86.ActiveCfg = Release|Win32
		{F7D32BD0-2749-483E-9A0D-1635EF7E3136}.Release|x86.Build.0 = Release|Win32
		{FCA38F3C-7C73-4C47-BE4E-32F77FA8538D}.Debug|ARM64.ActiveCfg = Debug|ARM64
		{FCA38F3C-7C73-4C47-BE4E-32F77FA8538D}.Debug|ARM64.Build.0 = Debug|ARM64
		{FCA38F3C-7C73-4C47-BE4E-32F77FA8538D}.Debug|x64.ActiveCfg = Debug|x64
		{FCA38F3C-7C73-4C47-BE4E-32F77FA8538D}.Debug|x64.Build.0 = Debug|x64
		{FCA38F3C-7C73-4C47-BE4E-32F77FA8538D}.Debug|x86.ActiveCfg = Debug|Win32
		{FCA38F3C-7C73-4C47-BE4E-32F77FA8538D}.Debug|x86.Build.0 = Debug|Win32
		{FCA38F3C-7C73-4C47-BE4E-32F77FA8538D}.Release|ARM64.ActiveCfg = Release|ARM64
		{FCA38F3C-7C73-4C47-BE4E-32F77FA8538D}.Release|ARM64.Build.0 = Release|ARM64
		{FCA38F3C-7C73-4C47-BE4E-32F77FA8538D}.Release|x64.ActiveCfg = Release|x64
		{FCA38F3C-7C73-4C47-BE4E-32F77FA8538D}.Release|x64.Build.0 = Release|x64
		{FCA38F3C-7C73-4C47-BE4E-32F77FA8538D}.Release|x86.ActiveCfg = Release|Win32
		{FCA38F3C-7C73-4C47-BE4E-32F77FA8538D}.Release|x86.Build.0 = Release|Win32
		{14B93DC8-FD93-4A6D-81CB-8BC96644501C}.Debug|ARM64.ActiveCfg = Debug|ARM64
		{14B93DC8-FD93-4A6D-81CB-8BC96644501C}.Debug|ARM64.Build.0 = Debug|ARM64
		{14B93DC8-FD93-4A6D-81CB-8BC96644501C}.Debug|x64.ActiveCfg = Debug|x64
		{14B93DC8-FD93-4A6D-81CB-8BC96644501C}.Debug|x64.Build.0 = Debug|x64
		{14B93DC8-FD93-4A6D-81CB-8BC96644501C}.Debug|x86.ActiveCfg = Debug|Win32
		{14B93DC8-FD93-4A6D-81CB-8BC96644501C}.Debug|x86.Build.0 = Debug|Win32
		{14B93DC8-FD93-4A6D-81CB-8BC96644501C}.Debug|x86.Deploy.0 = Debug|Win32
		{14B93DC8-FD93-4A6D-81CB-8BC96644501C}.Release|ARM64.ActiveCfg = Release|ARM64
		{14B93DC8-FD93-4A6D-81CB-8BC96644501C}.Release|ARM64.Build.0 = Release|ARM64
		{14B93DC8-FD93-4A6D-81CB-8BC96644501C}.Release|x64.ActiveCfg = Release|x64
		{14B93DC8-FD93-4A6D-81CB-8BC96644501C}.Release|x64.Build.0 = Release|x64
		{14B93DC8-FD93-4A6D-81CB-8BC96644501C}.Release|x86.ActiveCfg = Release|Win32
		{14B93DC8-FD93-4A6D-81CB-8BC96644501C}.Release|x86.Build.0 = Release|Win32
		{14B93DC8-FD93-4A6D-81CB-8BC96644501C}.Release|x86.Deploy.0 = Release|Win32
	EndGlobalSection
	GlobalSection(SolutionProperties) = preSolution
		HideSolutionNode = FALSE
	EndGlobalSection
	GlobalSection(NestedProjects) = preSolution
		{A990658C-CE31-4BCC-976F-0FC6B1AF693D} = {5EA20F54-880A-49F3-99FA-4B3FE54E8AB1}
		{A9D95A91-4DB7-4F72-BEB6-FE8A5C89BFBD} = {5EA20F54-880A-49F3-99FA-4B3FE54E8AB1}
		{C38970C0-5FBF-4D69-90D8-CBAC225AE895} = {5EA20F54-880A-49F3-99FA-4B3FE54E8AB1}
		{F7D32BD0-2749-483E-9A0D-1635EF7E3136} = {5EA20F54-880A-49F3-99FA-4B3FE54E8AB1}
		{DA8B35B3-DA00-4B02-BDE6-6A397B3FD46B} = {5EA20F54-880A-49F3-99FA-4B3FE54E8AB1}
		{FCA38F3C-7C73-4C47-BE4E-32F77FA8538D} = {5EA20F54-880A-49F3-99FA-4B3FE54E8AB1}
		{2049DBE9-8D13-42C9-AE4B-413AE38FFFD0} = {5EA20F54-880A-49F3-99FA-4B3FE54E8AB1}
		{84E05BFA-CBAF-4F0D-BFB6-4CE85742A57E} = {5EA20F54-880A-49F3-99FA-4B3FE54E8AB1}
		{EF074BA1-2D54-4D49-A28E-5E040B47CD2E} = {5EA20F54-880A-49F3-99FA-4B3FE54E8AB1}
		{14B93DC8-FD93-4A6D-81CB-8BC96644501C} = {5EA20F54-880A-49F3-99FA-4B3FE54E8AB1}
	EndGlobalSection
	GlobalSection(ExtensibilityGlobals) = postSolution
		SolutionGuid = {D43FAD39-F619-437D-BB40-04A3982ACB6A}
	EndGlobalSection
EndGlobal
"
`;

exports[`C++ WinUI3 Library: SnapshotApp.vcxproj 1`] = `
"<?xml version=\\"1.0\\" encoding=\\"utf-8\\"?>
<Project ToolsVersion=\\"Current\\" DefaultTargets=\\"Build\\" xmlns=\\"http://schemas.microsoft.com/developer/msbuild/2003\\">
  <Import Project=\\"$(SolutionDir)\\\\ExperimentalFeatures.props\\" Condition=\\"Exists('$(SolutionDir)\\\\ExperimentalFeatures.props')\\" />
  <Import Project=\\"$(SolutionDir)\\\\packages\\\\Microsoft.Windows.CppWinRT.2.0.210312.4\\\\build\\\\native\\\\Microsoft.Windows.CppWinRT.props\\" Condition=\\"Exists('$(SolutionDir)\\\\packages\\\\Microsoft.Windows.CppWinRT.2.0.210312.4\\\\build\\\\native\\\\Microsoft.Windows.CppWinRT.props')\\" />
  <PropertyGroup Label=\\"Globals\\">
    <CppWinRTOptimized>true</CppWinRTOptimized>
    <CppWinRTRootNamespaceAutoMerge>true</CppWinRTRootNamespaceAutoMerge>
    <MinimalCoreWin>true</MinimalCoreWin>
    <ProjectGuid>{f486d393-6a66-4586-a814-ce78aad63bc0}</ProjectGuid>
    <ProjectName>SnapshotApp</ProjectName>
    <RootNamespace>SnapshotApp</RootNamespace>
    <DefaultLanguage>en-US</DefaultLanguage>
    <MinimumVisualStudioVersion>16.0</MinimumVisualStudioVersion>
    <AppContainerApplication>true</AppContainerApplication>
    <ApplicationType>Windows Store</ApplicationType>
    <ApplicationTypeRevision>10.0</ApplicationTypeRevision>
  </PropertyGroup>
  <PropertyGroup Label=\\"ReactNativeWindowsProps\\">
    <ReactNativeWindowsDir Condition=\\"'$(ReactNativeWindowsDir)' == ''\\">$([MSBuild]::GetDirectoryNameOfFileAbove($(SolutionDir), 'node_modules\\\\react-native-windows\\\\package.json'))\\\\node_modules\\\\react-native-windows\\\\</ReactNativeWindowsDir>
  </PropertyGroup>
  <Import Project=\\"$(ReactNativeWindowsDir)\\\\PropertySheets\\\\External\\\\Microsoft.ReactNative.WindowsSdk.Default.props\\" Condition=\\"Exists('$(ReactNativeWindowsDir)\\\\PropertySheets\\\\External\\\\Microsoft.ReactNative.WindowsSdk.Default.props')\\" />
  <PropertyGroup Label=\\"Fallback Windows SDK Versions\\">
    <WindowsTargetPlatformVersion Condition=\\" '$(WindowsTargetPlatformVersion)' == '' \\">10.0.19041.0</WindowsTargetPlatformVersion>
    <WindowsTargetPlatformMinVersion Condition=\\" '$(WindowsTargetPlatformMinVersion)' == '' \\">10.0.15063.0</WindowsTargetPlatformMinVersion>
  </PropertyGroup>
  <Import Project=\\"$(VCTargetsPath)\\\\Microsoft.Cpp.Default.props\\" />
  <ItemGroup Label=\\"ProjectConfigurations\\">
    <ProjectConfiguration Include=\\"Debug|ARM64\\">
      <Configuration>Debug</Configuration>
      <Platform>ARM64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include=\\"Debug|Win32\\">
      <Configuration>Debug</Configuration>
      <Platform>Win32</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include=\\"Debug|x64\\">
      <Configuration>Debug</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include=\\"Release|ARM64\\">
      <Configuration>Release</Configuration>
      <Platform>ARM64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include=\\"Release|Win32\\">
      <Configuration>Release</Configuration>
      <Platform>Win32</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include=\\"Release|x64\\">
      <Configuration>Release</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
  </ItemGroup>
  <PropertyGroup Label=\\"Configuration\\">
    <ConfigurationType>DynamicLibrary</ConfigurationType>
    <CharacterSet>Unicode</CharacterSet>
    <GenerateManifest>false</GenerateManifest>
  </PropertyGroup>
  <PropertyGroup Condition=\\"'$(Configuration)'=='Debug'\\" Label=\\"Configuration\\">
    <UseDebugLibraries>true</UseDebugLibraries>
    <LinkIncremental>true</LinkIncremental>
  </PropertyGroup>
  <PropertyGroup Condition=\\"'$(Configuration)'=='Release'\\" Label=\\"Configuration\\">
    <UseDebugLibraries>false</UseDebugLibraries>
    <WholeProgramOptimization>true</WholeProgramOptimization>
    <LinkIncremental>false</LinkIncremental>
  </PropertyGroup>
  <Import Project=\\"$(VCTargetsPath)\\\\Microsoft.Cpp.props\\" />
  <ImportGroup Label=\\"ExtensionSettings\\"></ImportGroup>
  <ImportGroup Label=\\"PropertySheets\\">
    <Import Project=\\"$(UserRootDir)\\\\Microsoft.Cpp.$(Platform).user.props\\" Condition=\\"exists('$(UserRootDir)\\\\Microsoft.Cpp.$(Platform).user.props')\\" Label=\\"LocalAppDataPlatform\\" />
  </ImportGroup>
  <ImportGroup Label=\\"PropertySheets\\">
    <Import Project=\\"PropertySheet.props\\" />
  </ImportGroup>
  <ImportGroup Label=\\"ReactNativeWindowsPropertySheets\\">
    <Import Project=\\"$(ReactNativeWindowsDir)\\\\PropertySheets\\\\external\\\\Microsoft.ReactNative.Uwp.CppLib.props\\" Condition=\\"Exists('$(ReactNativeWindowsDir)\\\\PropertySheets\\\\External\\\\Microsoft.ReactNative.Uwp.CppLib.props')\\" />
    <Import Project=\\"$(SolutionDir)\\\\packages\\\\$(WinUIPackageProps)\\" Condition=\\"'$(WinUIPackageProps)'!='' And Exists('$(SolutionDir)\\\\packages\\\\$(WinUIPackageProps)')\\" />
  </ImportGroup>

  <PropertyGroup Label=\\"UserMacros\\" />
  <ItemDefinitionGroup>
    <ClCompile>
      <PrecompiledHeader>Use</PrecompiledHeader>
      <PrecompiledHeaderFile>pch.h</PrecompiledHeaderFile>
      <PrecompiledHeaderOutputFile>$(IntDir)pch.pch</PrecompiledHeaderOutputFile>
      <WarningLevel>Level4</WarningLevel>
      <AdditionalOptions>%(AdditionalOptions) /bigobj</AdditionalOptions>
      <DisableSpecificWarnings>4453;28204</DisableSpecificWarnings>
      <PreprocessorDefinitions>_WINRT_DLL;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <AdditionalUsingDirectories>$(WindowsSDK_WindowsMetadata);$(AdditionalUsingDirectories)</AdditionalUsingDirectories>
    </ClCompile>
    <Midl>
      <!-- This allows applications targetting older Windows SDKs (e.g. RNW 0.65 apps) to consume the library generated WinMD -->
      <AdditionalOptions>%(AdditionalOptions) /noattributename</AdditionalOptions>
    </Midl>
    <Link>
      <SubSystem>Console</SubSystem>
      <GenerateWindowsMetadata>true</GenerateWindowsMetadata>
      <ModuleDefinitionFile>SnapshotApp.def</ModuleDefinitionFile>
    </Link>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition=\\"'$(Configuration)'=='Debug'\\">
    <ClCompile>
      <PreprocessorDefinitions>_DEBUG;%(PreprocessorDefinitions)</PreprocessorDefinitions>
    </ClCompile>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition=\\"'$(Configuration)'=='Release'\\">
    <ClCompile>
      <PreprocessorDefinitions>NDEBUG;%(PreprocessorDefinitions)</PreprocessorDefinitions>
    </ClCompile>
  </ItemDefinitionGroup>
  <ItemGroup>
    <ClInclude Include=\\"ReactPackageProvider.h\\">
      <DependentUpon>ReactPackageProvider.idl</DependentUpon>
    </ClInclude>
    <ClInclude Include=\\"ReactNativeModule.h\\" />
    <ClInclude Include=\\"pch.h\\" />
  </ItemGroup>
  <ItemGroup>
    <ClCompile Include=\\"pch.cpp\\">
      <PrecompiledHeader>Create</PrecompiledHeader>
    </ClCompile>
    <ClCompile Include=\\"ReactPackageProvider.cpp\\">
      <DependentUpon>ReactPackageProvider.idl</DependentUpon>
    </ClCompile>
    <ClCompile Include=\\"$(GeneratedFilesDir)module.g.cpp\\" />
  </ItemGroup>
  <ItemGroup>
    <Midl Include=\\"ReactPackageProvider.idl\\" />
  </ItemGroup>
  <ItemGroup>
    <None Include=\\"packages.config\\" />
    <None Include=\\"PropertySheet.props\\" />
  </ItemGroup>
  <Import Project=\\"$(VCTargetsPath)\\\\Microsoft.Cpp.targets\\" />
  <ImportGroup Label=\\"ReactNativeWindowsTargets\\">
    <Import Project=\\"$(ReactNativeWindowsDir)\\\\PropertySheets\\\\External\\\\Microsoft.ReactNative.Uwp.CppLib.targets\\" Condition=\\"Exists('$(ReactNativeWindowsDir)\\\\PropertySheets\\\\External\\\\Microsoft.ReactNative.Uwp.CppLib.targets')\\" />
  </ImportGroup>
  <Target Name=\\"EnsureReactNativeWindowsTargets\\" BeforeTargets=\\"PrepareForBuild\\">
    <PropertyGroup>
      <ErrorText>This project references targets in your node_modules\\\\react-native-windows folder that are missing. The missing file is {0}.</ErrorText>
    </PropertyGroup>
    <Error Condition=\\"!Exists('$(ReactNativeWindowsDir)\\\\PropertySheets\\\\External\\\\Microsoft.ReactNative.Uwp.CppLib.props')\\" Text=\\"$([System.String]::Format('$(ErrorText)', '$(ReactNativeWindowsDir)\\\\PropertySheets\\\\External\\\\Microsoft.ReactNative.Uwp.CppLib.props'))\\" />
    <Error Condition=\\"!Exists('$(ReactNativeWindowsDir)\\\\PropertySheets\\\\External\\\\Microsoft.ReactNative.Uwp.CppLib.targets')\\" Text=\\"$([System.String]::Format('$(ErrorText)', '$(ReactNativeWindowsDir)\\\\PropertySheets\\\\External\\\\Microsoft.ReactNative.Uwp.CppLib.targets'))\\" />
  </Target>
  <ImportGroup Label=\\"ExtensionTargets\\">
    <Import Project=\\"$(SolutionDir)\\\\packages\\\\Microsoft.Windows.CppWinRT.2.0.210312.4\\\\build\\\\native\\\\Microsoft.Windows.CppWinRT.targets\\" Condition=\\"Exists('$(SolutionDir)\\\\packages\\\\Microsoft.Windows.CppWinRT.2.0.210312.4\\\\build\\\\native\\\\Microsoft.Windows.CppWinRT.targets')\\" />
    <Import Project=\\"$(SolutionDir)\\\\packages\\\\ReactNative.Hermes.Windows.0.9.0-ms.6\\\\build\\\\native\\\\ReactNative.Hermes.Windows.targets\\" Condition=\\"Exists('$(SolutionDir)\\\\packages\\\\ReactNative.Hermes.Windows.0.9.0-ms.6\\\\build\\\\native\\\\ReactNative.Hermes.Windows.targets')\\" />
    <Import Project=\\"$(SolutionDir)\\\\packages\\\\$(WinUIPackageName).$(WinUIPackageVersion)\\\\build\\\\native\\\\$(WinUIPackageName).targets\\" Condition=\\"Exists('$(SolutionDir)\\\\packages\\\\$(WinUIPackageName).$(WinUIPackageVersion)\\\\build\\\\native\\\\$(WinUIPackageName).targets')\\" />
  </ImportGroup>
  <Target Name=\\"EnsureNuGetPackageBuildImports\\" BeforeTargets=\\"PrepareForBuild\\">
    <PropertyGroup>
      <ErrorText>This project references NuGet package(s) that are missing on this computer. Use NuGet Package Restore to download them.  For more information, see http://go.microsoft.com/fwlink/?LinkID=322105. The missing file is {0}.</ErrorText>
    </PropertyGroup>
    <Error Condition=\\"!Exists('$(SolutionDir)\\\\packages\\\\Microsoft.Windows.CppWinRT.2.0.210312.4\\\\build\\\\native\\\\Microsoft.Windows.CppWinRT.props')\\" Text=\\"$([System.String]::Format('$(ErrorText)', '$(SolutionDir)\\\\packages\\\\Microsoft.Windows.CppWinRT.2.0.210312.4\\\\build\\\\native\\\\Microsoft.Windows.CppWinRT.props'))\\" />
    <Error Condition=\\"!Exists('$(SolutionDir)\\\\packages\\\\Microsoft.Windows.CppWinRT.2.0.210312.4\\\\build\\\\native\\\\Microsoft.Windows.CppWinRT.targets')\\" Text=\\"$([System.String]::Format('$(ErrorText)', '$(SolutionDir)\\\\packages\\\\Microsoft.Windows.CppWinRT.2.0.210312.4\\\\build\\\\native\\\\Microsoft.Windows.CppWinRT.targets'))\\" />
    <Error Condition=\\"!Exists('$(SolutionDir)\\\\packages\\\\ReactNative.Hermes.Windows.0.9.0-ms.6\\\\build\\\\native\\\\ReactNative.Hermes.Windows.targets')\\" Text=\\"$([System.String]::Format('$(ErrorText)', '$(SolutionDir)\\\\packages\\\\ReactNative.Hermes.Windows.0.9.0-ms.6\\\\build\\\\native\\\\ReactNative.Hermes.Windows.targets'))\\" />
    <Error Condition=\\"!Exists('$(SolutionDir)\\\\packages\\\\$(WinUIPackageName).$(WinUIPackageVersion)\\\\build\\\\native\\\\$(WinUIPackageName).targets')\\" Text=\\"$([System.String]::Format('$(ErrorText)', '$(SolutionDir)\\\\packages\\\\$(WinUIPackageName).$(WinUIPackageVersion)\\\\build\\\\native\\\\$(WinUIPackageName).targets'))\\" />
  </Target>
</Project>
"
`;

exports[`C++ WinUI3 Library: SnapshotApp.vcxproj.filters 1`] = `
"﻿<?xml version=\\"1.0\\" encoding=\\"utf-8\\"?>
<Project ToolsVersion=\\"Current\\" xmlns=\\"http://schemas.microsoft.com/developer/msbuild/2003\\">
  <ItemGroup>
    <Midl Include=\\"ReactPackageProvider.idl\\" />
  </ItemGroup>
  <ItemGroup>
    <ClCompile Include=\\"pch.cpp\\" />
    <ClCompile Include=\\"$(GeneratedFilesDir)module.g.cpp\\" />
    <ClCompile Include=\\"ReactPackageProvider.cpp\\" />
  </ItemGroup>
  <ItemGroup>
    <ClInclude Include=\\"pch.h\\" />
    <ClInclude Include=\\"ReactPackageProvider.h\\" />
    <ClInclude Include=\\"ReactNativeModule.h\\" />
  </ItemGroup>
  <ItemGroup>
    <None Include=\\"PropertySheet.props\\" />
    <None Include=\\"packages.config\\" />
  </ItemGroup>
</Project>"
`;

exports[`C++ WinUI3 Library: packages.config 1`] = `
"﻿<?xml version=\\"1.0\\" encoding=\\"utf-8\\"?>
<packages>
  <package id=\\"Microsoft.Windows.CppWinRT\\" version=\\"2.0.210312.4\\" targetFramework=\\"native\\" />
  <package id=\\"ReactNative.Hermes.Windows\\" version=\\"0.9.0-ms.6\\" targetFramework=\\"native\\" />
  <package id=\\"Microsoft.WinUI\\" version=\\"3.0.0-preview4.210210.4\\" targetFramework=\\"native\\" />
</packages>"
`;

exports[`C++ WinUI3 Library: pch.cpp 1`] = `
"﻿#include \\"pch.h\\"
"
`;

exports[`C++ WinUI3 Library: pch.h 1`] = `
"#pragma once

#define NOMINMAX

#include <hstring.h>
#include <restrictederrorinfo.h>
#include <unknwn.h>
#include <windows.h>
#include <CppWinRTIncludes.h>
#if __has_include(<VersionMacros.h>)
  #include <VersionMacros.h>
#endif

#include <winrt/Microsoft.ReactNative.h>

#include <winrt/Microsoft.UI.Xaml.Automation.Peers.h>
#include <winrt/Microsoft.UI.Xaml.Controls.Primitives.h>
#include <winrt/Microsoft.UI.Xaml.Controls.h>
#include <winrt/Microsoft.UI.Xaml.Media.h>
#include <winrt/Microsoft.UI.Xaml.XamlTypeInfo.h>
using namespace winrt::Windows::Foundation;
"
`;

exports[`C++ WinUI3+Hermes Application: App.cpp 1`] = `
"#include \\"pch.h\\"

#include \\"App.h\\"

#include \\"AutolinkedNativeModules.g.h\\"
#include \\"ReactPackageProvider.h\\"

using namespace winrt;
using namespace xaml;
using namespace xaml::Controls;
using namespace xaml::Navigation;

using namespace Windows::ApplicationModel;
namespace winrt::SnapshotApp::implementation
{
/// <summary>
/// Initializes the singleton application object.  This is the first line of
/// authored code executed, and as such is the logical equivalent of main() or
/// WinMain().
/// </summary>
App::App() noexcept
{
#if BUNDLE
    JavaScriptBundleFile(L\\"index.windows\\");
    InstanceSettings().UseWebDebugger(false);
    InstanceSettings().UseFastRefresh(false);
#else
    JavaScriptBundleFile(L\\"index\\");
    InstanceSettings().UseWebDebugger(true);
    InstanceSettings().UseFastRefresh(true);
#endif

#if _DEBUG
    InstanceSettings().UseDeveloperSupport(true);
#else
    InstanceSettings().UseDeveloperSupport(false);
#endif

    RegisterAutolinkedNativeModulePackages(PackageProviders()); // Includes any autolinked modules

    PackageProviders().Append(make<ReactPackageProvider>()); // Includes all modules in this project

    InitializeComponent();
}

/// <summary>
/// Invoked when the application is launched normally by the end user.  Other entry points
/// will be used such as when the application is launched to open a specific file.
/// </summary>
/// <param name=\\"e\\">Details about the launch request and process.</param>
void App::OnLaunched(activation::LaunchActivatedEventArgs const& e)
{
    super::OnLaunched(e);

    Frame rootFrame = Window::Current().Content().as<Frame>();
    rootFrame.Navigate(xaml_typename<MainPage>(), box_value(e.Arguments()));
}

/// <summary>
/// Invoked when the application is activated by some means other than normal launching.
/// </summary>
void App::OnActivated(Activation::IActivatedEventArgs const &e) {
  auto preActivationContent = Window::Current().Content();
  super::OnActivated(e);
  if (!preActivationContent && Window::Current()) {
    Frame rootFrame = Window::Current().Content().as<Frame>();
    rootFrame.Navigate(xaml_typename<MainPage>(), nullptr);
  }
}

/// <summary>
/// Invoked when application execution is being suspended.  Application state is saved
/// without knowing whether the application will be terminated or resumed with the contents
/// of memory still intact.
/// </summary>
/// <param name=\\"sender\\">The source of the suspend request.</param>
/// <param name=\\"e\\">Details about the suspend request.</param>
void App::OnSuspending([[maybe_unused]] IInspectable const& sender, [[maybe_unused]] SuspendingEventArgs const& e)
{
    // Save application state and stop any background activity
}

/// <summary>
/// Invoked when Navigation to a certain page fails
/// </summary>
/// <param name=\\"sender\\">The Frame which failed navigation</param>
/// <param name=\\"e\\">Details about the navigation failure</param>
void App::OnNavigationFailed(IInspectable const&, NavigationFailedEventArgs const& e)
{
    throw hresult_error(E_FAIL, hstring(L\\"Failed to load Page \\") + e.SourcePageType().Name);
}

} // namespace winrt::SnapshotApp::implementation
"
`;

exports[`C++ WinUI3+Hermes Application: App.h 1`] = `
"#pragma once

#include \\"App.xaml.g.h\\"

#include <CppWinRTIncludes.h>

#ifdef USE_WINUI3
namespace activation = winrt::Microsoft::UI::Xaml;
#else
namespace activation = winrt::Windows::ApplicationModel::Activation;
#endif

namespace winrt::SnapshotApp::implementation
{
    struct App : AppT<App>
    {
        App() noexcept;
        void OnLaunched(activation::LaunchActivatedEventArgs const&);
        void OnActivated(Windows::ApplicationModel::Activation::IActivatedEventArgs const &e);
        void OnSuspending(IInspectable const&, Windows::ApplicationModel::SuspendingEventArgs const&);
        void OnNavigationFailed(IInspectable const&, xaml::Navigation::NavigationFailedEventArgs const&);
      private:
        using super = AppT<App>;
    };
} // namespace winrt::SnapshotApp::implementation
"
`;

exports[`C++ WinUI3+Hermes Application: App.idl 1`] = `
"namespace SnapshotApp
{
}
"
`;

exports[`C++ WinUI3+Hermes Application: App.xaml 1`] = `
"﻿<react:ReactApplication
    x:Class=\\"SnapshotApp.App\\"
    xmlns=\\"http://schemas.microsoft.com/winfx/2006/xaml/presentation\\"
    xmlns:x=\\"http://schemas.microsoft.com/winfx/2006/xaml\\"
    xmlns:local=\\"using:SnapshotApp\\"
    xmlns:react=\\"using:Microsoft.ReactNative\\">
    <Application.Resources>
        <XamlControlsResources xmlns=\\"using:Microsoft.UI.Xaml.Controls\\" />
    </Application.Resources>
</react:ReactApplication>
"
`;

exports[`C++ WinUI3+Hermes Application: AutolinkedNativeModules.g.cpp 1`] = `
"// AutolinkedNativeModules.g.cpp contents generated by \\"react-native autolink-windows\\"
// clang-format off
#include \\"pch.h\\"
#include \\"AutolinkedNativeModules.g.h\\"

namespace winrt::Microsoft::ReactNative
{

void RegisterAutolinkedNativeModulePackages(winrt::Windows::Foundation::Collections::IVector<winrt::Microsoft::ReactNative::IReactPackageProvider> const& packageProviders)
{ 
    UNREFERENCED_PARAMETER(packageProviders);
}

}
"
`;

exports[`C++ WinUI3+Hermes Application: AutolinkedNativeModules.g.h 1`] = `
"// AutolinkedNativeModules.g.h contents generated by \\"react-native autolink-windows\\"
// clang-format off
#pragma once

namespace winrt::Microsoft::ReactNative
{

void RegisterAutolinkedNativeModulePackages(winrt::Windows::Foundation::Collections::IVector<winrt::Microsoft::ReactNative::IReactPackageProvider> const& packageProviders);

}
"
`;

exports[`C++ WinUI3+Hermes Application: AutolinkedNativeModules.g.props 1`] = `
"<?xml version=\\"1.0\\" encoding=\\"utf-8\\"?>
<Project xmlns=\\"http://schemas.microsoft.com/developer/msbuild/2003\\">
  <!-- AutolinkedNativeModules.g.props contents generated by \\"react-native autolink-windows\\" -->
  <PropertyGroup>
  </PropertyGroup>
</Project>
"
`;

exports[`C++ WinUI3+Hermes Application: AutolinkedNativeModules.g.targets 1`] = `
"<?xml version=\\"1.0\\" encoding=\\"utf-8\\"?>
<Project xmlns=\\"http://schemas.microsoft.com/developer/msbuild/2003\\">
  <!-- AutolinkedNativeModules.g.targets contents generated by \\"react-native autolink-windows\\" -->
  <ItemGroup>
  </ItemGroup>
</Project>
"
`;

exports[`C++ WinUI3+Hermes Application: ExperimentalFeatures.props 1`] = `
"<?xml version=\\"1.0\\" encoding=\\"utf-8\\"?>
<Project xmlns=\\"http://schemas.microsoft.com/developer/msbuild/2003\\">

  <!--
    This file contains some important settings that will apply globally for
    your app and *all* native modules your app consumes. These values were
    set when you created the app project, and in some cases cannot be
    simply changed here without recreating a new project.
  -->

  <PropertyGroup Label=\\"Microsoft.ReactNative Experimental Features\\">
    <!--
      Enables default usage of Hermes.
      
      See https://microsoft.github.io/react-native-windows/docs/hermes
    -->
    <UseHermes>true</UseHermes>

    <!--
      Changes compilation to assume use of WinUI 3 instead of System XAML.
      Requires creation of new project.

      See https://microsoft.github.io/react-native-windows/docs/winui3
    -->
    <UseWinUI3>true</UseWinUI3>

    <!--
      Changes compilation to assume use of Microsoft.ReactNative NuGet packages
      instead of building the framework from source.
      Requires creation of new project.

      See https://microsoft.github.io/react-native-windows/docs/nuget
    -->
    <UseExperimentalNuget>false</UseExperimentalNuget>
  
  </PropertyGroup>

</Project>
"
`;

exports[`C++ WinUI3+Hermes Application: MainPage.cpp 1`] = `
"﻿#include \\"pch.h\\"
#include \\"MainPage.h\\"
#if __has_include(\\"MainPage.g.cpp\\")
#include \\"MainPage.g.cpp\\"
#endif

#include \\"App.h\\"

using namespace winrt;
using namespace xaml;

namespace winrt::SnapshotApp::implementation
{
    MainPage::MainPage()
    {
        InitializeComponent();
        auto app = Application::Current().as<App>();
        ReactRootView().ReactNativeHost(app->Host());
    }
}
"
`;

exports[`C++ WinUI3+Hermes Application: MainPage.h 1`] = `
"﻿#pragma once
#include \\"MainPage.g.h\\"
#include <winrt/Microsoft.ReactNative.h>

namespace winrt::SnapshotApp::implementation
{
    struct MainPage : MainPageT<MainPage>
    {
        MainPage();
    };
}

namespace winrt::SnapshotApp::factory_implementation
{
    struct MainPage : MainPageT<MainPage, implementation::MainPage>
    {
    };
}

"
`;

exports[`C++ WinUI3+Hermes Application: MainPage.idl 1`] = `
"#include \\"NamespaceRedirect.h\\"

namespace SnapshotApp
{
    [default_interface]
    runtimeclass MainPage : XAML_NAMESPACE.Controls.Page
    {
        MainPage();
    }
}
"
`;

exports[`C++ WinUI3+Hermes Application: MainPage.xaml 1`] = `
"<Page
    x:Class=\\"SnapshotApp.MainPage\\"
    xmlns=\\"http://schemas.microsoft.com/winfx/2006/xaml/presentation\\"
    xmlns:x=\\"http://schemas.microsoft.com/winfx/2006/xaml\\"
    xmlns:local=\\"using:SnapshotApp\\"
    xmlns:react=\\"using:Microsoft.ReactNative\\"
    xmlns:d=\\"http://schemas.microsoft.com/expression/blend/2008\\"
    xmlns:mc=\\"http://schemas.openxmlformats.org/markup-compatibility/2006\\"
    mc:Ignorable=\\"d\\"
    Background=\\"{ThemeResource ApplicationPageBackgroundThemeBrush}\\">
    <react:ReactRootView 
        x:Name=\\"ReactRootView\\"
        ComponentName=\\"SnapshotApp\\"
        Background=\\"{ThemeResource ApplicationPageBackgroundThemeBrush}\\"
        MinHeight=\\"400\\"/>
</Page>
"
`;

exports[`C++ WinUI3+Hermes Application: NuGet.Config 1`] = `
"<?xml version=\\"1.0\\" encoding=\\"utf-8\\"?>
<configuration>
  <config>
    <add key=\\"repositoryPath\\" value=\\"packages\\" />
  </config>
  <packageSources>
    <clear />
    <add key=\\"react-native\\" value=\\"https://pkgs.dev.azure.com/ms/react-native/_packaging/react-native-public/nuget/v3/index.json\\" />
    <add key=\\"Nuget.org\\" value=\\"https://api.nuget.org/v3/index.json\\" />
  </packageSources>
  <disabledPackageSources>
    <clear />
  </disabledPackageSources>  
</configuration>
"
`;

exports[`C++ WinUI3+Hermes Application: Package.appxmanifest 1`] = `
"﻿<?xml version=\\"1.0\\" encoding=\\"utf-8\\"?>

<Package
  xmlns=\\"http://schemas.microsoft.com/appx/manifest/foundation/windows10\\"
  xmlns:mp=\\"http://schemas.microsoft.com/appx/2014/phone/manifest\\"
  xmlns:uap=\\"http://schemas.microsoft.com/appx/manifest/uap/windows10\\"
  IgnorableNamespaces=\\"uap mp\\">

  <Identity
    Name=\\"6eb7c04a-b41b-4da7-afe0-b3f45e2020c5\\"
    Publisher=\\"CN=nickg\\"
    Version=\\"1.0.0.0\\" />

  <mp:PhoneIdentity PhoneProductId=\\"6eb7c04a-b41b-4da7-afe0-b3f45e2020c5\\" PhonePublisherId=\\"00000000-0000-0000-0000-000000000000\\"/>

  <Properties>
    <DisplayName>SnapshotApp</DisplayName>
    <PublisherDisplayName>nickg</PublisherDisplayName>
    <Logo>Assets\\\\StoreLogo.png</Logo>
  </Properties>

  <Dependencies>
    <TargetDeviceFamily Name=\\"Windows.Universal\\" MinVersion=\\"10.0.0.0\\" MaxVersionTested=\\"10.0.0.0\\" />
  </Dependencies>

  <Resources>
    <Resource Language=\\"x-generate\\"/>
  </Resources>

  <Applications>
    <Application
      Id=\\"App\\"
      Executable=\\"$targetnametoken$.exe\\"
      EntryPoint=\\"SnapshotApp.App\\">
      <uap:VisualElements
        DisplayName=\\"SnapshotApp\\"
        Square150x150Logo=\\"Assets\\\\Square150x150Logo.png\\"
        Square44x44Logo=\\"Assets\\\\Square44x44Logo.png\\"
        Description=\\"SnapshotApp\\"
        BackgroundColor=\\"transparent\\">
        <uap:DefaultTile Wide310x150Logo=\\"Assets\\\\Wide310x150Logo.png\\"/>
        <uap:SplashScreen Image=\\"Assets\\\\SplashScreen.png\\" />
      </uap:VisualElements>
    </Application>
  </Applications>

  <Capabilities>
    <Capability Name=\\"internetClient\\" />
  </Capabilities>
</Package>"
`;

exports[`C++ WinUI3+Hermes Application: PropertySheet.props 1`] = `
"<?xml version=\\"1.0\\" encoding=\\"utf-8\\"?>
<Project ToolsVersion=\\"Current\\" xmlns=\\"http://schemas.microsoft.com/developer/msbuild/2003\\">
  <ImportGroup Label=\\"PropertySheets\\" />
  <PropertyGroup Label=\\"UserMacros\\" />
  <!--
    To customize common C++/WinRT project properties:
    * right-click the project node
    * expand the Common Properties item
    * select the C++/WinRT property page

    For more advanced scenarios, and complete documentation, please see:
    https://github.com/Microsoft/xlang/tree/master/src/package/cppwinrt/nuget
    -->
  <PropertyGroup />
  <ItemDefinitionGroup />
</Project>"
`;

exports[`C++ WinUI3+Hermes Application: ReactPackageProvider.cpp 1`] = `
"#include \\"pch.h\\"
#include \\"ReactPackageProvider.h\\"
#include \\"NativeModules.h\\"

using namespace winrt::Microsoft::ReactNative;

namespace winrt::SnapshotApp::implementation
{

void ReactPackageProvider::CreatePackage(IReactPackageBuilder const &packageBuilder) noexcept
{
    AddAttributedModules(packageBuilder);
}

} // namespace winrt::SnapshotApp::implementation
"
`;

exports[`C++ WinUI3+Hermes Application: ReactPackageProvider.h 1`] = `
"#pragma once

#include \\"winrt/Microsoft.ReactNative.h\\"

namespace winrt::SnapshotApp::implementation
{
    struct ReactPackageProvider : winrt::implements<ReactPackageProvider, winrt::Microsoft::ReactNative::IReactPackageProvider>
    {
    public: // IReactPackageProvider
        void CreatePackage(winrt::Microsoft::ReactNative::IReactPackageBuilder const &packageBuilder) noexcept;
    };
} // namespace winrt::SnapshotApp::implementation

"
`;

exports[`C++ WinUI3+Hermes Application: SnapshotApp.sln 1`] = `
"﻿
Microsoft Visual Studio Solution File, Format Version 12.00
# Visual Studio Version 16
VisualStudioVersion = 16.0.29215.179
MinimumVisualStudioVersion = 10.0.40219.1
Project(\\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\\") = \\"SnapshotApp\\", \\"SnapshotApp\\\\SnapshotApp.vcxproj\\", \\"{CF18A370-D8C8-4676-A774-0D6B2DE07447}\\"
	ProjectSection(ProjectDependencies) = postProject
		{F7D32BD0-2749-483E-9A0D-1635EF7E3136} = {F7D32BD0-2749-483E-9A0D-1635EF7E3136}
	EndProjectSection
EndProject
Project(\\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\\") = \\"Folly\\", \\"..\\\\node_modules\\\\react-native-windows\\\\Folly\\\\Folly.vcxproj\\", \\"{A990658C-CE31-4BCC-976F-0FC6B1AF693D}\\"
EndProject
Project(\\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\\") = \\"fmt\\", \\"..\\\\node_modules\\\\react-native-windows\\\\fmt\\\\fmt.vcxproj\\", \\"{14B93DC8-FD93-4A6D-81CB-8BC96644501C}\\"
EndProject
Project(\\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\\") = \\"ReactCommon\\", \\"..\\\\node_modules\\\\react-native-windows\\\\ReactCommon\\\\ReactCommon.vcxproj\\", \\"{A9D95A91-4DB7-4F72-BEB6-FE8A5C89BFBD}\\"
	ProjectSection(ProjectDependencies) = postProject
		{A990658C-CE31-4BCC-976F-0FC6B1AF693D} = {A990658C-CE31-4BCC-976F-0FC6B1AF693D}
	EndProjectSection
EndProject
Project(\\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\\") = \\"Chakra\\", \\"..\\\\node_modules\\\\react-native-windows\\\\Chakra\\\\Chakra.vcxitems\\", \\"{C38970C0-5FBF-4D69-90D8-CBAC225AE895}\\"
EndProject
Project(\\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\\") = \\"Microsoft.ReactNative\\", \\"..\\\\node_modules\\\\react-native-windows\\\\Microsoft.ReactNative\\\\Microsoft.ReactNative.vcxproj\\", \\"{F7D32BD0-2749-483E-9A0D-1635EF7E3136}\\"
EndProject
Project(\\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\\") = \\"Microsoft.ReactNative.Cxx\\", \\"..\\\\node_modules\\\\react-native-windows\\\\Microsoft.ReactNative.Cxx\\\\Microsoft.ReactNative.Cxx.vcxitems\\", \\"{DA8B35B3-DA00-4B02-BDE6-6A397B3FD46B}\\"
EndProject
Project(\\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\\") = \\"Common\\", \\"..\\\\node_modules\\\\react-native-windows\\\\Common\\\\Common.vcxproj\\", \\"{FCA38F3C-7C73-4C47-BE4E-32F77FA8538D}\\"
EndProject
Project(\\"{2150E333-8FDC-42A3-9474-1A3956D46DE8}\\") = \\"ReactNative\\", \\"ReactNative\\", \\"{5EA20F54-880A-49F3-99FA-4B3FE54E8AB1}\\"
EndProject
Project(\\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\\") = \\"Microsoft.ReactNative.Shared\\", \\"..\\\\node_modules\\\\react-native-windows\\\\Shared\\\\Shared.vcxitems\\", \\"{2049DBE9-8D13-42C9-AE4B-413AE38FFFD0}\\"
EndProject
Project(\\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\\") = \\"Mso\\", \\"..\\\\node_modules\\\\react-native-windows\\\\Mso\\\\Mso.vcxitems\\", \\"{84E05BFA-CBAF-4F0D-BFB6-4CE85742A57E}\\"
EndProject
Project(\\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\\") = \\"Include\\", \\"..\\\\node_modules\\\\react-native-windows\\\\include\\\\Include.vcxitems\\", \\"{EF074BA1-2D54-4D49-A28E-5E040B47CD2E}\\"
EndProject
Global
	GlobalSection(SharedMSBuildProjectFiles) = preSolution
		..\\\\node_modules\\\\react-native-windows\\\\Shared\\\\Shared.vcxitems*{2049dbe9-8d13-42c9-ae4b-413ae38fffd0}*SharedItemsImports = 9
		..\\\\node_modules\\\\react-native-windows\\\\Mso\\\\Mso.vcxitems*{84e05bfa-cbaf-4f0d-bfb6-4ce85742a57e}*SharedItemsImports = 9
		..\\\\node_modules\\\\react-native-windows\\\\Chakra\\\\Chakra.vcxitems*{c38970c0-5fbf-4d69-90d8-cbac225ae895}*SharedItemsImports = 9
		..\\\\node_modules\\\\react-native-windows\\\\Microsoft.ReactNative.Cxx\\\\Microsoft.ReactNative.Cxx.vcxitems*{da8b35b3-da00-4b02-bde6-6a397b3fd46b}*SharedItemsImports = 9
		..\\\\node_modules\\\\react-native-windows\\\\include\\\\Include.vcxitems*{ef074ba1-2d54-4d49-a28e-5e040b47cd2e}*SharedItemsImports = 9
		..\\\\node_modules\\\\react-native-windows\\\\Chakra\\\\Chakra.vcxitems*{f7d32bd0-2749-483e-9a0d-1635ef7e3136}*SharedItemsImports = 4
		..\\\\node_modules\\\\react-native-windows\\\\Microsoft.ReactNative.Cxx\\\\Microsoft.ReactNative.Cxx.vcxitems*{f7d32bd0-2749-483e-9a0d-1635ef7e3136}*SharedItemsImports = 4
		..\\\\node_modules\\\\react-native-windows\\\\Mso\\\\Mso.vcxitems*{f7d32bd0-2749-483e-9a0d-1635ef7e3136}*SharedItemsImports = 4
		..\\\\node_modules\\\\react-native-windows\\\\Shared\\\\Shared.vcxitems*{f7d32bd0-2749-483e-9a0d-1635ef7e3136}*SharedItemsImports = 4
	EndGlobalSection
	GlobalSection(SolutionConfigurationPlatforms) = preSolution
		Debug|ARM64 = Debug|ARM64
		Debug|x64 = Debug|x64
		Debug|x86 = Debug|x86
		Release|ARM64 = Release|ARM64
		Release|x64 = Release|x64
		Release|x86 = Release|x86
	EndGlobalSection
	GlobalSection(ProjectConfigurationPlatforms) = postSolution
		{CF18A370-D8C8-4676-A774-0D6B2DE07447}.Debug|ARM64.ActiveCfg = Debug|ARM64
		{CF18A370-D8C8-4676-A774-0D6B2DE07447}.Debug|ARM64.Build.0 = Debug|ARM64
		{CF18A370-D8C8-4676-A774-0D6B2DE07447}.Debug|ARM64.Deploy.0 = Debug|ARM64
		{CF18A370-D8C8-4676-A774-0D6B2DE07447}.Debug|x64.ActiveCfg = Debug|x64
		{CF18A370-D8C8-4676-A774-0D6B2DE07447}.Debug|x64.Build.0 = Debug|x64
		{CF18A370-D8C8-4676-A774-0D6B2DE07447}.Debug|x64.Deploy.0 = Debug|x64
		{CF18A370-D8C8-4676-A774-0D6B2DE07447}.Debug|x86.ActiveCfg = Debug|Win32
		{CF18A370-D8C8-4676-A774-0D6B2DE07447}.Debug|x86.Build.0 = Debug|Win32
		{CF18A370-D8C8-4676-A774-0D6B2DE07447}.Debug|x86.Deploy.0 = Debug|Win32
		{CF18A370-D8C8-4676-A774-0D6B2DE07447}.Release|ARM64.ActiveCfg = Release|ARM64
		{CF18A370-D8C8-4676-A774-0D6B2DE07447}.Release|ARM64.Build.0 = Release|ARM64
		{CF18A370-D8C8-4676-A774-0D6B2DE07447}.Release|ARM64.Deploy.0 = Release|ARM64
		{CF18A370-D8C8-4676-A774-0D6B2DE07447}.Release|x64.ActiveCfg = Release|x64
		{CF18A370-D8C8-4676-A774-0D6B2DE07447}.Release|x64.Build.0 = Release|x64
		{CF18A370-D8C8-4676-A774-0D6B2DE07447}.Release|x64.Deploy.0 = Release|x64
		{CF18A370-D8C8-4676-A774-0D6B2DE07447}.Release|x86.ActiveCfg = Release|Win32
		{CF18A370-D8C8-4676-A774-0D6B2DE07447}.Release|x86.Build.0 = Release|Win32
		{CF18A370-D8C8-4676-A774-0D6B2DE07447}.Release|x86.Deploy.0 = Release|Win32
		{A990658C-CE31-4BCC-976F-0FC6B1AF693D}.Debug|ARM64.ActiveCfg = Debug|ARM64
		{A990658C-CE31-4BCC-976F-0FC6B1AF693D}.Debug|ARM64.Build.0 = Debug|ARM64
		{A990658C-CE31-4BCC-976F-0FC6B1AF693D}.Debug|x64.ActiveCfg = Debug|x64
		{A990658C-CE31-4BCC-976F-0FC6B1AF693D}.Debug|x64.Build.0 = Debug|x64
		{A990658C-CE31-4BCC-976F-0FC6B1AF693D}.Debug|x86.ActiveCfg = Debug|Win32
		{A990658C-CE31-4BCC-976F-0FC6B1AF693D}.Debug|x86.Build.0 = Debug|Win32
		{A990658C-CE31-4BCC-976F-0FC6B1AF693D}.Release|ARM64.ActiveCfg = Release|ARM64
		{A990658C-CE31-4BCC-976F-0FC6B1AF693D}.Release|ARM64.Build.0 = Release|ARM64
		{A990658C-CE31-4BCC-976F-0FC6B1AF693D}.Release|x64.ActiveCfg = Release|x64
		{A990658C-CE31-4BCC-976F-0FC6B1AF693D}.Release|x64.Build.0 = Release|x64
		{A990658C-CE31-4BCC-976F-0FC6B1AF693D}.Release|x86.ActiveCfg = Release|Win32
		{A990658C-CE31-4BCC-976F-0FC6B1AF693D}.Release|x86.Build.0 = Release|Win32
		{A9D95A91-4DB7-4F72-BEB6-FE8A5C89BFBD}.Debug|ARM64.ActiveCfg = Debug|ARM64
		{A9D95A91-4DB7-4F72-BEB6-FE8A5C89BFBD}.Debug|ARM64.Build.0 = Debug|ARM64
		{A9D95A91-4DB7-4F72-BEB6-FE8A5C89BFBD}.Debug|x64.ActiveCfg = Debug|x64
		{A9D95A91-4DB7-4F72-BEB6-FE8A5C89BFBD}.Debug|x64.Build.0 = Debug|x64
		{A9D95A91-4DB7-4F72-BEB6-FE8A5C89BFBD}.Debug|x86.ActiveCfg = Debug|Win32
		{A9D95A91-4DB7-4F72-BEB6-FE8A5C89BFBD}.Debug|x86.Build.0 = Debug|Win32
		{A9D95A91-4DB7-4F72-BEB6-FE8A5C89BFBD}.Release|ARM64.ActiveCfg = Release|ARM64
		{A9D95A91-4DB7-4F72-BEB6-FE8A5C89BFBD}.Release|ARM64.Build.0 = Release|ARM64
		{A9D95A91-4DB7-4F72-BEB6-FE8A5C89BFBD}.Release|x64.ActiveCfg = Release|x64
		{A9D95A91-4DB7-4F72-BEB6-FE8A5C89BFBD}.Release|x64.Build.0 = Release|x64
		{A9D95A91-4DB7-4F72-BEB6-FE8A5C89BFBD}.Release|x86.ActiveCfg = Release|Win32
		{A9D95A91-4DB7-4F72-BEB6-FE8A5C89BFBD}.Release|x86.Build.0 = Release|Win32
		{F7D32BD0-2749-483E-9A0D-1635EF7E3136}.Debug|ARM64.ActiveCfg = Debug|ARM64
		{F7D32BD0-2749-483E-9A0D-1635EF7E3136}.Debug|ARM64.Build.0 = Debug|ARM64
		{F7D32BD0-2749-483E-9A0D-1635EF7E3136}.Debug|x64.ActiveCfg = Debug|x64
		{F7D32BD0-2749-483E-9A0D-1635EF7E3136}.Debug|x64.Build.0 = Debug|x64
		{F7D32BD0-2749-483E-9A0D-1635EF7E3136}.Debug|x86.ActiveCfg = Debug|Win32
		{F7D32BD0-2749-483E-9A0D-1635EF7E3136}.Debug|x86.Build.0 = Debug|Win32
		{F7D32BD0-2749-483E-9A0D-1635EF7E3136}.Release|ARM64.ActiveCfg = Release|ARM64
		{F7D32BD0-2749-483E-9A0D-1635EF7E3136}.Release|ARM64.Build.0 = Release|ARM64
		{F7D32BD0-2749-483E-9A0D-1635EF7E3136}.Release|x64.ActiveCfg = Release|x64
		{F7D32BD0-2749-483E-9A0D-1635EF7E3136}.Release|x64.Build.0 = Release|x64
		{F7D32BD0-2749-483E-9A0D-1635EF7E3136}.Release|x86.ActiveCfg = Release|Win32
		{F7D32BD0-2749-483E-9A0D-1635EF7E3136}.Release|x86.Build.0 = Release|Win32
		{FCA38F3C-7C73-4C47-BE4E-32F77FA8538D}.Debug|ARM64.ActiveCfg = Debug|ARM64
		{FCA38F3C-7C73-4C47-BE4E-32F77FA8538D}.Debug|ARM64.Build.0 = Debug|ARM64
		{FCA38F3C-7C73-4C47-BE4E-32F77FA8538D}.Debug|x64.ActiveCfg = Debug|x64
		{FCA38F3C-7C73-4C47-BE4E-32F77FA8538D}.Debug|x64.Build.0 = Debug|x64
		{FCA38F3C-7C73-4C47-BE4E-32F77FA8538D}.Debug|x86.ActiveCfg = Debug|Win32
		{FCA38F3C-7C73-4C47-BE4E-32F77FA8538D}.Debug|x86.Build.0 = Debug|Win32
		{FCA38F3C-7C73-4C47-BE4E-32F77FA8538D}.Release|ARM64.ActiveCfg = Release|ARM64
		{FCA38F3C-7C73-4C47-BE4E-32F77FA8538D}.Release|ARM64.Build.0 = Release|ARM64
		{FCA38F3C-7C73-4C47-BE4E-32F77FA8538D}.Release|x64.ActiveCfg = Release|x64
		{FCA38F3C-7C73-4C47-BE4E-32F77FA8538D}.Release|x64.Build.0 = Release|x64
		{FCA38F3C-7C73-4C47-BE4E-32F77FA8538D}.Release|x86.ActiveCfg = Release|Win32
		{FCA38F3C-7C73-4C47-BE4E-32F77FA8538D}.Release|x86.Build.0 = Release|Win32
		{14B93DC8-FD93-4A6D-81CB-8BC96644501C}.Debug|ARM64.ActiveCfg = Debug|ARM64
		{14B93DC8-FD93-4A6D-81CB-8BC96644501C}.Debug|ARM64.Build.0 = Debug|ARM64
		{14B93DC8-FD93-4A6D-81CB-8BC96644501C}.Debug|x64.ActiveCfg = Debug|x64
		{14B93DC8-FD93-4A6D-81CB-8BC96644501C}.Debug|x64.Build.0 = Debug|x64
		{14B93DC8-FD93-4A6D-81CB-8BC96644501C}.Debug|x86.ActiveCfg = Debug|Win32
		{14B93DC8-FD93-4A6D-81CB-8BC96644501C}.Debug|x86.Build.0 = Debug|Win32
		{14B93DC8-FD93-4A6D-81CB-8BC96644501C}.Debug|x86.Deploy.0 = Debug|Win32
		{14B93DC8-FD93-4A6D-81CB-8BC96644501C}.Release|ARM64.ActiveCfg = Release|ARM64
		{14B93DC8-FD93-4A6D-81CB-8BC96644501C}.Release|ARM64.Build.0 = Release|ARM64
		{14B93DC8-FD93-4A6D-81CB-8BC96644501C}.Release|x64.ActiveCfg = Release|x64
		{14B93DC8-FD93-4A6D-81CB-8BC96644501C}.Release|x64.Build.0 = Release|x64
		{14B93DC8-FD93-4A6D-81CB-8BC96644501C}.Release|x86.ActiveCfg = Release|Win32
		{14B93DC8-FD93-4A6D-81CB-8BC96644501C}.Release|x86.Build.0 = Release|Win32
		{14B93DC8-FD93-4A6D-81CB-8BC96644501C}.Release|x86.Deploy.0 = Release|Win32
	EndGlobalSection
	GlobalSection(SolutionProperties) = preSolution
		HideSolutionNode = FALSE
	EndGlobalSection
	GlobalSection(NestedProjects) = preSolution
		{A990658C-CE31-4BCC-976F-0FC6B1AF693D} = {5EA20F54-880A-49F3-99FA-4B3FE54E8AB1}
		{A9D95A91-4DB7-4F72-BEB6-FE8A5C89BFBD} = {5EA20F54-880A-49F3-99FA-4B3FE54E8AB1}
		{C38970C0-5FBF-4D69-90D8-CBAC225AE895} = {5EA20F54-880A-49F3-99FA-4B3FE54E8AB1}
		{F7D32BD0-2749-483E-9A0D-1635EF7E3136} = {5EA20F54-880A-49F3-99FA-4B3FE54E8AB1}
		{DA8B35B3-DA00-4B02-BDE6-6A397B3FD46B} = {5EA20F54-880A-49F3-99FA-4B3FE54E8AB1}
		{FCA38F3C-7C73-4C47-BE4E-32F77FA8538D} = {5EA20F54-880A-49F3-99FA-4B3FE54E8AB1}
		{2049DBE9-8D13-42C9-AE4B-413AE38FFFD0} = {5EA20F54-880A-49F3-99FA-4B3FE54E8AB1}
		{84E05BFA-CBAF-4F0D-BFB6-4CE85742A57E} = {5EA20F54-880A-49F3-99FA-4B3FE54E8AB1}
		{EF074BA1-2D54-4D49-A28E-5E040B47CD2E} = {5EA20F54-880A-49F3-99FA-4B3FE54E8AB1}
		{14B93DC8-FD93-4A6D-81CB-8BC96644501C} = {5EA20F54-880A-49F3-99FA-4B3FE54E8AB1}
	EndGlobalSection
	GlobalSection(ExtensibilityGlobals) = postSolution
		SolutionGuid = {D43FAD39-F619-437D-BB40-04A3982ACB6A}
	EndGlobalSection
EndGlobal
"
`;

exports[`C++ WinUI3+Hermes Application: SnapshotApp.vcxproj 1`] = `
"<?xml version=\\"1.0\\" encoding=\\"utf-8\\"?>
<Project ToolsVersion=\\"Current\\" DefaultTargets=\\"Build\\" xmlns=\\"http://schemas.microsoft.com/developer/msbuild/2003\\">
  <Import Project=\\"$(SolutionDir)\\\\ExperimentalFeatures.props\\" Condition=\\"Exists('$(SolutionDir)\\\\ExperimentalFeatures.props')\\" />
  <Import Project=\\"..\\\\packages\\\\Microsoft.Windows.CppWinRT.2.0.210312.4\\\\build\\\\native\\\\Microsoft.Windows.CppWinRT.props\\" Condition=\\"Exists('..\\\\packages\\\\Microsoft.Windows.CppWinRT.2.0.210312.4\\\\build\\\\native\\\\Microsoft.Windows.CppWinRT.props')\\" />
  <PropertyGroup Label=\\"Globals\\">
    <CppWinRTOptimized>true</CppWinRTOptimized>
    <CppWinRTRootNamespaceAutoMerge>true</CppWinRTRootNamespaceAutoMerge>
    <MinimalCoreWin>true</MinimalCoreWin>
    <ProjectGuid>{cf18a370-d8c8-4676-a774-0d6b2de07447}</ProjectGuid>
    <ProjectName>SnapshotApp</ProjectName>
    <RootNamespace>SnapshotApp</RootNamespace>
    <DefaultLanguage>en-US</DefaultLanguage>
    <MinimumVisualStudioVersion>16.0</MinimumVisualStudioVersion>
    <AppContainerApplication>true</AppContainerApplication>
    <ApplicationType>Windows Store</ApplicationType>
    <ApplicationTypeRevision>10.0</ApplicationTypeRevision>
  </PropertyGroup>
  <PropertyGroup Label=\\"ReactNativeWindowsProps\\">
    <ReactNativeWindowsDir Condition=\\"'$(ReactNativeWindowsDir)' == ''\\">$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), 'node_modules\\\\react-native-windows\\\\package.json'))\\\\node_modules\\\\react-native-windows\\\\</ReactNativeWindowsDir>
  </PropertyGroup>
  <Import Project=\\"$(ReactNativeWindowsDir)\\\\PropertySheets\\\\External\\\\Microsoft.ReactNative.WindowsSdk.Default.props\\" />
  <Import Project=\\"$(VCTargetsPath)\\\\Microsoft.Cpp.Default.props\\" />
  <ItemGroup Label=\\"ProjectConfigurations\\">
    <ProjectConfiguration Include=\\"Debug|ARM64\\">
      <Configuration>Debug</Configuration>
      <Platform>ARM64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include=\\"Debug|Win32\\">
      <Configuration>Debug</Configuration>
      <Platform>Win32</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include=\\"Debug|x64\\">
      <Configuration>Debug</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include=\\"Release|ARM64\\">
      <Configuration>Release</Configuration>
      <Platform>ARM64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include=\\"Release|Win32\\">
      <Configuration>Release</Configuration>
      <Platform>Win32</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include=\\"Release|x64\\">
      <Configuration>Release</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
  </ItemGroup>
  <PropertyGroup Label=\\"Configuration\\">
    <ConfigurationType>Application</ConfigurationType>
    <CharacterSet>Unicode</CharacterSet>
  </PropertyGroup>
  <PropertyGroup Condition=\\"'$(Configuration)'=='Debug'\\" Label=\\"Configuration\\">
    <UseDebugLibraries>true</UseDebugLibraries>
    <LinkIncremental>true</LinkIncremental>
  </PropertyGroup>
  <PropertyGroup Condition=\\"'$(Configuration)'=='Release'\\" Label=\\"Configuration\\">
    <UseDebugLibraries>false</UseDebugLibraries>
    <WholeProgramOptimization>true</WholeProgramOptimization>
    <LinkIncremental>false</LinkIncremental>
  </PropertyGroup>
  <Import Project=\\"$(VCTargetsPath)\\\\Microsoft.Cpp.props\\" />
  <ImportGroup Label=\\"ExtensionSettings\\"></ImportGroup>
  <ImportGroup Label=\\"PropertySheets\\">
    <Import Project=\\"$(UserRootDir)\\\\Microsoft.Cpp.$(Platform).user.props\\" Condition=\\"exists('$(UserRootDir)\\\\Microsoft.Cpp.$(Platform).user.props')\\" Label=\\"LocalAppDataPlatform\\" />
  </ImportGroup>
  <ImportGroup Label=\\"PropertySheets\\">
    <Import Project=\\"PropertySheet.props\\" />
  </ImportGroup>
  <ImportGroup Label=\\"ReactNativeWindowsPropertySheets\\">
    <Import Project=\\"$(ReactNativeWindowsDir)\\\\PropertySheets\\\\external\\\\Microsoft.ReactNative.Uwp.CppApp.props\\" Condition=\\"Exists('$(ReactNativeWindowsDir)\\\\PropertySheets\\\\External\\\\Microsoft.ReactNative.Uwp.CppApp.props')\\" />
    <Import Project=\\"..\\\\packages\\\\$(WinUIPackageProps)\\" Condition=\\"'$(WinUIPackageProps)'!='' And Exists('..\\\\packages\\\\$(WinUIPackageProps)')\\" />
  </ImportGroup>
  <PropertyGroup Label=\\"UserMacros\\" />
  <ItemDefinitionGroup>
    <ClCompile>
      <PrecompiledHeader>Use</PrecompiledHeader>
      <PrecompiledHeaderFile>pch.h</PrecompiledHeaderFile>
      <PrecompiledHeaderOutputFile>$(IntDir)pch.pch</PrecompiledHeaderOutputFile>
      <WarningLevel>Level4</WarningLevel>
      <AdditionalOptions>%(AdditionalOptions) /bigobj</AdditionalOptions>
      <DisableSpecificWarnings>4453;28204</DisableSpecificWarnings>
    </ClCompile>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition=\\"'$(Configuration)'=='Debug'\\">
    <ClCompile>
      <PreprocessorDefinitions>_DEBUG;%(PreprocessorDefinitions)</PreprocessorDefinitions>
    </ClCompile>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition=\\"'$(Configuration)'=='Release'\\">
    <ClCompile>
      <PreprocessorDefinitions>NDEBUG;%(PreprocessorDefinitions)</PreprocessorDefinitions>
    </ClCompile>
  </ItemDefinitionGroup>
  <ItemGroup>
    <ClInclude Include=\\"MainPage.h\\">
      <DependentUpon>MainPage.xaml</DependentUpon>
      <SubType>Code</SubType>
    </ClInclude>
    <ClInclude Include=\\"ReactPackageProvider.h\\" />
    <ClInclude Include=\\"AutolinkedNativeModules.g.h\\" />
    <ClInclude Include=\\"pch.h\\" />
    <ClInclude Include=\\"App.h\\">
      <DependentUpon>App.xaml</DependentUpon>
    </ClInclude>
  </ItemGroup>
  <ItemGroup>
    <ApplicationDefinition Include=\\"App.xaml\\">
      <SubType>Designer</SubType>
    </ApplicationDefinition>
  </ItemGroup>
  <ItemGroup>
    <AppxManifest Include=\\"Package.appxmanifest\\">
      <SubType>Designer</SubType>
    </AppxManifest>
  </ItemGroup>
  <ItemGroup>
    <Image Include=\\"Assets\\\\LockScreenLogo.scale-200.png\\" />
    <Image Include=\\"Assets\\\\SplashScreen.scale-200.png\\" />
    <Image Include=\\"Assets\\\\Square150x150Logo.scale-200.png\\" />
    <Image Include=\\"Assets\\\\Square44x44Logo.scale-200.png\\" />
    <Image Include=\\"Assets\\\\Square44x44Logo.targetsize-24_altform-unplated.png\\" />
    <Image Include=\\"Assets\\\\StoreLogo.png\\" />
    <Image Include=\\"Assets\\\\Wide310x150Logo.scale-200.png\\" />
  </ItemGroup>
  <ItemGroup>
    <ClCompile Include=\\"MainPage.cpp\\">
      <DependentUpon>MainPage.xaml</DependentUpon>
      <SubType>Code</SubType>
    </ClCompile>
    <ClCompile Include=\\"ReactPackageProvider.cpp\\" />
    <ClCompile Include=\\"AutolinkedNativeModules.g.cpp\\" />
    <ClCompile Include=\\"pch.cpp\\">
      <PrecompiledHeader>Create</PrecompiledHeader>
    </ClCompile>
    <ClCompile Include=\\"App.cpp\\">
      <DependentUpon>App.xaml</DependentUpon>
    </ClCompile>
    <ClCompile Include=\\"$(GeneratedFilesDir)module.g.cpp\\" />
  </ItemGroup>
  <ItemGroup>
    <Midl Include=\\"App.idl\\">
      <DependentUpon>App.xaml</DependentUpon>
    </Midl>
    <Midl Include=\\"MainPage.idl\\">
      <DependentUpon>MainPage.xaml</DependentUpon>
      <SubType>Code</SubType>
    </Midl>
  </ItemGroup>
  <ItemGroup>
    <None Include=\\"packages.config\\" />
    <None Include=\\"PropertySheet.props\\" />
    <Text Include=\\"readme.txt\\">
      <DeploymentContent>false</DeploymentContent>
    </Text>
  </ItemGroup>
  <ItemGroup>
    <Page Include=\\"MainPage.xaml\\">
      <SubType>Designer</SubType>
    </Page>
  </ItemGroup>
  <Import Project=\\"$(VCTargetsPath)\\\\Microsoft.Cpp.targets\\" />
  <ImportGroup Label=\\"ReactNativeWindowsTargets\\">
    <Import Project=\\"$(ReactNativeWindowsDir)\\\\PropertySheets\\\\External\\\\Microsoft.ReactNative.Uwp.CppApp.targets\\" Condition=\\"Exists('$(ReactNativeWindowsDir)\\\\PropertySheets\\\\External\\\\Microsoft.ReactNative.Uwp.CppApp.targets')\\" />
  </ImportGroup>
  <Target Name=\\"EnsureReactNativeWindowsTargets\\" BeforeTargets=\\"PrepareForBuild\\">
    <PropertyGroup>
      <ErrorText>This project references targets in your node_modules\\\\react-native-windows folder that are missing. The missing file is {0}.</ErrorText>
    </PropertyGroup>
    <Error Condition=\\"!Exists('$(ReactNativeWindowsDir)\\\\PropertySheets\\\\External\\\\Microsoft.ReactNative.Uwp.CppApp.props')\\" Text=\\"$([System.String]::Format('$(ErrorText)', '$(ReactNativeWindowsDir)\\\\PropertySheets\\\\External\\\\Microsoft.ReactNative.Uwp.CppApp.props'))\\" />
    <Error Condition=\\"!Exists('$(ReactNativeWindowsDir)\\\\PropertySheets\\\\External\\\\Microsoft.ReactNative.Uwp.CppApp.targets')\\" Text=\\"$([System.String]::Format('$(ErrorText)', '$(ReactNativeWindowsDir)\\\\PropertySheets\\\\External\\\\Microsoft.ReactNative.Uwp.CppApp.targets'))\\" />
  </Target>
  <ImportGroup Label=\\"ExtensionTargets\\">
    <Import Project=\\"..\\\\packages\\\\Microsoft.Windows.CppWinRT.2.0.210312.4\\\\build\\\\native\\\\Microsoft.Windows.CppWinRT.targets\\" Condition=\\"Exists('..\\\\packages\\\\Microsoft.Windows.CppWinRT.2.0.210312.4\\\\build\\\\native\\\\Microsoft.Windows.CppWinRT.targets')\\" />
    <Import Project=\\"..\\\\packages\\\\ReactNative.Hermes.Windows.0.9.0-ms.6\\\\build\\\\native\\\\ReactNative.Hermes.Windows.targets\\" Condition=\\"Exists('..\\\\packages\\\\ReactNative.Hermes.Windows.0.9.0-ms.6\\\\build\\\\native\\\\ReactNative.Hermes.Windows.targets')\\" />
    <Import Project=\\"..\\\\packages\\\\$(WinUIPackageName).$(WinUIPackageVersion)\\\\build\\\\native\\\\$(WinUIPackageName).targets\\" Condition=\\"Exists('..\\\\packages\\\\$(WinUIPackageName).$(WinUIPackageVersion)\\\\build\\\\native\\\\$(WinUIPackageName).targets')\\" />
  </ImportGroup>
  <Target Name=\\"EnsureNuGetPackageBuildImports\\" BeforeTargets=\\"PrepareForBuild\\">
    <PropertyGroup>
      <ErrorText>This project references NuGet package(s) that are missing on this computer. Use NuGet Package Restore to download them.  For more information, see http://go.microsoft.com/fwlink/?LinkID=322105. The missing file is {0}.</ErrorText>
    </PropertyGroup>
    <Error Condition=\\"!Exists('..\\\\packages\\\\Microsoft.Windows.CppWinRT.2.0.210312.4\\\\build\\\\native\\\\Microsoft.Windows.CppWinRT.props')\\" Text=\\"$([System.String]::Format('$(ErrorText)', '..\\\\packages\\\\Microsoft.Windows.CppWinRT.2.0.210312.4\\\\build\\\\native\\\\Microsoft.Windows.CppWinRT.props'))\\" />
    <Error Condition=\\"!Exists('..\\\\packages\\\\Microsoft.Windows.CppWinRT.2.0.210312.4\\\\build\\\\native\\\\Microsoft.Windows.CppWinRT.targets')\\" Text=\\"$([System.String]::Format('$(ErrorText)', '..\\\\packages\\\\Microsoft.Windows.CppWinRT.2.0.210312.4\\\\build\\\\native\\\\Microsoft.Windows.CppWinRT.targets'))\\" />
    <Error Condition=\\"!Exists('..\\\\packages\\\\ReactNative.Hermes.Windows.0.9.0-ms.6\\\\build\\\\native\\\\ReactNative.Hermes.Windows.targets')\\" Text=\\"$([System.String]::Format('$(ErrorText)', '..\\\\packages\\\\ReactNative.Hermes.Windows.0.9.0-ms.6\\\\build\\\\native\\\\ReactNative.Hermes.Windows.targets'))\\" />
    <Error Condition=\\"!Exists('..\\\\packages\\\\$(WinUIPackageName).$(WinUIPackageVersion)\\\\build\\\\native\\\\$(WinUIPackageName).targets')\\" Text=\\"$([System.String]::Format('$(ErrorText)', '..\\\\packages\\\\$(WinUIPackageName).$(WinUIPackageVersion)\\\\build\\\\native\\\\$(WinUIPackageName).targets'))\\" />
  </Target>
</Project>
"
`;

exports[`C++ WinUI3+Hermes Application: SnapshotApp.vcxproj.filters 1`] = `
"﻿<?xml version=\\"1.0\\" encoding=\\"utf-8\\"?>
<Project ToolsVersion=\\"Current\\" xmlns=\\"http://schemas.microsoft.com/developer/msbuild/2003\\">
  <ItemGroup>
    <ApplicationDefinition Include=\\"App.xaml\\" />
  </ItemGroup>
  <ItemGroup>
    <Midl Include=\\"App.idl\\" />
  </ItemGroup>
  <ItemGroup>
    <ClCompile Include=\\"pch.cpp\\" />
    <ClCompile Include=\\"App.cpp\\" />
    <ClCompile Include=\\"$(GeneratedFilesDir)module.g.cpp\\" />
    <ClCompile Include=\\"ReactPackageProvider.cpp\\" />
    <ClCompile Include=\\"AutolinkedNativeModules.g.cpp\\" />
  </ItemGroup>
  <ItemGroup>
    <ClInclude Include=\\"pch.h\\" />
    <ClInclude Include=\\"App.h\\" />
    <ClInclude Include=\\"ReactPackageProvider.h\\" />
    <ClInclude Include=\\"AutolinkedNativeModules.g.h\\" />
  </ItemGroup>
  <ItemGroup>
    <Image Include=\\"Assets\\\\Wide310x150Logo.scale-200.png\\">
      <Filter>Assets</Filter>
    </Image>
    <Image Include=\\"Assets\\\\StoreLogo.png\\">
      <Filter>Assets</Filter>
    </Image>
    <Image Include=\\"Assets\\\\Square150x150Logo.scale-200.png\\">
      <Filter>Assets</Filter>
    </Image>
    <Image Include=\\"Assets\\\\Square44x44Logo.targetsize-24_altform-unplated.png\\">
      <Filter>Assets</Filter>
    </Image>
    <Image Include=\\"Assets\\\\Square44x44Logo.scale-200.png\\">
      <Filter>Assets</Filter>
    </Image>
    <Image Include=\\"Assets\\\\SplashScreen.scale-200.png\\">
      <Filter>Assets</Filter>
    </Image>
    <Image Include=\\"Assets\\\\LockScreenLogo.scale-200.png\\">
      <Filter>Assets</Filter>
    </Image>
  </ItemGroup>
  <ItemGroup>
    <AppxManifest Include=\\"Package.appxmanifest\\" />
  </ItemGroup>
  <ItemGroup>
    <Filter Include=\\"Assets\\">
      <UniqueIdentifier>{e48dc53e-40b1-40cb-970a-f89935452892}</UniqueIdentifier>
    </Filter>
  </ItemGroup>
  <ItemGroup>
    <None Include=\\"PropertySheet.props\\" />
    <None Include=\\"packages.config\\" />
  </ItemGroup>
  <ItemGroup>
    <Text Include=\\"readme.txt\\" />
  </ItemGroup>
  <ItemGroup>
    <Page Include=\\"MainPage.xaml\\" />
  </ItemGroup>
</Project>"
`;

exports[`C++ WinUI3+Hermes Application: index.windows.bundle 1`] = `
"/**
 * 
 * Be sure to generate this file using the CLI:
 *
 * npx react-native bundle --platform windows --entry-file index.js 
 *   --bundle-output windows\\\\SnapshotApp\\\\Bundle\\\\index.windows.bundle
 *   --assets-dest windows\\\\SnapshotApp\\\\Bundle
 *
 */"
`;

exports[`C++ WinUI3+Hermes Application: metro.config.js 1`] = `
"/**
 * Metro configuration for React Native
 * https://github.com/facebook/react-native
 *
 * @format
 */
const fs = require('fs');
const path = require('path');
const exclusionList = require('metro-config/src/defaults/exclusionList');

const rnwPath = fs.realpathSync(
  path.resolve(require.resolve('react-native-windows/package.json'), '..'),
);

module.exports = {
  resolver: {
    blockList: exclusionList([
      // This stops \\"react-native run-windows\\" from causing the metro server to crash if its already running
      new RegExp(
        \`\${path.resolve(__dirname, 'windows').replace(/[/\\\\\\\\]/g, '/')}.*\`,
      ),
      // This prevents \\"react-native run-windows\\" from hitting: EBUSY: resource busy or locked, open msbuild.ProjectImports.zip or other files produced by msbuild
      new RegExp(\`\${rnwPath}/build/.*\`),
      new RegExp(\`\${rnwPath}/target/.*\`),
      /.*\\\\.ProjectImports\\\\.zip/,
    ]),
  },
  transformer: {
    getTransformOptions: async () => ({
      transform: {
        experimentalImportSupport: false,
        inlineRequires: true,
      },
    }),
  },
};
"
`;

exports[`C++ WinUI3+Hermes Application: packages.config 1`] = `
"﻿<?xml version=\\"1.0\\" encoding=\\"utf-8\\"?>
<packages>
  <package id=\\"Microsoft.Windows.CppWinRT\\" version=\\"2.0.210312.4\\" targetFramework=\\"native\\" />
  <package id=\\"ReactNative.Hermes.Windows\\" version=\\"0.9.0-ms.6\\" targetFramework=\\"native\\" />
  <package id=\\"Microsoft.WinUI\\" version=\\"3.0.0-preview4.210210.4\\" targetFramework=\\"native\\" />
</packages>"
`;

exports[`C++ WinUI3+Hermes Application: pch.cpp 1`] = `
"﻿#include \\"pch.h\\"
"
`;

exports[`C++ WinUI3+Hermes Application: pch.h 1`] = `
"#pragma once

#define NOMINMAX

#include <hstring.h>
#include <restrictederrorinfo.h>
#include <unknwn.h>
#include <windows.h>
#include <CppWinRTIncludes.h>
#include <VersionMacros.h>
#include <winrt/Windows.ApplicationModel.Activation.h>
#include <UI.Xaml.Controls.Primitives.h>
#include <UI.Xaml.Controls.h>
#include <UI.Xaml.Markup.h>
#include <UI.Xaml.Navigation.h>

#include <winrt/Microsoft.ReactNative.h>

#include <winrt/Microsoft.UI.Xaml.Automation.Peers.h>
#include <winrt/Microsoft.UI.Xaml.Controls.Primitives.h>
#include <winrt/Microsoft.UI.Xaml.Controls.h>
#include <winrt/Microsoft.UI.Xaml.Media.h>
#include <winrt/Microsoft.UI.Xaml.XamlTypeInfo.h>
using namespace winrt::Windows::Foundation;
"
`;

exports[`C++ WinUI3+Hermes Library: ExperimentalFeatures.props 1`] = `
"<?xml version=\\"1.0\\" encoding=\\"utf-8\\"?>
<Project xmlns=\\"http://schemas.microsoft.com/developer/msbuild/2003\\">

  <!--
    Application projects contain a file with this name to specify some important settings
    that will apply globally for the app and *all* native modules the app consumes. These
    values are set by the app developer.
  -->

</Project>
"
`;

exports[`C++ WinUI3+Hermes Library: NuGet.Config 1`] = `
"<?xml version=\\"1.0\\" encoding=\\"utf-8\\"?>
<configuration>
  <config>
    <add key=\\"repositoryPath\\" value=\\"packages\\" />
  </config>
  <packageSources>
    <clear />
    <add key=\\"react-native\\" value=\\"https://pkgs.dev.azure.com/ms/react-native/_packaging/react-native-public/nuget/v3/index.json\\" />
    <add key=\\"Nuget.org\\" value=\\"https://api.nuget.org/v3/index.json\\" />
  </packageSources>
  <disabledPackageSources>
    <clear />
  </disabledPackageSources>  
</configuration>
"
`;

exports[`C++ WinUI3+Hermes Library: PropertySheet.props 1`] = `
"<?xml version=\\"1.0\\" encoding=\\"utf-8\\"?>
<Project ToolsVersion=\\"Current\\" xmlns=\\"http://schemas.microsoft.com/developer/msbuild/2003\\">
  <ImportGroup Label=\\"PropertySheets\\" />
  <PropertyGroup Label=\\"UserMacros\\" />
  <!--
    To customize common C++/WinRT project properties:
    * right-click the project node
    * expand the Common Properties item
    * select the C++/WinRT property page

    For more advanced scenarios, and complete documentation, please see:
    https://github.com/Microsoft/xlang/tree/master/src/package/cppwinrt/nuget
    -->
  <PropertyGroup />
  <ItemDefinitionGroup />
</Project>"
`;

exports[`C++ WinUI3+Hermes Library: ReactNativeModule.h 1`] = `
"﻿#pragma once

#include \\"JSValue.h\\"
#include \\"NativeModules.h\\"

using namespace winrt::Microsoft::ReactNative;

namespace winrt::SnapshotApp
{

REACT_MODULE(ReactNativeModule, L\\"SnapshotApp\\")
struct ReactNativeModule
{
    // See https://microsoft.github.io/react-native-windows/docs/native-modules for details on writing native modules

    REACT_INIT(Initialize)
    void Initialize(ReactContext const &reactContext) noexcept
    {
        m_reactContext = reactContext;
    }
    
    REACT_METHOD(sampleMethod)
    void sampleMethod(std::string stringArgument, int numberArgument, std::function<void(std::string)> &&callback) noexcept
    {
        // TODO: Implement some actually useful functionality
        callback(\\"Received numberArgument: \\" + std::to_string(numberArgument) + \\" stringArgument: \\" + stringArgument);
    }

    private:
        ReactContext m_reactContext{nullptr};
};

} // namespace winrt::SnapshotApp
"
`;

exports[`C++ WinUI3+Hermes Library: ReactPackageProvider.cpp 1`] = `
"#include \\"pch.h\\"
#include \\"ReactPackageProvider.h\\"
#if __has_include(\\"ReactPackageProvider.g.cpp\\")
#include \\"ReactPackageProvider.g.cpp\\"
#endif

#include \\"ReactNativeModule.h\\"

using namespace winrt::Microsoft::ReactNative;

namespace winrt::SnapshotApp::implementation
{

void ReactPackageProvider::CreatePackage(IReactPackageBuilder const &packageBuilder) noexcept
{
    AddAttributedModules(packageBuilder);
}

} // namespace winrt::SnapshotApp::implementation
"
`;

exports[`C++ WinUI3+Hermes Library: ReactPackageProvider.h 1`] = `
"#pragma once
#include \\"ReactPackageProvider.g.h\\"

using namespace winrt::Microsoft::ReactNative;

namespace winrt::SnapshotApp::implementation
{
    struct ReactPackageProvider : ReactPackageProviderT<ReactPackageProvider>
    {
        ReactPackageProvider() = default;

        void CreatePackage(IReactPackageBuilder const &packageBuilder) noexcept;
    };
} // namespace winrt::SnapshotApp::implementation

namespace winrt::SnapshotApp::factory_implementation
{

struct ReactPackageProvider : ReactPackageProviderT<ReactPackageProvider, implementation::ReactPackageProvider> {};

} // namespace winrt::SnapshotApp::factory_implementation
"
`;

exports[`C++ WinUI3+Hermes Library: ReactPackageProvider.idl 1`] = `
"namespace SnapshotApp
{
    [webhosthidden]
    [default_interface]
    runtimeclass ReactPackageProvider : Microsoft.ReactNative.IReactPackageProvider
    {
        ReactPackageProvider();
    };
}
"
`;

exports[`C++ WinUI3+Hermes Library: SnapshotApp.def 1`] = `
"﻿EXPORTS
DllCanUnloadNow = WINRT_CanUnloadNow                    PRIVATE
DllGetActivationFactory = WINRT_GetActivationFactory    PRIVATE
"
`;

exports[`C++ WinUI3+Hermes Library: SnapshotApp.sln 1`] = `
"﻿
Microsoft Visual Studio Solution File, Format Version 12.00
# Visual Studio Version 16
VisualStudioVersion = 16.0.29215.179
MinimumVisualStudioVersion = 10.0.40219.1
Project(\\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\\") = \\"SnapshotApp\\", \\"SnapshotApp\\\\SnapshotApp.vcxproj\\", \\"{A03448E3-39CA-43B6-A02E-E1AAE1A6D335}\\"
	ProjectSection(ProjectDependencies) = postProject
		{F7D32BD0-2749-483E-9A0D-1635EF7E3136} = {F7D32BD0-2749-483E-9A0D-1635EF7E3136}
	EndProjectSection
EndProject
Project(\\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\\") = \\"Folly\\", \\"..\\\\node_modules\\\\react-native-windows\\\\Folly\\\\Folly.vcxproj\\", \\"{A990658C-CE31-4BCC-976F-0FC6B1AF693D}\\"
EndProject
Project(\\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\\") = \\"fmt\\", \\"..\\\\node_modules\\\\react-native-windows\\\\fmt\\\\fmt.vcxproj\\", \\"{14B93DC8-FD93-4A6D-81CB-8BC96644501C}\\"
EndProject
Project(\\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\\") = \\"ReactCommon\\", \\"..\\\\node_modules\\\\react-native-windows\\\\ReactCommon\\\\ReactCommon.vcxproj\\", \\"{A9D95A91-4DB7-4F72-BEB6-FE8A5C89BFBD}\\"
	ProjectSection(ProjectDependencies) = postProject
		{A990658C-CE31-4BCC-976F-0FC6B1AF693D} = {A990658C-CE31-4BCC-976F-0FC6B1AF693D}
	EndProjectSection
EndProject
Project(\\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\\") = \\"Chakra\\", \\"..\\\\node_modules\\\\react-native-windows\\\\Chakra\\\\Chakra.vcxitems\\", \\"{C38970C0-5FBF-4D69-90D8-CBAC225AE895}\\"
EndProject
Project(\\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\\") = \\"Microsoft.ReactNative\\", \\"..\\\\node_modules\\\\react-native-windows\\\\Microsoft.ReactNative\\\\Microsoft.ReactNative.vcxproj\\", \\"{F7D32BD0-2749-483E-9A0D-1635EF7E3136}\\"
EndProject
Project(\\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\\") = \\"Microsoft.ReactNative.Cxx\\", \\"..\\\\node_modules\\\\react-native-windows\\\\Microsoft.ReactNative.Cxx\\\\Microsoft.ReactNative.Cxx.vcxitems\\", \\"{DA8B35B3-DA00-4B02-BDE6-6A397B3FD46B}\\"
EndProject
Project(\\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\\") = \\"Common\\", \\"..\\\\node_modules\\\\react-native-windows\\\\Common\\\\Common.vcxproj\\", \\"{FCA38F3C-7C73-4C47-BE4E-32F77FA8538D}\\"
EndProject
Project(\\"{2150E333-8FDC-42A3-9474-1A3956D46DE8}\\") = \\"ReactNative\\", \\"ReactNative\\", \\"{5EA20F54-880A-49F3-99FA-4B3FE54E8AB1}\\"
EndProject
Project(\\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\\") = \\"Microsoft.ReactNative.Shared\\", \\"..\\\\node_modules\\\\react-native-windows\\\\Shared\\\\Shared.vcxitems\\", \\"{2049DBE9-8D13-42C9-AE4B-413AE38FFFD0}\\"
EndProject
Project(\\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\\") = \\"Mso\\", \\"..\\\\node_modules\\\\react-native-windows\\\\Mso\\\\Mso.vcxitems\\", \\"{84E05BFA-CBAF-4F0D-BFB6-4CE85742A57E}\\"
EndProject
Project(\\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\\") = \\"Include\\", \\"..\\\\node_modules\\\\react-native-windows\\\\include\\\\Include.vcxitems\\", \\"{EF074BA1-2D54-4D49-A28E-5E040B47CD2E}\\"
EndProject
Global
	GlobalSection(SharedMSBuildProjectFiles) = preSolution
		..\\\\node_modules\\\\react-native-windows\\\\Shared\\\\Shared.vcxitems*{2049dbe9-8d13-42c9-ae4b-413ae38fffd0}*SharedItemsImports = 9
		..\\\\node_modules\\\\react-native-windows\\\\Mso\\\\Mso.vcxitems*{84e05bfa-cbaf-4f0d-bfb6-4ce85742a57e}*SharedItemsImports = 9
		..\\\\node_modules\\\\react-native-windows\\\\Chakra\\\\Chakra.vcxitems*{c38970c0-5fbf-4d69-90d8-cbac225ae895}*SharedItemsImports = 9
		..\\\\node_modules\\\\react-native-windows\\\\Microsoft.ReactNative.Cxx\\\\Microsoft.ReactNative.Cxx.vcxitems*{da8b35b3-da00-4b02-bde6-6a397b3fd46b}*SharedItemsImports = 9
		..\\\\node_modules\\\\react-native-windows\\\\include\\\\Include.vcxitems*{ef074ba1-2d54-4d49-a28e-5e040b47cd2e}*SharedItemsImports = 9
		..\\\\node_modules\\\\react-native-windows\\\\Chakra\\\\Chakra.vcxitems*{f7d32bd0-2749-483e-9a0d-1635ef7e3136}*SharedItemsImports = 4
		..\\\\node_modules\\\\react-native-windows\\\\Microsoft.ReactNative.Cxx\\\\Microsoft.ReactNative.Cxx.vcxitems*{f7d32bd0-2749-483e-9a0d-1635ef7e3136}*SharedItemsImports = 4
		..\\\\node_modules\\\\react-native-windows\\\\Mso\\\\Mso.vcxitems*{f7d32bd0-2749-483e-9a0d-1635ef7e3136}*SharedItemsImports = 4
		..\\\\node_modules\\\\react-native-windows\\\\Shared\\\\Shared.vcxitems*{f7d32bd0-2749-483e-9a0d-1635ef7e3136}*SharedItemsImports = 4
	EndGlobalSection
	GlobalSection(SolutionConfigurationPlatforms) = preSolution
		Debug|ARM64 = Debug|ARM64
		Debug|x64 = Debug|x64
		Debug|x86 = Debug|x86
		Release|ARM64 = Release|ARM64
		Release|x64 = Release|x64
		Release|x86 = Release|x86
	EndGlobalSection
	GlobalSection(ProjectConfigurationPlatforms) = postSolution
		{A03448E3-39CA-43B6-A02E-E1AAE1A6D335}.Debug|ARM64.ActiveCfg = Debug|ARM64
		{A03448E3-39CA-43B6-A02E-E1AAE1A6D335}.Debug|ARM64.Build.0 = Debug|ARM64
		{A03448E3-39CA-43B6-A02E-E1AAE1A6D335}.Debug|ARM64.Deploy.0 = Debug|ARM64
		{A03448E3-39CA-43B6-A02E-E1AAE1A6D335}.Debug|x64.ActiveCfg = Debug|x64
		{A03448E3-39CA-43B6-A02E-E1AAE1A6D335}.Debug|x64.Build.0 = Debug|x64
		{A03448E3-39CA-43B6-A02E-E1AAE1A6D335}.Debug|x64.Deploy.0 = Debug|x64
		{A03448E3-39CA-43B6-A02E-E1AAE1A6D335}.Debug|x86.ActiveCfg = Debug|Win32
		{A03448E3-39CA-43B6-A02E-E1AAE1A6D335}.Debug|x86.Build.0 = Debug|Win32
		{A03448E3-39CA-43B6-A02E-E1AAE1A6D335}.Debug|x86.Deploy.0 = Debug|Win32
		{A03448E3-39CA-43B6-A02E-E1AAE1A6D335}.Release|ARM64.ActiveCfg = Release|ARM64
		{A03448E3-39CA-43B6-A02E-E1AAE1A6D335}.Release|ARM64.Build.0 = Release|ARM64
		{A03448E3-39CA-43B6-A02E-E1AAE1A6D335}.Release|ARM64.Deploy.0 = Release|ARM64
		{A03448E3-39CA-43B6-A02E-E1AAE1A6D335}.Release|x64.ActiveCfg = Release|x64
		{A03448E3-39CA-43B6-A02E-E1AAE1A6D335}.Release|x64.Build.0 = Release|x64
		{A03448E3-39CA-43B6-A02E-E1AAE1A6D335}.Release|x64.Deploy.0 = Release|x64
		{A03448E3-39CA-43B6-A02E-E1AAE1A6D335}.Release|x86.ActiveCfg = Release|Win32
		{A03448E3-39CA-43B6-A02E-E1AAE1A6D335}.Release|x86.Build.0 = Release|Win32
		{A03448E3-39CA-43B6-A02E-E1AAE1A6D335}.Release|x86.Deploy.0 = Release|Win32
		{A990658C-CE31-4BCC-976F-0FC6B1AF693D}.Debug|ARM64.ActiveCfg = Debug|ARM64
		{A990658C-CE31-4BCC-976F-0FC6B1AF693D}.Debug|ARM64.Build.0 = Debug|ARM64
		{A990658C-CE31-4BCC-976F-0FC6B1AF693D}.Debug|x64.ActiveCfg = Debug|x64
		{A990658C-CE31-4BCC-976F-0FC6B1AF693D}.Debug|x64.Build.0 = Debug|x64
		{A990658C-CE31-4BCC-976F-0FC6B1AF693D}.Debug|x86.ActiveCfg = Debug|Win32
		{A990658C-CE31-4BCC-976F-0FC6B1AF693D}.Debug|x86.Build.0 = Debug|Win32
		{A990658C-CE31-4BCC-976F-0FC6B1AF693D}.Release|ARM64.ActiveCfg = Release|ARM64
		{A990658C-CE31-4BCC-976F-0FC6B1AF693D}.Release|ARM64.Build.0 = Release|ARM64
		{A990658C-CE31-4BCC-976F-0FC6B1AF693D}.Release|x64.ActiveCfg = Release|x64
		{A990658C-CE31-4BCC-976F-0FC6B1AF693D}.Release|x64.Build.0 = Release|x64
		{A990658C-CE31-4BCC-976F-0FC6B1AF693D}.Release|x86.ActiveCfg = Release|Win32
		{A990658C-CE31-4BCC-976F-0FC6B1AF693D}.Release|x86.Build.0 = Release|Win32
		{A9D95A91-4DB7-4F72-BEB6-FE8A5C89BFBD}.Debug|ARM64.ActiveCfg = Debug|ARM64
		{A9D95A91-4DB7-4F72-BEB6-FE8A5C89BFBD}.Debug|ARM64.Build.0 = Debug|ARM64
		{A9D95A91-4DB7-4F72-BEB6-FE8A5C89BFBD}.Debug|x64.ActiveCfg = Debug|x64
		{A9D95A91-4DB7-4F72-BEB6-FE8A5C89BFBD}.Debug|x64.Build.0 = Debug|x64
		{A9D95A91-4DB7-4F72-BEB6-FE8A5C89BFBD}.Debug|x86.ActiveCfg = Debug|Win32
		{A9D95A91-4DB7-4F72-BEB6-FE8A5C89BFBD}.Debug|x86.Build.0 = Debug|Win32
		{A9D95A91-4DB7-4F72-BEB6-FE8A5C89BFBD}.Release|ARM64.ActiveCfg = Release|ARM64
		{A9D95A91-4DB7-4F72-BEB6-FE8A5C89BFBD}.Release|ARM64.Build.0 = Release|ARM64
		{A9D95A91-4DB7-4F72-BEB6-FE8A5C89BFBD}.Release|x64.ActiveCfg = Release|x64
		{A9D95A91-4DB7-4F72-BEB6-FE8A5C89BFBD}.Release|x64.Build.0 = Release|x64
		{A9D95A91-4DB7-4F72-BEB6-FE8A5C89BFBD}.Release|x86.ActiveCfg = Release|Win32
		{A9D95A91-4DB7-4F72-BEB6-FE8A5C89BFBD}.Release|x86.Build.0 = Release|Win32
		{F7D32BD0-2749-483E-9A0D-1635EF7E3136}.Debug|ARM64.ActiveCfg = Debug|ARM64
		{F7D32BD0-2749-483E-9A0D-1635EF7E3136}.Debug|ARM64.Build.0 = Debug|ARM64
		{F7D32BD0-2749-483E-9A0D-1635EF7E3136}.Debug|x64.ActiveCfg = Debug|x64
		{F7D32BD0-2749-483E-9A0D-1635EF7E3136}.Debug|x64.Build.0 = Debug|x64
		{F7D32BD0-2749-483E-9A0D-1635EF7E3136}.Debug|x86.ActiveCfg = Debug|Win32
		{F7D32BD0-2749-483E-9A0D-1635EF7E3136}.Debug|x86.Build.0 = Debug|Win32
		{F7D32BD0-2749-483E-9A0D-1635EF7E3136}.Release|ARM64.ActiveCfg = Release|ARM64
		{F7D32BD0-2749-483E-9A0D-1635EF7E3136}.Release|ARM64.Build.0 = Release|ARM64
		{F7D32BD0-2749-483E-9A0D-1635EF7E3136}.Release|x64.ActiveCfg = Release|x64
		{F7D32BD0-2749-483E-9A0D-1635EF7E3136}.Release|x64.Build.0 = Release|x64
		{F7D32BD0-2749-483E-9A0D-1635EF7E3136}.Release|x86.ActiveCfg = Release|Win32
		{F7D32BD0-2749-483E-9A0D-1635EF7E3136}.Release|x86.Build.0 = Release|Win32
		{FCA38F3C-7C73-4C47-BE4E-32F77FA8538D}.Debug|ARM64.ActiveCfg = Debug|ARM64
		{FCA38F3C-7C73-4C47-BE4E-32F77FA8538D}.Debug|ARM64.Build.0 = Debug|ARM64
		{FCA38F3C-7C73-4C47-BE4E-32F77FA8538D}.Debug|x64.ActiveCfg = Debug|x64
		{FCA38F3C-7C73-4C47-BE4E-32F77FA8538D}.Debug|x64.Build.0 = Debug|x64
		{FCA38F3C-7C73-4C47-BE4E-32F77FA8538D}.Debug|x86.ActiveCfg = Debug|Win32
		{FCA38F3C-7C73-4C47-BE4E-32F77FA8538D}.Debug|x86.Build.0 = Debug|Win32
		{FCA38F3C-7C73-4C47-BE4E-32F77FA8538D}.Release|ARM64.ActiveCfg = Release|ARM64
		{FCA38F3C-7C73-4C47-BE4E-32F77FA8538D}.Release|ARM64.Build.0 = Release|ARM64
		{FCA38F3C-7C73-4C47-BE4E-32F77FA8538D}.Release|x64.ActiveCfg = Release|x64
		{FCA38F3C-7C73-4C47-BE4E-32F77FA8538D}.Release|x64.Build.0 = Release|x64
		{FCA38F3C-7C73-4C47-BE4E-32F77FA8538D}.Release|x86.ActiveCfg = Release|Win32
		{FCA38F3C-7C73-4C47-BE4E-32F77FA8538D}.Release|x86.Build.0 = Release|Win32
		{14B93DC8-FD93-4A6D-81CB-8BC96644501C}.Debug|ARM64.ActiveCfg = Debug|ARM64
		{14B93DC8-FD93-4A6D-81CB-8BC96644501C}.Debug|ARM64.Build.0 = Debug|ARM64
		{14B93DC8-FD93-4A6D-81CB-8BC96644501C}.Debug|x64.ActiveCfg = Debug|x64
		{14B93DC8-FD93-4A6D-81CB-8BC96644501C}.Debug|x64.Build.0 = Debug|x64
		{14B93DC8-FD93-4A6D-81CB-8BC96644501C}.Debug|x86.ActiveCfg = Debug|Win32
		{14B93DC8-FD93-4A6D-81CB-8BC96644501C}.Debug|x86.Build.0 = Debug|Win32
		{14B93DC8-FD93-4A6D-81CB-8BC96644501C}.Debug|x86.Deploy.0 = Debug|Win32
		{14B93DC8-FD93-4A6D-81CB-8BC96644501C}.Release|ARM64.ActiveCfg = Release|ARM64
		{14B93DC8-FD93-4A6D-81CB-8BC96644501C}.Release|ARM64.Build.0 = Release|ARM64
		{14B93DC8-FD93-4A6D-81CB-8BC96644501C}.Release|x64.ActiveCfg = Release|x64
		{14B93DC8-FD93-4A6D-81CB-8BC96644501C}.Release|x64.Build.0 = Release|x64
		{14B93DC8-FD93-4A6D-81CB-8BC96644501C}.Release|x86.ActiveCfg = Release|Win32
		{14B93DC8-FD93-4A6D-81CB-8BC96644501C}.Release|x86.Build.0 = Release|Win32
		{14B93DC8-FD93-4A6D-81CB-8BC96644501C}.Release|x86.Deploy.0 = Release|Win32
	EndGlobalSection
	GlobalSection(SolutionProperties) = preSolution
		HideSolutionNode = FALSE
	EndGlobalSection
	GlobalSection(NestedProjects) = preSolution
		{A990658C-CE31-4BCC-976F-0FC6B1AF693D} = {5EA20F54-880A-49F3-99FA-4B3FE54E8AB1}
		{A9D95A91-4DB7-4F72-BEB6-FE8A5C89BFBD} = {5EA20F54-880A-49F3-99FA-4B3FE54E8AB1}
		{C38970C0-5FBF-4D69-90D8-CBAC225AE895} = {5EA20F54-880A-49F3-99FA-4B3FE54E8AB1}
		{F7D32BD0-2749-483E-9A0D-1635EF7E3136} = {5EA20F54-880A-49F3-99FA-4B3FE54E8AB1}
		{DA8B35B3-DA00-4B02-BDE6-6A397B3FD46B} = {5EA20F54-880A-49F3-99FA-4B3FE54E8AB1}
		{FCA38F3C-7C73-4C47-BE4E-32F77FA8538D} = {5EA20F54-880A-49F3-99FA-4B3FE54E8AB1}
		{2049DBE9-8D13-42C9-AE4B-413AE38FFFD0} = {5EA20F54-880A-49F3-99FA-4B3FE54E8AB1}
		{84E05BFA-CBAF-4F0D-BFB6-4CE85742A57E} = {5EA20F54-880A-49F3-99FA-4B3FE54E8AB1}
		{EF074BA1-2D54-4D49-A28E-5E040B47CD2E} = {5EA20F54-880A-49F3-99FA-4B3FE54E8AB1}
		{14B93DC8-FD93-4A6D-81CB-8BC96644501C} = {5EA20F54-880A-49F3-99FA-4B3FE54E8AB1}
	EndGlobalSection
	GlobalSection(ExtensibilityGlobals) = postSolution
		SolutionGuid = {D43FAD39-F619-437D-BB40-04A3982ACB6A}
	EndGlobalSection
EndGlobal
"
`;

exports[`C++ WinUI3+Hermes Library: SnapshotApp.vcxproj 1`] = `
"<?xml version=\\"1.0\\" encoding=\\"utf-8\\"?>
<Project ToolsVersion=\\"Current\\" DefaultTargets=\\"Build\\" xmlns=\\"http://schemas.microsoft.com/developer/msbuild/2003\\">
  <Import Project=\\"$(SolutionDir)\\\\ExperimentalFeatures.props\\" Condition=\\"Exists('$(SolutionDir)\\\\ExperimentalFeatures.props')\\" />
  <Import Project=\\"$(SolutionDir)\\\\packages\\\\Microsoft.Windows.CppWinRT.2.0.210312.4\\\\build\\\\native\\\\Microsoft.Windows.CppWinRT.props\\" Condition=\\"Exists('$(SolutionDir)\\\\packages\\\\Microsoft.Windows.CppWinRT.2.0.210312.4\\\\build\\\\native\\\\Microsoft.Windows.CppWinRT.props')\\" />
  <PropertyGroup Label=\\"Globals\\">
    <CppWinRTOptimized>true</CppWinRTOptimized>
    <CppWinRTRootNamespaceAutoMerge>true</CppWinRTRootNamespaceAutoMerge>
    <MinimalCoreWin>true</MinimalCoreWin>
    <ProjectGuid>{a03448e3-39ca-43b6-a02e-e1aae1a6d335}</ProjectGuid>
    <ProjectName>SnapshotApp</ProjectName>
    <RootNamespace>SnapshotApp</RootNamespace>
    <DefaultLanguage>en-US</DefaultLanguage>
    <MinimumVisualStudioVersion>16.0</MinimumVisualStudioVersion>
    <AppContainerApplication>true</AppContainerApplication>
    <ApplicationType>Windows Store</ApplicationType>
    <ApplicationTypeRevision>10.0</ApplicationTypeRevision>
  </PropertyGroup>
  <PropertyGroup Label=\\"ReactNativeWindowsProps\\">
    <ReactNativeWindowsDir Condition=\\"'$(ReactNativeWindowsDir)' == ''\\">$([MSBuild]::GetDirectoryNameOfFileAbove($(SolutionDir), 'node_modules\\\\react-native-windows\\\\package.json'))\\\\node_modules\\\\react-native-windows\\\\</ReactNativeWindowsDir>
  </PropertyGroup>
  <Import Project=\\"$(ReactNativeWindowsDir)\\\\PropertySheets\\\\External\\\\Microsoft.ReactNative.WindowsSdk.Default.props\\" Condition=\\"Exists('$(ReactNativeWindowsDir)\\\\PropertySheets\\\\External\\\\Microsoft.ReactNative.WindowsSdk.Default.props')\\" />
  <PropertyGroup Label=\\"Fallback Windows SDK Versions\\">
    <WindowsTargetPlatformVersion Condition=\\" '$(WindowsTargetPlatformVersion)' == '' \\">10.0.19041.0</WindowsTargetPlatformVersion>
    <WindowsTargetPlatformMinVersion Condition=\\" '$(WindowsTargetPlatformMinVersion)' == '' \\">10.0.15063.0</WindowsTargetPlatformMinVersion>
  </PropertyGroup>
  <Import Project=\\"$(VCTargetsPath)\\\\Microsoft.Cpp.Default.props\\" />
  <ItemGroup Label=\\"ProjectConfigurations\\">
    <ProjectConfiguration Include=\\"Debug|ARM64\\">
      <Configuration>Debug</Configuration>
      <Platform>ARM64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include=\\"Debug|Win32\\">
      <Configuration>Debug</Configuration>
      <Platform>Win32</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include=\\"Debug|x64\\">
      <Configuration>Debug</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include=\\"Release|ARM64\\">
      <Configuration>Release</Configuration>
      <Platform>ARM64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include=\\"Release|Win32\\">
      <Configuration>Release</Configuration>
      <Platform>Win32</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include=\\"Release|x64\\">
      <Configuration>Release</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
  </ItemGroup>
  <PropertyGroup Label=\\"Configuration\\">
    <ConfigurationType>DynamicLibrary</ConfigurationType>
    <CharacterSet>Unicode</CharacterSet>
    <GenerateManifest>false</GenerateManifest>
  </PropertyGroup>
  <PropertyGroup Condition=\\"'$(Configuration)'=='Debug'\\" Label=\\"Configuration\\">
    <UseDebugLibraries>true</UseDebugLibraries>
    <LinkIncremental>true</LinkIncremental>
  </PropertyGroup>
  <PropertyGroup Condition=\\"'$(Configuration)'=='Release'\\" Label=\\"Configuration\\">
    <UseDebugLibraries>false</UseDebugLibraries>
    <WholeProgramOptimization>true</WholeProgramOptimization>
    <LinkIncremental>false</LinkIncremental>
  </PropertyGroup>
  <Import Project=\\"$(VCTargetsPath)\\\\Microsoft.Cpp.props\\" />
  <ImportGroup Label=\\"ExtensionSettings\\"></ImportGroup>
  <ImportGroup Label=\\"PropertySheets\\">
    <Import Project=\\"$(UserRootDir)\\\\Microsoft.Cpp.$(Platform).user.props\\" Condition=\\"exists('$(UserRootDir)\\\\Microsoft.Cpp.$(Platform).user.props')\\" Label=\\"LocalAppDataPlatform\\" />
  </ImportGroup>
  <ImportGroup Label=\\"PropertySheets\\">
    <Import Project=\\"PropertySheet.props\\" />
  </ImportGroup>
  <ImportGroup Label=\\"ReactNativeWindowsPropertySheets\\">
    <Import Project=\\"$(ReactNativeWindowsDir)\\\\PropertySheets\\\\external\\\\Microsoft.ReactNative.Uwp.CppLib.props\\" Condition=\\"Exists('$(ReactNativeWindowsDir)\\\\PropertySheets\\\\External\\\\Microsoft.ReactNative.Uwp.CppLib.props')\\" />
    <Import Project=\\"$(SolutionDir)\\\\packages\\\\$(WinUIPackageProps)\\" Condition=\\"'$(WinUIPackageProps)'!='' And Exists('$(SolutionDir)\\\\packages\\\\$(WinUIPackageProps)')\\" />
  </ImportGroup>

  <PropertyGroup Label=\\"UserMacros\\" />
  <ItemDefinitionGroup>
    <ClCompile>
      <PrecompiledHeader>Use</PrecompiledHeader>
      <PrecompiledHeaderFile>pch.h</PrecompiledHeaderFile>
      <PrecompiledHeaderOutputFile>$(IntDir)pch.pch</PrecompiledHeaderOutputFile>
      <WarningLevel>Level4</WarningLevel>
      <AdditionalOptions>%(AdditionalOptions) /bigobj</AdditionalOptions>
      <DisableSpecificWarnings>4453;28204</DisableSpecificWarnings>
      <PreprocessorDefinitions>_WINRT_DLL;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <AdditionalUsingDirectories>$(WindowsSDK_WindowsMetadata);$(AdditionalUsingDirectories)</AdditionalUsingDirectories>
    </ClCompile>
    <Midl>
      <!-- This allows applications targetting older Windows SDKs (e.g. RNW 0.65 apps) to consume the library generated WinMD -->
      <AdditionalOptions>%(AdditionalOptions) /noattributename</AdditionalOptions>
    </Midl>
    <Link>
      <SubSystem>Console</SubSystem>
      <GenerateWindowsMetadata>true</GenerateWindowsMetadata>
      <ModuleDefinitionFile>SnapshotApp.def</ModuleDefinitionFile>
    </Link>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition=\\"'$(Configuration)'=='Debug'\\">
    <ClCompile>
      <PreprocessorDefinitions>_DEBUG;%(PreprocessorDefinitions)</PreprocessorDefinitions>
    </ClCompile>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition=\\"'$(Configuration)'=='Release'\\">
    <ClCompile>
      <PreprocessorDefinitions>NDEBUG;%(PreprocessorDefinitions)</PreprocessorDefinitions>
    </ClCompile>
  </ItemDefinitionGroup>
  <ItemGroup>
    <ClInclude Include=\\"ReactPackageProvider.h\\">
      <DependentUpon>ReactPackageProvider.idl</DependentUpon>
    </ClInclude>
    <ClInclude Include=\\"ReactNativeModule.h\\" />
    <ClInclude Include=\\"pch.h\\" />
  </ItemGroup>
  <ItemGroup>
    <ClCompile Include=\\"pch.cpp\\">
      <PrecompiledHeader>Create</PrecompiledHeader>
    </ClCompile>
    <ClCompile Include=\\"ReactPackageProvider.cpp\\">
      <DependentUpon>ReactPackageProvider.idl</DependentUpon>
    </ClCompile>
    <ClCompile Include=\\"$(GeneratedFilesDir)module.g.cpp\\" />
  </ItemGroup>
  <ItemGroup>
    <Midl Include=\\"ReactPackageProvider.idl\\" />
  </ItemGroup>
  <ItemGroup>
    <None Include=\\"packages.config\\" />
    <None Include=\\"PropertySheet.props\\" />
  </ItemGroup>
  <Import Project=\\"$(VCTargetsPath)\\\\Microsoft.Cpp.targets\\" />
  <ImportGroup Label=\\"ReactNativeWindowsTargets\\">
    <Import Project=\\"$(ReactNativeWindowsDir)\\\\PropertySheets\\\\External\\\\Microsoft.ReactNative.Uwp.CppLib.targets\\" Condition=\\"Exists('$(ReactNativeWindowsDir)\\\\PropertySheets\\\\External\\\\Microsoft.ReactNative.Uwp.CppLib.targets')\\" />
  </ImportGroup>
  <Target Name=\\"EnsureReactNativeWindowsTargets\\" BeforeTargets=\\"PrepareForBuild\\">
    <PropertyGroup>
      <ErrorText>This project references targets in your node_modules\\\\react-native-windows folder that are missing. The missing file is {0}.</ErrorText>
    </PropertyGroup>
    <Error Condition=\\"!Exists('$(ReactNativeWindowsDir)\\\\PropertySheets\\\\External\\\\Microsoft.ReactNative.Uwp.CppLib.props')\\" Text=\\"$([System.String]::Format('$(ErrorText)', '$(ReactNativeWindowsDir)\\\\PropertySheets\\\\External\\\\Microsoft.ReactNative.Uwp.CppLib.props'))\\" />
    <Error Condition=\\"!Exists('$(ReactNativeWindowsDir)\\\\PropertySheets\\\\External\\\\Microsoft.ReactNative.Uwp.CppLib.targets')\\" Text=\\"$([System.String]::Format('$(ErrorText)', '$(ReactNativeWindowsDir)\\\\PropertySheets\\\\External\\\\Microsoft.ReactNative.Uwp.CppLib.targets'))\\" />
  </Target>
  <ImportGroup Label=\\"ExtensionTargets\\">
    <Import Project=\\"$(SolutionDir)\\\\packages\\\\Microsoft.Windows.CppWinRT.2.0.210312.4\\\\build\\\\native\\\\Microsoft.Windows.CppWinRT.targets\\" Condition=\\"Exists('$(SolutionDir)\\\\packages\\\\Microsoft.Windows.CppWinRT.2.0.210312.4\\\\build\\\\native\\\\Microsoft.Windows.CppWinRT.targets')\\" />
    <Import Project=\\"$(SolutionDir)\\\\packages\\\\ReactNative.Hermes.Windows.0.9.0-ms.6\\\\build\\\\native\\\\ReactNative.Hermes.Windows.targets\\" Condition=\\"Exists('$(SolutionDir)\\\\packages\\\\ReactNative.Hermes.Windows.0.9.0-ms.6\\\\build\\\\native\\\\ReactNative.Hermes.Windows.targets')\\" />
    <Import Project=\\"$(SolutionDir)\\\\packages\\\\$(WinUIPackageName).$(WinUIPackageVersion)\\\\build\\\\native\\\\$(WinUIPackageName).targets\\" Condition=\\"Exists('$(SolutionDir)\\\\packages\\\\$(WinUIPackageName).$(WinUIPackageVersion)\\\\build\\\\native\\\\$(WinUIPackageName).targets')\\" />
  </ImportGroup>
  <Target Name=\\"EnsureNuGetPackageBuildImports\\" BeforeTargets=\\"PrepareForBuild\\">
    <PropertyGroup>
      <ErrorText>This project references NuGet package(s) that are missing on this computer. Use NuGet Package Restore to download them.  For more information, see http://go.microsoft.com/fwlink/?LinkID=322105. The missing file is {0}.</ErrorText>
    </PropertyGroup>
    <Error Condition=\\"!Exists('$(SolutionDir)\\\\packages\\\\Microsoft.Windows.CppWinRT.2.0.210312.4\\\\build\\\\native\\\\Microsoft.Windows.CppWinRT.props')\\" Text=\\"$([System.String]::Format('$(ErrorText)', '$(SolutionDir)\\\\packages\\\\Microsoft.Windows.CppWinRT.2.0.210312.4\\\\build\\\\native\\\\Microsoft.Windows.CppWinRT.props'))\\" />
    <Error Condition=\\"!Exists('$(SolutionDir)\\\\packages\\\\Microsoft.Windows.CppWinRT.2.0.210312.4\\\\build\\\\native\\\\Microsoft.Windows.CppWinRT.targets')\\" Text=\\"$([System.String]::Format('$(ErrorText)', '$(SolutionDir)\\\\packages\\\\Microsoft.Windows.CppWinRT.2.0.210312.4\\\\build\\\\native\\\\Microsoft.Windows.CppWinRT.targets'))\\" />
    <Error Condition=\\"!Exists('$(SolutionDir)\\\\packages\\\\ReactNative.Hermes.Windows.0.9.0-ms.6\\\\build\\\\native\\\\ReactNative.Hermes.Windows.targets')\\" Text=\\"$([System.String]::Format('$(ErrorText)', '$(SolutionDir)\\\\packages\\\\ReactNative.Hermes.Windows.0.9.0-ms.6\\\\build\\\\native\\\\ReactNative.Hermes.Windows.targets'))\\" />
    <Error Condition=\\"!Exists('$(SolutionDir)\\\\packages\\\\$(WinUIPackageName).$(WinUIPackageVersion)\\\\build\\\\native\\\\$(WinUIPackageName).targets')\\" Text=\\"$([System.String]::Format('$(ErrorText)', '$(SolutionDir)\\\\packages\\\\$(WinUIPackageName).$(WinUIPackageVersion)\\\\build\\\\native\\\\$(WinUIPackageName).targets'))\\" />
  </Target>
</Project>
"
`;

exports[`C++ WinUI3+Hermes Library: SnapshotApp.vcxproj.filters 1`] = `
"﻿<?xml version=\\"1.0\\" encoding=\\"utf-8\\"?>
<Project ToolsVersion=\\"Current\\" xmlns=\\"http://schemas.microsoft.com/developer/msbuild/2003\\">
  <ItemGroup>
    <Midl Include=\\"ReactPackageProvider.idl\\" />
  </ItemGroup>
  <ItemGroup>
    <ClCompile Include=\\"pch.cpp\\" />
    <ClCompile Include=\\"$(GeneratedFilesDir)module.g.cpp\\" />
    <ClCompile Include=\\"ReactPackageProvider.cpp\\" />
  </ItemGroup>
  <ItemGroup>
    <ClInclude Include=\\"pch.h\\" />
    <ClInclude Include=\\"ReactPackageProvider.h\\" />
    <ClInclude Include=\\"ReactNativeModule.h\\" />
  </ItemGroup>
  <ItemGroup>
    <None Include=\\"PropertySheet.props\\" />
    <None Include=\\"packages.config\\" />
  </ItemGroup>
</Project>"
`;

exports[`C++ WinUI3+Hermes Library: packages.config 1`] = `
"﻿<?xml version=\\"1.0\\" encoding=\\"utf-8\\"?>
<packages>
  <package id=\\"Microsoft.Windows.CppWinRT\\" version=\\"2.0.210312.4\\" targetFramework=\\"native\\" />
  <package id=\\"ReactNative.Hermes.Windows\\" version=\\"0.9.0-ms.6\\" targetFramework=\\"native\\" />
  <package id=\\"Microsoft.WinUI\\" version=\\"3.0.0-preview4.210210.4\\" targetFramework=\\"native\\" />
</packages>"
`;

exports[`C++ WinUI3+Hermes Library: pch.cpp 1`] = `
"﻿#include \\"pch.h\\"
"
`;

exports[`C++ WinUI3+Hermes Library: pch.h 1`] = `
"#pragma once

#define NOMINMAX

#include <hstring.h>
#include <restrictederrorinfo.h>
#include <unknwn.h>
#include <windows.h>
#include <CppWinRTIncludes.h>
#if __has_include(<VersionMacros.h>)
  #include <VersionMacros.h>
#endif

#include <winrt/Microsoft.ReactNative.h>

#include <winrt/Microsoft.UI.Xaml.Automation.Peers.h>
#include <winrt/Microsoft.UI.Xaml.Controls.Primitives.h>
#include <winrt/Microsoft.UI.Xaml.Controls.h>
#include <winrt/Microsoft.UI.Xaml.Media.h>
#include <winrt/Microsoft.UI.Xaml.XamlTypeInfo.h>
using namespace winrt::Windows::Foundation;
"
`;
