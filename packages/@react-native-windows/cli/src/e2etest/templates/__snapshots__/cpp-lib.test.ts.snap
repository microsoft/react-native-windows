// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`cpp-lib: ExperimentalFeatures.props 1`] = `
"<?xml version=\\"1.0\\" encoding=\\"utf-8\\"?>
<Project xmlns=\\"http://schemas.microsoft.com/developer/msbuild/2003\\">

  <!--
    Application projects contain a file with this name to specify some important settings
    that will apply globally for the app and *all* native modules the app consumes. These
    values are set by the app developer.
  -->

</Project>
"
`;

exports[`cpp-lib: NuGet.Config 1`] = `
"<?xml version=\\"1.0\\" encoding=\\"utf-8\\"?>
<configuration>
  <config>
    <add key=\\"repositoryPath\\" value=\\"packages\\" />
  </config>
  <packageSources>
    <clear />
    <add key=\\"react-native\\" value=\\"https://pkgs.dev.azure.com/ms/react-native/_packaging/react-native-public/nuget/v3/index.json\\" />
    <add key=\\"Nuget.org\\" value=\\"https://api.nuget.org/v3/index.json\\" />
  </packageSources>
  <disabledPackageSources>
    <clear />
  </disabledPackageSources>  
</configuration>
"
`;

exports[`cpp-lib: PropertySheet.props 1`] = `
"<?xml version=\\"1.0\\" encoding=\\"utf-8\\"?>
<Project ToolsVersion=\\"Current\\" xmlns=\\"http://schemas.microsoft.com/developer/msbuild/2003\\">
  <ImportGroup Label=\\"PropertySheets\\" />
  <PropertyGroup Label=\\"UserMacros\\" />
  <!--
    To customize common C++/WinRT project properties:
    * right-click the project node
    * expand the Common Properties item
    * select the C++/WinRT property page

    For more advanced scenarios, and complete documentation, please see:
    https://github.com/Microsoft/xlang/tree/master/src/package/cppwinrt/nuget
    -->
  <PropertyGroup />
  <ItemDefinitionGroup />
</Project>"
`;

exports[`cpp-lib: ReactNativeModule.h 1`] = `
"﻿#pragma once

#include \\"JSValue.h\\"
#include \\"NativeModules.h\\"

using namespace winrt::Microsoft::ReactNative;

namespace winrt::SnapshotLib
{

REACT_MODULE(ReactNativeModule, L\\"SnapshotLib\\")
struct ReactNativeModule
{
    // See https://microsoft.github.io/react-native-windows/docs/native-modules for details on writing native modules

    REACT_INIT(Initialize)
    void Initialize(ReactContext const &reactContext) noexcept
    {
        m_reactContext = reactContext;
    }
    
    REACT_METHOD(sampleMethod)
    void sampleMethod(std::string stringArgument, int numberArgument, std::function<void(std::string)> &&callback) noexcept
    {
        // TODO: Implement some actually useful functionality
        callback(\\"Received numberArgument: \\" + std::to_string(numberArgument) + \\" stringArgument: \\" + stringArgument);
    }

    private:
        ReactContext m_reactContext{nullptr};
};

} // namespace winrt::SnapshotLib
"
`;

exports[`cpp-lib: ReactPackageProvider.cpp 1`] = `
"#include \\"pch.h\\"
#include \\"ReactPackageProvider.h\\"
#if __has_include(\\"ReactPackageProvider.g.cpp\\")
#include \\"ReactPackageProvider.g.cpp\\"
#endif

#include \\"ReactNativeModule.h\\"

using namespace winrt::Microsoft::ReactNative;

namespace winrt::SnapshotLib::implementation
{

void ReactPackageProvider::CreatePackage(IReactPackageBuilder const &packageBuilder) noexcept
{
    AddAttributedModules(packageBuilder);
}

} // namespace winrt::SnapshotLib::implementation
"
`;

exports[`cpp-lib: ReactPackageProvider.h 1`] = `
"#pragma once
#include \\"ReactPackageProvider.g.h\\"

using namespace winrt::Microsoft::ReactNative;

namespace winrt::SnapshotLib::implementation
{
    struct ReactPackageProvider : ReactPackageProviderT<ReactPackageProvider>
    {
        ReactPackageProvider() = default;

        void CreatePackage(IReactPackageBuilder const &packageBuilder) noexcept;
    };
} // namespace winrt::SnapshotLib::implementation

namespace winrt::SnapshotLib::factory_implementation
{

struct ReactPackageProvider : ReactPackageProviderT<ReactPackageProvider, implementation::ReactPackageProvider> {};

} // namespace winrt::SnapshotLib::factory_implementation
"
`;

exports[`cpp-lib: ReactPackageProvider.idl 1`] = `
"namespace SnapshotLib
{
    [webhosthidden]
    [default_interface]
    runtimeclass ReactPackageProvider : Microsoft.ReactNative.IReactPackageProvider
    {
        ReactPackageProvider();
    };
}
"
`;

exports[`cpp-lib: SnapshotLib.def 1`] = `
"﻿EXPORTS
DllCanUnloadNow = WINRT_CanUnloadNow                    PRIVATE
DllGetActivationFactory = WINRT_GetActivationFactory    PRIVATE
"
`;

exports[`cpp-lib: SnapshotLib.sln 1`] = `
"﻿
Microsoft Visual Studio Solution File, Format Version 12.00
# Visual Studio Version 16
VisualStudioVersion = 16.0.29215.179
MinimumVisualStudioVersion = 10.0.40219.1
Project(\\"{00000000-0000-0000-0000-000000000000}\\") = \\"SnapshotLib\\", \\"SnapshotLib\\\\SnapshotLib.vcxproj\\", \\"{00000000-0000-0000-0000-000000000000}\\"
	ProjectSection(ProjectDependencies) = postProject
		{00000000-0000-0000-0000-000000000000} = {00000000-0000-0000-0000-000000000000}
	EndProjectSection
EndProject
Project(\\"{00000000-0000-0000-0000-000000000000}\\") = \\"Folly\\", \\"..\\\\node_modules\\\\react-native-windows\\\\Folly\\\\Folly.vcxproj\\", \\"{00000000-0000-0000-0000-000000000000}\\"
EndProject
Project(\\"{00000000-0000-0000-0000-000000000000}\\") = \\"fmt\\", \\"..\\\\node_modules\\\\react-native-windows\\\\fmt\\\\fmt.vcxproj\\", \\"{00000000-0000-0000-0000-000000000000}\\"
EndProject
Project(\\"{00000000-0000-0000-0000-000000000000}\\") = \\"ReactCommon\\", \\"..\\\\node_modules\\\\react-native-windows\\\\ReactCommon\\\\ReactCommon.vcxproj\\", \\"{00000000-0000-0000-0000-000000000000}\\"
	ProjectSection(ProjectDependencies) = postProject
		{00000000-0000-0000-0000-000000000000} = {00000000-0000-0000-0000-000000000000}
	EndProjectSection
EndProject
Project(\\"{00000000-0000-0000-0000-000000000000}\\") = \\"Chakra\\", \\"..\\\\node_modules\\\\react-native-windows\\\\Chakra\\\\Chakra.vcxitems\\", \\"{00000000-0000-0000-0000-000000000000}\\"
EndProject
Project(\\"{00000000-0000-0000-0000-000000000000}\\") = \\"Microsoft.ReactNative\\", \\"..\\\\node_modules\\\\react-native-windows\\\\Microsoft.ReactNative\\\\Microsoft.ReactNative.vcxproj\\", \\"{00000000-0000-0000-0000-000000000000}\\"
EndProject
Project(\\"{00000000-0000-0000-0000-000000000000}\\") = \\"Microsoft.ReactNative.Cxx\\", \\"..\\\\node_modules\\\\react-native-windows\\\\Microsoft.ReactNative.Cxx\\\\Microsoft.ReactNative.Cxx.vcxitems\\", \\"{00000000-0000-0000-0000-000000000000}\\"
EndProject
Project(\\"{00000000-0000-0000-0000-000000000000}\\") = \\"Common\\", \\"..\\\\node_modules\\\\react-native-windows\\\\Common\\\\Common.vcxproj\\", \\"{00000000-0000-0000-0000-000000000000}\\"
EndProject
Project(\\"{00000000-0000-0000-0000-000000000000}\\") = \\"ReactNative\\", \\"ReactNative\\", \\"{00000000-0000-0000-0000-000000000000}\\"
EndProject
Project(\\"{00000000-0000-0000-0000-000000000000}\\") = \\"Microsoft.ReactNative.Shared\\", \\"..\\\\node_modules\\\\react-native-windows\\\\Shared\\\\Shared.vcxitems\\", \\"{00000000-0000-0000-0000-000000000000}\\"
EndProject
Project(\\"{00000000-0000-0000-0000-000000000000}\\") = \\"Mso\\", \\"..\\\\node_modules\\\\react-native-windows\\\\Mso\\\\Mso.vcxitems\\", \\"{00000000-0000-0000-0000-000000000000}\\"
EndProject
Project(\\"{00000000-0000-0000-0000-000000000000}\\") = \\"Include\\", \\"..\\\\node_modules\\\\react-native-windows\\\\include\\\\Include.vcxitems\\", \\"{00000000-0000-0000-0000-000000000000}\\"
EndProject
Global
	GlobalSection(SharedMSBuildProjectFiles) = preSolution
		..\\\\node_modules\\\\react-native-windows\\\\Shared\\\\Shared.vcxitems*{00000000-0000-0000-0000-000000000000}*SharedItemsImports = 9
		..\\\\node_modules\\\\react-native-windows\\\\Mso\\\\Mso.vcxitems*{00000000-0000-0000-0000-000000000000}*SharedItemsImports = 9
		..\\\\node_modules\\\\react-native-windows\\\\Chakra\\\\Chakra.vcxitems*{00000000-0000-0000-0000-000000000000}*SharedItemsImports = 9
		..\\\\node_modules\\\\react-native-windows\\\\Microsoft.ReactNative.Cxx\\\\Microsoft.ReactNative.Cxx.vcxitems*{00000000-0000-0000-0000-000000000000}*SharedItemsImports = 9
		..\\\\node_modules\\\\react-native-windows\\\\include\\\\Include.vcxitems*{00000000-0000-0000-0000-000000000000}*SharedItemsImports = 9
		..\\\\node_modules\\\\react-native-windows\\\\Chakra\\\\Chakra.vcxitems*{00000000-0000-0000-0000-000000000000}*SharedItemsImports = 4
		..\\\\node_modules\\\\react-native-windows\\\\Microsoft.ReactNative.Cxx\\\\Microsoft.ReactNative.Cxx.vcxitems*{00000000-0000-0000-0000-000000000000}*SharedItemsImports = 4
		..\\\\node_modules\\\\react-native-windows\\\\Mso\\\\Mso.vcxitems*{00000000-0000-0000-0000-000000000000}*SharedItemsImports = 4
		..\\\\node_modules\\\\react-native-windows\\\\Shared\\\\Shared.vcxitems*{00000000-0000-0000-0000-000000000000}*SharedItemsImports = 4
	EndGlobalSection
	GlobalSection(SolutionConfigurationPlatforms) = preSolution
		Debug|ARM64 = Debug|ARM64
		Debug|x64 = Debug|x64
		Debug|x86 = Debug|x86
		Release|ARM64 = Release|ARM64
		Release|x64 = Release|x64
		Release|x86 = Release|x86
	EndGlobalSection
	GlobalSection(ProjectConfigurationPlatforms) = postSolution
		{00000000-0000-0000-0000-000000000000}.Debug|ARM64.ActiveCfg = Debug|ARM64
		{00000000-0000-0000-0000-000000000000}.Debug|ARM64.Build.0 = Debug|ARM64
		{00000000-0000-0000-0000-000000000000}.Debug|ARM64.Deploy.0 = Debug|ARM64
		{00000000-0000-0000-0000-000000000000}.Debug|x64.ActiveCfg = Debug|x64
		{00000000-0000-0000-0000-000000000000}.Debug|x64.Build.0 = Debug|x64
		{00000000-0000-0000-0000-000000000000}.Debug|x64.Deploy.0 = Debug|x64
		{00000000-0000-0000-0000-000000000000}.Debug|x86.ActiveCfg = Debug|Win32
		{00000000-0000-0000-0000-000000000000}.Debug|x86.Build.0 = Debug|Win32
		{00000000-0000-0000-0000-000000000000}.Debug|x86.Deploy.0 = Debug|Win32
		{00000000-0000-0000-0000-000000000000}.Release|ARM64.ActiveCfg = Release|ARM64
		{00000000-0000-0000-0000-000000000000}.Release|ARM64.Build.0 = Release|ARM64
		{00000000-0000-0000-0000-000000000000}.Release|ARM64.Deploy.0 = Release|ARM64
		{00000000-0000-0000-0000-000000000000}.Release|x64.ActiveCfg = Release|x64
		{00000000-0000-0000-0000-000000000000}.Release|x64.Build.0 = Release|x64
		{00000000-0000-0000-0000-000000000000}.Release|x64.Deploy.0 = Release|x64
		{00000000-0000-0000-0000-000000000000}.Release|x86.ActiveCfg = Release|Win32
		{00000000-0000-0000-0000-000000000000}.Release|x86.Build.0 = Release|Win32
		{00000000-0000-0000-0000-000000000000}.Release|x86.Deploy.0 = Release|Win32
		{00000000-0000-0000-0000-000000000000}.Debug|ARM64.ActiveCfg = Debug|ARM64
		{00000000-0000-0000-0000-000000000000}.Debug|ARM64.Build.0 = Debug|ARM64
		{00000000-0000-0000-0000-000000000000}.Debug|x64.ActiveCfg = Debug|x64
		{00000000-0000-0000-0000-000000000000}.Debug|x64.Build.0 = Debug|x64
		{00000000-0000-0000-0000-000000000000}.Debug|x86.ActiveCfg = Debug|Win32
		{00000000-0000-0000-0000-000000000000}.Debug|x86.Build.0 = Debug|Win32
		{00000000-0000-0000-0000-000000000000}.Release|ARM64.ActiveCfg = Release|ARM64
		{00000000-0000-0000-0000-000000000000}.Release|ARM64.Build.0 = Release|ARM64
		{00000000-0000-0000-0000-000000000000}.Release|x64.ActiveCfg = Release|x64
		{00000000-0000-0000-0000-000000000000}.Release|x64.Build.0 = Release|x64
		{00000000-0000-0000-0000-000000000000}.Release|x86.ActiveCfg = Release|Win32
		{00000000-0000-0000-0000-000000000000}.Release|x86.Build.0 = Release|Win32
		{00000000-0000-0000-0000-000000000000}.Debug|ARM64.ActiveCfg = Debug|ARM64
		{00000000-0000-0000-0000-000000000000}.Debug|ARM64.Build.0 = Debug|ARM64
		{00000000-0000-0000-0000-000000000000}.Debug|x64.ActiveCfg = Debug|x64
		{00000000-0000-0000-0000-000000000000}.Debug|x64.Build.0 = Debug|x64
		{00000000-0000-0000-0000-000000000000}.Debug|x86.ActiveCfg = Debug|Win32
		{00000000-0000-0000-0000-000000000000}.Debug|x86.Build.0 = Debug|Win32
		{00000000-0000-0000-0000-000000000000}.Release|ARM64.ActiveCfg = Release|ARM64
		{00000000-0000-0000-0000-000000000000}.Release|ARM64.Build.0 = Release|ARM64
		{00000000-0000-0000-0000-000000000000}.Release|x64.ActiveCfg = Release|x64
		{00000000-0000-0000-0000-000000000000}.Release|x64.Build.0 = Release|x64
		{00000000-0000-0000-0000-000000000000}.Release|x86.ActiveCfg = Release|Win32
		{00000000-0000-0000-0000-000000000000}.Release|x86.Build.0 = Release|Win32
		{00000000-0000-0000-0000-000000000000}.Debug|ARM64.ActiveCfg = Debug|ARM64
		{00000000-0000-0000-0000-000000000000}.Debug|ARM64.Build.0 = Debug|ARM64
		{00000000-0000-0000-0000-000000000000}.Debug|x64.ActiveCfg = Debug|x64
		{00000000-0000-0000-0000-000000000000}.Debug|x64.Build.0 = Debug|x64
		{00000000-0000-0000-0000-000000000000}.Debug|x86.ActiveCfg = Debug|Win32
		{00000000-0000-0000-0000-000000000000}.Debug|x86.Build.0 = Debug|Win32
		{00000000-0000-0000-0000-000000000000}.Release|ARM64.ActiveCfg = Release|ARM64
		{00000000-0000-0000-0000-000000000000}.Release|ARM64.Build.0 = Release|ARM64
		{00000000-0000-0000-0000-000000000000}.Release|x64.ActiveCfg = Release|x64
		{00000000-0000-0000-0000-000000000000}.Release|x64.Build.0 = Release|x64
		{00000000-0000-0000-0000-000000000000}.Release|x86.ActiveCfg = Release|Win32
		{00000000-0000-0000-0000-000000000000}.Release|x86.Build.0 = Release|Win32
		{00000000-0000-0000-0000-000000000000}.Debug|ARM64.ActiveCfg = Debug|ARM64
		{00000000-0000-0000-0000-000000000000}.Debug|ARM64.Build.0 = Debug|ARM64
		{00000000-0000-0000-0000-000000000000}.Debug|x64.ActiveCfg = Debug|x64
		{00000000-0000-0000-0000-000000000000}.Debug|x64.Build.0 = Debug|x64
		{00000000-0000-0000-0000-000000000000}.Debug|x86.ActiveCfg = Debug|Win32
		{00000000-0000-0000-0000-000000000000}.Debug|x86.Build.0 = Debug|Win32
		{00000000-0000-0000-0000-000000000000}.Release|ARM64.ActiveCfg = Release|ARM64
		{00000000-0000-0000-0000-000000000000}.Release|ARM64.Build.0 = Release|ARM64
		{00000000-0000-0000-0000-000000000000}.Release|x64.ActiveCfg = Release|x64
		{00000000-0000-0000-0000-000000000000}.Release|x64.Build.0 = Release|x64
		{00000000-0000-0000-0000-000000000000}.Release|x86.ActiveCfg = Release|Win32
		{00000000-0000-0000-0000-000000000000}.Release|x86.Build.0 = Release|Win32
		{00000000-0000-0000-0000-000000000000}.Debug|ARM64.ActiveCfg = Debug|ARM64
		{00000000-0000-0000-0000-000000000000}.Debug|ARM64.Build.0 = Debug|ARM64
		{00000000-0000-0000-0000-000000000000}.Debug|x64.ActiveCfg = Debug|x64
		{00000000-0000-0000-0000-000000000000}.Debug|x64.Build.0 = Debug|x64
		{00000000-0000-0000-0000-000000000000}.Debug|x86.ActiveCfg = Debug|Win32
		{00000000-0000-0000-0000-000000000000}.Debug|x86.Build.0 = Debug|Win32
		{00000000-0000-0000-0000-000000000000}.Debug|x86.Deploy.0 = Debug|Win32
		{00000000-0000-0000-0000-000000000000}.Release|ARM64.ActiveCfg = Release|ARM64
		{00000000-0000-0000-0000-000000000000}.Release|ARM64.Build.0 = Release|ARM64
		{00000000-0000-0000-0000-000000000000}.Release|x64.ActiveCfg = Release|x64
		{00000000-0000-0000-0000-000000000000}.Release|x64.Build.0 = Release|x64
		{00000000-0000-0000-0000-000000000000}.Release|x86.ActiveCfg = Release|Win32
		{00000000-0000-0000-0000-000000000000}.Release|x86.Build.0 = Release|Win32
		{00000000-0000-0000-0000-000000000000}.Release|x86.Deploy.0 = Release|Win32
	EndGlobalSection
	GlobalSection(SolutionProperties) = preSolution
		HideSolutionNode = FALSE
	EndGlobalSection
	GlobalSection(NestedProjects) = preSolution
		{00000000-0000-0000-0000-000000000000} = {00000000-0000-0000-0000-000000000000}
		{00000000-0000-0000-0000-000000000000} = {00000000-0000-0000-0000-000000000000}
		{00000000-0000-0000-0000-000000000000} = {00000000-0000-0000-0000-000000000000}
		{00000000-0000-0000-0000-000000000000} = {00000000-0000-0000-0000-000000000000}
		{00000000-0000-0000-0000-000000000000} = {00000000-0000-0000-0000-000000000000}
		{00000000-0000-0000-0000-000000000000} = {00000000-0000-0000-0000-000000000000}
		{00000000-0000-0000-0000-000000000000} = {00000000-0000-0000-0000-000000000000}
		{00000000-0000-0000-0000-000000000000} = {00000000-0000-0000-0000-000000000000}
		{00000000-0000-0000-0000-000000000000} = {00000000-0000-0000-0000-000000000000}
		{00000000-0000-0000-0000-000000000000} = {00000000-0000-0000-0000-000000000000}
	EndGlobalSection
	GlobalSection(ExtensibilityGlobals) = postSolution
		SolutionGuid = {00000000-0000-0000-0000-000000000000}
	EndGlobalSection
EndGlobal
"
`;

exports[`cpp-lib: SnapshotLib.vcxproj 1`] = `
"<?xml version=\\"1.0\\" encoding=\\"utf-8\\"?>
<Project ToolsVersion=\\"Current\\" DefaultTargets=\\"Build\\" xmlns=\\"http://schemas.microsoft.com/developer/msbuild/2003\\">
  <Import Project=\\"$(SolutionDir)\\\\ExperimentalFeatures.props\\" Condition=\\"Exists('$(SolutionDir)\\\\ExperimentalFeatures.props')\\" />
  <Import Project=\\"$(SolutionDir)\\\\packages\\\\Microsoft.Windows.CppWinRT.2.0.210312.4\\\\build\\\\native\\\\Microsoft.Windows.CppWinRT.props\\" Condition=\\"Exists('$(SolutionDir)\\\\packages\\\\Microsoft.Windows.CppWinRT.2.0.210312.4\\\\build\\\\native\\\\Microsoft.Windows.CppWinRT.props')\\" />
  <PropertyGroup Label=\\"Globals\\">
    <CppWinRTOptimized>true</CppWinRTOptimized>
    <CppWinRTRootNamespaceAutoMerge>true</CppWinRTRootNamespaceAutoMerge>
    <MinimalCoreWin>true</MinimalCoreWin>
    <ProjectGuid>{00000000-0000-0000-0000-000000000000}</ProjectGuid>
    <ProjectName>SnapshotLib</ProjectName>
    <RootNamespace>SnapshotLib</RootNamespace>
    <DefaultLanguage>en-US</DefaultLanguage>
    <MinimumVisualStudioVersion>16.0</MinimumVisualStudioVersion>
    <AppContainerApplication>true</AppContainerApplication>
    <ApplicationType>Windows Store</ApplicationType>
    <ApplicationTypeRevision>10.0</ApplicationTypeRevision>
  </PropertyGroup>
  <PropertyGroup Label=\\"ReactNativeWindowsProps\\">
    <ReactNativeWindowsDir Condition=\\"'$(ReactNativeWindowsDir)' == ''\\">$([MSBuild]::GetDirectoryNameOfFileAbove($(SolutionDir), 'node_modules\\\\react-native-windows\\\\package.json'))\\\\node_modules\\\\react-native-windows\\\\</ReactNativeWindowsDir>
  </PropertyGroup>
  <Import Project=\\"$(ReactNativeWindowsDir)\\\\PropertySheets\\\\External\\\\Microsoft.ReactNative.WindowsSdk.Default.props\\" Condition=\\"Exists('$(ReactNativeWindowsDir)\\\\PropertySheets\\\\External\\\\Microsoft.ReactNative.WindowsSdk.Default.props')\\" />
  <PropertyGroup Label=\\"Fallback Windows SDK Versions\\">
    <WindowsTargetPlatformVersion Condition=\\" '$(WindowsTargetPlatformVersion)' == '' \\">10.0.19041.0</WindowsTargetPlatformVersion>
    <WindowsTargetPlatformMinVersion Condition=\\" '$(WindowsTargetPlatformMinVersion)' == '' \\">10.0.15063.0</WindowsTargetPlatformMinVersion>
  </PropertyGroup>
  <Import Project=\\"$(VCTargetsPath)\\\\Microsoft.Cpp.Default.props\\" />
  <ItemGroup Label=\\"ProjectConfigurations\\">
    <ProjectConfiguration Include=\\"Debug|ARM64\\">
      <Configuration>Debug</Configuration>
      <Platform>ARM64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include=\\"Debug|Win32\\">
      <Configuration>Debug</Configuration>
      <Platform>Win32</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include=\\"Debug|x64\\">
      <Configuration>Debug</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include=\\"Release|ARM64\\">
      <Configuration>Release</Configuration>
      <Platform>ARM64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include=\\"Release|Win32\\">
      <Configuration>Release</Configuration>
      <Platform>Win32</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include=\\"Release|x64\\">
      <Configuration>Release</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
  </ItemGroup>
  <PropertyGroup Label=\\"Configuration\\">
    <ConfigurationType>DynamicLibrary</ConfigurationType>
    <CharacterSet>Unicode</CharacterSet>
    <GenerateManifest>false</GenerateManifest>
  </PropertyGroup>
  <PropertyGroup Condition=\\"'$(Configuration)'=='Debug'\\" Label=\\"Configuration\\">
    <UseDebugLibraries>true</UseDebugLibraries>
    <LinkIncremental>true</LinkIncremental>
  </PropertyGroup>
  <PropertyGroup Condition=\\"'$(Configuration)'=='Release'\\" Label=\\"Configuration\\">
    <UseDebugLibraries>false</UseDebugLibraries>
    <WholeProgramOptimization>true</WholeProgramOptimization>
    <LinkIncremental>false</LinkIncremental>
  </PropertyGroup>
  <Import Project=\\"$(VCTargetsPath)\\\\Microsoft.Cpp.props\\" />
  <ImportGroup Label=\\"ExtensionSettings\\"></ImportGroup>
  <ImportGroup Label=\\"PropertySheets\\">
    <Import Project=\\"$(UserRootDir)\\\\Microsoft.Cpp.$(Platform).user.props\\" Condition=\\"exists('$(UserRootDir)\\\\Microsoft.Cpp.$(Platform).user.props')\\" Label=\\"LocalAppDataPlatform\\" />
  </ImportGroup>
  <ImportGroup Label=\\"PropertySheets\\">
    <Import Project=\\"PropertySheet.props\\" />
  </ImportGroup>
  <ImportGroup Label=\\"ReactNativeWindowsPropertySheets\\">
    <Import Project=\\"$(ReactNativeWindowsDir)\\\\PropertySheets\\\\external\\\\Microsoft.ReactNative.Uwp.CppLib.props\\" Condition=\\"Exists('$(ReactNativeWindowsDir)\\\\PropertySheets\\\\External\\\\Microsoft.ReactNative.Uwp.CppLib.props')\\" />
    <Import Project=\\"$(SolutionDir)\\\\packages\\\\$(WinUIPackageProps)\\" Condition=\\"'$(WinUIPackageProps)'!='' And Exists('$(SolutionDir)\\\\packages\\\\$(WinUIPackageProps)')\\" />
  </ImportGroup>

  <PropertyGroup Label=\\"UserMacros\\" />
  <ItemDefinitionGroup>
    <ClCompile>
      <PrecompiledHeader>Use</PrecompiledHeader>
      <PrecompiledHeaderFile>pch.h</PrecompiledHeaderFile>
      <PrecompiledHeaderOutputFile>$(IntDir)pch.pch</PrecompiledHeaderOutputFile>
      <WarningLevel>Level4</WarningLevel>
      <AdditionalOptions>%(AdditionalOptions) /bigobj</AdditionalOptions>
      <DisableSpecificWarnings>4453;28204</DisableSpecificWarnings>
      <PreprocessorDefinitions>_WINRT_DLL;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <AdditionalUsingDirectories>$(WindowsSDK_WindowsMetadata);$(AdditionalUsingDirectories)</AdditionalUsingDirectories>
    </ClCompile>
    <Midl>
      <!-- This allows applications targetting older Windows SDKs (e.g. RNW 0.65 apps) to consume the library generated WinMD -->
      <AdditionalOptions>%(AdditionalOptions) /noattributename</AdditionalOptions>
    </Midl>
    <Link>
      <SubSystem>Console</SubSystem>
      <GenerateWindowsMetadata>true</GenerateWindowsMetadata>
      <ModuleDefinitionFile>SnapshotLib.def</ModuleDefinitionFile>
    </Link>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition=\\"'$(Configuration)'=='Debug'\\">
    <ClCompile>
      <PreprocessorDefinitions>_DEBUG;%(PreprocessorDefinitions)</PreprocessorDefinitions>
    </ClCompile>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition=\\"'$(Configuration)'=='Release'\\">
    <ClCompile>
      <PreprocessorDefinitions>NDEBUG;%(PreprocessorDefinitions)</PreprocessorDefinitions>
    </ClCompile>
  </ItemDefinitionGroup>
  <ItemGroup>
    <ClInclude Include=\\"ReactPackageProvider.h\\">
      <DependentUpon>ReactPackageProvider.idl</DependentUpon>
    </ClInclude>
    <ClInclude Include=\\"ReactNativeModule.h\\" />
    <ClInclude Include=\\"pch.h\\" />
  </ItemGroup>
  <ItemGroup>
    <ClCompile Include=\\"pch.cpp\\">
      <PrecompiledHeader>Create</PrecompiledHeader>
    </ClCompile>
    <ClCompile Include=\\"ReactPackageProvider.cpp\\">
      <DependentUpon>ReactPackageProvider.idl</DependentUpon>
    </ClCompile>
    <ClCompile Include=\\"$(GeneratedFilesDir)module.g.cpp\\" />
  </ItemGroup>
  <ItemGroup>
    <Midl Include=\\"ReactPackageProvider.idl\\" />
  </ItemGroup>
  <ItemGroup>
    <None Include=\\"packages.config\\" />
    <None Include=\\"PropertySheet.props\\" />
  </ItemGroup>
  <Import Project=\\"$(VCTargetsPath)\\\\Microsoft.Cpp.targets\\" />
  <ImportGroup Label=\\"ReactNativeWindowsTargets\\">
    <Import Project=\\"$(ReactNativeWindowsDir)\\\\PropertySheets\\\\External\\\\Microsoft.ReactNative.Uwp.CppLib.targets\\" Condition=\\"Exists('$(ReactNativeWindowsDir)\\\\PropertySheets\\\\External\\\\Microsoft.ReactNative.Uwp.CppLib.targets')\\" />
  </ImportGroup>
  <Target Name=\\"EnsureReactNativeWindowsTargets\\" BeforeTargets=\\"PrepareForBuild\\">
    <PropertyGroup>
      <ErrorText>This project references targets in your node_modules\\\\react-native-windows folder that are missing. The missing file is {0}.</ErrorText>
    </PropertyGroup>
    <Error Condition=\\"!Exists('$(ReactNativeWindowsDir)\\\\PropertySheets\\\\External\\\\Microsoft.ReactNative.Uwp.CppLib.props')\\" Text=\\"$([System.String]::Format('$(ErrorText)', '$(ReactNativeWindowsDir)\\\\PropertySheets\\\\External\\\\Microsoft.ReactNative.Uwp.CppLib.props'))\\" />
    <Error Condition=\\"!Exists('$(ReactNativeWindowsDir)\\\\PropertySheets\\\\External\\\\Microsoft.ReactNative.Uwp.CppLib.targets')\\" Text=\\"$([System.String]::Format('$(ErrorText)', '$(ReactNativeWindowsDir)\\\\PropertySheets\\\\External\\\\Microsoft.ReactNative.Uwp.CppLib.targets'))\\" />
  </Target>
  <ImportGroup Label=\\"ExtensionTargets\\">
    <Import Project=\\"$(SolutionDir)\\\\packages\\\\Microsoft.Windows.CppWinRT.2.0.210312.4\\\\build\\\\native\\\\Microsoft.Windows.CppWinRT.targets\\" Condition=\\"Exists('$(SolutionDir)\\\\packages\\\\Microsoft.Windows.CppWinRT.2.0.210312.4\\\\build\\\\native\\\\Microsoft.Windows.CppWinRT.targets')\\" />
    <Import Project=\\"$(SolutionDir)\\\\packages\\\\ReactNative.Hermes.Windows.0.9.0-ms.6\\\\build\\\\native\\\\ReactNative.Hermes.Windows.targets\\" Condition=\\"Exists('$(SolutionDir)\\\\packages\\\\ReactNative.Hermes.Windows.0.9.0-ms.6\\\\build\\\\native\\\\ReactNative.Hermes.Windows.targets')\\" />
    <Import Project=\\"$(SolutionDir)\\\\packages\\\\$(WinUIPackageName).$(WinUIPackageVersion)\\\\build\\\\native\\\\$(WinUIPackageName).targets\\" Condition=\\"Exists('$(SolutionDir)\\\\packages\\\\$(WinUIPackageName).$(WinUIPackageVersion)\\\\build\\\\native\\\\$(WinUIPackageName).targets')\\" />
  </ImportGroup>
  <Target Name=\\"EnsureNuGetPackageBuildImports\\" BeforeTargets=\\"PrepareForBuild\\">
    <PropertyGroup>
      <ErrorText>This project references NuGet package(s) that are missing on this computer. Use NuGet Package Restore to download them.  For more information, see http://go.microsoft.com/fwlink/?LinkID=322105. The missing file is {0}.</ErrorText>
    </PropertyGroup>
    <Error Condition=\\"!Exists('$(SolutionDir)\\\\packages\\\\Microsoft.Windows.CppWinRT.2.0.210312.4\\\\build\\\\native\\\\Microsoft.Windows.CppWinRT.props')\\" Text=\\"$([System.String]::Format('$(ErrorText)', '$(SolutionDir)\\\\packages\\\\Microsoft.Windows.CppWinRT.2.0.210312.4\\\\build\\\\native\\\\Microsoft.Windows.CppWinRT.props'))\\" />
    <Error Condition=\\"!Exists('$(SolutionDir)\\\\packages\\\\Microsoft.Windows.CppWinRT.2.0.210312.4\\\\build\\\\native\\\\Microsoft.Windows.CppWinRT.targets')\\" Text=\\"$([System.String]::Format('$(ErrorText)', '$(SolutionDir)\\\\packages\\\\Microsoft.Windows.CppWinRT.2.0.210312.4\\\\build\\\\native\\\\Microsoft.Windows.CppWinRT.targets'))\\" />
    <Error Condition=\\"!Exists('$(SolutionDir)\\\\packages\\\\ReactNative.Hermes.Windows.0.9.0-ms.6\\\\build\\\\native\\\\ReactNative.Hermes.Windows.targets')\\" Text=\\"$([System.String]::Format('$(ErrorText)', '$(SolutionDir)\\\\packages\\\\ReactNative.Hermes.Windows.0.9.0-ms.6\\\\build\\\\native\\\\ReactNative.Hermes.Windows.targets'))\\" />
    <Error Condition=\\"!Exists('$(SolutionDir)\\\\packages\\\\$(WinUIPackageName).$(WinUIPackageVersion)\\\\build\\\\native\\\\$(WinUIPackageName).targets')\\" Text=\\"$([System.String]::Format('$(ErrorText)', '$(SolutionDir)\\\\packages\\\\$(WinUIPackageName).$(WinUIPackageVersion)\\\\build\\\\native\\\\$(WinUIPackageName).targets'))\\" />
  </Target>
</Project>
"
`;

exports[`cpp-lib: SnapshotLib.vcxproj.filters 1`] = `
"﻿<?xml version=\\"1.0\\" encoding=\\"utf-8\\"?>
<Project ToolsVersion=\\"Current\\" xmlns=\\"http://schemas.microsoft.com/developer/msbuild/2003\\">
  <ItemGroup>
    <Midl Include=\\"ReactPackageProvider.idl\\" />
  </ItemGroup>
  <ItemGroup>
    <ClCompile Include=\\"pch.cpp\\" />
    <ClCompile Include=\\"$(GeneratedFilesDir)module.g.cpp\\" />
    <ClCompile Include=\\"ReactPackageProvider.cpp\\" />
  </ItemGroup>
  <ItemGroup>
    <ClInclude Include=\\"pch.h\\" />
    <ClInclude Include=\\"ReactPackageProvider.h\\" />
    <ClInclude Include=\\"ReactNativeModule.h\\" />
  </ItemGroup>
  <ItemGroup>
    <None Include=\\"PropertySheet.props\\" />
    <None Include=\\"packages.config\\" />
  </ItemGroup>
</Project>"
`;

exports[`cpp-lib: packages.config 1`] = `
"﻿<?xml version=\\"1.0\\" encoding=\\"utf-8\\"?>
<packages>
  <package id=\\"Microsoft.Windows.CppWinRT\\" version=\\"2.0.210312.4\\" targetFramework=\\"native\\" />
  <package id=\\"ReactNative.Hermes.Windows\\" version=\\"0.9.0-ms.6\\" targetFramework=\\"native\\" />
  <package id=\\"Microsoft.UI.Xaml\\" version=\\"2.7.0\\" targetFramework=\\"native\\" />
</packages>"
`;

exports[`cpp-lib: pch.cpp 1`] = `
"﻿#include \\"pch.h\\"
"
`;

exports[`cpp-lib: pch.h 1`] = `
"#pragma once

#define NOMINMAX

#include <hstring.h>
#include <restrictederrorinfo.h>
#include <unknwn.h>
#include <windows.h>
#include <CppWinRTIncludes.h>
#if __has_include(<VersionMacros.h>)
  #include <VersionMacros.h>
#endif

#include <winrt/Microsoft.ReactNative.h>

#include <winrt/Microsoft.UI.Xaml.Automation.Peers.h>
#include <winrt/Microsoft.UI.Xaml.Controls.Primitives.h>
#include <winrt/Microsoft.UI.Xaml.Controls.h>
#include <winrt/Microsoft.UI.Xaml.Media.h>
#include <winrt/Microsoft.UI.Xaml.XamlTypeInfo.h>
using namespace winrt::Windows::Foundation;
"
`;
