<?xml version="1.0" encoding="utf-8"?>
<Project>

  <!-- This import will noop when customer code is built. This import is here to help building the bits in the react-native-windows repository. -->
  <Import Condition="Exists($([MSBuild]::GetPathOfFileAbove('Directory.Build.props', '$(MSBuildThisFileDirectory)../')))" Project="$([MSBuild]::GetPathOfFileAbove('Directory.Build.props', '$(MSBuildThisFileDirectory)../'))" />

  <PropertyGroup>
    <SolutionDir Condition="'$(SolutionDir)' == '' OR '$(SolutionDir)' == '*Undefined*'">$(MSBuildThisFileDirectory)</SolutionDir>

    <!-- This property sets the CscTask to print the full path of the csharp file on errors and warnings rather than just the filename. -->
    <GenerateFullPaths>true</GenerateFullPaths>

    <!--
      SourceLink is disabled by default since customer projects are still building our projects and therefore we don't want to force customers to use this.
      The PR (windows-vs-pr.yml) and CI (publish.yml() turn it back on.
    -->
    <EnableSourceLink Condition="'$(EnableSourceLink)' == ''">false</EnableSourceLink>
    <!-- When bumping the Folly version, be sure to bump the git hash of that version's commit and build Folly.vcxproj (to update its cgmanifest.json) too. -->
    <FollyVersion>2022.11.28.00</FollyVersion>
    <FollyCommitHash>6ed36117cdc4831f3a3951e013ae76b405e88e15</FollyCommitHash>
    <!-- When bumping the fmt version, be sure to bump the git hash of that version's commit and build fmt.vcxproj (to update its cgmanifest.json) too. -->
    <FmtVersion>10.1.0</FmtVersion>
    <FmtCommitHash>ca2e3685b160617d3d95fcd9e789c4e06ca88</FmtCommitHash>
    <!-- Commit hash for https://github.com/microsoft/node-api-jsi code. -->
    <NodeApiJsiCommitHash>53b897b03c1c7e57c3372acc6234447a44e150d6</NodeApiJsiCommitHash>
  </PropertyGroup>

  <!--
    IMPORTANT: Traversals left in a directory will break some tools like midl, but we also cannot call
    [MSBuild]::NormalizeDirectory on relative paths since cwd is not always correct. This logic should prefer to operate
    on full paths and avoid extra normalization.
  -->
  <PropertyGroup>
    <ReactNativeWindowsDir Condition="'$(ReactNativeWindowsDir)' == ''">$(MSBuildThisFileDirectory)</ReactNativeWindowsDir>

    <ReactNativeDir Condition="'$(ReactNativeDir)' == ''">$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), 'node_modules\react-native\package.json'))\node_modules\react-native\</ReactNativeDir>

    <YogaDir Condition="'$(YogaDir)' == ''">$(ReactNativeDir)ReactCommon\yoga</YogaDir>

    <FollyDir Condition="'$(FollyDir)' == '' AND Exists('$([MSBuild]::NormalizeDirectory($(ReactNativeDir)..\..\node_modules))')">$(ReactNativeDir)..\..\node_modules\.folly\folly-$(FollyVersion)</FollyDir>
    <FollyDir>$([MSBuild]::NormalizeDirectory($(FollyDir)))</FollyDir>

    <FmtDir Condition="'$(FmtDir)' == '' AND Exists('$([MSBuild]::NormalizeDirectory($(ReactNativeDir)..\..\node_modules))')">$(ReactNativeDir)..\..\node_modules\.fmt\fmt-$(FmtVersion)</FmtDir>
    <FmtDir>$([MSBuild]::NormalizeDirectory($(FmtDir)))</FmtDir>

    <NodeApiJsiDir Condition="'$(NodeApiJsiDir)' == '' AND Exists('$([MSBuild]::NormalizeDirectory($(ReactNativeDir)..\..\node_modules))')">$(ReactNativeDir)..\..\node_modules\.node-api-jsi\node-api-jsi-$(NodeApiJsiCommitHash)</NodeApiJsiDir>
    <NodeApiJsiDir>$([MSBuild]::NormalizeDirectory($(NodeApiJsiDir)))</NodeApiJsiDir>
  </PropertyGroup>

  <PropertyGroup Label="Configuration">
    <ProjectName Condition="'$(ProjectName)'==''">$(MSBuildProjectName)</ProjectName>

    <RootIntDir Condition="'$(RootIntDir)' == ''">$(ReactNativeWindowsDir)build</RootIntDir>
    <RootOutDir Condition="'$(RootOutDir)' == ''">$(ReactNativeWindowsDir)target</RootOutDir>
    <!-- Visual Studio forces using 'Win32' for the 'x86' platform. -->
    <BaseIntDir Condition="'$(BaseIntDir)' == '' AND '$(Platform)' == 'Win32'">$(RootIntDir)\x86\$(Configuration)</BaseIntDir>
    <BaseIntDir Condition="'$(BaseIntDir)' == '' AND '$(Platform)' != 'Win32'">$(RootIntDir)\$(Platform)\$(Configuration)</BaseIntDir>
    <BaseOutDir Condition="'$(BaseOutDir)' == '' AND '$(Platform)' == 'Win32'">$(RootOutDir)\x86\$(Configuration)</BaseOutDir>
    <BaseOutDir Condition="'$(BaseOutDir)' == '' AND '$(Platform)' != 'Win32'">$(RootOutDir)\$(Platform)\$(Configuration)</BaseOutDir>

    <IntDir Condition="'$(ProjectName)' != ''">$(BaseIntDir)\$(ProjectName)\</IntDir>
    <IntDir Condition="'$(ProjectName)' == ''">$(BaseIntDir)\$(MSBuildProjectName)\</IntDir>
    <OutDir Condition="'$(ProjectName)' != ''">$(BaseOutDir)\$(ProjectName)\</OutDir>
    <OutDir Condition="'$(ProjectName)' == ''">$(BaseOutDir)\$(MSBuildProjectName)\</OutDir>

    <PublishDir>$(OutDir)\Publish\</PublishDir>
    <GeneratedFilesDir>$(IntDir)Generated Files\</GeneratedFilesDir>

    <IntermediateOutputPath Condition="'$(MSBuildProjectExtension)' == '.csproj'">$(IntDir)</IntermediateOutputPath>
    <OutputPath Condition="'$(MSBuildProjectExtension)' == '.csproj'">$(OutDir)</OutputPath>
  </PropertyGroup>

  <PropertyGroup Label="NuGet" Condition="'$(MSBuildProjectExtension)' == '.vcxproj'">
    <!-- See https://docs.microsoft.com/en-us/nuget/reference/msbuild-targets#restore-target -->
    <!-- RestoreUseStaticGraphEvaluation broke in VS 17.6, see https://github.com/microsoft/react-native-windows/issues/11670 -->
    <RestoreUseStaticGraphEvaluation Condition="'$(BuildingInsideVisualStudio)' == 'true' AND $([MSBuild]::VersionLessThan('$(MSBuildVersion)', '17.6')) AND '$(DisableRestoreUseStaticGraphEvaluation)' != 'true'">true</RestoreUseStaticGraphEvaluation>
  </PropertyGroup>

</Project>
