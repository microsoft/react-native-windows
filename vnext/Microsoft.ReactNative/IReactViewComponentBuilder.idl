// Copyright (c) Microsoft Corporation.
// Licensed under the MIT License.

import "ViewProps.idl";
import "ComponentView.idl";

#include "DocString.h"

namespace Microsoft.ReactNative
{
  [webhosthidden]
  [experimental]
  enum LayoutDirection
  {
    Undefined = 0,
    LeftToRight = 1,
    RightToLeft = 2,
  };

  [webhosthidden]
  [experimental]
  runtimeclass LayoutContext {
    Single PointScaleFactor { get; set; };
    Boolean SwapLeftAndRightInRTL { get; set; };
    Single FontSizeMultiplier{ get; set; };
    Windows.Foundation.Point ViewportOffset { get; set; };
  };

  [webhosthidden]
  [experimental]
  struct LayoutConstraints {
    Windows.Foundation.Size MinimumSize;
    Windows.Foundation.Size MaximumSize;
    LayoutDirection LayoutDirection;
  };

  [experimental]
  DOC_STRING("A delegate that creates a @IComponentProps object for an instance of @ViewProps. See @IReactViewComponentBuilder.SetCreateProps")
  delegate IComponentProps ViewPropsFactory(ViewProps props);

  [experimental]
  delegate Windows.Foundation.Size MeasureContentHandler(ShadowNode shadowNode, LayoutContext layoutContext, LayoutConstraints layoutConstraints);

  [experimental]
  delegate void LayoutHandler(ShadowNode shadowNode, LayoutContext layoutContext);

  [experimental]
  delegate void ViewShadowNodeFactory(ShadowNode shadowNode);

  [experimental]
  delegate void ViewShadowNodeCloner(ShadowNode shadowNode, ShadowNode sourceShadowNode);

  [experimental]
  delegate Object InitialStateDataFactory(IComponentProps props);

  [experimental]
  DOC_STRING("Provides a method to initialize an instance of a ComponentView. See @IReactViewComponentBuilder.SetComponentViewInitializer")
  delegate void ComponentViewInitializer(ComponentView view);

  [webhosthidden]
  [experimental]
  interface IReactViewComponentBuilder
  {
    void SetComponentViewInitializer(ComponentViewInitializer initializer);

    DOC_STRING("Create an implementation of your custom Props type that will be passed to your components @Composition.ICompositionViewComponent.UpdateProps method.")
    void SetCreateProps(ViewPropsFactory impl);

    void SetCreateShadowNode(ViewShadowNodeFactory impl);
    void SetShadowNodeCloner(ViewShadowNodeCloner impl);
    void SetInitialStateDataFactory(InitialStateDataFactory impl);
    void SetMeasureContentHandler(MeasureContentHandler impl);
    void SetLayoutHandler(LayoutHandler impl);
  };

  // [exclusiveto(ShadowNode)]
  // [uuid(BF2A2A64-AB8B-47FC-BE69-E31DE6FC29A4)]
  // interface IShadowNodeFactory
  // {
  // }

  // [composable(IShadowNodeFactory, protected)]
  [webhosthidden]
  [experimental]
  unsealed runtimeclass ShadowNode
  {
    void EnsureUnsealed();
    Object Tag { get; set; };
    Object StateData{ get; set; };
  };

  [webhosthidden]
  [experimental]
  runtimeclass YogaLayoutableShadowNode : ShadowNode
  {
    void Layout(LayoutContext layoutContext);
  };

} // namespace Microsoft.ReactNative
