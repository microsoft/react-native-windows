// Copyright (c) Microsoft Corporation.
// Licensed under the MIT License.

import "IJSValueReader.idl";
import "IJSValueWriter.idl";
import "IReactContext.idl";

#include "DocString.h"

namespace Microsoft.ReactNative
{
  DOC_STRING(
    "A delegate that sets `reactContext` for a module.\n"
    "We use it for a stand-alone initialize method, strongly typed JS events and functions.\n"
    "Experimental code uses it to initialize TurboModule `CallInvoker`.")
  delegate void InitializerDelegate(IReactContext reactContext);

  DOC_STRING("Native method return type.")
  enum MethodReturnType
  {
    Void,
    Callback,
    TwoCallbacks,
    Promise,
  };

  DOC_STRING("A callback to call JS code with results.")
  delegate void MethodResultCallback(IJSValueWriter outputWriter);

  DOC_STRING("A delegate to call native asynchronous method.")
  delegate void MethodDelegate(
      IJSValueReader inputReader,
      IJSValueWriter outputWriter,
      MethodResultCallback resolve,
      MethodResultCallback reject);

  DOC_STRING("A delegate gets the arguments for an event emit on a EventEmitter.")
  delegate void EmitEventSetterDelegate(JSValueArgWriter argWriter);

  DOC_STRING("A delegate to call a turbo module EventEmitter.")
  delegate void EventEmitterInitializerDelegate(EmitEventSetterDelegate emitter);

  DOC_STRING("A delegate to call native synchronous method.")
  delegate void SyncMethodDelegate(IJSValueReader inputReader, IJSValueWriter outputWriter);

  DOC_STRING("A delegate to gather constants for the native module.")
  delegate void ConstantProviderDelegate(IJSValueWriter constantWriter);

  [webhosthidden]
  DOC_STRING(
    "Builds native module inside of ReactNative code based on the provided meta-data.\n"
    "See [Native Modules](native-modules) for more usage information.")
  interface IReactModuleBuilder
  {
    DOC_STRING(
      "Adds an initializer method called on the native module initialization.\n"
      "It provides the native module with the @IReactContext for the running ReactNative instance. "
      "See @InitializerDelegate.\n"
      "There can be multiple initializer methods which are called in the order they were registered.")
    void AddInitializer(InitializerDelegate initializer);

    DOC_STRING(
      "Adds a constant provider method to define constants for the native module. See @ConstantProviderDelegate.")
    void AddConstantProvider(ConstantProviderDelegate constantProvider);

    DOC_STRING("Adds an asynchronous method to the native module. See @MethodDelegate.")
    void AddMethod(String name, MethodReturnType returnType, MethodDelegate method);

    DOC_STRING("Adds a synchronous method to the native module. See @SyncMethodDelegate.")
    void AddSyncMethod(String name, SyncMethodDelegate method);

    DOC_STRING("Adds an EventEmitter to the turbo module. See @EventEmitterInitializerDelegate.")
    void AddEventEmitter(String name, EventEmitterInitializerDelegate emitter);
  };
} // namespace Microsoft.ReactNative
