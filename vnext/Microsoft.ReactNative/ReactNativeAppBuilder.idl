
import "ReactNativeHost.idl";
import "ReactNativeIsland.idl";
import "ReactInstanceSettings.idl";
import "IReactPackageProvider.idl";

#include "DocString.h"

namespace Microsoft.ReactNative {

     [experimental]
     DOC_STRING("ReactNativeWin32App sets up the infrastructure for the default experience of a ReactNative application filling a WinAppSDK window.")
     runtimeclass ReactNativeWin32App {
        // Properties
        Microsoft.UI.Windowing.AppWindow AppWindow {get;};

        ReactNativeHost ReactNativeHost {get;};

        ReactViewOptions ReactViewOptions {get;};

        // TODO: Hide these APIs for now until we're sure we need to expose them and can do so safely
        // Microsoft.UI.Composition.Compositor Compositor {get;};
        // Microsoft.UI.Content.DesktopChildSiteBridge DesktopChildSiteBridge {get;};
        // Microsoft.UI.Dispatching DispatcherQueueController {get;};
        // ReactNativeIsland ReactNativeIsland {get;};

        // Methods
        void Start();
     }

    [experimental]
    DOC_STRING("ReactNativeAppBuilder builds a ReactNativeWin32App with the base WinAppSDK infrastructure.")
    runtimeclass ReactNativeAppBuilder
    {
        ReactNativeAppBuilder();

        // Methods

        ReactNativeAppBuilder SetAppWindow(Microsoft.UI.Windowing.AppWindow appWindow);

        // TODO: Hide these APIs for now until we're sure we need to expose them and can do so safely
        // Compositor depends on the DispatcherQueue created by DispatcherQueueController
        // ReactNativeAppBuilder SetCompositor(Microsoft.UI.Composition.Compositor compositor);
        // ReactNativeAppBuilder SetDispatcherQueueController(Microsoft.UI.Dispatching DispatcherQueueController);

        ReactNativeWin32App Build();
    }
}
