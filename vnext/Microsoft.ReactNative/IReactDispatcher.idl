// Copyright (c) Microsoft Corporation.
// Licensed under the MIT License.

import "IReactPropertyBag.idl";
#include "DocString.h"

namespace Microsoft.ReactNative
{

  [webhosthidden]
  DOC_STRING("The delegate is used to create property value on-demand.")
  delegate void ReactDispatcherCallback();

  [webhosthidden]
  DOC_STRING(
    "`IReactDispatcher` provides the core threading/task management interface for ensuring that the code execution "
    "happens in the right order on the right thread.\n"
    "One primary dispatcher that applications may require is the @IReactContext.UIDispatcher which provides native "
    "modules access to the UI thread associated with this React instance. "
    "Another one is the @IReactContext.JSDispatcher which allows apps to post tasks to the JS engine thread.")
  interface IReactDispatcher
  {
    DOC_STRING("`true` if the dispatcher uses current thread.")
    Boolean HasThreadAccess { get; };

    DOC_STRING(
      "Posts a task to the dispatcher.\n"
      "The `callback` will be called asynchronously on the thread/queue associated with this dispatcher.")
    void Post(ReactDispatcherCallback callback);
  }

  [webhosthidden]
  DOC_STRING("Helper methods for the @IReactDispatcher implementation.")
  static runtimeclass ReactDispatcherHelper
  {
    DOC_STRING("Creates a new serial dispatcher that uses thread pool to run tasks.")
    static IReactDispatcher CreateSerialDispatcher();

    DOC_STRING(
      "Gets or creates a @IReactDispatcher for the current UI thread.\n"
      "This can be used with @ReactInstanceSettings.UIDispatcher to launch a React instance from a non-UI thread. "
      "This API must be called from a UI thread. It will return null if called from a non-UI thread.")
    static IReactDispatcher UIThreadDispatcher{ get; };

    DOC_STRING(
      "Gets name of the `UIDispatcher` property for the @IReactPropertyBag.\n"
      "Generally you can use @IReactContext.UIDispatcher to get the value of this property for "
      "a specific React instance.")
    static IReactPropertyName UIDispatcherProperty { get; };

    DOC_STRING(
      "Gets name of the `JSDispatcher` property for the @IReactPropertyBag.\n"
      "Generally you can use @IReactContext.JSDispatcher to get the value of this property for "
      "a specific React instance.")
    static IReactPropertyName JSDispatcherProperty { get; };

    DOC_STRING(
      "Gets the name of the `JSDispatcherTaskStartingEventName` property for the @IReactNotificationService.\n"
      "This notification name is to be used with IReactNotificationService.")
    static IReactPropertyName JSDispatcherTaskStartingEventName{ get; };

    DOC_STRING(
      "Gets the name of the `JSDispatcherIdleWaitStartingEventName` property for the @IReactNotificationService.\n"
      "This notification name is to be used with IReactNotificationService.")
    static IReactPropertyName JSDispatcherIdleWaitStartingEventName{ get; };

    DOC_STRING(
      "Gets the name of the `JSDispatcherIdleWaitCompletedEventName` property for the @IReactNotificationService.\n"
      "This notification name is to be used with IReactNotificationService.")
    static IReactPropertyName JSDispatcherIdleWaitCompletedEventName{ get; };
  }
} // namespace ReactNative
