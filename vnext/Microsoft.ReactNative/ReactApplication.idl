// Copyright (c) Microsoft Corporation.
// Licensed under the MIT License.

import "ReactNativeHost.idl";
#include "NamespaceRedirect.h"
#include "DocString.h"

namespace Microsoft.ReactNative
{
  [webhosthidden]
  [default_interface]
  DOC_STRING(
    "The `ReactApplication` is a base application class for use in applications that are entirely written "
    "in React Native. When the app launches, the `ReactApplication` will load the React instance. "
    "Use @ReactInstanceSettings and @ReactNativeHost properties to customize React instance in "
    "your application's constructor.")
  unsealed runtimeclass ReactApplication : XAML_NAMESPACE.Application
  {
    DOC_STRING("Creates a new instance of @ReactApplication")
    ReactApplication();

    DOC_STRING(
      "Provides access to your application's @ReactInstanceSettings.\n"
      "Generally, changes to these settings will not take effect if the React instance is already loaded, "
      "unless the React instance is reloaded, so most settings should be set in your application's constructor.")
    ReactInstanceSettings InstanceSettings { get; set; };

    DOC_STRING(
      "Provides access to the list of `IReactPackageProvider`'s that the instance will use to provide native modules "
      "to the application. This can be used to register additional package providers, such as package providers from "
      "community modules. See @ReactNativeHost for more information.")
    IVector<IReactPackageProvider> PackageProviders { get; };

    DOC_STRING("Access to the @ReactNativeHost of your application.")
    ReactNativeHost Host { get; };

    DOC_STRING(
      "Controls whether the developer experience features such as the developer menu and `RedBox` are enabled.\n"
      "See @ReactInstanceSettings.UseDeveloperSupport.")
    Boolean UseDeveloperSupport { get; set; };

    DOC_STRING("See @ReactInstanceSettings.JavaScriptBundleFile.")
    String JavaScriptBundleFile { get; set; };
  }
} // namespace Microsoft.ReactNative
