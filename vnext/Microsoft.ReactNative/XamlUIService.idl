// Copyright (c) Microsoft Corporation.
// Licensed under the MIT License.

import "IReactContext.idl";
import "ReactRootView.idl";

#include "NamespaceRedirect.h"
#include "DocString.h"

namespace Microsoft.ReactNative
{
  [default_interface]
  [webhosthidden]
  DOC_STRING(
    "Provides access to XAML UI-specific functionality. "
    "It provides access to APIs to get a XAML element from a react tag, and to dispatch events to JS components.")
  runtimeclass XamlUIService
  {
    DOC_STRING("Use this method to get access to the @XamlUIService associated with the @IReactContext.")
    static XamlUIService FromContext(IReactContext context);

    DOC_STRING("Gets the backing XAML element from a react tag.")
    XAML_NAMESPACE.DependencyObject ElementFromReactTag(Int64 reactTag);

    DOC_STRING("Dispatches an event to a JS component.")
    void DispatchEvent(XAML_NAMESPACE.FrameworkElement view, String eventName, JSValueArgWriter eventDataArgWriter);

    DOC_STRING("Gets the @ReactRootView view for a given element.")
    ReactRootView GetReactRootView(XAML_NAMESPACE.FrameworkElement view);

    DOC_STRING(
      "Sets the @Windows.UI.Xaml.XamlRoot element for the app. "
      "This must be manually provided to the @ReactInstanceSettings object when using XAML Islands "
      "so that certain APIs work correctly.\n"
      "For more information, see [Host WinRT XAML Controls in desktop apps (XAML Islands)]"
      "(https://docs.microsoft.com/windows/apps/desktop/modernize/xaml-islands).")
    static void SetXamlRoot(IReactPropertyBag properties, XAML_NAMESPACE.XamlRoot xamlRoot);

    DOC_STRING(
      "Sets the @Windows.UI.Xaml.FrameworkElement that will act as the default accessible element for the app. "
      "The element must be able to create an automation peer "
      "(see @Windows.UI.Xaml.Automation.Peers.FrameworkElementAutomationPeer), or have the Landmark type property set "
      "(see @Windows.UI.Xaml.Automation.AutomationProperties.LandmarkTypeProperty).\n"
      "This must be manually provided to the @ReactInstanceSettings when using XAML Islands "
      "to have access to functionality related to accessibility.")
    static void SetAccessibleRoot(IReactPropertyBag properties, XAML_NAMESPACE.FrameworkElement accessibleRoot);

    DOC_STRING("Retrieves the default @Windows.UI.Xaml.XamlRoot for the app.")
    static XAML_NAMESPACE.XamlRoot GetXamlRoot(IReactPropertyBag properties);

    DOC_STRING("Retrieves the default @Windows.UI.Xaml.FrameworkElement that will be used for the app for accessibility purposes (e.g. to announce).")
    static XAML_NAMESPACE.FrameworkElement GetAccessibleRoot(IReactPropertyBag properties);

    DOC_STRING(
      "Gets the window handle HWND (as an UInt64) used as the XAML Island window for the current React instance.")
    static UInt64 GetIslandWindowHandle(IReactPropertyBag properties);

    DOC_STRING(
      "Sets the windowHandle HWND (as an UInt64) to be the XAML Island window for the current React instance.\n"
      "Pass the value returned by IDesktopWindowXamlSourceNative get_WindowHandle.")
    static void SetIslandWindowHandle(IReactPropertyBag properties, UInt64 windowHandle);
  }
} // namespace Microsoft.ReactNative
