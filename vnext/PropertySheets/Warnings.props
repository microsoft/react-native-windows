<?xml version="1.0" encoding="utf-8"?>
<Project xmlns="http://schemas.microsoft.com/developer/msbuild/2003">

  <PropertyGroup>
    <!-- SDL MANDATORY WARNINGS (Microsoft Security Development Lifecycle) -->
    <!-- These warnings MUST be enabled and fixed per SDL requirements -->
    <!-- Work Item: #58386089 - Fix warnings identified by native code compiler -->
    <SDLMandatoryWarnings>
      4018;  <!-- 'expression' : signed/unsigned mismatch -->
      4055;  <!-- 'conversion' : from data pointer to function pointer -->
      4146;  <!-- unary minus operator applied to unsigned type -->
      4242;  <!-- 'identifier' : conversion with possible loss of data -->
      4244;  <!-- 'conversion' conversion with possible loss of data -->
      4267;  <!-- 'var' : conversion from size_t with possible loss of data -->
      4302;  <!-- 'conversion' : truncation from type1 to type2 -->
      4308;  <!-- negative integral constant converted to unsigned type -->
      4509;  <!-- nonstandard extension: SEH with destructor -->
      4510;  <!-- 'class' : default constructor could not be generated -->
      4532;  <!-- jump out of __finally/finally block undefined behavior -->
      4533;  <!-- initialization skipped by instruction -->
      4610;  <!-- object can never be instantiated -->
      4611;  <!-- interaction between function and C++ destruction non-portable -->
      4700;  <!-- uninitialized local variable used -->
      4701;  <!-- potentially uninitialized local variable used -->
      4703;  <!-- potentially uninitialized local pointer variable used -->
      4789;  <!-- destination of memory copy too small -->
      4995;  <!-- function marked as pragma deprecated -->
      4996   <!-- deprecated function (including std::) -->
    </SDLMandatoryWarnings>

    <!-- SDL RECOMMENDED WARNINGS (Strongly recommended to fix) -->
    <SDLRecommendedWarnings>
      4287;  <!-- unsigned/negative constant mismatch -->
      4365;  <!-- signed/unsigned mismatch -->
      4388;  <!-- signed/unsigned mismatch in comparison -->
      4545;  <!-- expression before comma evaluates to function missing argument list -->
      4546;  <!-- function call before comma missing argument list -->
      4547;  <!-- operator before comma has no effect -->
      4549   <!-- operator before comma has no effect -->
    </SDLRecommendedWarnings>

    <!-- Office pre-disabled warnings -->
    <!--
        C4201 - nonstandard extension used : nameless struct/union
        C4505 - 'function' : unreferenced local function has been removed
        C4456 - declaration of 'identifier' hides previous local declaration
        C4458 - declaration of 'identifier' hides class member
        C4702 - unreachable code
      -->
    <OfficePreDisabledWarnings>4456;4702;4458</OfficePreDisabledWarnings>
    <!--
        The following list matches the list in ..\make.inc
          C4068 - unknown pragma
          C4100 - unreferenced formal parameter
          C4101 - unreferenced local variable
          C4127 - conditional expression is constant
          C4189 - local variable is initialized but not referenced
          C4290 - C++ exception specification ignored except to indicate a function is not __declspec(nothrow)
          C4309 - truncation of constant value
          C4324 - structure was padded due to __declspec(align())
          C5205 - delete of an abstract class that has a non-virtual destructor results in undefined behavior
      -->
    <ExtraWarningsToDisable>4068;4100;4101;4127;4189;4290;4309;4324;5205;4251;$(DisableSpecificWarnings)</ExtraWarningsToDisable>
  </PropertyGroup>

  <ItemDefinitionGroup>
    <ClCompile>
      <!-- /permissive- by default to enforce standards conformance, unless ENABLEPermissive has been set -->
      <AdditionalOptions Condition="'$(ENABLEPermissive)' == ''">/permissive- %(AdditionalOptions)</AdditionalOptions>
      <DisableSpecificWarnings>$(OfficePreDisabledWarnings);$(ExtraWarningsToDisable);$(DisableSpecificWarnings)</DisableSpecificWarnings>
      
      <!-- SDL REQUIREMENT: Treat warnings as errors -->
      <TreatWarningAsError>true</TreatWarningAsError>
      
      <!-- SDL REQUIREMENT: Use /W4 warning level -->
      <WarningLevel>Level4</WarningLevel>
      
      <!-- SDL REQUIREMENT: Explicitly enable mandatory warnings as errors -->
      <!-- This ensures SDL mandatory warnings are NEVER disabled -->
      <WarningAsError>$(SDLMandatoryWarnings);%(WarningAsError)</WarningAsError>
    </ClCompile>
    <Link>
      <!--
        LNK4199: /DELAYLOAD:v8jsi.dll ignored; no imports found from v8jsi.dll
      -->
      <AdditionalOptions>/ignore:4199 %(AdditionalOptions)</AdditionalOptions>
    </Link>
  </ItemDefinitionGroup>

</Project>
