<?xml version="1.0" encoding="utf-8"?>
<Project DefaultTargets="Build" ToolsVersion="Current" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <ItemGroup Label="ProjectConfigurations">
    <ProjectConfiguration Include="Debug|x64">
      <Configuration>Debug</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release|x64">
      <Configuration>Release</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <!-- #2702: We need to figure out how we want to consume the Google Test'
    NuGet for Win32. For now, we do not build this project for Win32. -->
  </ItemGroup>
  <PropertyGroup Label="Globals">
    <ProjectGuid>{b0941079-7441-4a69-868c-fe5ec62c2e9e}</ProjectGuid>
    <UseV8>true</UseV8>
    <V8AppPlatform>win32</V8AppPlatform>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.Default.props" />
  <Import Project="$(ReactNativeWindowsDir)PropertySheets\React.Cpp.props" />
  <Import Project="$(ReactNativeWindowsDir)PropertySheets\ReactCommunity.Cpp.props" />
  <PropertyGroup Label="Configuration">
    <ConfigurationType>Application</ConfigurationType>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.props" />
  <ImportGroup Label="ExtensionSettings" />
  <ImportGroup Label="Shared" />
  <ImportGroup Label="PropertySheets" />
  <PropertyGroup Label="UserMacros" />
  <PropertyGroup>
    <IncludePath>$(ReactNativeWindowsDir);$(ReactNativeDir)\ReactCommon;$(ReactNativeDir)\ReactCommon\jsi;$(ReactNativeWindowsDir)Shared;$(MSBuildProjectDirectory);$(IncludePath)</IncludePath>
  </PropertyGroup>
  <ItemGroup>
    <ClInclude Include="$(ReactNativeDir)\ReactCommon\jsi\jsi\test\testlib.h" />
    <ClInclude Include="pch.h" />
  </ItemGroup>
  <ItemGroup>
    <ClCompile Include="$(ReactNativeDir)\ReactCommon\cxxreact\tests\RecoverableErrorTest.cpp" />
    <ClCompile Include="$(ReactNativeDir)\ReactCommon\jsi\jsi\test\testlib.cpp" />
    <ClCompile Include="$(ReactNativeDir)\ReactCommon\react\renderer\components\image\tests\ImageTest.cpp" />
    <ClCompile Include="$(ReactNativeDir)\ReactCommon\react\renderer\components\view\tests\ViewTest.cpp">
      <ExcludedFromBuild>true</ExcludedFromBuild>
    </ClCompile>
    <ClCompile Include="$(ReactNativeDir)\ReactCommon\react\renderer\attributedstring\tests\AttributedStringTest.cpp">
      <ExcludedFromBuild>true</ExcludedFromBuild>
    </ClCompile>
    <ClCompile Include="$(ReactNativeDir)\ReactCommon\react\renderer\attributedstring\tests\ParagraphAttributesTest.cpp">
      <ExcludedFromBuild>true</ExcludedFromBuild>
    </ClCompile>
    <ClCompile Include="$(ReactNativeDir)\ReactCommon\react\renderer\attributedstring\tests\TextAttributesTest.cpp">
      <ExcludedFromBuild>true</ExcludedFromBuild>
    </ClCompile>
    <ClCompile Include="$(ReactNativeDir)\ReactCommon\react\renderer\components\root\tests\RootShadowNodeTest.cpp">
     <ExcludedFromBuild>true</ExcludedFromBuild>
    </ClCompile>
    <ClCompile Include="$(ReactNativeDir)\ReactCommon\react\renderer\components\scrollview\tests\ScrollViewTest.cpp" />
    <ClCompile Include="$(ReactNativeDir)\ReactCommon\react\renderer\components\slider\tests\SliderTest.cpp" />
    <ClCompile Include="$(ReactNativeDir)\ReactCommon\react\renderer\components\text\tests\ParagraphLocalDataTest.cpp">
      <ExcludedFromBuild>true</ExcludedFromBuild>
    </ClCompile>
    <ClCompile Include="$(ReactNativeDir)\ReactCommon\react\renderer\components\text\tests\TextTest.cpp">
      <ExcludedFromBuild>true</ExcludedFromBuild>
    </ClCompile>
    <ClCompile Include="$(ReactNativeDir)\ReactCommon\react\renderer\components\view\tests\LayoutTest.cpp">
      <ExcludedFromBuild>true</ExcludedFromBuild>
    </ClCompile>
    <ClCompile Include="$(ReactNativeDir)\ReactCommon\react\renderer\core\tests\ComponentDescriptorTest.cpp">
      <ExcludedFromBuild>true</ExcludedFromBuild>
    </ClCompile>
    <ClCompile Include="$(ReactNativeDir)\ReactCommon\react\renderer\core\tests\ConcreteShadowNodeTest.cpp">
      <ExcludedFromBuild>true</ExcludedFromBuild>
    </ClCompile>
    <ClCompile Include="$(ReactNativeDir)\ReactCommon\react\renderer\core\tests\FindNodeAtPointTest.cpp">
      <ExcludedFromBuild>true</ExcludedFromBuild>
    </ClCompile>
    <ClCompile Include="$(ReactNativeDir)\ReactCommon\react\renderer\core\tests\LayoutableShadowNodeTest.cpp">
      <ExcludedFromBuild>true</ExcludedFromBuild>
    </ClCompile>
    <ClCompile Include="$(ReactNativeDir)\ReactCommon\react\renderer\core\tests\PrimitivesTest.cpp" />
    <ClCompile Include="$(ReactNativeDir)\ReactCommon\react\renderer\core\tests\RawPropsTest.cpp">
      <ExcludedFromBuild>true</ExcludedFromBuild>
    </ClCompile>
    <ClCompile Include="$(ReactNativeDir)\ReactCommon\react\renderer\core\tests\ShadowNodeFamilyTest.cpp">
      <ExcludedFromBuild>true</ExcludedFromBuild>
    </ClCompile>
    <ClCompile Include="$(ReactNativeDir)\ReactCommon\react\renderer\core\tests\ShadowNodeTest.cpp">
      <ExcludedFromBuild>true</ExcludedFromBuild>
    </ClCompile>
    <ClCompile Include="$(ReactNativeDir)\ReactCommon\react\renderer\core\tests\traitCastTest.cpp">
      <ExcludedFromBuild>true</ExcludedFromBuild>
    </ClCompile>
    <ClCompile Include="$(ReactNativeDir)\ReactCommon\react\renderer\debug\tests\DebugStringConvertibleTest.cpp">
      <ExcludedFromBuild Condition="'$(Configuration)' != 'Debug'">true</ExcludedFromBuild>
    </ClCompile>
    <ClCompile Include="$(ReactNativeDir)\ReactCommon\react\renderer\element\tests\ElementTest.cpp">
      <ExcludedFromBuild>true</ExcludedFromBuild>
    </ClCompile>
    <ClCompile Include="$(ReactNativeDir)\ReactCommon\react\renderer\graphics\tests\GraphicsTest.cpp" />
    <ClCompile Include="$(ReactNativeDir)\ReactCommon\react\renderer\graphics\tests\TransformTest.cpp">
      <ExcludedFromBuild>true</ExcludedFromBuild>
    </ClCompile>
    <ClCompile Include="$(ReactNativeDir)\ReactCommon\react\renderer\imagemanager\tests\ImageManagerTest.cpp">
      <ExcludedFromBuild>true</ExcludedFromBuild>
    </ClCompile>
    <ClCompile Include="$(ReactNativeDir)\ReactCommon\react\renderer\mapbuffer\tests\MapBufferTest.cpp" />
    <ClCompile Include="$(ReactNativeDir)\ReactCommon\react\renderer\mounting\tests\MountingTest.cpp">
      <ExcludedFromBuild>true</ExcludedFromBuild>
    </ClCompile>
    <ClCompile Include="$(ReactNativeDir)\ReactCommon\react\renderer\mounting\tests\ShadowTreeLifeCycleTest.cpp">
      <ExcludedFromBuild>true</ExcludedFromBuild>
    </ClCompile>
    <ClCompile Include="$(ReactNativeDir)\ReactCommon\react\renderer\mounting\tests\StateReconciliationTest.cpp">
      <ExcludedFromBuild>true</ExcludedFromBuild>
    </ClCompile>
    <ClCompile Include="$(ReactNativeDir)\ReactCommon\react\renderer\telemetry\tests\TransactionTelemetryTest.cpp" />
    <ClCompile Include="$(ReactNativeDir)\ReactCommon\react\renderer\templateprocessor\tests\UITemplateProcessorTest.cpp">
      <ExcludedFromBuild>true</ExcludedFromBuild>
    </ClCompile>
    <ClCompile Include="$(ReactNativeDir)\ReactCommon\react\renderer\textlayoutmanager\tests\TextLayoutManagerTest.cpp">
      <ExcludedFromBuild>true</ExcludedFromBuild>
    </ClCompile>
    <ClCompile Include="$(ReactNativeDir)\ReactCommon\react\renderer\uimanager\tests\FabricUIManagerTest.cpp">
      <ExcludedFromBuild>true</ExcludedFromBuild>
    </ClCompile>
    <ClCompile Include="JsiRuntimeGenerators.cpp" />
    <ClCompile Include="pch.cpp">
      <PrecompiledHeader>Create</PrecompiledHeader>
    </ClCompile>
  </ItemGroup>
  <ItemGroup>
    <None Include="packages.config" />
  </ItemGroup>
  <ItemDefinitionGroup />
  <ItemGroup>
    <ProjectReference Include="..\Desktop\React.Windows.Desktop.vcxproj">
      <Project>{95048601-C3DC-475F-ADF8-7C0C764C10D5}</Project>
    </ProjectReference>
  </ItemGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.targets" />
  <ItemDefinitionGroup>
    <ClCompile>
      <PrecompiledHeader>Use</PrecompiledHeader>
      <PrecompiledHeaderFile>pch.h</PrecompiledHeaderFile>
      <ForcedIncludeFiles>pch.h</ForcedIncludeFiles>
      <PreprocessorDefinitions>
        _CONSOLE;
        %(PreprocessorDefinitions)
      </PreprocessorDefinitions>
      <!-- JSI Unit tests are copied from Facebook and rely on dynamic_pointer_cast -->
      <RunTimeTypeInfo>true</RunTimeTypeInfo>
    </ClCompile>
    <Link>
      <AdditionalDependencies>
        delayimp.lib;
        %(AdditionalDependencies)
      </AdditionalDependencies>
    </Link>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)'=='Debug'">
    <ClCompile>
      <BasicRuntimeChecks>EnableFastChecks</BasicRuntimeChecks>
      <RuntimeLibrary>MultiThreadedDebugDLL</RuntimeLibrary>
    </ClCompile>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)'=='Release'">
    <ClCompile>
      <RuntimeLibrary>MultiThreadedDLL</RuntimeLibrary>
      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>
    </ClCompile>
    <Link>
      <OptimizeReferences>true</OptimizeReferences>
      <EnableCOMDATFolding>true</EnableCOMDATFolding>
    </Link>
  </ItemDefinitionGroup>
  <ImportGroup Label="ExtensionTargets">
    <Import Project="$(SolutionDir)packages\boost.1.76.0.0\build\boost.targets" Condition="Exists('$(SolutionDir)packages\boost.1.76.0.0\build\boost.targets')" />
    <Import Project="$(SolutionDir)packages\ChakraCore.Debugger.0.0.0.44\build\native\ChakraCore.Debugger.targets" Condition="Exists('$(SolutionDir)packages\ChakraCore.Debugger.0.0.0.44\build\native\ChakraCore.Debugger.targets')" />
    <Import Project="$(SolutionDir)packages\Microsoft.googletest.v140.windesktop.msvcstl.static.rt-dyn.1.8.1\build\native\Microsoft.googletest.v140.windesktop.msvcstl.static.rt-dyn.targets" Condition="Exists('$(SolutionDir)packages\Microsoft.googletest.v140.windesktop.msvcstl.static.rt-dyn.1.8.1\build\native\Microsoft.googletest.v140.windesktop.msvcstl.static.rt-dyn.targets')" />
    <Import Project="$(SolutionDir)packages\Microsoft.ChakraCore.vc140.1.11.24\build\native\Microsoft.ChakraCore.vc140.targets" Condition="Exists('$(SolutionDir)packages\Microsoft.ChakraCore.vc140.1.11.24\build\native\Microsoft.ChakraCore.vc140.targets')" />
    <Import Project="$(V8Package)\build\native\ReactNative.V8JSI.Windows.targets" Condition="Exists('$(V8Package)\build\native\ReactNative.V8JSI.Windows.targets') AND '$(UseV8)' == 'true'" />
  </ImportGroup>
  <Target Name="EnsureNuGetPackageBuildImports" BeforeTargets="PrepareForBuild">
    <PropertyGroup>
      <ErrorText>This project references NuGet package(s) that are missing on this computer. Use NuGet Package Restore to download them.  For more information, see http://go.microsoft.com/fwlink/?LinkID=322105. The missing file is {0}.</ErrorText>
    </PropertyGroup>
    <Warning Condition="'$(UseV8)' != 'true'" Text="Building desktop project without UseV8 (value is '$(UseV8)')" />
    <Error Condition="!Exists('$(SolutionDir)packages\ReactWindows.OpenSSL.StdCall.Static.1.0.2-p.5\build\native\ReactWindows.OpenSSL.StdCall.Static.targets')" Text="$([System.String]::Format('$(ErrorText)', '$(SolutionDir)packages\ReactWindows.OpenSSL.StdCall.Static.1.0.2-p.5\build\native\ReactWindows.OpenSSL.StdCall.Static.targets'))" />
    <Error Condition="!Exists('$(SolutionDir)packages\boost.1.76.0.0\build\boost.targets')" Text="$([System.String]::Format('$(ErrorText)', '$(SolutionDir)packages\boost.1.76.0.0\build\boost.targets'))" />
    <Error Condition="!Exists('$(SolutionDir)packages\ChakraCore.Debugger.0.0.0.44\build\native\ChakraCore.Debugger.targets')" Text="$([System.String]::Format('$(ErrorText)', '$(SolutionDir)packages\ChakraCore.Debugger.0.0.0.44\build\native\ChakraCore.Debugger.targets'))" />
    <Error Condition="!Exists('$(SolutionDir)packages\Microsoft.googletest.v140.windesktop.msvcstl.static.rt-dyn.1.8.1\build\native\Microsoft.googletest.v140.windesktop.msvcstl.static.rt-dyn.targets')" Text="$([System.String]::Format('$(ErrorText)', '$(SolutionDir)packages\Microsoft.googletest.v140.windesktop.msvcstl.static.rt-dyn.1.8.1\build\native\Microsoft.googletest.v140.windesktop.msvcstl.static.rt-dyn.targets'))" />
    <Error Condition="!Exists('$(V8Package)\build\native\ReactNative.V8JSI.Windows.targets') AND '$(UseV8)' == 'true'" Text="$([System.String]::Format('$(ErrorText)', '$(V8Package)\build\native\ReactNative.V8JSI.Windows.targets'))" />
  </Target>
</Project>